{"version":3,"sources":["actions/validate.js","components/form_template/input-render.js","constants/route-paths.js","components/user/sign-up-form.js","constants/api-paths.js","data_accesses/user-da.js","data_accesses/search-da.js","data_accesses/area-of-interest-da.js","constants/reducer-types.js","actions/index.js","actions/asyncValidate.js","components/form_template/loading-anim.js","constants/user-type-data.js","containers/user/sign-up.js","components/user/sign-in-form.js","containers/user/sign-in.js","containers/user/sign-out.js","route-layout.js","components/layout/react-autosuggest-lib.js","constants/default-images.js","components/layout/global-notification.js","components/layout/header.js","components/layout/footer.js","hoc/layout.js","hoc/dashboard-layout.js","hoc/auth.js","components/form_template/buttons-render.js","components/home/home-post-feeds.js","components/home/home-suggestions.js","data_accesses/post-da.js","actions/post-action.js","data_accesses/organization-da.js","actions/organization-action.js","containers/home/home.js","components/organization/organization-list-view.js","data_accesses/impact-area-da.js","actions/impact-area-action.js","data_accesses/organization-type-da.js","actions/organization-type-action.js","components/search/search-menu.js","components/search/filter-organization.js","constants/country-and-state.js","components/organization/organization-map-view.js","constants/default-user-information.js","containers/search/search-organization.js","constants/post-types.js","components/form_template/icon-render.js","components/form_template/details-render.js","components/event/event-card-view.js","components/event/event-map-view.js","components/search/filter-event.js","containers/search/search-event.js","data_accesses/individual-da.js","constants/genders.js","constants/races.js","constants/step-headers.js","components/individual/individual-basic-info-form.js","constants/misc.js","data_accesses/language-da.js","data_accesses/skill-da.js","actions/skill-action.js","containers/individual/individual-basic-info.js","actions/language-action.js","actions/individual-action.js","constants/involvement-types.js","components/individual/individual-involvement-form.js","containers/individual/individual-involvement.js","constants/privacy-activity-types.js","constants/privacy-search-types.js","components/individual/individual-privacy-form.js","containers/individual/individual-privacy.js","components/individual/individual-details-view.js","containers/individual/individual-details.js","components/organization/organization-basic-info-form.js","containers/organization/organization-basic-info.js","constants/service-area-types.js","components/organization/organization-service-info-form.js","containers/organization/organization-service-info.js","components/organization/organization-internal-link-form.js","containers/organization/organization-internal-link.js","components/organization/organization-details-view.js","data_accesses/follow-da.js","actions/follow-action.js","components/organization/organization-sub-menu.js","containers/organization/organization-details.js","containers/message/sample-thread-list.js","containers/message/sample-thread-details.js","containers/message/messages.js","components/post/post-image-list.js","components/post/post-geo-coding.js","components/post/required-item-list.js","components/post/post-form.js","containers/post/create-post.js","components/post/post-map-view.js","components/post/post-details.js","containers/post/display-post.js","containers/post/listing-posts.js","components/post/post-list.js","containers/post/manage-posts.js","components/organization/organization-post-menu.js","containers/organization/organization-post-list.js","components/community/community-menu.js","containers/community/sample-users.js","containers/community/friends.js","containers/community/followers.js","containers/community/followings.js","containers/community/requests.js","route.js","reducers/userReducer.js","reducers/authReducer.js","reducers/area-of-interest-reducer.js","reducers/individualReducer.js","reducers/organizationReducer.js","reducers/impact-area-reducer.js","reducers/organization-type-reducer.js","reducers/post-reducer.js","reducers/follow-reducer.js","reducers/skill-reducer.js","reducers/language-reducer.js","reducers/index.js","index.js"],"names":["required","value","props","isCheckable","checked","FormText","color","stringLengthRange","lower","upper","length","email","isEmail","date","moment","isValid","InputRender","input","label","type","placeholder","meta","touched","error","warning","className","InputRenderWithLargeLabel","min","max","unit","step","TextRender","col1","col2","rows","CheckBoxRender","SaInputRender","asyncValidating","style","marginBottom","name","SelectRender","children","Row","Col","sm","DatePickerRender","minDate","selectedDate","zIndex","setDate","console","log","Date","selected","dateFormat","CreatableMultiSelectRender","options","onChange","onBlur","isMulti","MultiSelectRender","DateTimePickerRender","showTimeSelect","signInPage","signUpPage","signOutPage","homePage","individualCompleteBasicInfoPage","individualCompleteInvolvementPage","individualCompletePrivacyPage","individualEditBasicInfoPage","individualEditInvolvementPage","individualEditPrivacyPage","organizationCompleteBasicInfoPage","organizationCompleteServiceInfoPage","organizationEditBasicInfoPage","organizationEditServiceInfoPage","userDetailsPage","userType","userId","userCommonSettingsPage","postCreatePage","postType","postEditPage","postId","postDetailsPage","postManagePage","postListPageByOrganizationAndPostType","communityFriendListPage","communityFollowerListPage","communityFollowingListPage","communityRequestListPage","stringRange6To256","stringRange6To100","SignUpForm","submitting","Container","md","onSubmit","handleSignUpSubmit","ProgressBar","now","handleUserTypeChange","isIndividualChecked","display","defaultChecked","Field","component","validate","Button","disabled","size","fontSize","to","RoutePath","serverAddress","apiConfig","headers","Authorization","getLocalStorage","getOrganizationList","getAllEventsByOrganization","getAllPosts","getAllFollower","user_signup","user","axios","post","then","response","data","catch","err","user_signin","user_signout","create_new_user","delete_user","delete","update_user","model","put","APIPaths","get_all_users","queryString","get","get_user","user_auth","change_password","passwords","recover_password","reset_password","token","get_all_area_of_interest","search_by_name","USER_SIGN_IN","USER_SIGN_UP","USER_SIGN_OUT","USER_AUTH","SET_USER","GET_USER","GET_ALL_USERS","DELETE_USER","CLEAR_USER","CLEAR_ALL_USERS","CHANGE_PASSWORD","RECOVER_PASSWORD","RESET_PASSWORD","GET_ALL_AREA_OF_INTEREST","GET_ALL_GLOBAL_IMPACT_AREAS","GET_ALL_IMPACT_AREAS_BY_USER","GET_ALL_GLOBAL_SKILLS","GET_ALL_SKILLS_BY_USER","GET_ALL_GLOBAL_LANGUAGES","GET_ALL_LANGUAGES_BY_USER","GET_ALL_ORGANIZATION_TYPES","GET_INDIVIDUAL_BASIC_INFO","GET_INDIVIDUAL_INVOLVEMENT","GET_INDIVIDUAL_PRIVACY","SET_INDIVIDUAL_BASIC_INFO","SET_INDIVIDUAL_INVOLVEMENT","SET_INDIVIDUAL_PRIVACY","CLEAR_INDIVIDUAL_BASIC_INFO","CLEAR_INDIVIDUAL_INVOLVEMENT","CLEAR_INDIVIDUAL_PRIVACY","GET_ALL_INDIVIDUALS","GET_INDIVIDUAL_PUBLIC_INFO","GET_ORGANIZATION_BASIC_INFO","GET_ORGANIZATION_SERVICE_INFO","GET_ORGANIZATION_INTERNAL_LINK","SET_ORGANIZATION_BASIC_INFO","SET_ORGANIZATION_SERVICE_INFO","SET_ORGANIZATION_INTERNAL_LINK","CLEAR_ORGANIZATION_BASIC_INFO","CLEAR_ORGANIZATION_SERVICE_INFO","CLEAR_ORGANIZATION_INTERNAL_LINK","GET_ALL_ORGANIZATIONS","GET_ORGANIZATION_PUBLIC_INFO","GET_ALL_SUGGESTED_ORGANIZATIONS","FOLLOW_USER","UNFOLLOW_USER","GET_ALL_FOLLOWERS","GET_ALL_FOLLOWINGS","CHECK_IF_FOLLOWER","GET_POST","SET_POST","GET_ALL_POSTS","CLEAR_POST","DELETE_POST","HOME_FEED","GET_ALL_SUGGESTED_POSTS","LIKE_POST","CANCEL_LIKE_POST","INTERESTED_POST","CANCEL_INTERESTED_POST","GOING_POST","CANCEL_GOING_POST","setLocalStorage","key","window","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","parse","getItem","authenticate","basicInfo","userAuth","Types","payload","isAuth","clearUser","searchUsersByName","SearchDA","asyncValidate","dispatch","field","_id","emailExists","LoadingAnim","userTypeData","id","getUserTypeDataById","SignUp","event","state","target","setState","values","parseInt","UserDA","formSubmitted","loading","componentWillUnmount","password","prevProps","prevState","this","auth","success","Object","entries","map","valueJSON","NotificationManager","history","push","getBasicInfoPageByUserType","handleSubmit","Component","reduxForm","form","errors","confirmPassword","asyncChangeFields","asyncBlurFields","enableReinitialize","connect","Auth","SignInForm","errorFlag","errorMessage","handleSignInSubmit","SignIn","componentDidUpdate","message","SignOut","AppRoute","Layout","layout","rest","render","getSuggestionValue","suggestion","individual","firstName","lastName","individualNameRender","renderSectionTitle","section","getSectionSuggestions","users","App","cutOffName","substr","renderSuggestion","width","onClick","getSuggestions","a","str","trim","escapedValue","replace","newValue","method","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","inputProps","Form","inline","multiSection","React","withRouter","defaultIndividualProfilePicture","defaultOrganizationProfilePicture","RenderBellIcon","Badge","variant","NotificationRender","index","NavDropdown","Item","Image","src","thumbnail","format","SampleNotificationsRender","padding","GlobalNotification","title","alignRight","Divider","Header","profilePicture","Navbar","bg","expand","Brand","href","rounded","height","marginLeft","Toggle","aria-controls","Collapse","Nav","round","Footer","DashboardLayout","individualSideNav","onSelect","defaultSelected","eventKey","organizationSideNav","adminSideNav","UserAuthChecker","ComposedClass","allowedUserTypes","allowAuthenticatedUsers","AuthenticationCheck","authDone","includes","mapStateToProps","renderTooltip","Tooltip","DetailsButtonRender","OverlayTrigger","placement","delay","show","hide","overlay","EditButtonRender","DeleteButtonRender","LikeButtonRender","done","InterestedButtonRender","GoingButtonRender","FollowButtonRender","UpArrowButtonRender","DownArrowButtonRender","HomePostFeed","useState","posts","allPosts","i","toUpperCase","handleGotoPostDetails","organizationProfilePicture","handleGotoOrganizationDetails","creatorId","organizationName","createdAt","impactAreaNames","area","skillNames","skill","images","path","description","handleLikePost","handleInterestedPost","handleGoingPost","HomeSuggestions","organizations","allOrganizations","popover","Popover","Title","as","Content","trigger","org","organizationTypes","impactAreas","address","street1","street2","city","code","create_post","get_post_by_id","get_all_posts","update_post_by_id","delete_post_by_id","get_list_by_filter","filter","t","toString","slice","get_home_feed","get_all_suggestions","like_post","cancel_like_post","interested_post","cancel_interested_post","going_post","cancel_going_post","getPostById","PostDA","clearPost","get_basic_info","set_basic_info","get_service_info","set_service_info","serviceInfo","get_internal_link","set_internal_links","internalLink","get_public_info","get_list","get_all_events_by_organization","get_all_projects_by_organization","get_all_posts_by_organization","get_all_posts_by_organization_and_postType","get_all_volunteerings_by_organization","getServiceInfo","OrganizationDA","getPublicInfo","getAllPostsByOrganizationAndPostType","homeFeedResponse","Post","homeFeed","PostSuggestionResponse","getAllSuggestions","OrganizationSuggestionResponse","Organization","setLoading","useEffect","match","params","likePost","handleCancelLikePost","cancelLikePost","interestedPost","handleCancelInterestedPost","cancelInterestedPost","goingPost","handleCancelGoingPost","cancelGoingPost","OrganizationListView","CardColumns","Card","gotoOrganizationDetails","Img","alt","Body","Text","get_all_global_impact_areas","get_all_impact_areas_by_user","getAllGlobalImpactAreas","ImpactAreaDA","getAllImpactAreasByUser","get_all","getAllOrganizationTypes","OrganizationTypeDA","SearchMenu","activeKey","sz","Link","e","changeFilter","serviceArea","keyword","resetFilter","handleOnApplyFilter","countries","getCountryByCode","country","states","Australia","Canada","Japan","UnitedStates","getStateByCountryAndCode","countyCode","libraries","mapContainerStyle","zoomControl","center","lat","lng","AddressRender","line1","line2","AllOrganizationOnMap","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","markers","currentLocation","latitude","longitude","setSelected","onMapLoad","useCallback","mapRef","current","useRef","zoom","onLoad","marker","position","onCloseClick","defaultCurrentLocation","getImpactAreaResponse","ImpactArea","getGlobalImpactAreas","getOrganizationTypeResponse","OrganizationType","getAllOrganizationsResponse","getAllOrganizations","setCurrentLocation","activePage","setActivePage","viewType","setViewType","keywords","setFilter","navigator","geolocation","getCurrentPosition","coords","lg","filter_","filters","getAllOrganizationsByFilter","itemClass","linkClass","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","page","allPostTypes","allSearchablePostTypes","getPostTypeByValue","postTypeFields","startDateTime","endDateTime","isActive","project","skills","expectedRequiredHours","topNeed","general","volunteering","requiredItems","advocacy","petitionLink","CheckIconRender","CrossIconRender","ImpactAreasRender","areas","DescriptionRender","valueRender","split","para","InfoRender","LinkRender","link","BooleanRender","KeywordsRender","EventListView","gotoPostDetails","fullAddress","PostRender","AllPostOnMap","EventFilter","postTypes","startDate","endDate","getAllPostsResponse","getAllPostsByFilter","get_involvement","set_involvement","involvement","get_privacy","set_privacy","privacy","allGenders","allRaces","individualHeaders","stepNo","percent","header","organizationHeaders","BasicInfoForm","editMode","infoModal","setInfoModal","stateAndCountry","selectedCountry","setSelectedCountry","Modal","onHide","closeButton","handleOnSubmit","gender","allLanguages","allSkills","handlePictureUpload","htmlFor","get_all_global_languages","get_all_languages_by_user","get_all_global_skills","get_all_skills_by_user","getAllSkillsByUser","SkillDA","getSkillResponse","Skill","getSkillsByUser","getLanguageResponse","Language","getLanguagesByUser","getBasicInfoResponse","Individual","getBasicInfo","setBasicInfoResponse","setBasicInfo","initialValues","races","race","setProfilePicture","setEditMode","setStateAndCountry","getInitialInfo","LanguageDA","IndividualDA","handleSetResponse","location","pathname","handleGetResponse","file","files","reader","FileReader","readAsDataURL","onload","result","onerror","languages","allInvolvementTypes","ProfileStep3","allImpactAreas","involvementType","handleBackButton","handleSkipButton","getImpactAreasByUser","getInvolvementResponse","getInvolvement","setInvolvementResponse","setInvolvement","allActivityTypes","allSearchTypes","PrivacyForm","activity","search","getPrivacyResponse","getPrivacy","setPrivacyResponse","setPrivacy","DetailsView","infoRender","tagsRender","tags","tag","kids","addressMaker","communityInvolvement","getPublicInfoResponse","individualUserId","allOrganizationTypes","getAllOrganizationTypesResponse","allServiceAreaTypes","ServiceInfoForm","getServiceInfoResponse","setServiceInfoResponse","setServiceInfo","getOrganizationTypesResponse","InternalLinkForm","getInternalLinkResponse","getInternalLink","setInternalLinkResponse","setInternalLink","organization","follows","keywordsRender","contactEmail","website","phone","ein","serviceAreas","mission","follow_user","unfollow_user","get_all_followers","get_all_followings","check_if_follower","followerId","followingId","followUser","FollowDA","unfollowUser","checkIfFollower","SideMenu","RenderListButtonItem","ListGroup","gotoPage","handleUnfollowClick","handleFollowClick","getCheckIfFollowerResponse","Follow","getFollowResponse","getUnfollowResponse","setFollows","organizationUserId","url","ThreadList","ThreadDetails","Messages","PostImageList","pill","Table","striped","bordered","hover","responsive","image","handleImageDescriptionEdit","handleImageDelete","handleItemPosition","disableDefaultUI","searchBoxStyle","SearchBoxRender","panTo","usePlacesAutocomplete","requestOptions","radius","ready","status","setValue","clearSuggestions","handleSelect","getGeocode","results","getLatLng","PostGeoCoding","selectedLocation","parseFloat","handleLocationChange","setZoom","latLng","RequiredItemList","item","handleItemEdit","requirement","neededBy","handleItemDelete","PostForm","postTypeLabel","fields","handleGoToManagePosts","menuPlacement","handleAddMineImpactAreas","handleAddItem","handleImagePosition","setLocation","setIsActive","getPostResponse","getPost","setPostResponse","setPost","word","setImages","setRequiredItems","items","updatePostById","createPost","RoutePaths","idx","movement","images_","confirmAlert","buttons","splice","change","requiredItems_","DisplayPost","handleGotoManagePosts","alert","setUserId","ListingEvent","PostList","setShow","handleClose","ButtonRender","marginTop","handleGoToPostCreate","DropdownItemRender","Dropdown","drop","Menu","handleGoToPostDetails","handleGoToPostEdit","getAllPostsByOrganization","PostTypeMenu","RenderNavItem","CommunityMenu","SampleOrgList","allRoles","individualAndAdminRoles","organizationAndAdminRoles","Routes","exact","UserAuthCheck","UserSignUp","UserSignIn","UserSignOut","IndividualBasicInfo","IndividualInvolvement","IndividualPrivacy","IndividualDetails","OrganizationBasicInfo","OrganizationServiceInfo","OrganizationInternalLink","OrganizationDetails","HomePage","SearchOrganization","SearchEvent","ManagePosts","PostListPageByOrganizationAndPostType","CreatePost","ListingPosts","CommunityFriends","CommunityFollowers","CommunityFollowings","CommunityRequests","initialState","getUser","setUser","allUsers","UserReducer","action","changePassword","recoverPassword","AuthReducer","allAreaOfInterest","AreaOfInterestReducer","getAllIndividuals","ImpactAreaReducer","OrganizationTypeReducer","deletePost","like","cancelLike","interested","cancelInterested","going","cancelGoing","PostReducer","getAllFollowers","getAllFollowings","FollowReducer","setEvent","getGlobalSkills","SkillReducer","getGlobalLanguages","LanguageReducer","rootReducer","combineReducers","formReducer","User","AreaOfInterest","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","store","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.ef59223c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { isEmail, isNumeric } from 'validator';\r\nimport { FormText } from 'reactstrap';\r\nimport moment from 'moment';\r\nexport const required = (value, props) => {\r\n    if (!value || (props.isCheckable && !props.checked)) {\r\n        return <FormText color=\"danger\">This field is required.</FormText>;\r\n    }\r\n};\r\n\r\nexport const rangeLimit = (lower, upper) => (value, props) => {\r\n    if (value) {\r\n        if (parseInt(value) < parseInt(lower) || parseInt(value) > parseInt(upper)) {\r\n            return (\r\n                <FormText color=\"danger\">\r\n                    Range exceeded. Range is {lower} to {upper}\r\n                </FormText>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport const numeric = (value, props) => {\r\n    if (value) {\r\n        if (value || (props.isCheckable && !props.checked)) {\r\n            if (!isNumeric(value.toString())) {\r\n                return (\r\n                    <FormText color=\"danger\">\r\n                        <b>{value}</b> is not a numeric value.\r\n                    </FormText>\r\n                );\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const alphabetic = (value, props) => {\r\n    if (value) {\r\n        if (value || (props.isCheckable && !props.checked)) {\r\n            if (!value.match(/^[A-Za-z\\s]+$/)) {\r\n                return <FormText color=\"danger\">Use only alphabetic characters.</FormText>;\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const phoneNumber = (value, props) => {\r\n    if (value) {\r\n        if (value || (props.isCheckable && !props.checked)) {\r\n            if (!value.match(/^[0-9\\-().\\s]{6,15}$/)) {\r\n                return <FormText color=\"danger\">Invalid phone number.</FormText>;\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const stringLimit = (limit) => (value, props) => {\r\n    if (value) {\r\n        if (value.length > 0 && value.length > limit) return <FormText color=\"danger\">Limit of characters (max {limit}) exceeded.</FormText>;\r\n    }\r\n};\r\nexport const stringLengthRange = (lower, upper) => (value, props) => {\r\n    if (value) {\r\n        if (value.length > 0 && value.length > upper) return <FormText color=\"danger\">Limit of characters (max {upper}) exceeded.</FormText>;\r\n        else if (value.length > 0 && value.length < lower) return <FormText color=\"danger\">Enter minimum ({lower}) characters.</FormText>;\r\n    }\r\n};\r\nexport const email = (value) => {\r\n    if (value) {\r\n        if (!isEmail(value)) {\r\n            return <FormText color=\"danger\">'{value}' is not a valid email.</FormText>;\r\n        }\r\n    }\r\n};\r\nexport const stringLowerLimit = (limit) => (value, props) => {\r\n    if (value.length < limit) return <FormText color=\"danger\">Minimum {limit} characters required. </FormText>;\r\n};\r\nexport const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.confirmPassword) {\r\n        errors.confirmPassword = <FormText color=\"danger\">This field is required.</FormText>;\r\n    } else if (values.confirmPassword !== values.password) {\r\n        errors.confirmPassword = <FormText color=\"danger\">Password and confirm password mismatched.</FormText>;\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport const requiredSelect = (value, props) => {\r\n    if (!value || value === '0' || (props.isCheckable && !props.checked)) {\r\n        return <FormText color=\"danger\">This field is required.</FormText>;\r\n    }\r\n};\r\nexport const date = (value, props) => {\r\n    if (value) {\r\n        if (value || (props.isCheckable && !props.checked)) {\r\n            if (!moment(value).isValid()) {\r\n                return <FormText color=\"danger\">Invalid date.</FormText>;\r\n            }\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\n\r\nexport const InputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-4\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-8\">\r\n                <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputRenderWithLargeLabel = ({ input, label, type, placeholder, min, max, unit, step, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-6\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-6\">\r\n                {type === 'number' ? (\r\n                    <div className=\"input-group\">\r\n                        <input {...input} placeholder={placeholder} type={type} className=\"form-control\" min={min} max={max} unit={unit} step={step} />\r\n                        {unit && (\r\n                            <div className=\"input-group-append\">\r\n                                <span className=\"input-group-text\">{unit}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                )}\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const TextRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <textarea {...input} placeholder={placeholder} rows=\"5\" className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const CheckBoxRender = ({ input, label, type, placeholder, col1, col2, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <input {...input} type={type} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputNumberRender = ({ input, label, type, placeholder, step, min, max, unit, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className=\"col-sm-4 col-form-label\">{label}</label>\r\n            <div className=\"col-sm-8\">\r\n                <div className=\"input-group\">\r\n                    <input style={{ float: 'left' }} {...input} placeholder={placeholder} step={step} min={min} max={max} type={type} className=\"form-control\" />\r\n                    <span className=\"InputNumberUnitSpan\">{unit}</span>\r\n                </div>\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SaInputRender = ({ input, label, type, placeholder, meta: { asyncValidating, touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div style={{ marginBottom: '10px' }} className={className}>\r\n            <label className=\"col-sm-4 signUpLabel\">{label}</label>\r\n\r\n            <div className={asyncValidating ? 'async-validating col-sm-8' : 'col-sm-8'}>\r\n                <input {...input} placeholder={placeholder} type={type} className={'form-control ' + input.name} />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SelectRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2}>\r\n                <select {...input} className=\"form-control\">\r\n                    {children}\r\n                </select>\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const HalfInputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <>\r\n            <input {...input} placeholder={placeholder} type={type} className=\"form-control half-text-input\" />\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </>\r\n    );\r\n};\r\n\r\n// export const SwitchRender = ({ input, label, type, id, checked, placeholder, meta: { touched, error, warning } }) => {\r\n//     const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n//     return (\r\n//         <div className={className}>\r\n//             <div className=\"col-sm-9\">\r\n//                 <label className=\"form-label\">{label}</label>\r\n//             </div>\r\n\r\n//             <div className=\"col-sm-3 custom-control custom-switch\">\r\n//                 {/* <input type=\"checkbox\" className=\"custom-control-input\" id={id} checked={checked} /> */}\r\n//                 <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\"></input>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\nexport const SwitchRender = ({ input, label, type, placeholder, id, defaultChecked, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-6\" htmlFor={id}>\r\n                {label}\r\n            </label>\r\n            <div className=\"col-sm-3 custom-control custom-switch\" style={{ marginLeft: 20 }}>\r\n                <input {...input} type=\"checkbox\" className=\"custom-control-input\" id={id} defaultChecked={input.value} />\r\n                <label className=\"custom-control-label\" htmlFor={id}>\r\n                    {/* Toggle this switch element */}\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DatePickerRender = ({ input, label, minDate, selectedDate, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-4\">{label}</label>\r\n            <div className=\"col-sm-8 date-picker-div\" style={{ zIndex: zIndex }}>\r\n                <DatePicker className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CreatableMultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <CreatableSelect {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} placeholder={placeholder} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const MultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <Select {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const DateTimePickerRender = ({ input, label, minDate, selectedDate, col1, col2, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'form-label col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2} style={{ zIndex: zIndex }}>\r\n                <DatePicker showTimeSelect className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy h:mm aa\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","//OLD\r\n// Sign related pages\r\nexport const signInPage = '/user/sign-in';\r\nexport const signUpPage = '/user/sign-up';\r\nexport const signOutPage = '/user/sign-out';\r\nexport const forgotPasswordPage = '/user/forgot-password';\r\n// Individual View\r\nexport const homePage = '/';\r\n\r\nexport const userProfilePage = '/profile/'; //+userId take userid from param\r\nexport const passwordChangePage = '/settings/password/change'; // take userid from auth\r\n\r\nexport const unAuthorizedPage = '/user/unauthorized';\r\n\r\nexport const getPasswordResetPage = (userId, resetTokenId) => {\r\n    return `/user/${userId}/reset/${resetTokenId}`;\r\n};\r\nexport const notFoundPage = '*';\r\n\r\n// New\r\n// export const completeUserProfile = '/user/complete-profile';\r\nexport const organizationSearchPage = '/search/organization';\r\nexport const eventSearchPage = '/search/event';\r\n\r\n// BREAKING DOWN\r\n\r\n// INDIVIDUAL\r\nexport const individualCompleteBasicInfoPage = '/complete/individual/basic-info';\r\nexport const individualCompleteInvolvementPage = '/complete/individual/involvement';\r\nexport const individualCompletePrivacyPage = '/complete/individual/privacy';\r\n\r\nexport const individualEditBasicInfoPage = '/edit/individual/basic-info';\r\nexport const individualEditInvolvementPage = '/edit/individual/involvement';\r\nexport const individualEditPrivacyPage = '/edit/individual/privacy';\r\n\r\nexport const individualDetailsPage = '/individual/details/:userId';\r\nexport const individualListPage = '/individual/all';\r\n\r\n// ORGANIZATION\r\nexport const organizationCompleteBasicInfoPage = '/complete/organization/basic-info';\r\nexport const organizationCompleteServiceInfoPage = '/complete/organization/service-info';\r\nexport const organizationCompleteInternalLinkPage = '/complete/organization/internal-link';\r\n\r\nexport const organizationEditBasicInfoPage = '/edit/organization/basic-info';\r\nexport const organizationEditServiceInfoPage = '/edit/organization/service-info';\r\nexport const organizationEditInternalLinkPage = '/edit/organization/internal-link';\r\n\r\nexport const organizationDetailsPage = '/organization/details/:userId';\r\nexport const organizationListPage = '/user/organization/all';\r\nexport const userDetailsPage = (userType, userId) => `/${userType}/details/${userId}`;\r\n\r\n// COMMON: (INDIVIDUAL+ORGANIZATION)\r\nexport const userCommonSettingsPage = '/user/common/settings';\r\n\r\n// CALENDER / SCHEDULER\r\nexport const schedulerPage = '/calender/view';\r\n\r\n// MAILBOX\r\nexport const mailInboxPage = '/mails/inbox';\r\nexport const mailComposePage = '/mail/compose';\r\nexport const mailDraftPage = '/mail/draft';\r\nexport const mailSentPage = '/mail/sent';\r\n\r\n// CUSTOM\r\nexport const getBasicInfoPageByUserType = (userType) => {\r\n    return `/complete/${userType}/basic-info`;\r\n};\r\n// POSTS\r\n// export const newsManagePage = '/user/news';\r\n\r\n// // EVENTS\r\n// export const eventCreatePage = '/user/event/create';\r\n// export const eventEditPage = '/user/event/edit/';\r\n// export const eventListByOrganizationPage = '/user/event/all';\r\n// export const eventListPage = '/event/all';\r\n// export const eventDetailsPage = '/event/details/';\r\n\r\n// // PROJECTS\r\n// export const projectCreatePage = '/user/project/create';\r\n// export const projectEditPage = '/user/project/edit/';\r\n// export const projectListByOrganizationPage = '/user/project/all';\r\n// export const projectListPage = '/project/all';\r\n// export const projectDetailsPage = '/project/details/';\r\n\r\n// POSTS\r\nexport const postCreatePage = (postType) => `/${postType}/create`;\r\nexport const postEditPage = (postType, postId) => `/${postType}/edit/${postId}`;\r\nexport const postListByOrganizationPage = (postType) => `/${postType}/all`;\r\nexport const postListPage = (postType) => `/${postType}/all`;\r\nexport const postDetailsPage = (postType, postId) => `/${postType}/details/${postId}`;\r\nexport const postManagePage = `/post/manage`;\r\nexport const postListPageByOrganizationAndPostType = (userId, postType) => `/organization/${userId}/${postType}/all`;\r\n// VOLUNTEERING\r\n// export const volunteeringCreatePage = '/user/volunteering/create';\r\n// export const volunteeringEditPage = '/user/volunteering/edit/';\r\n// export const volunteeringListByOrganizationPage = '/user/volunteering/all';\r\n// export const volunteeringListPage = '/volunteering/all';\r\n// export const volunteeringDetailsPage = '/volunteering/details/';\r\n\r\n// COMMUNITY\r\nexport const communityFriendListPage = '/community/friends';\r\nexport const communityFollowerListPage = '/community/followers';\r\nexport const communityFollowingListPage = '/community/followings';\r\nexport const communityRequestListPage = '/community/requests';\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { required, email, stringLengthRange } from '../../actions/validate';\r\nimport { SaInputRender } from '../form_template/input-render';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\r\n\r\nconst stringRange6To256 = stringLengthRange(6, 256);\r\nconst stringRange6To100 = stringLengthRange(6, 100);\r\n\r\nconst SignUpForm = (props) => {\r\n    const submitting = props.submitting;\r\n    return (\r\n        <Container className=\"saLoginForm\">\r\n            <Row>\r\n                <Col></Col>\r\n                <Col md=\"6\" className=\"sign-ing-form\">\r\n                    <form onSubmit={props.handleSignUpSubmit}>\r\n                        <div className=\"center-text\">\r\n                            <h3>Sign Up On CascAid</h3>\r\n                        </div>\r\n                        <div>\r\n                            <p>Step 1 of 7</p>\r\n                            <ProgressBar now={14} />\r\n                            <br />\r\n                            <h4>Sign up as</h4>\r\n                        </div>\r\n                        <Row onChange={props.handleUserTypeChange}>\r\n                            <Col className=\"sign-as-left\">\r\n                                <label className={`btn ${props.isIndividualChecked ? 'user-type-checked' : 'user-type-unchecked'}`}>\r\n                                    <input className=\"sign-radio-btn\" style={{ display: 'none' }} type=\"radio\" value={1} name=\"regType\" defaultChecked /> Individual\r\n                                </label>\r\n                            </Col>\r\n                            <Col className=\"sign-as-right\">\r\n                                <label className={`btn ${!props.isIndividualChecked ? 'user-type-checked' : 'user-type-unchecked'}`}>\r\n                                    <input className=\"sign-radio-btn\" style={{ display: 'none' }} type=\"radio\" value={2} name=\"regType\" />\r\n                                    Organization\r\n                                </label>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <br />\r\n                        <div className=\"container\">\r\n                            <Field name=\"email\" type=\"text\" component={SaInputRender} placeholder=\"example@example.com\" label=\"Email\" validate={[required, email, stringRange6To256]} />\r\n                            <Field name=\"password\" type=\"password\" component={SaInputRender} label=\"Password\" validate={[required, stringRange6To100]} />\r\n                            <Field name=\"confirmPassword\" type=\"password\" component={SaInputRender} label=\"Confirm Password\" validate={[required, stringRange6To100]} />\r\n                            <br />\r\n                            <Row>\r\n                                <Col sm=\"6\">\r\n                                    <Button className=\"btn signUpBtn\" disabled={submitting} type=\"submit\" size=\"sm\">\r\n                                        SIGN UP\r\n                                    </Button>\r\n                                </Col>\r\n                                {/* <Col sm=\"6\"></Col> */}\r\n                            </Row>\r\n                            <br />\r\n                            <p>\r\n                                Already have an account? &nbsp;\r\n                                <Link\r\n                                    style={{\r\n                                        fontSize: '14px',\r\n                                    }}\r\n                                    to={RoutePath.signInPage}\r\n                                >\r\n                                    Sign In\r\n                                </Link>\r\n                            </p>\r\n                        </div>\r\n                    </form>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import { getLocalStorage } from '../actions';\r\n// export const serverAddress = `http://localhost:3001`;\r\nexport const serverAddress = `http://172.104.35.84`;\r\nexport const checkEmailExist = serverAddress + `/api/users/email/`;\r\nexport const userSignUp = serverAddress + `/api/auth/sign-up`;\r\nexport const userSignIn = serverAddress + `/api/auth/sign-in`;\r\nexport const userSignOut = serverAddress + `/api/auth/sign-out`;\r\nexport const getOneUser = serverAddress + `/api/users/`;\r\nexport const getAllUsers = serverAddress + `/api/users`;\r\nexport const createOneUser = serverAddress + `/api/users`;\r\nexport const updateUser = serverAddress + `/api/users/`;\r\nexport const deleteOneUser = serverAddress + `/api/users/`;\r\nexport const userAuth = serverAddress + `/api/auth`;\r\nexport const changePassword = serverAddress + `/api/auth/`;\r\nexport const recoverPassword = serverAddress + `/api/auth/recover`;\r\nexport const resetPassword = serverAddress + `/api/auth/`;\r\nexport const getAllAreaOfInterests = serverAddress + `/api/area-of-interest/`;\r\n\r\nexport const apiConfig = () => ({ headers: { Authorization: `Bearer ${getLocalStorage(`token`)}` } });\r\n// NEW API\r\nexport const getIndividualBasicInfo = (userId) => serverAddress + `/api/users/individual/${userId}/basic-info`;\r\nexport const getIndividualInvolvement = (userId) => serverAddress + `/api/users/individual/${userId}/involvement`;\r\nexport const getIndividualPrivacy = (userId) => serverAddress + `/api/users/individual/${userId}/privacy`;\r\n\r\nexport const getOrganizationBasicInfo = (userId) => serverAddress + `/api/users/organization/${userId}/basic-info`;\r\nexport const getOrganizationServiceInfo = (userId) => serverAddress + `/api/users/organization/${userId}/service-info`;\r\nexport const getOrganizationInternalLink = (userId) => serverAddress + `/api/users/organization/${userId}/internal-link`;\r\n\r\nexport const setIndividualBasicInfo = (userId) => serverAddress + `/api/users/individual/${userId}/basic-info`;\r\nexport const setIndividualInvolvement = (userId) => serverAddress + `/api/users/individual/${userId}/involvement`;\r\nexport const setIndividualPrivacy = (userId) => serverAddress + `/api/users/individual/${userId}/privacy`;\r\n\r\nexport const setOrganizationBasicInfo = (userId) => serverAddress + `/api/users/organization/${userId}/basic-info`;\r\nexport const setOrganizationServiceInfo = (userId) => serverAddress + `/api/users/organization/${userId}/service-info`;\r\nexport const setOrganizationInternalLink = (userId) => serverAddress + `/api/users/organization/${userId}/internal-link`;\r\n\r\nexport const getIndividualList = serverAddress + `/api/users/individual`;\r\nexport const getOrganizationList = serverAddress + `/api/users/organization`;\r\n\r\nexport const getIndividualPublicInfo = (userId) => serverAddress + `/api/users/individual/${userId}/public-info`;\r\nexport const getOrganizationPublicInfo = (userId) => serverAddress + `/api/users/organization/${userId}/public-info`;\r\n\r\nexport const responseLog = (apiPath, response) => {\r\n    console.log(`RESPONSE FROM ` + apiPath + `: ` + response);\r\n};\r\nexport const errorLog = (apiPath, err) => {\r\n    console.log(`ERROR FROM`, apiPath, err);\r\n};\r\n\r\n// Impact Area\r\nexport const getAllGlobalImpactAreas = serverAddress + `/api/impact-areas/global`;\r\nexport const getAllImpactAreasByUser = serverAddress + `/api/impact-areas/user/`;\r\n\r\n// Skill\r\nexport const getAllGlobalSkills = serverAddress + `/api/skills/global`;\r\nexport const getAllSkillsByUser = serverAddress + `/api/skills/user/`;\r\n\r\n// Languages\r\nexport const getAllGlobalLanguages = serverAddress + `/api/languages/global`;\r\nexport const getAllLanguagesByUser = serverAddress + `/api/languages/user/`;\r\n\r\n// SEARCH\r\nexport const searchByName = serverAddress + `/api/users/search/`;\r\n\r\n// Organization Type\r\nexport const getAllOrganizationTypes = serverAddress + `/api/organization-types/`;\r\n\r\nexport const getAllEventsByOrganization = (userId) => serverAddress + `/api/organizations/${userId}/events`;\r\n\r\nexport const getAllProjectsByOrganization = (userId) => serverAddress + `/api/organizations/${userId}/projects`;\r\n\r\n// POSTS\r\nexport const getPostById = serverAddress + `/api/posts/`;\r\nexport const createPost = serverAddress + `/api/posts/`;\r\nexport const updatePostById = serverAddress + `/api/posts/`;\r\nexport const deletePostById = serverAddress + `/api/posts/`;\r\nexport const getAllPosts = serverAddress + `/api/posts`;\r\n\r\nexport const getAllPostsByOrganization = (userId) => serverAddress + `/api/organizations/${userId}/posts`;\r\nexport const getAllPostsByOrganizationAndPostType = (userId, postType) => serverAddress + `/api/organizations/${userId}/posts/${postType}`;\r\n\r\nexport const getAllVolunteeringsByOrganization = (userId) => serverAddress + `/api/organizations/${userId}/volunteerings`;\r\n\r\n// FOLLOW\r\nexport const followUser = serverAddress + `/api/follows/follow`;\r\nexport const unfollowUser = serverAddress + `/api/follows/unfollow`;\r\n\r\nexport const getAllFollower = (userId) => serverAddress + `/api/follows/follower/${userId}`;\r\nexport const getAllFollowing = (userId) => serverAddress + `/api/follows/following/${userId}`;\r\nexport const checkIfFollower = (followerId, followingId) => serverAddress + `/api/follows/${followerId}/${followingId}`;\r\n\r\n// HOME\r\nexport const getAllFeedPosts = serverAddress + `/api/posts/feed`;\r\nexport const getAllOrganizationSuggestions = serverAddress + '/api/organizations/suggestions';\r\nexport const getAllPostSuggestions = serverAddress + '/api/posts/suggestions';\r\n\r\n// INTEREST\r\nexport const likePost = (postId) => serverAddress + `/api/posts/${postId}/like`;\r\nexport const cancelLikePost = (postId) => serverAddress + `/api/posts/${postId}/cancel-like`;\r\n\r\nexport const interestPost = (postId) => serverAddress + `/api/posts/${postId}/interested`;\r\nexport const cancelInterestPost = (postId) => serverAddress + `/api/posts/${postId}/cancel-interested`;\r\n\r\nexport const goingPost = (postId) => serverAddress + `/api/posts/${postId}/going`;\r\nexport const cancelGoingPost = (postId) => serverAddress + `/api/posts/${postId}/cancel-going`;\r\n","import axios from 'axios';\r\nimport * as APIPaths from '../constants/api-paths';\r\nclass UserDA {\r\n    user_signup = (user) => {\r\n        return axios\r\n            .post(APIPaths.userSignUp, user)\r\n            .then((response) => {\r\n                return response.data;\r\n            })\r\n            .catch((err) => err.response.data);\r\n    };\r\n    user_signin = (user) => {\r\n        return axios\r\n            .post(APIPaths.userSignIn, user)\r\n            .then((response) => {\r\n                return response.data;\r\n            })\r\n            .catch((err) => err.response.data);\r\n    };\r\n    user_signout = () => {\r\n        return axios\r\n            .post(APIPaths.userSignOut)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    create_new_user = (user) => {\r\n        return axios\r\n            .post(APIPaths.createOneUser, user)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    delete_user = (userId) => {\r\n        return axios\r\n            .delete(APIPaths.deleteOneUser + userId)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    update_user = (userId, step, user, model) => {\r\n        return axios\r\n            .put(APIPaths.updateUser + userId, { user, step, model }, APIPaths.apiConfig())\r\n            .then((response) => {\r\n                return response.data;\r\n            })\r\n            .catch((err) => {\r\n                return err.response.data;\r\n            });\r\n    };\r\n\r\n    get_all_users = (userType) => {\r\n        let queryString = '';\r\n        if (userType && (userType === 'organization' || userType === 'individual')) {\r\n            queryString += '?userType=' + userType;\r\n        }\r\n        return axios\r\n            .get(APIPaths.getAllUsers + queryString)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    get_user = (userId) => {\r\n        return axios\r\n            .get(APIPaths.getOneUser + userId, APIPaths.apiConfig())\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    user_auth = () => {\r\n        return axios\r\n            .get(APIPaths.userAuth)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    change_password = (userId, passwords) => {\r\n        return axios\r\n            .put(APIPaths.changePassword + userId + '/password', passwords)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    recover_password = (email) => {\r\n        return axios\r\n            .post(APIPaths.recoverPassword, email)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    reset_password = (userId, token, passwords) => {\r\n        return axios\r\n            .post(APIPaths.resetPassword + userId + '/reset/' + token, passwords)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n}\r\n\r\nexport default new UserDA();\r\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass SearchDA {\n    search_by_name = (name) => {\n        return axios\n            .get(APIPaths.searchByName + name)\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new SearchDA();\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass AreaOfInterestDA {\n    get_all_area_of_interest = () => {\n        return axios\n            .get(APIPaths.getAllAreaOfInterests)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new AreaOfInterestDA();\n","export const USER_SIGN_IN = 'USER_SIGN_IN';\r\nexport const USER_SIGN_UP = 'USER_SIGN_UP';\r\nexport const USER_SIGN_OUT = 'USER_SIGN_OUT';\r\nexport const USER_AUTH = 'USER_AUTH';\r\nexport const SET_USER = 'SET_USER';\r\nexport const GET_USER = 'GET_USER';\r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const CLEAR_USER = 'CLEAR_USER';\r\nexport const CLEAR_ALL_USERS = 'CLEAR_ALL_USERS';\r\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\nexport const RECOVER_PASSWORD = 'RECOVER_PASSWORD';\r\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\r\n\r\nexport const GET_ALL_AREA_OF_INTEREST = 'GET_ALL_AREA_OF_INTEREST';\r\n\r\n// IMPACT AREA\r\nexport const GET_ALL_GLOBAL_IMPACT_AREAS = 'GET_ALL_GLOBAL_IMPACT_AREAS';\r\nexport const GET_ALL_IMPACT_AREAS_BY_USER = 'GET_ALL_IMPACT_AREAS_BY_USER';\r\n\r\n// SKILL\r\nexport const GET_ALL_GLOBAL_SKILLS = 'GET_ALL_GLOBAL_SKILLS';\r\nexport const GET_ALL_SKILLS_BY_USER = 'GET_ALL_SKILLS_BY_USER';\r\n\r\n// LANGUAGE\r\nexport const GET_ALL_GLOBAL_LANGUAGES = 'GET_ALL_GLOBAL_LANGUAGES';\r\nexport const GET_ALL_LANGUAGES_BY_USER = 'GET_ALL_LANGUAGES_BY_USER';\r\n\r\nexport const GET_ALL_ORGANIZATION_TYPES = 'GET_ALL_ORGANIZATION_TYPES';\r\n\r\n// INDIVIDUAL\r\nexport const GET_INDIVIDUAL_BASIC_INFO = 'GET_INDIVIDUAL_BASIC_INFO';\r\nexport const GET_INDIVIDUAL_INVOLVEMENT = 'GET_INDIVIDUAL_INVOLVEMENT';\r\nexport const GET_INDIVIDUAL_PRIVACY = 'GET_INDIVIDUAL_PRIVACY';\r\n\r\nexport const SET_INDIVIDUAL_BASIC_INFO = 'SET_INDIVIDUAL_BASIC_INFO';\r\nexport const SET_INDIVIDUAL_INVOLVEMENT = 'SET_INDIVIDUAL_INVOLVEMENT';\r\nexport const SET_INDIVIDUAL_PRIVACY = 'SET_INDIVIDUAL_PRIVACY';\r\n\r\nexport const CLEAR_INDIVIDUAL_BASIC_INFO = 'CLEAR_INDIVIDUAL_BASIC_INFO';\r\nexport const CLEAR_INDIVIDUAL_INVOLVEMENT = 'CLEAR_INDIVIDUAL_INVOLVEMENT';\r\nexport const CLEAR_INDIVIDUAL_PRIVACY = 'CLEAR_INDIVIDUAL_PRIVACY';\r\n\r\nexport const GET_ALL_INDIVIDUALS = 'GET_ALL_INDIVIDUALS';\r\nexport const GET_INDIVIDUAL_PUBLIC_INFO = 'GET_INDIVIDUAL_PUBLIC_INFO';\r\n\r\n// ORGANIZATION\r\nexport const GET_ORGANIZATION_BASIC_INFO = 'GET_ORGANIZATION_BASIC_INFO';\r\nexport const GET_ORGANIZATION_SERVICE_INFO = 'GET_ORGANIZATION_SERVICE_INFO';\r\nexport const GET_ORGANIZATION_INTERNAL_LINK = 'GET_ORGANIZATION_INTERNAL_LINK';\r\n\r\nexport const SET_ORGANIZATION_BASIC_INFO = 'SET_ORGANIZATION_BASIC_INFO';\r\nexport const SET_ORGANIZATION_SERVICE_INFO = 'SET_ORGANIZATION_SERVICE_INFO';\r\nexport const SET_ORGANIZATION_INTERNAL_LINK = 'SET_ORGANIZATION_INTERNAL_LINK';\r\n\r\nexport const CLEAR_ORGANIZATION_BASIC_INFO = 'CLEAR_ORGANIZATION_BASIC_INFO';\r\nexport const CLEAR_ORGANIZATION_SERVICE_INFO = 'CLEAR_ORGANIZATION_SERVICE_INFO';\r\nexport const CLEAR_ORGANIZATION_INTERNAL_LINK = 'CLEAR_ORGANIZATION_INTERNAL_LINK';\r\n\r\nexport const GET_ALL_ORGANIZATIONS = 'GET_ALL_ORGANIZATIONS';\r\nexport const GET_ORGANIZATION_PUBLIC_INFO = 'GET_ORGANIZATION_PUBLIC_INFO';\r\nexport const GET_ALL_SUGGESTED_ORGANIZATIONS = 'GET_ALL_SUGGESTED_ORGANIZATIONS';\r\n\r\n// EVENTS\r\nexport const GET_EVENT = 'GET_EVENT';\r\nexport const SET_EVENT = 'SET_EVENT';\r\nexport const GET_ALL_EVENTS = 'GET_ALL_EVENTS';\r\nexport const CLEAR_EVENT = 'CLEAR_EVENT';\r\nexport const DELETE_EVENT = 'DELETE_EVENT';\r\n\r\n// Follow\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const GET_ALL_FOLLOWERS = 'GET_ALL_FOLLOWERS';\r\nexport const GET_ALL_FOLLOWINGS = 'GET_ALL_FOLLOWINGS';\r\nexport const CHECK_IF_FOLLOWER = 'CHECK_IF_FOLLOWER';\r\n\r\n// PROJECTS\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const SET_PROJECT = 'SET_PROJECT';\r\nexport const GET_ALL_PROJECTS = 'GET_ALL_PROJECTS';\r\nexport const CLEAR_PROJECT = 'CLEAR_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\n\r\n// POSTS\r\nexport const GET_POST = 'GET_POST';\r\nexport const SET_POST = 'SET_POST';\r\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\r\nexport const CLEAR_POST = 'CLEAR_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const HOME_FEED = 'HOME_FEED';\r\nexport const GET_ALL_SUGGESTED_POSTS = 'GET_ALL_SUGGESTED_POSTS';\r\n\r\nexport const LIKE_POST = 'LIKE_POST';\r\nexport const CANCEL_LIKE_POST = 'CANCEL_LIKE_POST';\r\n\r\nexport const INTERESTED_POST = 'INTERESTED_POST';\r\nexport const CANCEL_INTERESTED_POST = 'CANCEL_INTERESTED_POST';\r\n\r\nexport const GOING_POST = 'GOING_POST';\r\nexport const CANCEL_GOING_POST = 'CANCEL_GOING_POST';\r\n","import UserDA from '../data_accesses/user-da';\r\nimport AreaOfInterestDA from '../data_accesses/area-of-interest-da';\r\nimport SearchDA from '../data_accesses/search-da';\r\nimport * as Types from '../constants/reducer-types';\r\n\r\nexport const setLocalStorage = (key, value) => {\r\n    if (window !== 'undefined') {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n};\r\nexport const removeLocalStorage = (key) => {\r\n    if (window !== 'undefined') {\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\nexport const getLocalStorage = (key) => {\r\n    if (window !== 'undefined') {\r\n        return JSON.parse(localStorage.getItem(key));\r\n    }\r\n};\r\n\r\nexport const printLocalStorage = () => {\r\n    Object.entries(localStorage).map(([key, valueJSON]) => {\r\n        const value = JSON.parse(valueJSON);\r\n\r\n        return value;\r\n    });\r\n};\r\nexport const authenticate = ({ user, token, basicInfo }) => {\r\n    if (user) setLocalStorage('user', user);\r\n    if (token) setLocalStorage('token', token);\r\n    if (basicInfo) setLocalStorage('basicInfo', basicInfo);\r\n};\r\n\r\nexport const userAuth = () => {\r\n    if (window !== 'undefined') {\r\n        const token = getLocalStorage('token');\r\n        const user = getLocalStorage('user');\r\n        const basicInfo = getLocalStorage('basicInfo');\r\n        if (token && user)\r\n            return {\r\n                type: Types.USER_AUTH,\r\n                payload: {\r\n                    isAuth: true,\r\n                    user,\r\n                    basicInfo,\r\n                },\r\n            };\r\n        else\r\n            return {\r\n                type: Types.USER_AUTH,\r\n                payload: {\r\n                    isAuth: false,\r\n                },\r\n            };\r\n    }\r\n};\r\n\r\nexport const userSignUp = (user) => {\r\n    return {\r\n        type: Types.USER_SIGN_UP,\r\n        payload: UserDA.user_signup(user),\r\n    };\r\n};\r\n\r\nexport const userSignIn = (user) => {\r\n    return {\r\n        type: Types.USER_SIGN_IN,\r\n        payload: UserDA.user_signin(user),\r\n    };\r\n};\r\n\r\nexport const userSignOut = () => {\r\n    removeLocalStorage('token');\r\n    removeLocalStorage('user');\r\n    return { type: Types.USER_SIGN_OUT, payload: {} };\r\n};\r\n\r\nexport const deleteUser = (user) => ({\r\n    type: Types.DELETE_USER,\r\n    payload: UserDA.delete_user(user),\r\n});\r\n\r\nexport const getUserInformation = (userId) => {\r\n    return {\r\n        type: Types.GET_USER,\r\n        payload: UserDA.get_user(userId),\r\n    };\r\n};\r\nexport const setUserInformation = (userId, step, user, model) => {\r\n    return {\r\n        type: Types.SET_USER,\r\n        payload: UserDA.update_user(userId, step, user, model),\r\n    };\r\n};\r\n\r\nexport const getUser = (userId) => {\r\n    if (userId === 0) {\r\n        return {\r\n            type: Types.GET_USER,\r\n            payload: {\r\n                success: true,\r\n                user: {},\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            type: Types.GET_USER,\r\n            payload: UserDA.get_user(userId),\r\n        };\r\n    }\r\n};\r\n\r\nexport const setUser = (userId, user) => {\r\n    if (userId === 0) {\r\n        return {\r\n            type: Types.SET_USER,\r\n            payload: UserDA.create_new_user(user),\r\n        };\r\n    } else {\r\n        return {\r\n            type: Types.SET_USER,\r\n            payload: UserDA.update_user(userId, user),\r\n        };\r\n    }\r\n};\r\n\r\nexport const getAllUsers = (userType) => {\r\n    return {\r\n        type: Types.GET_ALL_USERS,\r\n        payload: UserDA.get_all_users(userType),\r\n    };\r\n};\r\n\r\n// export const userAuth = () => {\r\n//     return {\r\n//         type: Types.USER_AUTH,\r\n//         payload: UserDA.user_auth(),\r\n//     };\r\n// };\r\n\r\nexport const clearUser = () => {\r\n    return {\r\n        type: Types.CLEAR_USER,\r\n        payload: {},\r\n    };\r\n};\r\n\r\nexport const clearAllUsers = () => {\r\n    return {\r\n        type: Types.CLEAR_ALL_USERS,\r\n        payload: {},\r\n    };\r\n};\r\n\r\nexport const userChangePassword = (userId, passwords) => {\r\n    return {\r\n        type: Types.CHANGE_PASSWORD,\r\n        payload: UserDA.change_password(userId, passwords),\r\n    };\r\n};\r\n\r\nexport const userForgotPassword = (email) => {\r\n    return {\r\n        type: Types.RECOVER_PASSWORD,\r\n        payload: UserDA.recover_password(email),\r\n    };\r\n};\r\n\r\nexport const userResetPassword = (userId, token, passwords) => {\r\n    return {\r\n        type: Types.RESET_PASSWORD,\r\n        payload: UserDA.reset_password(userId, token, passwords),\r\n    };\r\n};\r\n\r\nexport const getAllAreaOfInterests = () => {\r\n    return {\r\n        type: Types.GET_ALL_AREA_OF_INTEREST,\r\n        payload: AreaOfInterestDA.get_all_area_of_interest(),\r\n    };\r\n};\r\n\r\n//\r\nexport const searchUsersByName = (name) => {\r\n    if (name.length > 0) return SearchDA.search_by_name(name);\r\n};\r\n","import React from \"react\";\r\nimport * as APIPaths from \"../constants/api-paths\";\r\nimport axios from \"axios\";\r\nimport { FormText } from \"reactstrap\";\r\n\r\nconst asyncValidate = (value, dispatch, props, field) => {\r\n\tlet queryString = \"\";\r\n\tif (value._id) {\r\n\t\tqueryString += `?currentUserId=${value._id}`;\r\n\t}\r\n\treturn axios\r\n\t\t.get(APIPaths.checkEmailExist + value.email + queryString)\r\n\t\t.then((response) => {\r\n\t\t\tif (response.data.emailExists) {\r\n\t\t\t\tlet err = {\r\n\t\t\t\t\temail: (\r\n\t\t\t\t\t\t<FormText color=\"danger\">\r\n\t\t\t\t\t\t\tThis Email is already used.\r\n\t\t\t\t\t\t</FormText>\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t\tthrow err;\r\n\t\t\t} else {\r\n\t\t\t\tlet err = {};\r\n\t\t\t\treturn err;\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tif (err.email) throw err;\r\n\t\t\tif (err.response.data.emailExists) {\r\n\t\t\t\tlet err = {\r\n\t\t\t\t\temail: (\r\n\t\t\t\t\t\t<FormText color=\"danger\">\r\n\t\t\t\t\t\t\tThis Email is already used.\r\n\t\t\t\t\t\t</FormText>\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t\tthrow err;\r\n\t\t\t} else {\r\n\t\t\t\tlet err = {};\r\n\t\t\t\treturn err;\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\nexport default asyncValidate;\r\n","import React from 'react';\r\nconst LoadingAnim = (props) => {\r\n\treturn (\r\n\t\t<div className=\"loadingAnim\">\r\n\t\t\t<div className=\"lds-ripple\">\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoadingAnim;\r\n","const userTypeData = [\r\n    { id: 1, name: 'individual', label: 'Individual' },\r\n    { id: 2, name: 'organization', label: 'Organization' },\r\n    { id: 3, name: 'admin', label: 'Admin' },\r\n];\r\n\r\nexport const getAllUserTypeData = () => {\r\n    return userTypeData;\r\n};\r\nexport const getUserTypeDataById = (id) => {\r\n    return userTypeData[id - 1];\r\n};\r\n\r\nconst userTypeFilterData = [\r\n    { id: 1, value: 'both', label: 'Both' },\r\n    { id: 2, value: 'individual', label: 'Individual' },\r\n    { id: 3, value: 'organization', label: 'Organization' },\r\n];\r\n\r\nexport const getAllUserTypeFilterData = () => {\r\n    return userTypeFilterData;\r\n};\r\nexport const getUserTypeFilterDataByValue = (value) => {\r\n    for (let type = 0; type < userTypeFilterData.length; type++) {\r\n        if (userTypeFilterData[type].value === value) return userTypeFilterData[type];\r\n    }\r\n    return userTypeFilterData[0]; // default return both\r\n};\r\nconst userTypeOptionData = [\r\n    { id: 1, value: 'individual', label: 'Individual' },\r\n    { id: 2, value: 'organization', label: 'Organization' },\r\n];\r\n\r\nexport const getAllUserTypeOptionData = () => {\r\n    return userTypeOptionData;\r\n};\r\nexport const getUserTypeOptionDataByValue = (value) => {\r\n    for (let type = 0; type < userTypeOptionData.length; type++) {\r\n        if (userTypeOptionData[type].value === value) return userTypeOptionData[type];\r\n    }\r\n    return userTypeOptionData[0]; // default return both\r\n};\r\n","import React, { Component } from 'react';\r\nimport SignUpForm from '../../components/user/sign-up-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { userSignUp, clearUser, authenticate, printLocalStorage } from '../../actions';\r\nimport { validate } from '../../actions/validate';\r\nimport asyncValidate from '../../actions/asyncValidate';\r\nimport LoadingAnim from '../../components/form_template/loading-anim';\r\nimport { getUserTypeDataById } from '../../constants/user-type-data';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { getBasicInfoPageByUserType } from '../../constants/route-paths';\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n                userType: 1,\r\n            },\r\n            isIndividualChecked: true,\r\n            formSubmitted: false,\r\n        };\r\n    }\r\n    handleUserTypeChange = (event) => {\r\n        let user = this.state.user;\r\n        user.userType = event.target.value;\r\n        if (event.target.value === '1') this.setState({ isIndividualChecked: true });\r\n        else this.setState({ isIndividualChecked: false });\r\n    };\r\n    onSubmit = (values) => {\r\n        values.userType = getUserTypeDataById(parseInt(this.state.user.userType)).name;\r\n        this.props.dispatch(userSignUp(values));\r\n        this.setState({ formSubmitted: true, loading: true });\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.formSubmitted && prevProps.auth !== this.props.auth) {\r\n            if (this.props.auth) {\r\n                if (this.props.auth.success && this.props.auth.isAuth) {\r\n                    authenticate(this.props.auth);\r\n                    printLocalStorage();\r\n                    NotificationManager.success('Welcome to CascAid', 'Success');\r\n                    const userType = getUserTypeDataById(parseInt(this.state.user.userType)).name;\r\n                    this.props.history.push(getBasicInfoPageByUserType(userType));\r\n                } else if (this.props.auth.success === false && this.props.auth.isAuth === false) {\r\n                    this.setState({ loading: false, formSubmitted: false });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount = () => {\r\n        this.props.dispatch(clearUser());\r\n    };\r\n    render() {\r\n        const { submitting } = this.props;\r\n        if (this.state.loading) return <LoadingAnim />;\r\n        else {\r\n            return (\r\n                <SignUpForm\r\n                    handleUserTypeChange={this.handleUserTypeChange}\r\n                    isIndividualChecked={this.state.isIndividualChecked}\r\n                    submitting={submitting}\r\n                    handleSignUpSubmit={this.props.handleSubmit((event) => this.onSubmit(event))}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\n\r\nSignUp = reduxForm({\r\n    form: 'SignUp',\r\n    validate,\r\n    asyncValidate,\r\n    asyncChangeFields: ['email'],\r\n    asyncBlurFields: ['email'],\r\n    enableReinitialize: true,\r\n})(SignUp);\r\n\r\nSignUp = connect(mapStateToProps, null)(SignUp);\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { required, email, stringLengthRange } from '../../actions/validate';\r\nimport { SaInputRender } from '../form_template/input-render';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nconst stringRange6To256 = stringLengthRange(6, 256);\r\nconst stringRange6To100 = stringLengthRange(6, 100);\r\n\r\nconst SignInForm = (props) => {\r\n    const submitting = props.submitting;\r\n    return (\r\n        <Container className=\"saLoginForm\">\r\n            <Row>\r\n                <Col></Col>\r\n                <Col md=\"6\" className=\"sign-ing-form\">\r\n                    {props.errorFlag && <div className=\"sign-in-error-message\">{props.errorMessage}</div>}\r\n                    <form onSubmit={props.handleSignInSubmit}>\r\n                        <div className=\"center-text\">\r\n                            <h3>Sign In To CascAid</h3>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <Field name=\"email\" type=\"text\" component={SaInputRender} placeholder=\"example@example.com\" label=\"Email\" validate={[required, email, stringRange6To256]} />\r\n                        <Field name=\"password\" type=\"password\" component={SaInputRender} label=\"Password\" validate={[required, stringRange6To100]} />\r\n                        <br />\r\n                        <Row>\r\n                            <Col sm=\"6\">\r\n                                <Button className=\"btn signUpBtn\" disabled={submitting} type=\"submit\" size=\"sm\">\r\n                                    SIGN IN\r\n                                </Button>\r\n                            </Col>\r\n                            <Col sm=\"6\">\r\n                                <Link to={RoutePath.forgotPasswordPage}>Forgot your password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <p>\r\n                            Do not have an account? &nbsp;\r\n                            <Link\r\n                                style={{\r\n                                    fontSize: '14px',\r\n                                }}\r\n                                to={RoutePath.signUpPage}\r\n                            >\r\n                                Sign Up\r\n                            </Link>\r\n                        </p>\r\n                    </form>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Container>\r\n        // <div className=\"saLoginForm\">\r\n        // \t{props.errorFlag && (\r\n        // \t\t<div className=\"signinErrorMessage\">{props.errorMessage}</div>\r\n        // \t)}\r\n\r\n        // \t<form onSubmit={props.handleSignInSubmit}>\r\n        // \t\t<div className=\"centerText\">\r\n        // \t\t\t<h3>Sign In To CascAid</h3>\r\n        // \t\t</div>\r\n        // \t\t<div className=\"container\">\r\n        // \t\t\t<Field\r\n        // \t\t\t\tname=\"email\"\r\n        // \t\t\t\ttype=\"text\"\r\n        // \t\t\t\tcomponent={SaInputRender}\r\n        // \t\t\t\tplaceholder=\"example@example.com\"\r\n        // \t\t\t\tlabel=\"Email\"\r\n        // \t\t\t\tvalidate={[required, email, stringRange6To256]}\r\n        // \t\t\t/>\r\n        // \t\t\t<Field\r\n        // \t\t\t\tname=\"password\"\r\n        // \t\t\t\ttype=\"password\"\r\n        // \t\t\t\tcomponent={SaInputRender}\r\n        // \t\t\t\tlabel=\"Password\"\r\n        // \t\t\t\tvalidate={[required, stringRange6To100]}\r\n        // \t\t\t/>\r\n        // \t\t\t<br />\r\n        // \t\t\t<button\r\n        // \t\t\t\tclassName=\"btn signUpBtn\"\r\n        // \t\t\t\tdisabled={submitting}\r\n        // \t\t\t\ttype=\"submit\"\r\n        // \t\t\t>\r\n        // \t\t\t\tSIGN IN\r\n        // \t\t\t</button>\r\n        // \t\t\t<Link to={RoutePath.forgotPasswordPage}>\r\n        // \t\t\t\tForgot your password?\r\n        // \t\t\t</Link>\r\n        // \t\t\t<br />\r\n        // \t\t\t<p>\r\n        // \t\t\t\tDo not have an account? &nbsp;\r\n        // \t\t\t\t<Link\r\n        // \t\t\t\t\tstyle={{\r\n        // \t\t\t\t\t\tfontSize: \"14px\",\r\n        // \t\t\t\t\t\tcolor: \"#3070d1\",\r\n        // \t\t\t\t\t}}\r\n        // \t\t\t\t\tto={RoutePath.signUpPage}\r\n        // \t\t\t\t>\r\n        // \t\t\t\t\tSign Up\r\n        // \t\t\t\t</Link>\r\n        // \t\t\t</p>\r\n        // \t\t</div>\r\n        // \t</form>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default SignInForm;\r\n","import React, { Component } from 'react';\r\nimport SignInForm from '../../components/user/sign-in-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { userSignIn, clearUser, authenticate } from '../../actions';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n            },\r\n            formSubmitted: false,\r\n            errorFlag: false,\r\n            errorMessage: '',\r\n        };\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.dispatch(userSignIn(values));\r\n        this.setState({ formSubmitted: true });\r\n    };\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        console.log(this.props.auth);\r\n        if (this.state.formSubmitted && prevProps.auth !== this.props.auth) {\r\n            if (this.props.auth) {\r\n                console.log('🚀 ~ file: sign-in.js ~ line 30 ~ SignIn ~ this.props.auth', this.props.auth);\r\n                if (this.props.auth.success && this.props.auth.isAuth) {\r\n                    authenticate(this.props.auth);\r\n                    NotificationManager.success('Welcome to CascAid', 'Success');\r\n                    this.props.history.push(RoutePath.homePage);\r\n                } else if (this.props.auth.success === false && this.props.auth.isAuth === false) {\r\n                    console.log('🚀 ~ file: sign-in.js ~ line 34 ~ SignIn ~ this.props.auth', this.props.auth);\r\n                    this.setState({\r\n                        formSubmitted: false,\r\n                        errorFlag: true,\r\n                        errorMessage: this.props.auth.message,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        this.props.dispatch(clearUser());\r\n    };\r\n    render() {\r\n        const { submitting } = this.props;\r\n\r\n        return (\r\n            <SignInForm submitting={submitting} errorFlag={this.state.errorFlag} errorMessage={this.state.errorMessage} handleSignInSubmit={this.props.handleSubmit((event) => this.onSubmit(event))} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\n\r\nSignIn = reduxForm({\r\n    form: 'SignIn',\r\n    enableReinitialize: true,\r\n})(SignIn);\r\n\r\nSignIn = connect(mapStateToProps, null)(SignIn);\r\nexport default SignIn;\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userSignOut } from \"../../actions\";\r\nimport * as RoutePath from \"../../constants/route-paths\";\r\n\r\nclass SignOut extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.dispatch(userSignOut());\r\n\t\tthis.props.history.push(RoutePath.signInPage);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport default connect()(SignOut);\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nconst AppRoute = ({ component: Component, layout: Layout, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) => (\n                <Layout>\n                    <Component {...props} />\n                </Layout>\n            )}\n        />\n    );\n};\n\nexport default AppRoute;\n","import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { withRouter } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\nimport { searchUsersByName } from '../../actions';\nconst individualNameRender = (individual) => {\n    let name = individual.firstName ? individual.firstName + ' ' : '';\n    name += individual.lastName ? individual.lastName : '';\n    return name;\n};\nfunction escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n    if (suggestion.userType === 'organization') return suggestion.name;\n    else if (suggestion.userType === 'individual') return individualNameRender(suggestion);\n}\n\nfunction renderSectionTitle(section) {\n    return <strong>{section.userType}</strong>;\n}\n\nfunction getSectionSuggestions(section) {\n    return section.users;\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            suggestions: [],\n        };\n    }\n    individualNameRender = (individual) => {\n        let name = individual.firstName ? individual.firstName + ' ' : '';\n        name += individual.lastName ? individual.lastName : '';\n        return name;\n    };\n    cutOffName = (name) => {\n        if (name && name.length <= 25) return name;\n        else return name.substr(0, 24) + ' ...';\n    };\n    renderSuggestion = (suggestion) => {\n        return (\n            <div\n                style={{ width: '100%' }}\n                onClick={() => {\n                    this.props.history.push(`/${suggestion.userType}/details/${suggestion.userId}`);\n                }}\n            >\n                {suggestion.userType === 'individual' && <small className=\"suggestion-text\">{this.cutOffName(this.individualNameRender(suggestion))}</small>}\n                {suggestion.userType === 'organization' && <small className=\"suggestion-text\">{this.cutOffName(suggestion.name)}</small>}\n            </div>\n        );\n    };\n    getSuggestions = async (value) => {\n        const escapedValue = escapeRegexCharacters(value.trim());\n\n        if (escapedValue === '') {\n            return [];\n        }\n        const users = await searchUsersByName(escapedValue).then((response) => {\n            if (response.success) {\n                return response.users;\n            } else return [];\n        });\n\n        return users;\n    };\n    onChange = (event, { newValue, method }) => {\n        this.setState({\n            value: newValue,\n        });\n    };\n\n    onSuggestionsFetchRequested = async ({ value }) => {\n        const users = await this.getSuggestions(value);\n\n        this.setState({\n            suggestions: users,\n        });\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: [],\n        });\n    };\n\n    render() {\n        const { value, suggestions } = this.state;\n        const inputProps = {\n            placeholder: 'Type name...',\n            value,\n            onChange: this.onChange,\n        };\n\n        return (\n            <Form inline>\n                <Autosuggest\n                    multiSection={true}\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={this.renderSuggestion}\n                    renderSectionTitle={renderSectionTitle}\n                    getSectionSuggestions={getSectionSuggestions}\n                    inputProps={inputProps}\n                />\n            </Form>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { serverAddress } from './api-paths';\nexport const defaultIndividualProfilePicture = serverAddress + '/default-images/default-individual-profile-picture.jpg';\nexport const defaultIndividualCoverPicture = serverAddress + '/default-images/default-individual-cover-picture.jpg';\n\nexport const defaultOrganizationProfilePicture = serverAddress + '/default-images/default-organization-profile-picture.png';\nexport const defaultOrganizationCoverPicture = serverAddress + '/default-images/default-organization-cover-picture.png';\n\nexport const defaultEventIcon = serverAddress + '/default-images/default-event-icon.png';\nexport const defaultProjectIcon = serverAddress + '/default-images/default-project-icon.png';\nexport const defaultStoryIcon = serverAddress + '/default-images/default-story-icon.png';\nexport const defaultVolunteerIcon = serverAddress + '/default-images/default-volunteer-icon.png';\nexport const defaultPostIcon = serverAddress + '/default-images/default-post-icon.png';\nexport const defaultEventPicture = serverAddress + '/default-images/default-event-picture.jpg';\n\nexport const defaultIImage = serverAddress + '/default-images/default-i-image.png';\nexport const defaultPImage = serverAddress + '/default-images/default-p-image.png';\nexport const defaultVImage = serverAddress + '/default-images/default-v-image.png';\n","import React from 'react';\nimport NotificationBadge from 'react-notification-badge';\nimport { Effect } from 'react-notification-badge';\nimport { Button, Badge, NavDropdown, Image, Row, Container, Col } from 'react-bootstrap';\nimport * as RoutePath from '../../constants/route-paths';\nimport moment from 'moment';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { BsBellFill } from 'react-icons/bs';\nconst RenderBellIcon = () => {\n    const count = 99;\n\n    return (\n        <Button size=\"lg\" className=\"notification-bell\">\n            <BsBellFill />\n            {/* <Image src=\"http://localhost:3001/default-images/flag-icon.png\" roundedCircle /> */}\n\n            <Badge className=\"notification-count\" variant=\"dark\">\n                {count}\n            </Badge>\n        </Button>\n    );\n};\nconst NotificationRender = (index) => {\n    return (\n        <NavDropdown.Item className=\"notification-row\">\n            <Row>\n                <Col sm=\"3\">\n                    <Image src={defaultIndividualProfilePicture} width=\"40\" thumbnail className=\"notification-image\" />\n                </Col>\n                <Col sm=\"9\">\n                    <p className=\"notification-title\">Mr X is Following You.</p>\n                    <p className=\"notification-time\">{moment(new Date()).format('LLL')}</p>\n                </Col>\n            </Row>\n        </NavDropdown.Item>\n    );\n};\nconst SampleNotificationsRender = () => {\n    return (\n        <Container style={{ width: 300, padding: 0 }}>\n            <NotificationRender />\n            <NotificationRender />\n            <NotificationRender />\n            <NotificationRender />\n            <NotificationRender />\n        </Container>\n    );\n};\nconst GlobalNotification = (props) => {\n    return (\n        <NavDropdown title={<RenderBellIcon />} id=\"basic-nav-dropdown\" alignRight={true}>\n            <SampleNotificationsRender />\n            <NavDropdown.Divider />\n            <NavDropdown.Item>SEE ALL</NavDropdown.Item>\n        </NavDropdown>\n    );\n    //\n};\n\nexport default GlobalNotification;\n","import React from 'react';\r\nimport { Navbar, Nav, NavDropdown, Image } from 'react-bootstrap';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nimport { Link } from 'react-router-dom';\r\n// import SearchBox from './search-box';\r\nimport ReactAutoSuggest from './react-autosuggest-lib';\r\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\r\nimport Avatar from 'react-avatar';\r\nimport GlobalNotification from './global-notification';\r\nimport { get } from '../../actions';\r\nconst Header = (props) => {\r\n    const isAuth = props.isAuth || false;\r\n\r\n    if (isAuth && props.user._id) {\r\n        // const username = props.user.name;\r\n        // const userId = props.user._id;\r\n        const basicInfo = props.basicInfo;\r\n        const name = basicInfo.name || 'USER';\r\n        let profilePicture = '';\r\n        if (props.user.userType === 'individual') {\r\n            profilePicture = basicInfo.profilePicture || defaultIndividualProfilePicture;\r\n        }\r\n        if (props.user.userType === 'organization') {\r\n            profilePicture = basicInfo.profilePicture || defaultOrganizationProfilePicture;\r\n        }\r\n        return (\r\n            <div className=\"header\">\r\n                <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        <Image src=\"/images/cascaid-logo-2.png\" thumbnail rounded={10} style={{ height: '50px', width: '80%', marginLeft: '64px' }} />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <ReactAutoSuggest />\r\n                            <GlobalNotification />\r\n                            <NavDropdown title={<Avatar size=\"30\" src={profilePicture} round=\"5px\" />} id=\"basic-nav-dropdown\" alignRight={true}>\r\n                                <NavDropdown.Item disabled={true}>Welcome, {name}</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <Link to={RoutePath.signOutPage} className=\"dropdown-item\">\r\n                                    Sign out\r\n                                </Link>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"header\">\r\n                <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        <Image src=\"/images/cascaid-logo-2.png\" rounded={10} style={{ height: '50px', width: '100%', marginLeft: '64px' }} />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <Link to={RoutePath.signInPage} className=\"nav-link\">\r\n                                Sign in\r\n                            </Link>\r\n                            <Link to={RoutePath.signUpPage} className=\"nav-link\">\r\n                                Sign up\r\n                            </Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nconst Footer = (props) => {\r\n\treturn (\r\n\t\t<div className=\"footer\">\r\n\t\t\t<h6>Thank you for staying with us.</h6>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/layout/header';\r\nimport Footer from '../components/layout/footer';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        const isAuth = this.props.auth.isAuth;\r\n        const user = this.props.auth.user;\r\n        const basicInfo = this.props.auth.basicInfo;\r\n        return (\r\n            <div className=\"formBackgroundUI\">\r\n                <Header isAuth={isAuth || false} user={user || {}} basicInfo={basicInfo || {}} />\r\n                <div className=\"mainView\">{this.props.children}</div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(Layout);\r\n// -webkit-column-count: 5!important;\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/layout/header';\r\nimport Footer from '../components/layout/footer';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { connect } from 'react-redux';\r\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FaHome, FaSearch, FaConnectdevelop, FaCalendarAlt, FaUserCog, FaEnvelope, FaNewspaper } from 'react-icons/fa';\r\nimport { BsFilePost } from 'react-icons/bs';\r\nimport * as RoutePath from '../constants/route-paths';\r\nclass DashboardLayout extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n    individualSideNav = () => {\r\n        return (\r\n            <SideNav\r\n                onSelect={(selected) => {\r\n                    this.props.history.push(selected);\r\n                }}\r\n            >\r\n                <SideNav.Toggle />\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaHome size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Home</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/search/organization\">\r\n                        <NavIcon>\r\n                            <FaSearch size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Discover</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.communityFriendListPage}>\r\n                        <NavIcon>\r\n                            <FaConnectdevelop size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Community</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaCalendarAlt size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Calender</NavText>\r\n                    </NavItem>\r\n\r\n                    <NavItem eventKey=\"/messages\">\r\n                        <NavIcon>\r\n                            <FaEnvelope size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Mails</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.individualEditBasicInfoPage}>\r\n                        <NavIcon>\r\n                            <FaUserCog size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Profile Settings</NavText>\r\n\r\n                        <NavItem eventKey={RoutePath.individualEditBasicInfoPage}>\r\n                            <NavText>Basic Information</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.individualEditInvolvementPage}>\r\n                            <NavText>Involvement</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.individualEditPrivacyPage}>\r\n                            <NavText>Privacy</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.userCommonSettingsPage}>\r\n                            <NavText>Account Settings</NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n        );\r\n    };\r\n    organizationSideNav = () => {\r\n        return (\r\n            <SideNav\r\n                onSelect={(selected) => {\r\n                    this.props.history.push(selected);\r\n                }}\r\n            >\r\n                <SideNav.Toggle />\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaHome size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Home</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/search/organization\">\r\n                        <NavIcon>\r\n                            <FaSearch size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Discover</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaConnectdevelop size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Community</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaCalendarAlt size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Calender</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.postManagePage}>\r\n                        <NavIcon>\r\n                            {/* <BsFilePost size={24} /> */}\r\n                            <FaNewspaper size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Posts</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/messages\">\r\n                        <NavIcon>\r\n                            <FaEnvelope size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Mails</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.organizationEditBasicInfoPage}>\r\n                        <NavIcon>\r\n                            <FaUserCog size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Profile Settings</NavText>\r\n\r\n                        <NavItem eventKey={RoutePath.organizationEditBasicInfoPage}>\r\n                            <NavText>Basic Information</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.organizationEditServiceInfoPage}>\r\n                            <NavText>Service Information</NavText>\r\n                        </NavItem>\r\n                        {/* <NavItem eventKey={RoutePath.organizationEditInternalLinkPage}>\r\n                <NavText>Internal Link</NavText>\r\n            </NavItem> */}\r\n                        <NavItem eventKey={RoutePath.userCommonSettingsPage}>\r\n                            <NavText>Account Settings</NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n        );\r\n    };\r\n    adminSideNav = () => {\r\n        return <></>;\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props.auth);\r\n        const isAuth = this.props.auth.isAuth;\r\n        const user = this.props.auth.user;\r\n        const basicInfo = this.props.auth.basicInfo;\r\n        return (\r\n            <div>\r\n                <Header isAuth={isAuth || false} user={user || {}} basicInfo={basicInfo || {}} />\r\n                <div className=\"full-page-div\">\r\n                    <div>\r\n                        {user && user.userType === 'individual' && this.individualSideNav()}\r\n                        {user && user.userType === 'organization' && this.organizationSideNav()}\r\n                        {user && user.userType === 'admin' && this.adminSideNav()}\r\n                        {/* </SideNav.Nav>\r\n                        </SideNav> */}\r\n                        <main className=\"main-div\">{this.props.children}</main>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(withRouter(DashboardLayout));\r\n","import React, { Component } from 'react';\r\nimport { userAuth } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport LoadingAnim from '../components/form_template/loading-anim';\r\nimport * as RoutePath from '../constants/route-paths';\r\nimport { NotificationManager } from 'react-notifications';\r\nconst UserAuthChecker = (ComposedClass, allowedUserTypes, allowAuthenticatedUsers = true) => {\r\n    class AuthenticationCheck extends Component {\r\n        state = {\r\n            loading: true,\r\n            authDone: false,\r\n        };\r\n\r\n        componentDidMount() {\r\n            this.props.dispatch(userAuth());\r\n        }\r\n        componentDidUpdate(prevProps, prevState) {\r\n            if (prevState.authDone === false) {\r\n                if (this.props.auth.isAuth && allowAuthenticatedUsers) {\r\n                    // Check for authorization\r\n                    if (allowedUserTypes.includes(this.props.auth.user.userType)) {\r\n                        // Authentication and authorization done.\r\n                        this.setState({\r\n                            loading: false,\r\n                            authDone: true,\r\n                        });\r\n                    } else {\r\n                        // Go to warning (unauthorized) page\r\n                    }\r\n                } else if (this.props.auth.isAuth && !allowAuthenticatedUsers) {\r\n                    // Already logged in, so go to homepage. can not go there until logout\r\n                    this.props.history.push(RoutePath.homePage);\r\n                    NotificationManager.success('Your are already logged in', 'Success');\r\n                } else if (!this.props.auth.isAuth && allowAuthenticatedUsers) {\r\n                    // Not logged in, so go to sign in page.\r\n                    // NotificationManager.warning(\r\n                    // \t'You have to log in first',\r\n                    // \t'Not allowed'\r\n                    // );\r\n                    this.props.history.push(RoutePath.signInPage);\r\n                } else if (!this.props.auth.isAuth && !allowAuthenticatedUsers) {\r\n                    // Go to the composed class. example: sign in page.\r\n                    this.setState({\r\n                        loading: false,\r\n                        authDone: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        render() {\r\n            if (this.state.loading) {\r\n                return <LoadingAnim />;\r\n            } else return <ComposedClass {...this.props} auth={this.props.auth} />;\r\n        }\r\n    }\r\n    function mapStateToProps(state) {\r\n        return {\r\n            auth: state.Auth.auth,\r\n        };\r\n    }\r\n    return connect(mapStateToProps)(AuthenticationCheck);\r\n};\r\nexport default UserAuthChecker;\r\n","import React from 'react';\r\nimport { Button, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport { FaThumbsUp, FaLocationArrow } from 'react-icons/fa';\r\nimport { RiUserFollowLine } from 'react-icons/ri';\r\nimport { FaRegEdit, FaRegTrashAlt, FaArrowCircleDown, FaArrowCircleUp, FaHeart } from 'react-icons/fa';\r\nimport { BiDetail } from 'react-icons/bi';\r\nconst renderTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n        {props.title ? props.title : 'NA'}\r\n    </Tooltip>\r\n);\r\nexport const DetailsButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Details' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-info\" size=\"sm\" {...props}>\r\n                <BiDetail />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport const EditButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Edit' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-dark\" size=\"sm\" {...props}>\r\n                <FaRegEdit />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport const DeleteButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Delete' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-danger\" size=\"sm\" {...props}>\r\n                <FaRegTrashAlt />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport const SaveButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-success\" size=\"sm\" {...props}>\r\n            Save\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const ListButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            Go to list\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const OthersButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-secondary\" size=\"sm\" {...props}>\r\n            Save\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const CancelButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-warning\" size=\"sm\" {...props}>\r\n            Cancel\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const CreateButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-success\" size=\"sm\" {...props}>\r\n            {props.title}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const SendButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-secondary\" size=\"sm\" {...props}>\r\n            Send\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const LikeButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: props.done ? 'Unlike' : 'Like' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-primary\" className={props.done ? 'filled-like-btn' : ''} size=\"sm\" {...props}>\r\n                <FaThumbsUp />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\nexport const InterestedButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: props.done ? 'Uninterested' : 'Interested' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-secondary\" className={props.done ? 'filled-interest-btn' : ''} size=\"sm\" {...props}>\r\n                <FaHeart />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\nexport const GoingButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: props.done ? 'Not going' : 'Going' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-info\" className={props.done ? 'filled-going-btn' : ''} size=\"sm\" {...props}>\r\n                <FaLocationArrow />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\nexport const FollowButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <RiUserFollowLine /> Follow\r\n        </Button>\r\n    );\r\n};\r\nexport const RemoveButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <RiUserFollowLine /> Follow\r\n        </Button>\r\n    );\r\n};\r\nexport const UpArrowButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <FaArrowCircleUp />\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const DownArrowButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <FaArrowCircleDown />\r\n        </Button>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Container, Row, Col, Image, Button, Modal, Badge } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FaThumbsUp, FaLocationArrow, FaHeart } from 'react-icons/fa';\nimport { LikeButtonRender, InterestedButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nconst HomePostFeed = (props) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const posts = props.allPosts;\n    console.log('🚀 ~ file: home-post-feeds.js ~ line 14 ~ HomePostFeed ~ posts', posts);\n    if (posts && posts.length > 0) {\n        return (\n            <>\n                {posts.map((post, i) => {\n                    return (\n                        <div key={i} className=\"justify-text post-box\">\n                            <h6 style={{ color: 'cadetblue' }}>{post.postType === 'general' ? '' : post.postType.toUpperCase()}</h6>\n                            <h5\n                                className=\"link-name\"\n                                onClick={() => {\n                                    props.handleGotoPostDetails(post.postType, post._id);\n                                }}\n                            >\n                                {post.title.toUpperCase()}\n                            </h5>\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col sm=\"1\">\n                                            <Avatar src={post.organizationProfilePicture ? post.organizationProfilePicture[0] : defaultOrganizationProfilePicture} rounded={3} size=\"50\" />\n                                        </Col>\n                                        <Col sm=\"8\">\n                                            <h6\n                                                className=\"link-name\"\n                                                onClick={() => {\n                                                    props.handleGotoOrganizationDetails(post.creatorId);\n                                                }}\n                                            >\n                                                {post.organizationName[0]}\n                                            </h6>\n\n                                            <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {post.impactAreaNames.map((area, i) => {\n                                        return (\n                                            <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\" key={i}>\n                                                {area.label}\n                                            </Badge>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col>\n                                    {post.skillNames.map((skill, i) => {\n                                        return (\n                                            <Badge variant=\"light\" className=\"badge-single-small skill-badge\" key={i}>\n                                                {skill.label}\n                                            </Badge>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n                            <br />\n                            <Row\n                                onClick={() => {\n                                    props.handleGotoPostDetails(post.postType, post._id);\n                                }}\n                            >\n                                {post.images && post.images.length > 0 && (\n                                    <Col sm=\"4\" className=\"home-post-image\">\n                                        <Image src={post.images[0].path} thumbnail style={{ width: '100%', height: 'auto' }} />\n                                        {post.images.length > 1 && <div className=\"home-post-image-text\">{post.images.length - 1} More Images</div>}\n                                    </Col>\n                                )}\n                                <Col className=\"justify-text\">\n                                    {post.description && post.description.length > 250 ? (\n                                        <>\n                                            {post.description.substr(0, 250) + '...'} <a href=\"#\">See More</a>{' '}\n                                        </>\n                                    ) : (\n                                        post.description\n                                    )}\n                                    {/*  */}\n                                </Col>\n                            </Row>\n                            <hr />\n\n                            <Row>\n                                <Col>\n                                    <LikeButtonRender\n                                        onClick={() => {\n                                            props.handleLikePost(post._id);\n                                        }}\n                                    />\n                                    &nbsp;\n                                    <InterestedButtonRender\n                                        onClick={() => {\n                                            console.log('handleInterestedPost');\n                                            props.handleInterestedPost(post._id);\n                                        }}\n                                    />\n                                    &nbsp;\n                                    <GoingButtonRender\n                                        onClick={() => {\n                                            props.handleGoingPost(post._id);\n                                        }}\n                                    />\n                                    &nbsp;\n                                </Col>\n                                {/* <Col className=\"right-align\">\n                                    <Button variant=\"outline-primary\" size=\"sm\" onClick={handleShow}>\n                                        10 Liked\n                                    </Button>\n                                    &nbsp;\n                                    <Button variant=\"outline-info\" size=\"sm\" onClick={handleShow}>\n                                        100 Interested\n                                    </Button>\n                                    &nbsp;\n                                    <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleShow}>\n                                        1000 Going\n                                    </Button>\n                                    &nbsp;\n                                </Col> */}\n                            </Row>\n                        </div>\n                    );\n                })}\n            </>\n        );\n    } else return <h4>No Posts Found</h4>;\n};\nexport default HomePostFeed;\n","import React from 'react';\nimport moment from 'moment';\nimport { Container, Badge, Row, Col, Image, Button, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FollowButtonRender } from '../../components/form_template/buttons-render';\nimport { BsFillExclamationDiamondFill } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nconst HomeSuggestions = (props) => {\n    const organizations = props.allOrganizations;\n    console.log('🚀 ~ file: home-suggestions.js ~ line 11 ~ HomeSuggestions ~ organizations', organizations);\n\n    const popover = (\n        <Popover id=\"popover-basic\">\n            <Popover.Title as=\"h4\">Suggestions</Popover.Title>\n            <Popover.Content>The suggestions is based on your profile informations such as location, impact areas, etc.</Popover.Content>\n        </Popover>\n    );\n\n    return (\n        <div>\n            <Row>\n                <Col sm=\"10\">\n                    <h6>\n                        Suggestions for you.\n                        {/* </Col>\n                <Col> */}\n                        <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                            <a>\n                                <BsFillExclamationDiamondFill style={{ marginBottom: 5 }} />\n                            </a>\n                            {/* <Button variant=\"light\" size=\"sm\" style={{ padding: 0, margin: 0 }}>\n                        \n                            <BsFillExclamationDiamondFill />\n                        </Button> */}\n                        </OverlayTrigger>\n                    </h6>\n                    {/* <small>Based on your profile</small> */}\n                </Col>\n            </Row>\n            <br />\n            {organizations.map((org, i) => {\n                return (\n                    <div key={i} className=\"post-box\">\n                        <Row>\n                            <Col>\n                                <Row>\n                                    <Col sm=\"2\">\n                                        <Avatar src={org.profilePicture ? org.profilePicture : defaultOrganizationProfilePicture} round={5} size={30} />\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Link to={'/organization/details/'}>\n                                            {' '}\n                                            <h6>{org.name}</h6>\n                                        </Link>\n                                    </Col>\n                                </Row>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                {org.organizationTypes &&\n                                    org.organizationTypes.length > 0 &&\n                                    org.organizationTypes.map((type, i) => {\n                                        return (\n                                            <Badge variant=\"info\" className=\"badge-single-small\" key={i}>\n                                                {type.label}\n                                            </Badge>\n                                        );\n                                    })}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                {org.impactAreas &&\n                                    org.impactAreas.length > 0 &&\n                                    org.impactAreas.map((area, i) => {\n                                        return (\n                                            <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\">\n                                                {area.label}\n                                            </Badge>\n                                        );\n                                    })}\n                            </Col>\n                        </Row>\n                        {org.address ? (\n                            <Row>\n                                <Col>\n                                    <small>{org.address.street1 + ', ' + org.address.street2 + ', ' + org.address.city + ', ' + org.address.code}</small>\n                                </Col>\n                            </Row>\n                        ) : (\n                            <></>\n                        )}\n                        <br />\n                        <Row>\n                            <Col>\n                                <FollowButtonRender />\n                                &nbsp;\n                            </Col>\n                        </Row>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nexport default HomeSuggestions;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass PostDA {\n    create_post = (post) => {\n        return axios\n            .post(APIPaths.createPost, post, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_post_by_id = (postId) => {\n        return axios\n            .get(APIPaths.getPostById + postId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_posts = () => {\n        return axios\n            .get(APIPaths.getAllPosts, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    update_post_by_id = (postId, post) => {\n        return axios\n            .put(APIPaths.updatePostById + postId, post, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    delete_post_by_id = (postId) => {\n        return axios\n            .delete(APIPaths.deletePostById + postId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_list_by_filter = (filter) => {\n        let queryString = '?';\n        for (let t in filter) {\n            if (filter[t]) {\n                console.log(t);\n                queryString += t.toString();\n                queryString += '=';\n                queryString += JSON.stringify(filter[t]);\n                queryString += '&';\n            }\n        }\n        return axios\n            .get(APIPaths.getAllPosts + queryString.slice(0, -1), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n        // const params = `?title=${title}&impactAreas=${JSON.stringify(impactAreas)}`;\n        // return axios\n        //     .get(APIPaths.getAllPosts + params, APIPaths.apiConfig())\n        //     .then((response) => response.data)\n        //     .catch((err) => err.response.data);\n    };\n    get_home_feed = () => {\n        return axios\n            .get(APIPaths.getAllFeedPosts, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_suggestions = () => {\n        return axios\n            .get(APIPaths.getAllPostSuggestions, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n\n    like_post = (postId) => {\n        console.log(APIPaths.apiConfig());\n        return axios\n            .post(APIPaths.likePost(postId), {}, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    cancel_like_post = (postId) => {\n        return axios\n            .post(APIPaths.cancelLikePost(postId), {}, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n\n    interested_post = (postId) => {\n        return axios\n            .post(APIPaths.interestPost(postId), {}, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    cancel_interested_post = (postId) => {\n        return axios\n            .post(APIPaths.cancelInterestPost(postId), {}, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n\n    going_post = (postId) => {\n        return axios\n            .post(APIPaths.goingPost(postId), {}, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    cancel_going_post = (postId) => {\n        return axios\n            .post(APIPaths.cancelGoingPost(postId), {}, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new PostDA();\n","import PostDA from '../data_accesses/post-da';\nimport * as Types from '../constants/reducer-types';\nexport const createPost = (post) => {\n    return {\n        type: Types.SET_POST,\n        payload: PostDA.create_post(post),\n    };\n};\nexport const getPostById = (postId) => {\n    return {\n        type: Types.GET_POST,\n        payload: PostDA.get_post_by_id(postId),\n    };\n};\nexport const getAllPosts = () => {\n    return {\n        type: Types.GET_ALL_POSTS,\n        payload: PostDA.get_all_posts(),\n    };\n};\nexport const deletePostById = (postId) => {\n    return {\n        type: Types.DELETE_POST,\n        payload: PostDA.delete_post_by_id(postId),\n    };\n};\nexport const updatePostById = (postId, post) => {\n    return {\n        type: Types.SET_POST,\n        payload: PostDA.update_post_by_id(postId, post),\n    };\n};\nexport const clearPost = () => {\n    return {\n        type: Types.CLEAR_POST,\n        payload: {},\n    };\n};\n\nexport const getAllPostsByFilter = (filter) => {\n    let filters = { ...filter };\n    if (filters.impactAreas && filters.impactAreas.length > 0) filters.impactAreas = filters.impactAreas.map((area) => area._id);\n    if (filters.postTypes && filters.postTypes.length > 0) filters.postTypes = filters.postTypes.map((type) => type.value);\n    console.log(filters);\n    return {\n        type: Types.GET_ALL_POSTS,\n        payload: PostDA.get_list_by_filter(filters),\n    };\n};\nexport const getHomeFeed = () => {\n    return {\n        type: Types.HOME_FEED,\n        payload: PostDA.get_home_feed(),\n    };\n};\n\nexport const getAllPostSuggestions = () => {\n    return {\n        type: Types.GET_ALL_SUGGESTED_POSTS,\n        payload: PostDA.get_all_suggestions(),\n    };\n};\n\nexport const likePost = (postId) => {\n    return {\n        type: Types.LIKE_POST,\n        payload: PostDA.like_post(postId),\n    };\n};\n\nexport const cancelLikePost = (postId) => {\n    return {\n        type: Types.CANCEL_LIKE_POST,\n        payload: PostDA.cancel_like_post(postId),\n    };\n};\n\nexport const interestedPost = (postId) => {\n    return {\n        type: Types.INTERESTED_POST,\n        payload: PostDA.interested_post(postId),\n    };\n};\n\nexport const cancelInterestedPost = (postId) => {\n    return {\n        type: Types.CANCEL_INTERESTED_POST,\n        payload: PostDA.cancel_interested_post(postId),\n    };\n};\n\nexport const goingPost = (postId) => {\n    return {\n        type: Types.GOING_POST,\n        payload: PostDA.going_post(postId),\n    };\n};\n\nexport const cancelGoingPost = (postId) => {\n    return {\n        type: Types.CANCEL_GOING_POST,\n        payload: PostDA.cancel_going_post(postId),\n    };\n};\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass OrganizationDA {\n    get_basic_info = (userId) => {\n        return axios\n            .get(APIPaths.getOrganizationBasicInfo(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_basic_info = (userId, basicInfo) => {\n        return axios\n            .put(APIPaths.setOrganizationBasicInfo(userId), basicInfo, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_service_info = (userId) => {\n        return axios\n            .get(APIPaths.getOrganizationServiceInfo(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_service_info = (userId, serviceInfo) => {\n        return axios\n            .put(APIPaths.setOrganizationServiceInfo(userId), serviceInfo, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_internal_link = (userId) => {\n        return axios\n            .get(APIPaths.getOrganizationInternalLink(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_internal_links = (userId, internalLink) => {\n        return axios\n            .put(APIPaths.setOrganizationInternalLink(userId), internalLink, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_public_info = (userId) => {\n        return axios\n            .get(APIPaths.getOrganizationPublicInfo(userId))\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_list = () => {\n        return axios\n            .get(APIPaths.getOrganizationList)\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_list_by_filter = (filter) => {\n        let queryString = '?';\n\n        for (let t in filter) {\n            if (filter[t]) {\n                console.log(t);\n                queryString += t.toString();\n                queryString += '=';\n                queryString += JSON.stringify(filter[t]);\n                queryString += '&';\n            }\n        }\n        return axios\n            .get(APIPaths.getOrganizationList + queryString.slice(0, -1))\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_events_by_organization = (userId) => {\n        console.log(APIPaths.getAllEventsByOrganization(userId));\n        return axios\n            .get(APIPaths.getAllEventsByOrganization(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_projects_by_organization = (userId) => {\n        return axios\n            .get(APIPaths.getAllProjectsByOrganization(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_posts_by_organization = (userId) => {\n        return axios\n            .get(APIPaths.getAllPostsByOrganization(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_posts_by_organization_and_postType = (userId, postType) => {\n        return axios\n            .get(APIPaths.getAllPostsByOrganizationAndPostType(userId, postType), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_volunteerings_by_organization = (userId) => {\n        return axios\n            .get(APIPaths.getAllVolunteeringsByOrganization(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_suggestions = () => {\n        return axios\n            .get(APIPaths.getAllOrganizationSuggestions, APIPaths.apiConfig())\n            .then((response) => {\n                console.log(response);\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new OrganizationDA();\n","import * as Types from '../constants/reducer-types';\nimport OrganizationDA from '../data_accesses/organization-da';\n\nexport const getBasicInfo = (userId) => {\n    return {\n        type: Types.GET_ORGANIZATION_BASIC_INFO,\n        payload: OrganizationDA.get_basic_info(userId),\n    };\n};\n\nexport const getServiceInfo = (userId) => {\n    return {\n        type: Types.GET_ORGANIZATION_SERVICE_INFO,\n        payload: OrganizationDA.get_service_info(userId),\n    };\n};\nexport const getInternalLink = (userId) => {\n    return {\n        type: Types.GET_ORGANIZATION_INTERNAL_LINK,\n        payload: OrganizationDA.get_internal_link(userId),\n    };\n};\nexport const getPublicInfo = (userId) => {\n    return {\n        type: Types.GET_ORGANIZATION_PUBLIC_INFO,\n        payload: OrganizationDA.get_public_info(userId),\n    };\n};\n\nexport const getAllOrganizations = () => {\n    return {\n        type: Types.GET_ALL_ORGANIZATIONS,\n        payload: OrganizationDA.get_list(),\n    };\n};\n\nexport const getAllOrganizationsByFilter = (filter) => {\n    let filters = { ...filter };\n    if (filters.impactAreas && filters.impactAreas.length > 0) filters.impactAreas = filters.impactAreas.map((area) => area._id);\n    if (filters.organizationTypes && filters.organizationTypes.length > 0) filters.organizationTypes = filters.organizationTypes.map((type) => type._id);\n    return {\n        type: Types.GET_ALL_ORGANIZATIONS,\n        payload: OrganizationDA.get_list_by_filter(filters),\n    };\n};\n\nexport const setBasicInfo = (userId, basicInfo) => {\n    return {\n        type: Types.SET_ORGANIZATION_BASIC_INFO,\n        payload: OrganizationDA.set_basic_info(userId, basicInfo),\n    };\n};\n\nexport const setServiceInfo = (userId, serviceInfo) => {\n    return {\n        type: Types.SET_ORGANIZATION_SERVICE_INFO,\n        payload: OrganizationDA.set_service_info(userId, serviceInfo),\n    };\n};\nexport const setInternalLink = (userId, internalLink) => {\n    return {\n        type: Types.SET_ORGANIZATION_INTERNAL_LINK,\n        payload: OrganizationDA.set_internal_links(userId, internalLink),\n    };\n};\n\nexport const clearBasicInfo = (userId) => {\n    return {\n        type: Types.CLEAR_ORGANIZATION_BASIC_INFO,\n        payload: {},\n    };\n};\n\nexport const clearServiceInfo = (userId) => {\n    return {\n        type: Types.CLEAR_ORGANIZATION_SERVICE_INFO,\n        payload: {},\n    };\n};\nexport const clearInternalLink = (userId) => {\n    return {\n        type: Types.CLEAR_ORGANIZATION_INTERNAL_LINK,\n        payload: {},\n    };\n};\n\nexport const getAllEventsByOrganization = (userId) => {\n    return {\n        type: Types.GET_ALL_EVENTS,\n        payload: OrganizationDA.get_all_events_by_organization(userId),\n    };\n};\n\nexport const getAllProjectsByOrganization = (userId) => {\n    return {\n        type: Types.GET_ALL_PROJECTS,\n        payload: OrganizationDA.get_all_projects_by_organization(userId),\n    };\n};\n\nexport const getAllPostsByOrganization = (userId) => {\n    return {\n        type: Types.GET_ALL_POSTS,\n        payload: OrganizationDA.get_all_posts_by_organization(userId),\n    };\n};\nexport const getAllPostsByOrganizationAndPostType = (userId, postType) => {\n    console.log('🚀 ~ file: organization-action.js ~ line 108 ~ getAllPostsByOrganizationAndPostType ~ userId, postType', userId, postType);\n    return {\n        type: Types.GET_ALL_POSTS,\n        payload: OrganizationDA.get_all_posts_by_organization_and_postType(userId, postType),\n    };\n};\nexport const getAllOrganizationSuggestions = () => {\n    return {\n        type: Types.GET_ALL_SUGGESTED_ORGANIZATIONS,\n        payload: OrganizationDA.get_all_suggestions(),\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport HomePostFeeds from '../../components/home/home-post-feeds';\nimport HomeOrganizationSuggestions from '../../components/home/home-suggestions';\nimport { getHomeFeed, getAllPostSuggestions } from '../../actions/post-action';\nimport { getAllOrganizationSuggestions } from '../../actions/organization-action';\nimport { postDetailsPage, userDetailsPage } from '../../constants/route-paths';\nimport { likePost, cancelLikePost, interestedPost, cancelInterestedPost, goingPost, cancelGoingPost } from '../../actions/post-action';\nconst Home = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getHomeFeed());\n            props.dispatch(getAllPostSuggestions());\n            props.dispatch(getAllOrganizationSuggestions());\n            setLoading(false);\n        };\n\n        getInitialInfo(props.match.params.postId);\n    }, []);\n    const handleGotoPostDetails = (postType, postId) => {\n        props.history.push(postDetailsPage(postType, postId));\n    };\n    const handleGotoOrganizationDetails = (userId) => {\n        props.history.push(userDetailsPage('organization', userId));\n    };\n    const handleLikePost = (postId) => {\n        props.dispatch(likePost(postId));\n    };\n    const handleCancelLikePost = (postId) => {\n        props.dispatch(cancelLikePost(postId));\n    };\n\n    const handleInterestedPost = (postId) => {\n        console.log('🚀 ~ file: home.js ~ line 36 ~ handleInterestedPost ~ postId', postId);\n        props.dispatch(interestedPost(postId));\n    };\n    const handleCancelInterestedPost = (postId) => {\n        props.dispatch(cancelInterestedPost(postId));\n    };\n\n    const handleGoingPost = (postId) => {\n        props.dispatch(goingPost(postId));\n    };\n    const handleCancelGoingPost = (postId) => {\n        props.dispatch(cancelGoingPost(postId));\n    };\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <Row>\n                        <Col md=\"8\">\n                            <HomePostFeeds\n                                handleGotoPostDetails={handleGotoPostDetails}\n                                handleGotoOrganizationDetails={handleGotoOrganizationDetails}\n                                allPosts={props.homeFeedResponse.success ? props.homeFeedResponse.allPosts : []}\n                                handleLikePost={handleLikePost}\n                                handleCancelLikePost={handleCancelLikePost}\n                                handleInterestedPost={handleInterestedPost}\n                                handleCancelInterestedPost={handleCancelInterestedPost}\n                                handleGoingPost={handleGoingPost}\n                                handleCancelGoingPost={handleCancelGoingPost}\n                            />\n                        </Col>\n                        <Col md=\"4\">\n                            <HomeOrganizationSuggestions\n                                allOrganizations={props.OrganizationSuggestionResponse && props.OrganizationSuggestionResponse.success ? props.OrganizationSuggestionResponse.allOrganizations : []}\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const homeFeedResponse = state.Post.homeFeed;\n    const PostSuggestionResponse = state.Post.getAllSuggestions;\n    const OrganizationSuggestionResponse = state.Organization.getAllSuggestions;\n    return { homeFeedResponse, PostSuggestionResponse, OrganizationSuggestionResponse };\n};\nexport default connect(mapStateToProps, null)(Home);\n","import React from 'react';\nimport { Card, CardColumns } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst OrganizationListView = (props) => {\n    const allOrganizations = props.allOrganizations;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allOrganizations && allOrganizations.length > 0) {\n        return (\n            <CardColumns>\n                {allOrganizations.map((org, i) => {\n                    if (org && org.basicInfo && org.basicInfo.name) {\n                        return (\n                            <Card\n                                className=\"special-btn special-card\"\n                                key={i}\n                                onClick={() => {\n                                    props.gotoOrganizationDetails(org.userId);\n                                }}\n                            >\n                                <Card.Img\n                                    variant=\"top\"\n                                    src={org.basicInfo.profilePicture ? org.basicInfo.profilePicture : defaultOrganizationProfilePicture}\n                                    alt=\"No Image Found\"\n                                    className=\"organization-list-image\"\n                                />\n                                <Card.Body>\n                                    <Card.Text className=\"left-text bold-text\">{org.basicInfo.name}</Card.Text>\n                                    <Card.Text className=\"justify-text\">\n                                        <small>{descriptionRender(org.basicInfo.description)}</small>\n                                    </Card.Text>\n                                </Card.Body>\n                                {/* <Card.Footer></Card.Footer> */}\n                            </Card>\n                        );\n                    } else return <></>;\n                })}\n            </CardColumns>\n        );\n    } else return <h4>No Organizations Found</h4>;\n};\nexport default OrganizationListView;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass ImpactAreaDA {\n    get_all_global_impact_areas = () => {\n        return axios\n            .get(APIPaths.getAllGlobalImpactAreas)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_all_impact_areas_by_user = (userId) => {\n        return axios\n            .get(APIPaths.getAllImpactAreasByUser + `${userId}`)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new ImpactAreaDA();\n","import * as Types from '../constants/reducer-types';\nimport ImpactAreaDA from '../data_accesses/impact-area-da';\n\nexport const getAllGlobalImpactAreas = () => {\n    return {\n        type: Types.GET_ALL_GLOBAL_IMPACT_AREAS,\n        payload: ImpactAreaDA.get_all_global_impact_areas(),\n    };\n};\nexport const getAllImpactAreasByUser = (userId) => {\n    return {\n        type: Types.GET_ALL_IMPACT_AREAS_BY_USER,\n        payload: ImpactAreaDA.get_all_impact_areas_by_user(userId),\n    };\n};\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass OrganizationTypeDA {\n    get_all = () => {\n        return axios\n            .get(APIPaths.getAllOrganizationTypes)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new OrganizationTypeDA();\n","import * as Types from '../constants/reducer-types';\nimport OrganizationTypeDA from '../data_accesses/organization-type-da';\n\nexport const getAllOrganizationTypes = () => {\n    return {\n        type: Types.GET_ALL_ORGANIZATION_TYPES,\n        payload: OrganizationTypeDA.get_all(),\n    };\n};\n","import React from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nconst SearchMenu = (props) => {\n    const selected = props.selected;\n    return (\n        <Nav variant=\"pills\" activeKey={selected}>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"organization\" href=\"/search/organization\">\n                    Organization\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"event\" href=\"/search/event\">\n                    Community Activity\n                </Nav.Link>\n            </Nav.Item>\n        </Nav>\n    );\n};\nexport default SearchMenu;\n","import React from 'react';\nimport Select from 'react-select';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nconst SearchMenu = (props) => {\n    console.log(props);\n    return (\n        <>\n            <label>Organization Name</label>\n            <input className=\"form-control\" type=\"text\" value={props.filter.name} onChange={(e) => props.changeFilter('name', e.target.value)} />\n            <br />\n            <label>Impact Area</label>\n            <Select onChange={(value) => props.changeFilter('impactAreas', value)} isMulti={true} options={props.impactAreas} value={props.filter.impactAreas} />\n            <br />\n            <label>Organization Type</label>\n            <Select onChange={(value) => props.changeFilter('organizationTypes', value)} isMulti={true} options={props.organizationTypes} value={props.filter.organizationTypes} />\n            <br />\n            <label>Service Area</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.serviceArea}\n                onChange={(e) => {\n                    props.changeFilter('serviceArea', e.target.value);\n                }}\n            />\n            <br />\n            <label>Organization Address</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.address}\n                onChange={(e) => {\n                    props.changeFilter('address', e.target.value);\n                }}\n                placeholder=\"zip code/city/state/country\"\n            />\n            <br />\n            <label>Keyword</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.keyword}\n                onChange={(e) => {\n                    props.changeFilter('keyword', e.target.value);\n                }}\n            />\n            <br />\n            <br />\n            <Button\n                variant=\"outline-danger\"\n                size=\"sm\"\n                onClick={() => {\n                    props.resetFilter();\n                }}\n            >\n                Reset\n            </Button>\n            &nbsp;\n            <Button\n                size=\"sm\"\n                onClick={() => {\n                    props.handleOnApplyFilter();\n                }}\n            >\n                Search\n            </Button>\n            <div style={{ height: 25 }} />\n        </>\n    );\n};\nexport default SearchMenu;\n","export const countries = [\n    { name: 'Australia', code: 'Australia' },\n    { name: 'Canada', code: 'Canada' },\n    { name: 'Japan', code: 'Japan' },\n    { name: 'United States', code: 'UnitedStates' },\n    { name: 'United Kingdom', code: 'UnitedKingdom' },\n];\nexport const getCountryByCode = (code) => {\n    const country = countries.filter((country) => country.code === code);\n    if (country && country.length > 0) return country[0].name;\n};\nexport const states = {\n    Australia: [\n        { code: 'AustralianCapitalTerritory', name: 'Australian Capital Territory' },\n        { code: 'NewSouthWales', name: 'New South Wales' },\n        { code: 'NorthernTerritory', name: 'Northern Territory' },\n        { code: 'Queensland', name: 'Queensland' },\n        { code: 'SouthAustralia', name: 'South Australia' },\n        { code: 'Tasmania', name: 'Tasmania' },\n        { code: 'Victoria', name: 'Victoria' },\n        { code: 'WesternAustralia', name: 'Western Australia' },\n    ],\n    Canada: [\n        { code: 'AB', name: 'Alberta' },\n        { code: 'BC', name: 'British Columbia' },\n        { code: 'MB', name: 'Manitoba' },\n        { code: 'NB', name: 'New Brunswick' },\n        { code: 'NL', name: 'Newfoundland and Labrador' },\n        { code: 'NS', name: 'Nova Scotia' },\n        { code: 'NT', name: 'Northwest Territories' },\n        { code: 'NU', name: 'Nunavut' },\n        { code: 'ON', name: 'Ontario' },\n        { code: 'PE', name: 'Prince Edward Island' },\n        { code: 'QC', name: 'Quebec' },\n        { code: 'SK', name: 'Saskatchewan' },\n        { code: 'YT', name: 'Yukon' },\n    ],\n    Japan: [\n        { code: '01', name: 'Hokkaido' },\n        { code: '02', name: 'Aomori' },\n        { code: '03', name: 'Iwate' },\n        { code: '04', name: 'Miyagi' },\n        { code: '05', name: 'Akita' },\n        { code: '06', name: 'Yamagata' },\n        { code: '07', name: 'Fukushima' },\n        { code: '08', name: 'Ibaraki' },\n        { code: '09', name: 'Tochigi' },\n        { code: '10', name: 'Gunma' },\n        { code: '11', name: 'Saitama' },\n        { code: '12', name: 'Chiba' },\n        { code: '13', name: 'Tokyo' },\n        { code: '14', name: 'Kanagawa' },\n        { code: '15', name: 'Niigata' },\n        { code: '16', name: 'Toyama' },\n        { code: '17', name: 'Ishikawa' },\n        { code: '18', name: 'Fukui' },\n        { code: '19', name: 'Yamanashi' },\n        { code: '20', name: 'Nagano' },\n        { code: '21', name: 'Gifu' },\n        { code: '22', name: 'Shizuoka' },\n        { code: '23', name: 'Aichi' },\n        { code: '24', name: 'Mie' },\n        { code: '25', name: 'Shiga' },\n        { code: '26', name: 'Kyoto' },\n        { code: '27', name: 'Osaka' },\n        { code: '28', name: 'Hyogo' },\n        { code: '29', name: 'Nara' },\n        { code: '30', name: 'Wakayama' },\n        { code: '31', name: 'Tottori' },\n        { code: '32', name: 'Shimane' },\n        { code: '33', name: 'Okayama' },\n        { code: '34', name: 'Hiroshima' },\n        { code: '35', name: 'Yamaguchi' },\n        { code: '36', name: 'Tokushima' },\n        { code: '37', name: 'Kagawa' },\n        { code: '38', name: 'Ehime' },\n        { code: '39', name: 'Kochi' },\n        { code: '40', name: 'Fukuoka' },\n        { code: '41', name: 'Saga' },\n        { code: '42', name: 'Nagasaki' },\n        { code: '43', name: 'Kumamoto' },\n        { code: '44', name: 'Oita' },\n        { code: '45', name: 'Miyazaki' },\n        { code: '46', name: 'Kagoshima' },\n        { code: '47', name: 'Okinawa' },\n    ],\n    UnitedStates: [\n        {\n            name: 'Armed Forces Americas (except Canada)',\n            code: 'ArmedForcesAmericas',\n        },\n        { name: 'Armed Forces', code: 'ArmedForces' },\n        { name: 'Alaska', code: 'Alaska' },\n        { name: 'Alabama', code: 'Alabama' },\n        { name: 'Armed Forces Pacific', code: 'ArmedForcesPacific' },\n        { name: 'Arkansas', code: 'Arkansas' },\n        { name: 'American Samoa', code: 'AmericanSamoa' },\n        { name: 'Arizona', code: 'Arizona' },\n        { name: 'California', code: 'California' },\n        { name: 'Colorado', code: 'Colorado' },\n        { name: 'Connecticut', code: 'Connecticut' },\n        { name: 'District of Columbia', code: 'DistrictOfColumbia' },\n        { name: 'Delaware', code: 'Delaware' },\n        { name: 'Florida', code: 'Florida' },\n        { name: 'Georgia', code: 'Georgia' },\n        { name: 'Guam', code: 'Guam' },\n        { name: 'Hawaii', code: 'Hawaii' },\n        { name: 'Iowa', code: 'Iowa' },\n        { name: 'Idaho', code: 'Idaho' },\n        { name: 'Illinois', code: 'Illinois' },\n        { name: 'Indiana', code: 'Indiana' },\n        { name: 'Kansas', code: 'Kansas' },\n        { name: 'Kentucky', code: 'Kentucky' },\n        { name: 'Louisiana', code: 'Louisiana' },\n        { name: 'Massachusetts', code: 'Massachusetts' },\n        { name: 'Maryland', code: 'Maryland' },\n        { name: 'Maine', code: 'Maine' },\n        { name: 'Marshall Islands', code: 'MarshallIslands' },\n        { name: 'Michigan', code: 'Michigan' },\n        { name: 'Minnesota', code: 'Minnesota' },\n        { name: 'Missouri', code: 'Missouri' },\n        { name: 'Northern Mariana Islands', code: 'NorthernMarianaIslands' },\n        { name: 'Mississippi', code: 'Mississippi' },\n        { name: 'Montana', code: 'Montana' },\n        { name: 'North Carolina', code: 'NorthCarolina' },\n        { name: 'North Dakota', code: 'NorthDakota' },\n        { name: 'Nebraska', code: 'Nebraska' },\n        { name: 'New Hampshire', code: 'NewHampshire' },\n        { name: 'New Jersey', code: 'NewJersey' },\n        { name: 'New Mexico', code: 'NewMexico' },\n        { name: 'Nevada', code: 'Nevada' },\n        { name: 'New York', code: 'NewYork' },\n        { name: 'Ohio', code: 'Ohio' },\n        { name: 'Oklahoma', code: 'Oklahoma' },\n        { name: 'Oregon', code: 'Oregon' },\n        { name: 'Pennsylvania', code: 'Pennsylvania' },\n        { name: 'Puerto Rico', code: 'PuertoRico' },\n        { name: 'Palau', code: 'Palau' },\n        { name: 'Rhode Island', code: 'RhodeIsland' },\n        { name: 'South Carolina', code: 'SouthCarolina' },\n        { name: 'South Dakota', code: 'SouthDakota' },\n        { name: 'Tennessee', code: 'Tennessee' },\n        { name: 'Texas', code: 'Texas' },\n        { name: 'Utah', code: 'Utah' },\n        { name: 'Virginia', code: 'Virginia' },\n        { name: 'Virgin Islands', code: 'VirginIslands' },\n        { name: 'Vermont', code: 'Vermont' },\n        { name: 'Washington', code: 'Washington' },\n        { name: 'Wisconsin', code: 'Wisconsin' },\n        { name: 'West Virginia', code: 'WestVirginia' },\n        { name: 'Wyoming', code: 'Wyoming' },\n    ],\n};\nexport const getStateByCountryAndCode = (countyCode, code) => {\n    let states_ = states[countyCode];\n    let state = states_.filter((state) => state.code === code);\n    if (state && state.length > 0) return state[0].name;\n};\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { Button, Badge, Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllOrganizationOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allOrganizations;\n    console.log('🚀 ~ file: organization-map-view.js ~ line 27 ~ AllOrganizationOnMap ~ markers', markers);\n\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n        }\n        return fullAddress;\n    };\n    const pairsRender = (label, tags) => {\n        return (\n            <label>\n                {label}{' '}\n                {tags.map((t, i) => {\n                    return i === 0 ? tags.label : ', ' + tags.label;\n                })}\n            </label>\n        );\n    };\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.basicInfo.address && marker.basicInfo.address.latitude && marker.basicInfo.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.basicInfo.address.latitude,\n                                    lng: marker.basicInfo.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.basicInfo.address.latitude,\n                            lng: selected.basicInfo.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <Container>\n                            <Row>\n                                <Col>\n                                    <h6>{selected.basicInfo.name}</h6>\n                                </Col>\n                            </Row>\n                            {selected.organizationTypes && selected.organizationTypes.length > 0 && (\n                                <Row>\n                                    <Col>\n                                        {selected.organizationTypes.map((type, i) => {\n                                            return (\n                                                <Badge variant=\"primary\" key={i} className=\"organization-type-badge\">\n                                                    {type.label}\n                                                </Badge>\n                                            );\n                                            // return i !== 0 ? ', ' + type.label : type.label;\n                                        })}\n                                    </Col>\n                                </Row>\n                            )}\n                            {selected.impactAreas && selected.impactAreas.length > 0 && (\n                                <Row>\n                                    <Col>\n                                        {selected.impactAreas.map((type, i) => {\n                                            return (\n                                                <Badge key={i} className=\"impact-area-badge\">\n                                                    {type.label}\n                                                </Badge>\n                                            );\n                                            // return i !== 0 ? ', ' + type.label : type.label;\n                                        })}\n                                    </Col>\n                                </Row>\n                            )}\n                            <br />\n                            {selected.basicInfo.address && <AddressRender address={selected.basicInfo.address} />}\n                            {/* <Row>\n                                {/* <Col sm={3}>\n                                    <label>Address</label>\n                                </Col> */}\n                            {/*  <Col>\n                                    \n                                </Col>\n                            </Row> */}\n\n                            {/* {pairsRender('Organization Type', selected.basicInfo.organizationTypes)} */}\n                            <br />\n                            <Button\n                                size=\"sm\"\n                                variant=\"outline-primary\"\n                                onClick={() => {\n                                    props.gotoOrganizationDetails(selected.userId);\n                                }}\n                            >\n                                Go to Page\n                            </Button>\n                        </Container>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nconst AddressRender = ({ address }) => {\n    if (address) {\n        let line1 = '',\n            line2 = '';\n        if (address.street1) line1 += address.street1 + ', ';\n        if (address.street2) line1 += address.street2 + ', ';\n        if (address.city) line2 += address.city + ', ';\n        if (address.code) line2 += address.code + ', ';\n        if (address.state) line2 += getStateByCountryAndCode(address.country, address.state);\n        return (\n            <>\n                <Row>\n                    <Col>{line1} </Col>\n                </Row>\n                <Row>\n                    <Col>{line2} </Col>\n                </Row>\n            </>\n        );\n    } else return <></>;\n};\nexport default AllOrganizationOnMap;\n","export const defaultCurrentLocation = {\n    latitude: 39.953194,\n    longitude: -75.163345,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport OrganizationListView from '../../components/organization/organization-list-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllOrganizationsByFilter } from '../../actions/organization-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport SearchMenu from '../../components/search/search-menu';\nimport FilterOrganization from '../../components/search/filter-organization';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport OrganizationMapView from '../../components/organization/organization-map-view';\nimport Pagination from 'react-js-pagination';\nimport { defaultCurrentLocation } from '../../constants/default-user-information';\n\nconst SearchOrganization = (props) => {\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [filter, setFilter] = useState({\n        name: '',\n        impactAreas: [],\n        organizationTypes: [],\n        serviceArea: '',\n        address: '',\n        keyword: '',\n        keywords: [],\n    });\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(position);\n            if (position) {\n                const coords = position.coords;\n                setCurrentLocation({\n                    latitude: coords.latitude,\n                    longitude: coords.longitude,\n                });\n            }\n        });\n    }, []);\n    const resetFilter = () => {\n        setFilter({\n            name: '',\n            impactAreas: [],\n            organizationTypes: [],\n            serviceArea: '',\n            address: '',\n            keyword: '',\n            keywords: [],\n        });\n    };\n    const changeFilter = (key, value) => {\n        console.log('🚀 ~ file: search-organization.js ~ line 53 ~ changeFilter ~ key, value', key, value);\n        let filter_ = filter;\n        filter[key] = value;\n        console.log(filter_);\n        setFilter({ ...filter_ });\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllOrganizationsByFilter(filter));\n        setLoading(false);\n        setActivePage(1);\n        console.log('FFF', filter);\n    };\n    const gotoOrganizationDetails = (userId) => {\n        props.history.push(`/organization/details/${userId}`);\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getAllGlobalImpactAreas());\n            props.dispatch(getAllOrganizationTypes());\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col lg={4}>\n                        <SearchMenu selected=\"organization\" />\n                        <hr />\n                        <FilterOrganization\n                            changeFilter={changeFilter}\n                            resetFilter={resetFilter}\n                            handleOnApplyFilter={handleOnApplyFilter}\n                            filter={filter}\n                            organizationTypes={props.getOrganizationTypeResponse?.success ? props.getOrganizationTypeResponse.organizationTypes : []}\n                            impactAreas={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []}\n                        />\n                    </Col>\n                    <Col lg={8}>\n                        <Nav\n                            variant=\"pills\"\n                            activeKey={viewType}\n                            onSelect={(eventKey) => {\n                                setViewType(eventKey);\n                            }}\n                            size=\"sm\"\n                        >\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"list\" title=\"list\">\n                                    List\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"map\" title=\"map\">\n                                    Map\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <hr />\n                        {viewType === 'list' && (\n                            <>\n                                <Pagination\n                                    itemClass=\"page-item\"\n                                    linkClass=\"page-link\"\n                                    activePage={activePage}\n                                    itemsCountPerPage={30}\n                                    totalItemsCount={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations.length : 0}\n                                    pageRangeDisplayed={5}\n                                    onChange={(page) => {\n                                        setActivePage(page);\n                                    }}\n                                />\n                                <OrganizationListView\n                                    allOrganizations={\n                                        props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations.slice((activePage - 1) * 30, activePage * 30 - 1) : []\n                                    }\n                                    gotoOrganizationDetails={gotoOrganizationDetails}\n                                />\n                            </>\n                        )}\n                        {viewType === 'map' && (\n                            <OrganizationMapView\n                                allOrganizations={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations : []}\n                                gotoOrganizationDetails={gotoOrganizationDetails}\n                                zoom={8}\n                                currentLocation={currentLocation}\n                            />\n                        )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getOrganizationTypeResponse = state.OrganizationType.getAllOrganizationTypes;\n    const getAllOrganizationsResponse = state.Organization.getAllOrganizations;\n    return {\n        getImpactAreaResponse,\n        getAllOrganizationsResponse,\n        getOrganizationTypeResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchOrganization);\n","export const allPostTypes = [\n    { id: 1, value: 'event', label: 'Event' },\n    { id: 2, value: 'project', label: 'Project' },\n    { id: 3, value: 'general', label: 'General Post' },\n    { id: 4, value: 'volunteering', label: 'Volunteering' },\n    { id: 5, value: 'in-kind', label: 'In-Kind' },\n    { id: 6, value: 'advocacy', label: 'Advocacy' },\n    { id: 7, value: '', label: '' },\n];\nexport const allSearchablePostTypes = [\n    { id: 1, value: 'event', label: 'Event' },\n    { id: 2, value: 'project', label: 'Project' },\n    { id: 3, value: 'volunteering', label: 'Volunteering' },\n    { id: 4, value: 'advocacy', label: 'Advocacy' },\n];\nexport const getPostTypeByValue = (value) => {\n    return allPostTypes.filter((type) => type.value === value);\n};\nconst fields = {\n    title: 'title',\n    description: 'description',\n    images: 'images',\n    impactAreas: 'impactAreas',\n    skills: 'skills',\n    startDateTime: 'startDateTime',\n    endDateTime: 'endDateTime',\n    address: 'address',\n    expectedRequiredHours: 'expectedRequiredHours',\n    topNeed: 'topNeed',\n    petitionLink: 'petitionLink',\n    isActive: 'isActive',\n    requiredItems: 'requiredItems',\n    keywords: 'keywords',\n};\nexport const postTypeFields = {\n    event: { title: 1, description: 1, images: 1, impactAreas: 1, startDateTime: 1, endDateTime: 1, address: 1, isActive: 1, keywords: 1 },\n    project: { title: 1, description: 1, images: 1, impactAreas: 1, skills: 1, expectedRequiredHours: 1, startDateTime: 1, endDateTime: 1, address: 1, isActive: 1, topNeed: 1, keywords: 1 },\n    general: { title: 1, description: 1, images: 1, impactAreas: 1, isActive: 1, keywords: 1 },\n    volunteering: { title: 1, description: 1, images: 1, impactAreas: 1, skills: 1, startDateTime: 1, endDateTime: 1, address: 1, isActive: 1, topNeed: 1, keywords: 1 },\n    'in-kind': { title: 1, description: 1, images: 1, impactAreas: 1, requiredItems: 1, isActive: 1, topNeed: 1, keywords: 1 },\n    advocacy: { title: 1, description: 1, images: 1, petitionLink: 1, impactAreas: 1, topNeed: 1, startDateTime: 1, endDateTime: 1, address: 1, isActive: 1, keywords: 1 },\n};\nexport const allPostTypeValues = ['event', 'project', 'general', 'volunteering', 'in-kind', 'advocacy'];\nexport const allPostTypeLabels = ['Event', 'Project', 'General', 'Volunteering', 'In-Kind', 'Advocacy'];\n","import React from 'react';\nimport { Row, Col, Badge, Image } from 'react-bootstrap';\nimport { ImCheckmark, ImCross } from 'react-icons/im';\nexport const CheckIconRender = () => {\n    return (\n        <h4>\n            <Badge variant=\"success\">\n                <ImCheckmark />\n            </Badge>\n        </h4>\n    );\n};\nexport const CrossIconRender = () => {\n    return (\n        <h4>\n            <Badge variant=\"danger\">\n                <ImCross />\n            </Badge>\n        </h4>\n    );\n};\n","import React from 'react';\r\nimport { Row, Col, Badge, Image, Table } from 'react-bootstrap';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { CheckIconRender, CrossIconRender } from './icon-render';\r\nimport moment from 'moment';\r\nexport const DetailsInfoRowRender = ({ label, value }) => {\r\n    if (value) {\r\n        return (\r\n            <Row className=\"detailsRow\">\r\n                <Col sm={3} className=\"detailsLabel\">\r\n                    <label>{label}</label>\r\n                </Col>\r\n\r\n                <Col className=\"detailsValue\">\r\n                    <span>{value}</span>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <Row />;\r\n};\r\n\r\nexport const TagWithLabelRender = (label, tags) => {\r\n    if (label && tags && tags.length > 0) {\r\n        return (\r\n            <Row>\r\n                {label && (\r\n                    <Col md=\"3\">\r\n                        <b>{label}</b>\r\n                    </Col>\r\n                )}\r\n                <Col md=\"9\">\r\n                    {tags.map((tag, i) => {\r\n                        if (tag)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className={'badge-single'}>\r\n                                    {tag.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    if (tags && tags.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    {tags.map((tag, i) => {\r\n                        if (tag)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className={'badge-single'}>\r\n                                    {tag.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const ImpactAreasRender = (label, areas) => {\r\n    if (label && areas && areas.length > 0) {\r\n        return (\r\n            <Row>\r\n                {label && (\r\n                    <Col md=\"3\">\r\n                        <b>{label}</b>\r\n                    </Col>\r\n                )}\r\n                <Col md=\"9\">\r\n                    {areas.map((area, i) => {\r\n                        if (area)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className={'badge-single'}>\r\n                                    {area.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    if (areas && areas.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    {areas.map((area, i) => {\r\n                        if (area)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className=\"impact-area-badge  badge-single-small\">\r\n                                    {area.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const DescriptionRender = (label, value) => {\r\n    const valueRender = () => {\r\n        return (\r\n            <>\r\n                {value.split('\\n').map((para, i) => {\r\n                    return (\r\n                        <p className=\"justify-text\" key={i}>\r\n                            {para}\r\n                        </p>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    };\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">{label}</Col>\r\n                <Col sm=\"9\">{valueRender()}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{valueRender()}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const ImageAndDescriptionRender = (images) => {\r\n    if (images && images.length > 0) {\r\n        return (\r\n            <>\r\n                {images.map((image, i) => {\r\n                    return (\r\n                        <Row key={i} className=\"image-description-box\">\r\n                            <Col sm=\"3\">\r\n                                <Image width=\"100%\" src={image.path} thumbnail />\r\n                            </Col>\r\n                            <Col sm=\"9\">{DescriptionRender('', image.description)}</Col>\r\n                        </Row>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const InfoRender = (label, value) => {\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">{value}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{value}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const LinkRender = (label, link) => {\r\n    if (label && link) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">\r\n                    <a href={link} className=\"btn-outline-primary btn btn-sm\" target=\"_blank\">\r\n                        <FiExternalLink />\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else if (link) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <a href={link} target=\"_blank\">\r\n                        <FiExternalLink />\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const BooleanRender = (label, value) => {\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">{value ? <CheckIconRender /> : <CrossIconRender />}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{value ? <CheckIconRender /> : <CrossIconRender />}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const RequiredItemsRender = (items) => {\r\n    if (items && items.length > 0) {\r\n        return (\r\n            <>\r\n                <h6>Required Items</h6>\r\n                <Table striped bordered>\r\n                    <thead variant=\"dark\">\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Requirement</th>\r\n                            <th>Needed By</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items.map((item, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.requirement}</td>\r\n                                    <td>{moment(item.neededBy).format('LLLL')}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </>\r\n        );\r\n    } else return <label>No required items found!</label>;\r\n};\r\nexport const KeywordsRender = (label, keywords) => {\r\n    return (\r\n        <Row>\r\n            <Col md=\"3\">\r\n                <b>{label}</b>\r\n            </Col>\r\n            <Col md=\"9\">\r\n                {keywords.map((key, i) => {\r\n                    return (\r\n                        <Badge variant=\"primary\" key={i} className=\"badge-single\">\r\n                            {key}\r\n                        </Badge>\r\n                    );\r\n                })}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n","import React from 'react';\nimport { Card, CardColumns, Row, Col, Image, Badge } from 'react-bootstrap';\nimport { defaultEventPicture } from '../../constants/default-images';\nimport moment from 'moment';\nimport { getPostTypeByValue } from '../../constants/post-types';\nimport { ImpactAreasRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nconst EventListView = (props) => {\n    const allPosts = props.allPosts;\n    console.log('🚀 ~ file: event-card-view.js ~ line 7 ~ EventListView ~ allPosts', allPosts);\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allPosts && allPosts.length > 0) {\n        return (\n            <CardColumns md=\"6\">\n                {allPosts.map((event, i) => {\n                    if (event && event._id) {\n                        return (\n                            <Card\n                                className=\"special-btn special-card\"\n                                key={i}\n                                onClick={() => {\n                                    props.gotoPostDetails(event.postType, event._id);\n                                }}\n                            >\n                                <div className=\"home-post-image-dark\">\n                                    {/* <Image src={event.images && event.images.length > 0 ? event.images[0].path : defaultEventPicture} style={{ width: '100%', height: 'auto' }} /> */}\n                                    <Card.Img variant=\"top\" src={event.images && event.images.length > 0 ? event.images[0].path : defaultEventPicture} alt=\"No Image Found\" />\n                                    <Badge variant=\"primary\" className=\"image-text-top-left\">\n                                        {getPostTypeByValue(event.postType)[0].label}\n                                    </Badge>\n                                    {/* <div className=\"image-text-top-left\">{getPostTypeByValue(event.postType)[0].label}</div> */}\n                                </div>\n\n                                <Card.Body>\n                                    <Card.Title className=\"center-aligned\">{event.title}</Card.Title>\n                                    <Card.Text className=\"justify-text\">\n                                        <h6>{event.organizationName[0]}</h6>\n                                        <small>{descriptionRender(event.description)}</small>\n                                        <br />\n                                        <br />\n                                        {ImpactAreasRender('', event.impactAreaNames)}\n                                        <br />\n                                        {event.address && InfoRender('', event.address.fullAddress)}\n                                        <br />\n                                        <small>\n                                            <Row style={{ marginBottom: 5 }}>\n                                                <Col sm={3}>FROM</Col>\n                                                <Col sm={9} className=\"right-align\">\n                                                    <b>{moment(event.startDateTime).format('MM/DD/y hh:mm:A')}</b>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col sm={3}>TO</Col>\n                                                <Col sm={9} className=\"right-align\">\n                                                    <b>{moment(event.endDateTime).format('MM/DD/yy hh:mm:A')}</b>\n                                                </Col>\n                                            </Row>\n                                        </small>\n                                    </Card.Text>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <LikeButtonRender /> &nbsp;\n                                    <GoingButtonRender />\n                                </Card.Footer>\n                            </Card>\n                        );\n                    } else return <></>;\n                })}\n            </CardColumns>\n        );\n    } else return <h4>No Posts Found</h4>;\n};\nexport default EventListView;\n","import React from 'react';\nimport { Badge } from 'react-bootstrap';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\nimport { getPostTypeByValue } from '../../constants/post-types';\nimport { Link } from 'react-router-dom';\nimport { ImpactAreasRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst PostRender = ({ post }) => {\n    return (\n        <div className=\"post-map-box\">\n            <h6>\n                <Badge variant=\"primary\">{getPostTypeByValue(post.postType)[0].label}</Badge>\n            </h6>\n            <Link to={RoutePath.postDetailsPage(post.postType, post._id)}>\n                <h5 style={{ color: 'cadetblue' }}>{post.title}</h5>\n            </Link>\n            {post.organizationName && post.organizationName.length > 0 && (\n                <Link to={RoutePath.userDetailsPage('organization', post.creatorId)}>\n                    <h6 style={{ color: 'cadetblue' }}>{post.organizationName[0]}</h6>\n                </Link>\n            )}\n            {ImpactAreasRender('', post.impactAreaNames)}\n            {InfoRender('', post.address.fullAddress)}\n            <hr />\n            <LikeButtonRender /> &nbsp;\n            <GoingButtonRender />\n        </div>\n    );\n};\nconst AllPostOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allPosts;\n    console.log('🚀 ~ file: post-map-view.js ~ line 27 ~ AllPostOnMap ~ markers', markers);\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <PostRender post={selected} />\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllPostOnMap;\n","import React from 'react';\nimport Select from 'react-select';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport { allSearchablePostTypes } from '../../constants/post-types';\nimport DatePicker from 'react-datepicker';\nconst EventFilter = (props) => {\n    console.log(props);\n    return (\n        <>\n            <label>Title</label>\n            <input className=\"form-control\" type=\"text\" value={props.filter.title} onChange={(e) => props.changeFilter('title', e.target.value)} />\n            <br />\n            <label>Post Type</label>\n            <Select onChange={(value) => props.changeFilter('postTypes', value)} isMulti={true} options={allSearchablePostTypes} value={props.filter.postTypes} />\n            <br />\n            <label>Impact Area</label>\n            <Select onChange={(value) => props.changeFilter('impactAreas', value)} isMulti={true} options={props.impactAreas} value={props.filter.impactAreas} />\n            <br />\n            <label>Start Date</label>\n            <DatePicker className=\"form-control custom-date-picker\" onChange={(date) => props.changeFilter('startDate', date)} selected={props.filter.startDate} dateFormat=\"MM/dd/yyyy\" />\n            <label>End Date</label>\n            <DatePicker className=\"form-control custom-date-picker\" onChange={(date) => props.changeFilter('endDate', date)} selected={props.filter.endDate} dateFormat=\"MM/dd/yyyy\" />\n            <br />\n            <br />\n            <label>Address</label>\n            <input className=\"form-control\" type=\"text\" value={props.filter.fullAddress} onChange={(e) => props.changeFilter('fullAddress', e.target.value)} />\n            <br />\n            <label>Keyword</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.keyword}\n                onChange={(e) => {\n                    props.changeFilter('keyword', e.target.value);\n                }}\n            />\n            <div style={{ height: 50 }} />\n            <Button\n                variant=\"outline-danger\"\n                size=\"sm\"\n                onClick={() => {\n                    props.resetFilter();\n                }}\n            >\n                Reset\n            </Button>\n            &nbsp;\n            <Button\n                size=\"sm\"\n                onClick={() => {\n                    props.handleOnApplyFilter();\n                }}\n            >\n                Search\n            </Button>\n            <div style={{ height: 25 }} />\n        </>\n    );\n};\nexport default EventFilter;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport EventListView from '../../components/event/event-card-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllPostsByFilter } from '../../actions/post-action';\nimport EventMapView from '../../components/event/event-map-view';\nimport SearchMenu from '../../components/search/search-menu';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport Select from 'react-select';\nimport Pagination from 'react-js-pagination';\nimport { defaultCurrentLocation } from '../../constants/default-user-information';\nimport FilterEvent from '../../components/search/filter-event';\nimport { allSearchablePostTypes } from '../../constants/post-types';\nimport { postDetailsPage } from '../../constants/route-paths';\nconst SearchEvent = (props) => {\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [filter, setFilter] = useState({\n        title: '',\n        impactAreas: [],\n        postTypes: allSearchablePostTypes,\n        startDate: new Date(),\n        endDate: new Date(),\n        fullAddress: '',\n        keyword: '',\n    });\n    const resetFilter = () => {\n        setFilter({\n            title: '',\n            impactAreas: [],\n            postTypes: allSearchablePostTypes,\n            startDate: new Date(),\n            endDate: new Date(),\n            fullAddress: '',\n            keyword: '',\n        });\n    };\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(position);\n            if (position) {\n                const coords = position.coords;\n                setCurrentLocation({\n                    latitude: coords.latitude,\n                    longitude: coords.longitude,\n                });\n            }\n        });\n    }, []);\n    const changeFilter = (key, value) => {\n        console.log('🚀 ~ file: search-event.js ~ line 49 ~ changeFilter ~ key, value', key, value);\n        let filter_ = filter;\n        filter[key] = value;\n\n        setFilter({ ...filter_ });\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllPostsByFilter(filter));\n        setLoading(false);\n        setActivePage(1);\n    };\n    const gotoPostDetails = (postType, postId) => {\n        props.history.push(postDetailsPage(postType, postId));\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getAllGlobalImpactAreas());\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    if (loading) return <LoadingAnim />;\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col lg={4}>\n                    <SearchMenu selected=\"event\" />\n                    <hr />\n                    <FilterEvent\n                        changeFilter={changeFilter}\n                        resetFilter={resetFilter}\n                        handleOnApplyFilter={handleOnApplyFilter}\n                        filter={filter}\n                        organizationTypes={props.getOrganizationTypeResponse?.success ? props.getOrganizationTypeResponse.organizationTypes : []}\n                        impactAreas={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []}\n                    />\n                </Col>\n                <Col lg={8}>\n                    <Nav\n                        variant=\"pills\"\n                        activeKey={viewType}\n                        onSelect={(eventKey) => {\n                            setViewType(eventKey);\n                        }}\n                        size=\"sm\"\n                    >\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"list\" title=\"list\">\n                                List\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"map\" title=\"map\">\n                                Map\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <hr />\n                    {viewType === 'list' && (\n                        <>\n                            <Pagination\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                                activePage={activePage}\n                                itemsCountPerPage={30}\n                                // totalItemsCount={props.getAllEventsResponse.success ? props.getAllEventsResponse.allEvents.length : 0}\n                                totalItemsCount={props.getAllPostsResponse.success ? props.getAllPostsResponse.allPosts.length : 0}\n                                pageRangeDisplayed={5}\n                                onChange={(page) => {\n                                    setActivePage(page);\n                                }}\n                            />\n                            <EventListView\n                                // allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.allEvents.slice((activePage - 1) * 30, activePage * 30 - 1) : []}\n                                allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.allPosts.slice((activePage - 1) * 30, activePage * 30 - 1) : []}\n                                gotoPostDetails={gotoPostDetails}\n                            />\n                        </>\n                    )}\n                    {viewType === 'map' && (\n                        <EventMapView\n                            // allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.allEvents.slice((activePage - 1) * 30, activePage * 30 - 1) : []}\n                            allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.allPosts.slice((activePage - 1) * 30, activePage * 30 - 1) : []}\n                            zoom={6}\n                            currentLocation={currentLocation}\n                        />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    // const getAllEventsResponse = state.Event.getAllEvents;\n    const getAllPostsResponse = state.Post.getAllPosts;\n    return {\n        getImpactAreaResponse,\n        // getAllEventsResponse,\n        getAllPostsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchEvent);\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass IndividualDA {\n    get_basic_info = (userId) => {\n        return axios\n            .get(APIPaths.getIndividualBasicInfo(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_basic_info = (userId, basicInfo) => {\n        return axios\n            .put(APIPaths.setIndividualBasicInfo(userId), basicInfo, APIPaths.apiConfig())\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_involvement = (userId) => {\n        return axios\n            .get(APIPaths.getIndividualInvolvement(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_involvement = (userId, involvement) => {\n        return axios\n            .put(APIPaths.setIndividualInvolvement(userId), involvement, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_privacy = (userId) => {\n        return axios\n            .get(APIPaths.getIndividualPrivacy(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_privacy = (userId, privacy) => {\n        return axios\n            .put(APIPaths.setIndividualPrivacy(userId), privacy, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_public_info = (userId) => {\n        return axios\n            .get(APIPaths.getIndividualPublicInfo(userId))\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_list = () => {\n        return axios\n            .get(APIPaths.getIndividualList)\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new IndividualDA();\n","export const allGenders = [\n    { id: 1, value: 'female', label: 'Female' },\n    { id: 2, value: 'male', label: 'Male' },\n    { id: 3, value: 'transgender-female', label: 'Transgender Female' },\n    { id: 4, value: 'transgender-male', label: 'Transgender Male' },\n    { id: 3, value: 'transgender-non-conforming', label: 'Gender Non-Conforming' },\n    { id: 4, value: 'other', label: 'Other' },\n];\n\nexport const getGenderByValue = (value) => {\n    const genders = allGenders.filter((gender) => gender.value === value);\n    if (genders && genders.length > 0) return genders[0].label;\n    else return 'Not Found';\n};\n","export const allRaces = [\n    { id: 1, value: 'american-indian-alaska-native', label: 'American Indian/Alaska Native' },\n    { id: 2, value: 'asian', label: 'Asian' },\n    { id: 3, value: 'black', label: 'Black' },\n    { id: 4, value: 'hispanic', label: 'Hispanic' },\n    { id: 5, value: 'middle-eastern-north-african', label: 'Middle Eastern/North African' },\n    { id: 6, value: 'native-hawaiian-other-pacific-islander', label: 'Native Hawaiian/Other Pacific Islander' },\n    { id: 7, value: 'white', label: 'White' },\n    { id: 8, value: 'other', label: 'Other' },\n];\nexport const getRaceByValue = (value) => {\n    const name = 'Name not found!';\n    for (let race = 0; race < allRaces.length; race++) {\n        if (allRaces[race].value === value) return allRaces[race].name;\n    }\n    return name;\n};\n\nexport const getRacesByValues = (values) => {\n    return allRaces.filter((race) => values.includes(race.value));\n};\n","export const individualHeaders = {\n    1: { stepNo: 1, percent: 20, header: 'Sign Up On CascAid' },\n    2: { stepNo: 2, percent: 40, header: 'Tell us about yourself' },\n    3: { stepNo: 3, percent: 60, header: 'Community and Impact Interest' },\n    4: { stepNo: 4, percent: 80, header: 'Adjust any privacy settings if needed' },\n    5: { stepNo: 5, percent: 100, header: 'Tell us about yourself' },\n};\nexport const organizationHeaders = {\n    1: { stepNo: 1, percent: 20, header: 'Sign Up On CascAid' },\n    2: { stepNo: 2, percent: 40, header: 'Tell us about yourself' },\n    3: { stepNo: 3, percent: 60, header: 'Tell Us About Your Organization' },\n    4: { stepNo: 4, percent: 80, header: 'Add any internal link if available' },\n    5: { stepNo: 5, percent: 100, header: 'Tell us about yourself' },\n};\n","import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, MultiSelectRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport { information_asking_reason } from '../../constants/misc';\nimport { Container, Row, Col, ProgressBar, Button, Modal, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { allGenders } from '../../constants/genders';\nimport { allRaces } from '../../constants/races';\nimport { individualHeaders } from '../../constants/step-headers';\nimport { date } from '../../actions/validate';\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const editMode = props.editMode;\n    const [infoModal, setInfoModal] = useState(false);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country ? props.stateAndCountry.country : 'US');\n    // const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Modal\n                show={infoModal}\n                onHide={() => {\n                    setInfoModal(false);\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Why do we ask for this information</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p className=\"justify-text\">{information_asking_reason}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => {\n                            setInfoModal(false);\n                        }}\n                    >\n                        I understand\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        {editMode ? (\n                            <h4>Basic Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {individualHeaders[2].stepNo} of 5</p>\n                                <ProgressBar now={individualHeaders[2].percent} />\n                                <br />\n                                <h4>{individualHeaders[2].header}</h4>\n                                <small\n                                    className=\"small-simple-btn\"\n                                    onClick={() => {\n                                        setInfoModal(true);\n                                    }}\n                                >\n                                    Why do we ask for this information?\n                                </small>\n                                <div style={{ height: 20 }} />\n                            </div>\n                        )}\n                        <Row>\n                            <Col>\n                                <Field name=\"firstName\" type=\"text\" component={InputRender} label=\"First Name\" placeholder=\"John\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"lastName\" type=\"text\" component={InputRender} label=\"Last Name\" placeholder=\"Doe\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"6\">\n                                <Field name=\"dateOfBirth\" type=\"text\" component={DatePickerRender} label=\"Date Of Birth\" zIndex={4000} validate={[date]} />\n                            </Col>\n                            <Col sm=\"6\">\n                                <Field name=\"kids\" type=\"text\" component={SelectRender} label=\"Kids\" col1={4} col2={8}>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"4+\">4+</option>\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"gender\" type=\"text\" component={SelectRender} label=\"Gender\" col1={4} col2={8}>\n                                    {allGenders.map((gender, i) => {\n                                        return (\n                                            <option key={i} value={gender.value}>\n                                                {gender.label}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"races\" component={MultiSelectRender} label=\"Race\" col1={2} col2={10} options={allRaces} zIndex={3000} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"languages\" component={CreatableMultiSelectRender} label=\"Language Fluency\" col1={2} col2={10} options={props.allLanguages} zIndex={2000} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skills\" col1={2} col2={10} options={props.allSkills} zIndex={1000} />\n                            </Col>\n                        </Row>\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","export const information_asking_reason = `We want to be able to connect you to the organizations and people that will best help you get the most out of your community involvement. This information helps those organizations find you efficiently. Populate only with what you are comfortable with`;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass LanguageDA {\n    get_all_global_languages = () => {\n        return axios\n            .get(APIPaths.getAllGlobalLanguages)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_all_languages_by_user = (userId) => {\n        return axios\n            .get(APIPaths.getAllLanguagesByUser + `${userId}`)\n            .then((response) => {\n                console.log('🚀 ~ file: language-da.js ~ line 16 ~ LanguageDA ~ .then ~ response', response);\n\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new LanguageDA();\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass SkillDA {\n    get_all_global_skills = () => {\n        return axios\n            .get(APIPaths.getAllGlobalSkills)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_all_skills_by_user = (userId) => {\n        return axios\n            .get(APIPaths.getAllSkillsByUser + `${userId}`)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new SkillDA();\n","import * as Types from '../constants/reducer-types';\nimport SkillDA from '../data_accesses/skill-da';\n\nexport const getAllGlobalSkills = () => {\n    return {\n        type: Types.GET_ALL_GLOBAL_SKILLS,\n        payload: SkillDA.get_all_global_skills(),\n    };\n};\nexport const getAllSkillsByUser = (userId) => {\n    return {\n        type: Types.GET_ALL_SKILLS_BY_USER,\n        payload: SkillDA.get_all_skills_by_user(userId),\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/individual-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualBasicInfoForm from '../../components/individual/individual-basic-info-form';\nimport { individualCompleteInvolvementPage } from '../../constants/route-paths';\n// import { getLanguagesByValues } from '../../constants/languages';\nimport { getAllLanguagesByUser } from '../../actions/language-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { getRacesByValues } from '../../constants/races';\n\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: '',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllLanguagesByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            props.dispatch(getBasicInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompleteInvolvementPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            races: values.races && values.races.length > 0 ? values.races.map((race) => race.value) : [],\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualBasicInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                allLanguages={props.getLanguageResponse.success ? props.getLanguageResponse.languages : []}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log('ST', state);\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getLanguageResponse = state.Language.getLanguagesByUser;\n    const getBasicInfoResponse = state.Individual.getBasicInfo;\n    const setBasicInfoResponse = state.Individual.setBasicInfo;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues) {\n            if (initialValues.races && initialValues.races.length > 0 && typeof initialValues.races[0] === 'string') initialValues.races = getRacesByValues(initialValues.races);\n            if (initialValues.address && !initialValues.address.country) {\n                initialValues.address.country = 'US';\n            } else if (!initialValues.address) {\n                initialValues.address = {\n                    country: 'US',\n                };\n            }\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getSkillResponse,\n        getLanguageResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","import * as Types from '../constants/reducer-types';\nimport LanguageDA from '../data_accesses/language-da';\n\nexport const getAllGlobalLanguages = () => {\n    return {\n        type: Types.GET_ALL_GLOBAL_LANGUAGES,\n        payload: LanguageDA.get_all_global_languages(),\n    };\n};\nexport const getAllLanguagesByUser = (userId) => {\n    return {\n        type: Types.GET_ALL_LANGUAGES_BY_USER,\n        payload: LanguageDA.get_all_languages_by_user(userId),\n    };\n};\n","import * as Types from '../constants/reducer-types';\nimport IndividualDA from '../data_accesses/individual-da';\n\nexport const getBasicInfo = (userId) => {\n    return {\n        type: Types.GET_INDIVIDUAL_BASIC_INFO,\n        payload: IndividualDA.get_basic_info(userId),\n    };\n};\n\nexport const getInvolvement = (userId) => {\n    return {\n        type: Types.GET_INDIVIDUAL_INVOLVEMENT,\n        payload: IndividualDA.get_involvement(userId),\n    };\n};\nexport const getPrivacy = (userId) => {\n    return {\n        type: Types.GET_INDIVIDUAL_PRIVACY,\n        payload: IndividualDA.get_privacy(userId),\n    };\n};\nexport const getPublicInfo = (userId) => {\n    return {\n        type: Types.GET_INDIVIDUAL_PUBLIC_INFO,\n        payload: IndividualDA.get_public_info(userId),\n    };\n};\n\nexport const getAllIndividuals = () => {\n    return {\n        type: Types.GET_ALL_INDIVIDUALS,\n        payload: IndividualDA.get_list(),\n    };\n};\n\nexport const setBasicInfo = (userId, basicInfo) => {\n    return {\n        type: Types.SET_INDIVIDUAL_BASIC_INFO,\n        payload: IndividualDA.set_basic_info(userId, basicInfo),\n    };\n};\n\nexport const setInvolvement = (userId, involvement) => {\n    return {\n        type: Types.SET_INDIVIDUAL_INVOLVEMENT,\n        payload: IndividualDA.set_involvement(userId, involvement),\n    };\n};\nexport const setPrivacy = (userId, privacy) => {\n    return {\n        type: Types.SET_INDIVIDUAL_PRIVACY,\n        payload: IndividualDA.set_privacy(userId, privacy),\n    };\n};\n\nexport const clearBasicInfo = (userId) => {\n    return {\n        type: Types.CLEAR_INDIVIDUAL_BASIC_INFO,\n        payload: {},\n    };\n};\n\nexport const clearInvolvement = (userId) => {\n    return {\n        type: Types.CLEAR_INDIVIDUAL_INVOLVEMENT,\n        payload: {},\n    };\n};\nexport const clearPrivacy = (userId) => {\n    return {\n        type: Types.CLEAR_INDIVIDUAL_PRIVACY,\n        payload: {},\n    };\n};\n","export const allInvolvementTypes = [\n    { id: 1, value: 'convenient', label: 'A convenient event as it comes' },\n    { id: 2, value: 'full-day', label: 'Full Day Events' },\n    { id: 3, value: 'structured-recurring', label: 'Structured, Recurring Event' },\n    { id: 4, value: 'as-much-possible', label: 'As much as Possible!' },\n];\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport { InputRenderWithLargeLabel, CheckBoxRender, SelectRender, TextRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { allInvolvementTypes } from '../../constants/involvement-types';\nimport { individualHeaders } from '../../constants/step-headers';\nconst ProfileStep3 = (props) => {\n    const submitting = props.submitting;\n    const editMode = props.editMode;\n    const allImpactAreas = props.allImpactAreas;\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col lg=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n                        {editMode ? (\n                            <h4>Involvement Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {individualHeaders[3].stepNo} of 5</p>\n                                <ProgressBar now={individualHeaders[3].percent} />\n                                <br />\n                                <h4>{individualHeaders[3].header}</h4>\n                            </div>\n                        )}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area of interest\" col1={4} col2={8} options={allImpactAreas} zIndex={2000} />\n                        {/* <label>Tell us a bit about what you currently do!</label> */}\n                        <label>Community Involvement</label>\n                        <Field name=\"communityInvolvement\" type=\"text\" component={TextRender} label=\"Tell us a bit about what you currently do!\" col1={12} col2={12} />\n\n                        <Field id=\"volunteerOpportunity\" name=\"volunteerOpportunity\" type=\"checkbox\" component={CheckBoxRender} label=\"I am looking for Volunteer Opportunities\" col1={6} col2={6} />\n\n                        <Field id=\"project\" name=\"project\" component={CheckBoxRender} type=\"checkbox\" label=\"I am looking for Projects\" col1={6} col2={6} />\n                        <Field id=\"boardMembership\" name=\"boardMembership\" component={CheckBoxRender} type=\"checkbox\" label=\"I am looking for Board Membership\" col1={6} col2={6} />\n                        <Field id=\"committees\" name=\"committees\" component={CheckBoxRender} type=\"checkbox\" label=\"I am looking for Committees/Advisory Boards\" col1={6} col2={6} />\n                        <Field\n                            id=\"availabilityPerWeek\"\n                            name=\"availabilityPerWeek\"\n                            type=\"number\"\n                            component={InputRenderWithLargeLabel}\n                            min=\"0\"\n                            max=\"40\"\n                            step=\"1\"\n                            label=\"Average Weekly Hours Available\"\n                        />\n                        <Field id=\"typeOfInvolvement\" name=\"typeOfInvolvement\" type=\"text\" component={SelectRender} label=\"I want the following type of involvement\" col1={6} col2={6}>\n                            {allInvolvementTypes.map((involvementType, i) => {\n                                return (\n                                    <option key={involvementType.value} value={involvementType.value}>\n                                        {involvementType.label}\n                                    </option>\n                                );\n                            })}\n                        </Field>\n\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleBackButton();\n                                        }}\n                                    >\n                                        Back\n                                    </Button>\n                                )}\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleSkipButton();\n                                        }}\n                                    >\n                                        Skip\n                                    </Button>\n                                )}\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default ProfileStep3;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInvolvement, setInvolvement, clearInvolvement } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualInvolvementForm from '../../components/individual/individual-involvement-form';\nimport { individualCompleteBasicInfoPage, individualCompletePrivacyPage } from '../../constants/route-paths';\n\nconst Involvement = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInvolvement(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInvolvementResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompletePrivacyPage);\n                props.dispatch(clearInvolvement());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, involvement } = props.getInvolvementResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInvolvementResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInvolvementResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInvolvement(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(individualCompletePrivacyPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualInvolvementForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInvolvementResponse = state.Individual.getInvolvement;\n    const setInvolvementResponse = state.Individual.setInvolvement;\n    let initialValues = {};\n\n    if (getInvolvementResponse.success) {\n        initialValues = getInvolvementResponse.involvement;\n    }\n    console.log('initialValues', initialValues);\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInvolvementResponse,\n        setInvolvementResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Involvement',\n        enableReinitialize: true,\n    })(Involvement),\n);\n","export const allActivityTypes = [\n    { id: 4, value: 'Public', label: 'Anyone' },\n    { id: 1, value: 'no-one', label: 'No One' },\n    { id: 2, value: 'friends', label: 'Friends' },\n    { id: 3, value: 'friends-of-friends', label: 'Friends Of Friends' },\n];\n","export const allSearchTypes = [\n    { id: 1, value: 'always', label: 'Anyone' },\n    { id: 2, value: 'never', label: 'Never' },\n    { id: 3, value: 'friends-of-friends', label: 'Friends Of Friends' },\n];\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport { CheckBoxRender, SelectRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { allActivityTypes } from '../../constants/privacy-activity-types';\nimport { allSearchTypes } from '../../constants/privacy-search-types';\nimport { individualHeaders } from '../../constants/step-headers';\nconst PrivacyForm = (props) => {\n    const editMode = props.editMode;\n    const submitting = props.submitting;\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n                        {editMode ? (\n                            <h4>Privacy Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {individualHeaders[4].stepNo} of 5</p>\n                                <ProgressBar now={individualHeaders[4].percent} />\n                                <br />\n                                <h4>{individualHeaders[4].header}</h4>\n                            </div>\n                        )}\n\n                        <Field id=\"publicCalender\" name=\"isCalenderPublic\" component={CheckBoxRender} label=\"My calender is public\" col1={6} col2={6} type=\"checkbox\" />\n                        <Field\n                            id=\"isEmailSearchable\"\n                            name=\"isEmailSearchable\"\n                            component={CheckBoxRender}\n                            label=\"Add me to an organization’s mailing list when I follow them\"\n                            col1={6}\n                            col2={6}\n                            type=\"checkbox\"\n                        />\n                        <Field id=\"project\" name=\"isUserSearchable\" component={CheckBoxRender} label=\"Organization can find me in searches\" col1={6} col2={6} type=\"checkbox\" />\n                        <Field id=\"showOnSearch\" name=\"showOnSearch\" type=\"text\" component={SelectRender} label=\"I show up in individual searches done by:\" col1={6} col2={6}>\n                            {allActivityTypes.map((activity, i) => {\n                                return (\n                                    <option key={activity.value} value={activity.value}>\n                                        {activity.label}\n                                    </option>\n                                );\n                            })}\n                        </Field>\n                        <Field id=\"showActivity\" name=\"showActivity\" type=\"text\" component={SelectRender} label=\"My activity shows up on the feeds of\" col1={6} col2={6}>\n                            {allSearchTypes.map((search, i) => {\n                                return (\n                                    <option key={search.value} value={search.value}>\n                                        {search.label}\n                                    </option>\n                                );\n                            })}\n                        </Field>\n\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleBackButton();\n                                        }}\n                                    >\n                                        Back\n                                    </Button>\n                                )}\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default PrivacyForm;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPrivacy, setPrivacy, clearPrivacy } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualPrivacyForm from '../../components/individual/individual-privacy-form';\nimport { individualCompleteInvolvementPage, homePage } from '../../constants/route-paths';\nconst Privacy = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getPrivacy(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setPrivacyResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.dispatch(clearPrivacy());\n                props.history.push(homePage);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, privacy } = props.getPrivacyResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getPrivacyResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setPrivacyResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setPrivacy(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteInvolvementPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualPrivacyForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getPrivacyResponse = state.Individual.getPrivacy;\n    const setPrivacyResponse = state.Individual.setPrivacy;\n    let initialValues = {};\n\n    if (getPrivacyResponse.success) {\n        initialValues = getPrivacyResponse.privacy;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPrivacyResponse,\n        setPrivacyResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Privacy',\n        enableReinitialize: true,\n    })(Privacy),\n);\n","import React from 'react';\nimport { Container, Image, Row, Col, Badge } from 'react-bootstrap';\nimport moment from 'moment';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { getLanguagesByValues } from '../../constants/languages';\nimport { getRacesByValues } from '../../constants/races';\nimport { getGenderByValue } from '../../constants/genders';\nimport { defaultIndividualProfilePicture } from '../../constants/default-images';\nconst DetailsView = (props) => {\n    const individual = props.individual;\n    const infoRender = (label, value) => {\n        console.log(label, value);\n        if (value)\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value\n                            .toString()\n                            .split('\\n')\n                            .map((para, i) => (\n                                <p key={i} className=\"justify-text\">\n                                    {para}\n                                </p>\n                            ))}\n                    </Col>\n                </Row>\n            );\n        else return <></>;\n    };\n\n    const tagsRender = (label, tags) => {\n        console.log('🚀 ~ file: individual-details-view.js ~ line 48 ~ tagsRender ~ tags', tags);\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {tags.map((tag, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {tag.label}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            // if (address.street1) fullAddress += address.street1 + ', ';\n            // if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.code) fullAddress += address.code + '\\n';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + '\\n';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n\n    if (individual._id) {\n        const basicInfo = individual.basicInfo;\n        console.log('🚀 ~ file: individual-details-view.js ~ line 63 ~ DetailsView ~ basicInfo', basicInfo);\n        const involvement = individual.involvement;\n        const impactAreas = involvement.impactAreas;\n        const skills = basicInfo.skills;\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"right-align\" sm=\"2\">\n                        <Image className=\"left-image\" src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultIndividualProfilePicture} width=\"100%\" thumbnail />\n                    </Col>\n                    <Col sm=\"9\" className=\"left-border\">\n                        <h3>{basicInfo.firstName + ' ' + basicInfo.lastName}</h3>\n                        {/* {infoRender('Phone', basicInfo.phone)} */}\n                        {infoRender('Kids', basicInfo.kids)}\n                        {/* {infoRender('Date Of Birth', moment(basicInfo.dateOfBirth).format('LL'))} */}\n                        {/* {tagsRender('Race', getRacesByValues(basicInfo.races))} */}\n                        {/* {infoRender('Gender', getGenderByValue(basicInfo.gender))} */}\n                        {/* {tagsRender('Language Fluency', getLanguagesByValues(basicInfo.languages))} */}\n                        <br />\n                        {infoRender('Address', addressMaker(basicInfo.address))}\n                        <div style={{ height: 25 }} />\n                        <hr />\n                        <div style={{ height: 25 }} />\n                        {infoRender('About Me', involvement.communityInvolvement)}\n                        {tagsRender('Impact Area', impactAreas)}\n                        {tagsRender('Skill', skills)}\n                        <div style={{ height: 25 }} />\n                    </Col>\n                </Row>\n                <div style={{ height: 25 }} />\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/individual-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/individual/individual-details-view';\nconst IndividualDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const individualUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(individualUserId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView individual={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.individual : {}} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Individual.getPublicInfo;\n\n    return {\n        getPublicInfoResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(IndividualDetails);\n","import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\n\nimport { Container, Row, Col, ProgressBar, Button, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { organizationHeaders } from '../../constants/step-headers';\n\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const allOrganizationTypes = props.allOrganizationTypes;\n    const editMode = props.editMode;\n    console.log('PROPS', props);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country ? props.stateAndCountry.country : 'US');\n    const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        {editMode ? (\n                            <h4>Basic Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {organizationHeaders[2].stepNo} of 5</p>\n                                <ProgressBar now={organizationHeaders[2].percent} />\n                                <br />\n                                <h4>{organizationHeaders[2].header}</h4>\n\n                                <div style={{ height: 20 }} />\n                            </div>\n                        )}\n                        <Row>\n                            <Col>\n                                <Field name=\"name\" type=\"text\" component={InputRender} label=\"Name\" placeholder=\"Your organization name...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" placeholder=\"000-0000-000\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"ein\" type=\"text\" component={InputRender} label=\"EIN\" placeholder=\"ABCD...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"website\" type=\"text\" component={InputRender} label=\"Website URL\" placeholder=\"www.abc.xyz\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"contactEmail\" type=\"text\" component={InputRender} label=\"Contact Email\" placeholder=\"help@abc.com\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"mission\" type=\"text\" component={TextRender} label=\"Mission\" placeholder=\"Your organization mission...\" col1={2} col2={10} />\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Your organization mission...\" col1={2} col2={10} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"organizationTypes\" component={MultiSelectRender} label=\"Organization Type\" col1={3} col2={9} options={allOrganizationTypes} zIndex={2000} />\n                            </Col>\n                        </Row>\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/organization-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationBasicInfoForm from '../../components/organization/organization-basic-info-form';\nimport { organizationCompleteServiceInfoPage } from '../../constants/route-paths';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: 'US',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getBasicInfo(user._id));\n        }\n        props.dispatch(getAllOrganizationTypes());\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(organizationCompleteServiceInfoPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address && basicInfo.address.country) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            organizationTypes: values.organizationTypes && values.organizationTypes.length > 0 ? values.organizationTypes.map((type) => type._id) : [],\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationBasicInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n                allOrganizationTypes={props.getAllOrganizationTypesResponse.success ? props.getAllOrganizationTypesResponse.organizationTypes : []}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getBasicInfoResponse = state.Organization.getBasicInfo;\n    const setBasicInfoResponse = state.Organization.setBasicInfo;\n    const getAllOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues.address && !initialValues.address.country) {\n            initialValues.address.country = 'US';\n        } else if (!initialValues.address) {\n            initialValues.address = {\n                country: 'US',\n            };\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getAllOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","export const allServiceAreaTypes = [\n    { id: 1, value: 'neighborhood', label: 'Neighborhood' },\n    { id: 2, value: 'zip-code', label: 'Zip Code' },\n    { id: 3, value: 'city', label: 'City' },\n    { id: 4, value: 'county', label: 'County' },\n    { id: 5, value: 'state', label: 'State' },\n    { id: 6, value: 'country', label: 'Country' },\n];\n\nexport const getServiceAreaTypeByValue = (value) => {\n    allServiceAreaTypes.forEach((type) => {\n        if (type.value === value) return type;\n    });\n};\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport { InputRender, CreatableMultiSelectRender, MultiSelectRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { allServiceAreaTypes } from '../../constants/service-area-types';\nimport { organizationHeaders } from '../../constants/step-headers';\nconst ServiceInfoForm = (props) => {\n    const submitting = props.submitting;\n    const editMode = props.editMode;\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n                        {editMode ? (\n                            <h4>{organizationHeaders[3].header}</h4>\n                        ) : (\n                            <div>\n                                <p>Step {organizationHeaders[3].stepNo} of 5</p>\n                                <ProgressBar now={organizationHeaders[3].percent} />\n                                <br />\n                                <h4>{organizationHeaders[3].header}</h4>\n                            </div>\n                        )}\n\n                        <Field name=\"serviceAreaTypes\" component={MultiSelectRender} label=\"Service area type\" col1={4} col2={8} options={allServiceAreaTypes} zIndex={5000} />\n                        <Field name=\"serviceAreas\" type=\"text\" component={CreatableMultiSelectRender} label=\"Service Areas\" col1={4} col2={8} placeholder=\"Add new service area\" zIndex={4000} />\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={props.allImpactAreas} zIndex={3000} />\n                        <Field name=\"donationLink\" type=\"text\" component={InputRender} label=\"Donation link\" placeholder=\"\" />\n                        <Field name=\"newsLetterLink\" type=\"text\" component={InputRender} label=\"News letter link\" placeholder=\"\" />\n                        <Field name=\"keywords\" type=\"text\" component={CreatableMultiSelectRender} label=\"Keywords\" col1={4} col2={8} placeholder=\"Add new keywords\" zIndex={2000} />\n\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleBackButton();\n                                        }}\n                                    >\n                                        Back\n                                    </Button>\n                                )}\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleSkipButton();\n                                        }}\n                                    >\n                                        Skip\n                                    </Button>\n                                )}\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default ServiceInfoForm;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getServiceInfo, setServiceInfo, clearServiceInfo } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationServiceInfoForm from '../../components/organization/organization-service-info-form';\nimport { homePage, organizationCompleteBasicInfoPage, organizationCompleteInternalLinkPage } from '../../constants/route-paths';\n\nconst ServiceInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllOrganizationTypes());\n            props.dispatch(getServiceInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setServiceInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(homePage);\n                props.dispatch(clearServiceInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, serviceInfo } = props.getServiceInfoResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getServiceInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setServiceInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setServiceInfo(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(homePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationServiceInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allOrganizationTypes={props.getOrganizationTypesResponse.success ? props.getOrganizationTypesResponse.organizationTypes : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getServiceInfoResponse = state.Organization.getServiceInfo;\n    const setServiceInfoResponse = state.Organization.setServiceInfo;\n    const getOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n\n    if (getServiceInfoResponse.success) {\n        initialValues = getServiceInfoResponse.serviceInfo;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getServiceInfoResponse,\n        setServiceInfoResponse,\n        getOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'ServiceInfo',\n        enableReinitialize: true,\n    })(ServiceInfo),\n);\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport { SwitchRender, SelectRender, InputRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { organizationHeaders } from '../../constants/step-headers';\nconst InternalLinkForm = (props) => {\n    const submitting = props.submitting;\n\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n\n                        <div>\n                            <p>Step {organizationHeaders[4].stepNo} of 5</p>\n                            <ProgressBar now={organizationHeaders[4].percent} />\n                            <br />\n                            <h4>{organizationHeaders[4].header}</h4>\n                        </div>\n\n                        <Field name=\"events\" type=\"text\" component={InputRender} label=\"Events link\" />\n                        <Field name=\"rss\" type=\"text\" component={InputRender} label=\"RSS link\" />\n                        <Field name=\"blog\" type=\"text\" component={InputRender} label=\"Blogs link\" />\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default InternalLinkForm;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInternalLink, setInternalLink, clearInternalLink } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationInternalLinkForm from '../../components/organization/organization-internal-link-form';\nimport { organizationCompleteServiceInfoPage, homePage } from '../../constants/route-paths';\nconst InternalLink = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInternalLink(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInternalLinkResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(clearInternalLink());\n            props.history.push(homePage);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, internalLink } = props.getInternalLinkResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInternalLinkResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInternalLinkResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInternalLink(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteServiceInfoPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationInternalLinkForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInternalLinkResponse = state.Organization.getInternalLink;\n    const setInternalLinkResponse = state.Organization.setInternalLink;\n    let initialValues = {};\n\n    if (getInternalLinkResponse.success) {\n        initialValues = getInternalLinkResponse.internalLink;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInternalLinkResponse,\n        setInternalLinkResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'InternalLink',\n        enableReinitialize: true,\n    })(InternalLink),\n);\n","import React from 'react';\nimport { Container, Image, Row, Col, Badge, ListGroup, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\n\nconst DetailsView = (props) => {\n    const organization = props.organization;\n    const follows = props.follows;\n    const infoRender = (label, value) => {\n        if (value) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value.split('\\n').map((para, i) => (\n                            <p key={i} className=\"justify-text\">\n                                {para}\n                            </p>\n                        ))}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n\n    const keywordsRender = (label, keywords) => {\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {keywords.map((key, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {key}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n    const tagsRender = (label, tags) => {\n        if (tags && tags.length > 0) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {tags.map((tag, i) => {\n                            if (tag)\n                                return (\n                                    <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                        {tag.label}\n                                    </Badge>\n                                );\n                        })}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n    if (organization._id) {\n        const basicInfo = organization.basicInfo;\n        const serviceInfo = organization.serviceInfo;\n        const impactAreas = serviceInfo.impactAreas;\n        console.log(basicInfo);\n        return (\n            <>\n                <h3>{basicInfo.name}</h3>\n                {tagsRender('Organization Type', basicInfo.organizationTypes)}\n                {infoRender('Contact Email', basicInfo.contactEmail)}\n                {infoRender('Website', basicInfo.website)}\n\n                {infoRender('Phone', basicInfo.phone)}\n                {infoRender('EIN', basicInfo.ein)}\n                {infoRender('Address', addressMaker(basicInfo.address))}\n\n                <hr />\n                <div style={{ height: 25 }} />\n                {keywordsRender('Service Areas', serviceInfo.serviceAreas)}\n                {tagsRender('Impact Area', impactAreas)}\n                {keywordsRender('Keywords', serviceInfo.keywords)}\n                <div style={{ height: 25 }} />\n                <hr />\n                {infoRender('Mission', basicInfo.mission)}\n                <hr />\n                {infoRender('Description', basicInfo.description)}\n                <div style={{ height: 25 }} />\n            </>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass FollowDA {\n    follow_user = (values) => {\n        return axios\n            .post(APIPaths.followUser, values, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => {\n                console.log(err);\n                return err.response.data;\n            });\n    };\n    unfollow_user = (values) => {\n        return axios\n            .post(APIPaths.unfollowUser, values, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_followers = (userId) => {\n        return axios\n            .post(APIPaths.getAllFollower(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_followings = (userId) => {\n        return axios\n            .post(APIPaths.getAllFollower(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n\n    check_if_follower = (followerId, followingId) => {\n        return axios\n            .get(APIPaths.checkIfFollower(followerId, followingId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new FollowDA();\n","import FollowDA from '../data_accesses/follow-da';\nimport * as Types from '../constants/reducer-types';\n\nexport const followUser = (values) => {\n    return {\n        type: Types.FOLLOW_USER,\n        payload: FollowDA.follow_user(values),\n    };\n};\nexport const unfollowUser = (values) => {\n    return {\n        type: Types.UNFOLLOW_USER,\n        payload: FollowDA.unfollow_user(values),\n    };\n};\nexport const checkIfFollower = (followerId, followingId) => {\n    return {\n        type: Types.CHECK_IF_FOLLOWER,\n        payload: FollowDA.check_if_follower(followerId, followingId),\n    };\n};\nexport const getAllFollowers = (userId) => {\n    return {\n        type: Types.GET_ALL_FOLLOWERS,\n        payload: FollowDA.get_all_followers(userId),\n    };\n};\nexport const getAllFollowings = (userId) => {\n    return {\n        type: Types.GET_ALL_FOLLOWINGS,\n        payload: FollowDA.get_all_followings(userId),\n    };\n};\n","import React from 'react';\nimport { Container, Image, Row, Col, Badge, ListGroup, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport Collapsible from 'react-collapsible';\nimport { RiUserFollowFill, RiUserUnfollowFill } from 'react-icons/ri';\nimport * as RoutePath from '../../constants/route-paths';\nconst SideMenu = (props) => {\n    const organization = props.organization;\n    console.log(organization);\n    const follows = props.follows;\n    const RenderListButtonItem = (label, path) => {\n        return (\n            <ListGroup.Item\n                className=\"list-button\"\n                onClick={() => {\n                    props.gotoPage(path);\n                }}\n            >\n                {label}\n            </ListGroup.Item>\n        );\n    };\n    if (organization._id) {\n        const basicInfo = organization.basicInfo;\n        return (\n            <>\n                <Image className=\"left-image\" src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultOrganizationProfilePicture} width=\"100%\" thumbnail />\n                {follows ? (\n                    <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to unfollow</Tooltip>}>\n                        <Button\n                            size=\"sm\"\n                            variant=\"outline-info\"\n                            className=\"details-following-btn\"\n                            onClick={() => {\n                                props.handleUnfollowClick();\n                            }}\n                        >\n                            <RiUserFollowFill /> Following\n                        </Button>\n                    </OverlayTrigger>\n                ) : (\n                    <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to follow</Tooltip>}>\n                        <Button\n                            size=\"sm\"\n                            variant=\"outline-info\"\n                            className=\"details-follow-btn\"\n                            onClick={() => {\n                                props.handleFollowClick();\n                            }}\n                        >\n                            <RiUserFollowFill /> Follow\n                        </Button>\n                    </OverlayTrigger>\n                )}\n                <Collapsible trigger=\"MENU\" className=\"special-btn\">\n                    <ListGroup>\n                        {RenderListButtonItem('About', RoutePath.userDetailsPage('organization', organization.userId))}\n                        {RenderListButtonItem('Message', '')}\n                        {RenderListButtonItem('Posts', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'event'))}\n                        {RenderListButtonItem('Feed')}\n                    </ListGroup>\n                </Collapsible>\n            </>\n        );\n    } else return <></>;\n};\nexport default SideMenu;\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/organization-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/organization/organization-details-view';\nimport { followUser, unfollowUser, checkIfFollower } from '../../actions/follow-action';\nimport SideSubMenu from '../../components/organization/organization-sub-menu';\n// import { NotificationManager } from 'react-notifications';\nconst OrganizationDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [follows, setFollows] = useState(false);\n    const getInitialInfo = () => {\n        const organizationUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(organizationUserId));\n        const user = props.auth.user;\n        props.dispatch(checkIfFollower(user._id, props.match.params.userId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n    useEffect(() => {\n        const success = props.getCheckIfFollowerResponse;\n        if (success) {\n            setFollows(props.getCheckIfFollowerResponse.follows);\n        }\n    }, [props.getCheckIfFollowerResponse]);\n    const handleFollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(followUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleUnfollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(unfollowUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getFollowResponse;\n        if (success) {\n            setFollows(true);\n            // NotificationManager.success('You are following', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getFollowResponse]);\n    useEffect(() => {\n        const { success } = props.getUnfollowResponse;\n\n        if (success) {\n            setFollows(false);\n            // NotificationManager.success('You are unfollowing', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getUnfollowResponse]);\n    const gotoPage = (url) => {\n        props.history.push(url);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col className=\"right-align\" sm=\"2\">\n                                <SideSubMenu\n                                    organization={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.organization : {}}\n                                    handleFollowClick={handleFollowClick}\n                                    handleUnfollowClick={handleUnfollowClick}\n                                    follows={follows}\n                                    gotoPage={gotoPage}\n                                />\n                            </Col>\n                            <Col sm=\"9\" className=\"left-border\">\n                                <DetailsView\n                                    organization={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.organization : {}}\n                                    handleFollowClick={handleFollowClick}\n                                    handleUnfollowClick={handleUnfollowClick}\n                                    follows={follows}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Organization.getPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(OrganizationDetails);\n","import React from 'react';\n\nconst ThreadList = (props) => {\n    const list = [\n        {\n            id: 1,\n            name: 'Mst Sadia Sultana',\n            profilePicture: 'http://localhost:3001/uploaded-images/person1.jpg',\n        },\n        {\n            id: 2,\n            name: 'Abdullah al noman',\n            profilePicture: 'http://localhost:3001/uploaded-images/person2.jpg',\n        },\n        {\n            id: 3,\n            name: 'Abu moin',\n            profilePicture: 'http://localhost:3001/uploaded-images/person3.jpg',\n        },\n        {\n            id: 4,\n            name: 'Israt Sharera',\n            profilePicture: 'http://localhost:3001/uploaded-images/person4.jpg',\n        },\n        {\n            id: 5,\n            name: 'Sharmin Akter',\n            profilePicture: 'http://localhost:3001/uploaded-images/person5.jpg',\n        },\n        {\n            id: 6,\n            name: 'Krittika Singh',\n            profilePicture: 'http://localhost:3001/uploaded-images/person6.jpg',\n        },\n        {\n            id: 7,\n            name: 'Debashish Haldar',\n            profilePicture: 'http://localhost:3001/uploaded-images/person7.jpg',\n        },\n        {\n            id: 8,\n            name: 'Subrato Sarker',\n            profilePicture: 'http://localhost:3001/uploaded-images/person8.jpg',\n        },\n    ];\n    return <h4>All Messages</h4>;\n};\n\nexport default ThreadList;\n","import React from 'react';\n\nconst ThreadDetails = (props) => {\n    return <h4>All Messages</h4>;\n};\n\nexport default ThreadDetails;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ThreadList from './sample-thread-list';\nimport ThreadDetails from './sample-thread-details';\nconst Messages = (props) => {\n    return (\n        <Container>\n            <Row className=\"message-main\">\n                <Col sm=\"4\" className=\"thread-list\">\n                    <ThreadList />\n                </Col>\n                <Col sm=\"8\" className=\"thread-details\">\n                    <ThreadDetails />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default Messages;\n","import React from 'react';\nimport { Table, Image, Button, Row, Col, Badge } from 'react-bootstrap';\nimport { DeleteButtonRender, UpArrowButtonRender, DownArrowButtonRender } from '../form_template/buttons-render';\nconst PostImageList = (props) => {\n    const images = props.images;\n    if (images && images.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Images</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"dark\" className=\"badge-single \">\n                            Remember: First Image of the list will be your default post image\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr>\n                            <th>Image</th>\n                            <th>Description</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {images.map((image, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td style={{ width: 220 }}>\n                                        <Image src={image.path} thumbnail width=\"200\" />\n                                    </td>\n                                    <td>\n                                        <textarea\n                                            value={image.description}\n                                            placeholder=\"Add description...\"\n                                            rows=\"8\"\n                                            type=\"text\"\n                                            className=\"form-control image-description-input\"\n                                            onChange={(e) => {\n                                                props.handleImageDescriptionEdit(i, e);\n                                            }}\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <DeleteButtonRender\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        />\n                                        {i > 0 && (\n                                            <>\n                                                &nbsp;\n                                                <UpArrowButtonRender\n                                                    onClick={() => {\n                                                        props.handleItemPosition(i, 'up');\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                        &nbsp;\n                                        {i < images.length - 1 && (\n                                            <DownArrowButtonRender\n                                                onClick={() => {\n                                                    props.handleItemPosition(i, 'down');\n                                                }}\n                                            />\n                                        )}\n                                    </td>\n                                    {/* <td className=\"block\">\n                                        <Button\n                                            variant=\"outline-danger\"\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        >\n                                            DELETE\n                                        </Button>\n                                        <br />\n                                        <br />\n                                        {i > 0 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'up');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-up-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                        <br />\n                                        <br />\n                                        {i < images.length - 1 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'down');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-down-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                    </td> */}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Image Added</h5>;\n    }\n};\nexport default PostImageList;\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from '@reach/combobox';\nimport '@reach/combobox/styles.css';\n// const google = window.google;\nconst mapContainerStyle = {\n    height: '100vh',\n};\nconst options = {\n    disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst searchBoxStyle = {\n    width: '100%',\n};\nconst PostGeoCoding = (props) => {\n    //selectedLocation={props.location}\n    //handleLocationChange={props.handleLocationChange}\n\n    const libraries = ['places'];\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const marker = props.selectedLocation;\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n    const onMapClick = (e) => {\n        props.handleLocationChange({\n            latitude: e.latLng.lat(),\n            longitude: e.latLng.lng(),\n        });\n    };\n    const panTo = ({ lat, lng }) => {\n        props.handleLocationChange({\n            latitude: lat,\n            longitude: lng,\n        });\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(14);\n    };\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    else {\n        center = {\n            lat: parseFloat(marker.latitude),\n            lng: parseFloat(marker.longitude),\n        };\n        return (\n            <div>\n                <SearchBoxRender panTo={panTo} />\n                <br />\n                <GoogleMap id=\"map\" onLoad={onMapLoad} mapContainerStyle={mapContainerStyle} zoom={8} center={center} options={options} onClick={onMapClick}>\n                    {marker.latitude && marker.longitude && (\n                        <Marker\n                            key={`${marker.latitude}-${marker.longitude}`}\n                            position={{\n                                lat: parseFloat(marker.latitude),\n                                lng: parseFloat(marker.longitude),\n                            }}\n                        />\n                    )}\n                </GoogleMap>\n            </div>\n        );\n    }\n};\nconst SearchBoxRender = ({ panTo }) => {\n    const handleInput = (e) => {\n        setValue(e.target.value);\n    };\n    const {\n        ready,\n        value,\n        suggestions: { status, data },\n        setValue,\n        clearSuggestions,\n    } = usePlacesAutocomplete({\n        requestOptions: {\n            location: { lat: () => 43.6532, lng: () => -79.3832 },\n            radius: 100 * 1000,\n        },\n    });\n\n    const handleSelect = async (address) => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n            const results = await getGeocode({ address });\n            const { lat, lng } = await getLatLng(results[0]);\n            panTo({ lat, lng });\n        } catch (error) {}\n    };\n\n    return (\n        <Combobox onSelect={handleSelect}>\n            <ComboboxInput style={searchBoxStyle} value={value} onChange={handleInput} disabled={!ready} placeholder=\"Search your location\" />\n            <ComboboxPopover>\n                <ComboboxList key={1}>{status === 'OK' && data.map(({ id, description }) => <ComboboxOption key={id + description} value={description} />)}</ComboboxList>\n            </ComboboxPopover>\n        </Combobox>\n    );\n};\nexport default PostGeoCoding;\n","import React from 'react';\nimport { Table, Image, Button, Row, Col, Badge } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport { DeleteButtonRender, UpArrowButtonRender, DownArrowButtonRender } from '../form_template/buttons-render';\nconst RequiredItemList = (props) => {\n    const requiredItems = props.requiredItems;\n    if (requiredItems && requiredItems.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Required Items</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"light\" className=\"badge-single \">\n                            Remember: Item without name, requirement and needed by valid date shall not be saved.\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Requirement</th>\n                            <th>Needed By</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {requiredItems.map((item, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <input\n                                            className=\"form-control image-description-input\"\n                                            type=\"text\"\n                                            onChange={(e) => {\n                                                props.handleItemEdit(i, 'name', e.target.value);\n                                            }}\n                                            value={item.name}\n                                        />\n                                    </td>\n                                    <td>\n                                        <input\n                                            className=\"form-control image-description-input\"\n                                            type=\"text\"\n                                            onChange={(e) => {\n                                                props.handleItemEdit(i, 'requirement', e.target.value);\n                                            }}\n                                            value={item.requirement}\n                                        />\n                                    </td>\n                                    <td>\n                                        <DatePicker\n                                            className=\"form-control custom-date-picker\"\n                                            onChange={(date) => props.handleItemEdit(i, 'neededBy', date)}\n                                            selected={new Date(item.neededBy)}\n                                            dateFormat=\"MM/dd/yyyy\"\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <DeleteButtonRender\n                                            onClick={() => {\n                                                props.handleItemDelete(i);\n                                            }}\n                                        />\n                                        {i > 0 && (\n                                            <>\n                                                &nbsp;\n                                                <UpArrowButtonRender\n                                                    onClick={() => {\n                                                        props.handleItemPosition(i, 'up');\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                        &nbsp;\n                                        {i < requiredItems.length - 1 && (\n                                            <DownArrowButtonRender\n                                                onClick={() => {\n                                                    props.handleItemPosition(i, 'down');\n                                                }}\n                                            />\n                                        )}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Required Item Added</h5>;\n    }\n};\nexport default RequiredItemList;\n","import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport PostImageList from './post-image-list';\nimport { SelectRender, InputRender, InputRenderWithLargeLabel, DateTimePickerRender, TextRender, CheckBoxRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport PostGeoCoding from './post-geo-coding';\nimport { getPostTypeByValue, postTypeFields } from '../../constants/post-types';\nimport RequiredItemList from './required-item-list';\nconst PostForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const allSkills = props.allSkills;\n    const images = props.images;\n    const requiredItems = props.requiredItems;\n    const editMode = props.editMode;\n    const postType = props.postType;\n    const postTypeLabel = getPostTypeByValue(postType)[0].label;\n    const fields = postTypeFields[postType];\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit {postTypeLabel}</h4> : <h4>Create {postTypeLabel}</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    size=\"sm\"\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManagePosts();\n                                    }}\n                                >\n                                    Manage Posts\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        {fields.title && <Field name=\"title\" type=\"text\" component={InputRender} label=\"Title\" placeholder=\"Title...\" />}\n                        {fields.startDateTime && <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Start time\" col1={4} col2={8} zIndex={6001} />}\n                        {fields.endDateTime && <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"End time\" col1={4} col2={8} zIndex={6000} />}\n                        {fields.description && <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Description...\" col1={4} col2={8} />}\n                        {fields.skills && <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skill\" col1={4} col2={8} options={allSkills} zIndex={5000} menuPlacement=\"top\" />}\n                        {fields.keywords && (\n                            <Field name=\"keywords\" type=\"text\" component={CreatableMultiSelectRender} label=\"Keywords\" col1={4} col2={8} placeholder=\"Add new keywords\" zIndex={2000} />\n                        )}\n                        {fields.petitionLink && <Field name=\"petitionLink\" type=\"text\" component={InputRender} label=\"Petition Link\" placeholder=\"\" />}\n                        {fields.impactAreas && (\n                            <>\n                                <Row>\n                                    <Col sm={4}></Col>\n                                    <Col sm={8}>\n                                        <Button\n                                            variant=\"light\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleAddMineImpactAreas();\n                                            }}\n                                        >\n                                            Auto select my impact areas\n                                        </Button>\n                                    </Col>\n                                </Row>\n                                <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact areas\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                            </>\n                        )}\n                        {fields.expectedRequiredHours && (\n                            <Field name=\"expectedRequiredHours\" component={InputRenderWithLargeLabel} type=\"number\" unit=\"Hours\" label=\"Expected Required Time\" min={0} max={100} step={0.25} />\n                        )}\n                        {fields.topNeed && <Field name=\"topNeed\" type=\"checkbox\" component={CheckBoxRender} label=\"Top Need\" col1={4} col2={8} />}\n                        {fields.requiredItems && (\n                            <>\n                                <RequiredItemList\n                                    requiredItems={requiredItems}\n                                    handleItemEdit={props.handleItemEdit}\n                                    handleItemDelete={props.handleItemDelete}\n                                    handleItemPosition={props.handleItemPosition}\n                                />\n                                <Row>\n                                    <Col>\n                                        <Button\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleAddItem();\n                                            }}\n                                        >\n                                            Add New Required Item\n                                        </Button>\n                                    </Col>\n                                    <Col sm=\"8\"></Col>\n                                </Row>\n                            </>\n                        )}\n                        {fields.images && (\n                            <>\n                                <div style={{ height: 50 }} />\n                                <PostImageList\n                                    images={images}\n                                    handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                                    handleImageDelete={props.handleImageDelete}\n                                    handleImagePosition={props.handleImagePosition}\n                                />\n                                {/* Upload Image */}\n                                <Row>\n                                    <Col>\n                                        <div className=\"custom-file\">\n                                            <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                                Choose profile picture\n                                            </label>\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"8\"></Col>\n                                </Row>\n                            </>\n                        )}\n                        <br />\n                        {fields.address && (\n                            <>\n                                {/* <Field name=\"address.fullAddress\" type=\"text\" component={InputRender} label=\"Full Address\" placeholder=\"House, Road, Area, Sector, ZIP, City, State, Country...\" /> */}\n                                <Row>\n                                    <Col sm={4}>Location</Col>\n                                    <Col sm={8}>\n                                        <PostGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                                    </Col>\n                                </Row>\n                            </>\n                        )}\n                        {/* {fields.isActive && <Field name=\"isActive\" type=\"checkbox\" component={CheckBoxRender} label=\"Publish/Active\" col1={4} col2={8} />} */}\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button\n                                    variant=\"warning\"\n                                    size=\"sm\"\n                                    type=\"submit\"\n                                    onClick={() => {\n                                        props.setIsActive(false);\n                                    }}\n                                >\n                                    Save as Draft\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update and Publish' : 'Save and Publish'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default PostForm;\n","import React, { useEffect, useState } from 'react';\nimport PostForm from '../../components/post/post-form';\nimport { connect } from 'react-redux';\nimport { reduxForm, formValueSelector, change } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPostById, createPost, updatePostById, clearPost } from '../../actions/post-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { getServiceInfo } from '../../actions/organization-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\n\nconst CreatePost = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [requiredItems, setRequiredItems] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [isActive, setIsActive] = useState(true);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getPostResponse.success) {\n            console.log(props.getPostResponse.post);\n            setImages(props.getPostResponse.post.images);\n            setRequiredItems(props.getPostResponse.post.requiredItems);\n            if (props.getPostResponse.post.address) {\n                setLocation({\n                    latitude: props.getPostResponse.post.address.latitude,\n                    longitude: props.getPostResponse.post.address.longitude,\n                });\n            }\n        }\n    }, [props.getPostResponse]);\n    const handlePictureUpload = (post) => {\n        var file = post.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (post.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManagePosts = () => {\n        props.history.push(RoutePaths.postManagePage);\n    };\n\n    const onSubmit = (values) => {\n        let items = [];\n        if (requiredItems && requiredItems.length > 0) {\n            items = requiredItems.filter((item) => item.name && item.name.length > 0 && item.requirement && item.requirement.length > 0);\n        }\n        let post = {\n            ...values,\n            postType: props.match.params.postType,\n            creatorId: props.auth.user._id,\n            images: images,\n            requiredItems: items,\n            address: {\n                ...values.address,\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n            isActive: isActive,\n        };\n        console.log(post);\n        setLoading(true);\n        if (editMode) {\n            props.dispatch(updatePostById(props.match.params.postId, post));\n        } else {\n            props.dispatch(createPost(post));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleItemEdit = (idx, name, value) => {\n        console.log('🚀 ~ file: create-post.js ~ line 103 ~ handleItemEdit ~ idx, name, value', idx, name, value);\n        let requiredItems_ = requiredItems;\n        let item = requiredItems_[idx];\n        item[name] = value;\n        console.log('T', item);\n        requiredItems_[idx] = item;\n        setRequiredItems([...requiredItems_]);\n    };\n    const handleItemDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this item?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        const requiredItems_ = requiredItems;\n                        requiredItems_.splice(idx, 1);\n                        setRequiredItems([...requiredItems_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleItemPosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let requiredItems_ = requiredItems;\n            [requiredItems_[idx], requiredItems_[idx - 1]] = [requiredItems_[idx - 1], requiredItems_[idx]];\n            setRequiredItems([...requiredItems_]);\n        } else if (movement === 'down' && idx < requiredItems.length - 1) {\n            let requiredItems_ = requiredItems;\n            [requiredItems_[idx], requiredItems_[idx + 1]] = [requiredItems_[idx + 1], requiredItems_[idx]];\n            setRequiredItems([...requiredItems_]);\n        }\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    const handleAddMineImpactAreas = () => {\n        console.log(props.getServiceInfoResponse);\n        if (props.getServiceInfoResponse.success && props.getServiceInfoResponse.serviceInfo.impactAreas) {\n            props.change('impactAreas', props.getServiceInfoResponse.serviceInfo.impactAreas);\n        } else props.change('impactAreas', []);\n    };\n    const handleAddItem = () => {\n        const requiredItems_ = requiredItems;\n        requiredItems_.push({\n            name: '',\n            requirement: '',\n            neededBy: new Date(),\n        });\n        setRequiredItems([...requiredItems_]);\n    };\n    useEffect(() => {\n        const getInitialInfo = (postId) => {\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            props.dispatch(getServiceInfo(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[2] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.postId);\n            } else {\n                props.dispatch(clearPost());\n                setImages([]);\n                setRequiredItems([]);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearPost());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setPostResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearPost());\n            if (editMode) props.history.push(RoutePaths.postDetailsPage(props.match.params.postType, props.match.params.postId));\n            else {\n                props.history.push(RoutePaths.postDetailsPage(props.match.params.postType, props.setPostResponse.post._id));\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setPostResponse]);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <PostForm\n                postType={props.match.params.postType}\n                handleGoToManagePosts={handleGoToManagePosts}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((post) => {\n                    onSubmit(post);\n                })}\n                location={location}\n                setLocation={setLocation}\n                handleAddMineImpactAreas={handleAddMineImpactAreas}\n                handleAddItem={handleAddItem}\n                handleItemEdit={handleItemEdit}\n                handleItemDelete={handleItemDelete}\n                handleItemPosition={handleItemPosition}\n                requiredItems={requiredItems}\n                setIsActive={setIsActive}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getPostResponse = state.Post.getPost;\n    const setPostResponse = state.Post.setPost;\n    const getServiceInfoResponse = state.Organization.getServiceInfo;\n    let initialValues = {};\n    if (getPostResponse.success) {\n        initialValues = getPostResponse.post;\n        if (initialValues.keywords && initialValues.keywords.length > 0 && typeof initialValues.keywords[0] === 'string') {\n            initialValues.keywords = initialValues.keywords.map((word) => {\n                console.log(word);\n                return { value: word, label: word };\n            });\n        }\n        console.log(initialValues);\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPostResponse,\n        setPostResponse,\n        getSkillResponse,\n        getServiceInfoResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreatePost',\n        enableReinitialize: true,\n    })(CreatePost),\n);\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllPostOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allPosts;\n    console.log('🚀 ~ file: post-map-view.js ~ line 27 ~ AllPostOnMap ~ markers', markers);\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Post</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            {/* <Link to={RoutePath.postDetailsPage + selected._id}>Details</Link> */}\n                            <Link to={RoutePath.postDetailsPage('post', selected._id)}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllPostOnMap;\n","import React from 'react';\nimport { Container, Row, Col, Image, Button, Badge } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport {\n    TagWithLabelRender,\n    ImpactAreasRender,\n    DescriptionRender,\n    ImageAndDescriptionRender,\n    RequiredItemsRender,\n    InfoRender,\n    LinkRender,\n    BooleanRender,\n    KeywordsRender,\n} from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport PostMapView from './post-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nimport { getPostTypeByValue, postTypeFields } from '../../constants/post-types';\nconst DisplayPost = (props) => {\n    const post = props.post;\n    const userId = props.userId;\n    const organization = props.organization;\n    const fields = postTypeFields[post.postType];\n    if (post && post._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        {post.creatorId === userId && (\n                            <Row>\n                                <Col>\n                                    <Button\n                                        size=\"sm\"\n                                        variant=\"outline-info\"\n                                        onClick={() => {\n                                            props.handleGotoManagePosts();\n                                        }}\n                                    >\n                                        Manage Posts\n                                    </Button>\n                                    <hr />\n                                </Col>\n                            </Row>\n                        )}\n                        {post.postType !== 'general' && (\n                            <Row>\n                                <Col>\n                                    <h4>\n                                        <Badge variant=\"dark\">{getPostTypeByValue(post.postType)[0].label}</Badge>\n                                    </h4>\n                                </Col>\n                            </Row>\n                        )}\n                        <Row>\n                            <Col>\n                                <h4>{post.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{ImpactAreasRender('', post.impactAreas)}</Col>\n                        </Row>\n                        <hr />\n                        {fields.skills && (\n                            <>\n                                <Row>\n                                    <Col>{TagWithLabelRender('', post.skills)}</Col>\n                                </Row>\n                                <hr />\n                            </>\n                        )}\n                        {fields.startDateTime && fields.endDateTime && (\n                            <>\n                                <Row>\n                                    {post.startDateTime && <Col>{InfoRender('Start Time', moment(post.startDateTime).format('LLLL'))}</Col>}\n                                    {post.endDateTime && <Col>{InfoRender('End Time', moment(post.endDateTime).format('LLLL'))}</Col>}\n                                </Row>\n                                <Row>{post.expectedRequiredHours && <Col>{InfoRender('Expected Required Time', post.expectedRequiredHours + ' Hour')}</Col>}</Row>\n                                {post.startDateTime || post.endDateTime ? <hr /> : ''}\n                            </>\n                        )}\n                        {fields.petitionLink && post.petitionLink && (\n                            <>\n                                <Row>\n                                    <Col>{LinkRender('Petition Link', post.petitionLink)}</Col>\n                                </Row>\n                                <hr />\n                            </>\n                        )}\n                        {fields.topNeed && post.topNeed && (\n                            <>\n                                <Row>\n                                    <Col>{BooleanRender('Top Need', post.topNeed)}</Col>\n                                </Row>\n                                <hr />\n                            </>\n                        )}\n\n                        <Row>\n                            <Col>{DescriptionRender('', post.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{KeywordsRender('Keywords', post.keywords)}</Col>\n                        </Row>\n                        {fields.requiredItems && (\n                            <Row>\n                                <Col>{RequiredItemsRender(post.requiredItems)}</Col>\n                            </Row>\n                        )}\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(post.images)}</Col>\n                        </Row>\n                        <hr />\n                        {fields.address && post.address && (\n                            <>\n                                <Row>\n                                    <Col>{InfoRender('Full Address', post.address.fullAddress)}</Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <PostMapView allPosts={[post]} zoom={16} />\n                                    </Col>\n                                </Row>\n                            </>\n                        )}\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Post is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayPost;\n","import React, { useState, useEffect } from 'react';\nimport PostDetails from '../../components/post/post-details';\nimport { connect } from 'react-redux';\nimport { getPostById } from '../../actions/post-action';\nimport { postManagePage } from '../../constants/route-paths';\nconst DisplayPost = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        const getInitialInfo = () => {\n            const user = props.auth.user;\n            if (user && user._id) {\n                setUserId(user._id);\n            }\n\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n            setLoading(false);\n        };\n        const postId = props.match.params.postId;\n        if (postId) getInitialInfo(postId);\n        else {\n        }\n    }, [props.auth]);\n    const handleGotoManagePosts = () => {\n        props.history.push(postManagePage);\n    };\n    return (\n        <PostDetails\n            post={props.getPostResponse.success ? props.getPostResponse.post : {}}\n            organization={props.getPostResponse.success ? props.getPostResponse.organization : {}}\n            userId={userId}\n            handleGotoManagePosts={handleGotoManagePosts}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getPostResponse = state.Post.getPost ? state.Post.getPost : {};\n    console.log('🚀 ~ file: display-post.js ~ line 23 ~ mapStateToProps ~ getPostResponse', getPostResponse);\n\n    return { getPostResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayPost);\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst ListingEvent = (props) => {\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h1>Welcome To ListingEvent EVENTS</h1>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ListingEvent;\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Button, Table, Dropdown, Modal } from 'react-bootstrap';\nimport { getPostTypeByValue } from '../../constants/post-types';\nimport { EditButtonRender, DeleteButtonRender, DetailsButtonRender } from '../../components/form_template/buttons-render';\nimport moment from 'moment';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { FaPlus } from 'react-icons/fa';\nimport { CheckIconRender, CrossIconRender } from '../../components/form_template/icon-render';\nconst PostList = (props) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const allPosts = props.allPosts;\n    const ButtonRender = (variant, type, label) => {\n        return (\n            <Button\n                style={{ marginTop: 5, width: '100%' }}\n                variant={variant}\n                size=\"sm\"\n                onClick={() => {\n                    props.handleGoToPostCreate(type);\n                }}\n            >\n                {label}\n            </Button>\n        );\n    };\n    const DropdownItemRender = (variant, type, label) => {\n        return <Dropdown.Item href={RoutePaths.postCreatePage(type)}>{label}</Dropdown.Item>;\n    };\n\n    return (\n        <Container>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Select Post Type</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Col sm=\"6\">{ButtonRender('info', 'event', 'Event')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'project', 'Project')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'general', 'General Post')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'volunteering', 'Volunteering')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'in-kind', 'In-Kind')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'advocacy', 'Advocacy')}</Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose} size=\"sm\">\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col className=\"parent-page\">\n                    <Row>\n                        <Col sm=\"6\">{allPosts && allPosts.length > 0 ? <h4>{allPosts.length} Posts Found</h4> : <h4>No Post Found</h4>}</Col>\n                        <Col sm=\"6\" className=\"right-align\">\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\" size=\"sm\" drop=\"left\">\n                                    <FaPlus /> POST\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {DropdownItemRender('info', 'event', 'Event')}\n                                    {DropdownItemRender('info', 'project', 'Project')}\n                                    {DropdownItemRender('info', 'general', 'General Post')}\n                                    {DropdownItemRender('info', 'volunteering', 'Volunteering')}\n                                    {DropdownItemRender('info', 'in-kind', 'In-Kind')}\n                                    {DropdownItemRender('info', 'advocacy', 'Advocacy')}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                            <br />\n                            <Button variant=\"primary\" onClick={handleShow} size=\"sm\">\n                                Create Post\n                            </Button>\n                        </Col>\n                    </Row>\n                    <br />\n                    {allPosts && allPosts.length > 0 && (\n                        <Table striped bordered hover>\n                            {/* <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th></th>\n                                    <th>Title</th>\n                                    <th>Created At</th>\n                                    <th>Active</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead> */}\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Post Type</th>\n                                    <th>Title</th>\n                                    <th>Created At</th>\n                                    <th>Published</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allPosts.map((post, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td>{getPostTypeByValue(post.postType)[0].label}</td>\n                                            <td>{post.title}</td>\n                                            <td>{moment(post.createdAt).format('LLL')}</td>\n                                            <td>{post.isActive ? <CheckIconRender /> : <CrossIconRender />}</td>\n                                            <td>\n                                                <DetailsButtonRender\n                                                    onClick={() => {\n                                                        props.handleGoToPostDetails(post.postType, post._id);\n                                                    }}\n                                                />{' '}\n                                                &nbsp;\n                                                <EditButtonRender\n                                                    onClick={() => {\n                                                        props.handleGoToPostEdit(post.postType, post._id);\n                                                    }}\n                                                />{' '}\n                                                &nbsp;\n                                                <DeleteButtonRender\n                                                    onClick={() => {\n                                                        alert('Not developed yet');\n                                                    }}\n                                                />\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n    // } else\n    //     return (\n    //         <Container>\n    //             <Row>\n    //                 <Col className=\"parent-page\">\n    //                     <Row>\n    //                         <Col sm=\"6\">\n    //                             <h4>No Posts Found</h4>\n    //                         </Col>\n    //                         <Col sm=\"6\" className=\"right-align\">\n    //                             <Button\n    //                                 className=\"primary\"\n    //                                 onClick={() => {\n    //                                     props.handleGoToPostCreate();\n    //                                 }}\n    //                             >\n    //                                 Create Post\n    //                             </Button>\n    //                         </Col>\n    //                     </Row>\n    //                 </Col>\n    //             </Row>\n    //         </Container>\n    //     );\n};\nexport default PostList;\n","import React, { useEffect, useState } from 'react';\nimport PostList from '../../components/post/post-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllPostsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManagePosts = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [filter, setFilter] = useState({\n        postType: '',\n        title: '',\n        isActive: 'both',\n    });\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllPostsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToPostEdit = (postType, postId) => {\n        props.history.push(RoutePaths.postEditPage(postType, postId));\n    };\n    const handleGoToPostDetails = (postType, postId) => {\n        props.history.push(RoutePaths.postDetailsPage(postType, postId));\n    };\n    const handleGoToPostCreate = (postType) => {\n        props.history.push(RoutePaths.postCreatePage(postType));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <PostList\n                allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.posts : []}\n                handleGoToPostEdit={handleGoToPostEdit}\n                handleGoToPostDetails={handleGoToPostDetails}\n                handleGoToPostCreate={handleGoToPostCreate}\n                filter={filter}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllPostsResponse = state.Post.getAllPosts;\n    console.log('🚀 ~ file: manage-posts.js ~ line 21 ~ mapStateToProps ~ getAllPostsResponse', getAllPostsResponse);\n\n    return {\n        getAllPostsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManagePosts);\n","import React from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport * as RoutePath from '../../constants/route-paths';\nconst PostTypeMenu = (props) => {\n    const selected = props.selected;\n    const userId = props.userId;\n    //\n    const RenderNavItem = (key, value) => {\n        return (\n            <Nav.Item>\n                <Nav.Link eventKey={key} href={RoutePath.postListPageByOrganizationAndPostType(userId, key)}>\n                    {value}\n                </Nav.Link>\n            </Nav.Item>\n        );\n    };\n    return (\n        <Nav variant=\"pills\" activeKey={selected}>\n            {RenderNavItem('event', 'Event')}\n            {RenderNavItem('general', 'General')}\n            {RenderNavItem('project', 'Project')}\n            {RenderNavItem('in-kind', 'In Kind')}\n            {RenderNavItem('volunteering', 'Volunteering')}\n            {RenderNavItem('advocacy', 'Advocacy')}\n            {/* {RenderListButtonItem('Events', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'event'))}\n                        {RenderListButtonItem('Projects', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'project'))}\n                        {RenderListButtonItem('In-Kind', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'in-kind'))}\n                        {RenderListButtonItem('Volunteering', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'volunteering'))}\n                        {RenderListButtonItem('general', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'general'))}\n                        {RenderListButtonItem('Advocacy', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'advocacy'))} */}\n        </Nav>\n    );\n};\nexport default PostTypeMenu;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport EventListView from '../../components/event/event-card-view';\nimport { getAllPostsByOrganizationAndPostType, getPublicInfo } from '../../actions/organization-action';\nimport { followUser, unfollowUser, checkIfFollower } from '../../actions/follow-action';\nimport SideSubMenu from '../../components/organization/organization-sub-menu';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport PostTypeMenu from '../../components/organization/organization-post-menu';\nimport { postDetailsPage } from '../../constants/route-paths';\nconst SearchEvent = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [follows, setFollows] = useState(false);\n\n    const gotoPostDetails = (postType, postId) => {\n        props.history.push(postDetailsPage(postType, postId));\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n\n            const userId = props.match.params.userId;\n\n            props.dispatch(getPublicInfo(userId));\n            const user = props.auth.user;\n            const postType = props.match.params.postType;\n            props.dispatch(getAllPostsByOrganizationAndPostType(userId, postType));\n            props.dispatch(checkIfFollower(user._id, props.match.params.userId));\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    useEffect(() => {\n        setLoading(true);\n        const userId = props.match.params.userId;\n        const postType = props.match.params.postType;\n        props.dispatch(getAllPostsByOrganizationAndPostType(userId, postType));\n        setLoading(false);\n    }, [props.match.params.postType]);\n    useEffect(() => {\n        const success = props.getCheckIfFollowerResponse;\n        if (success) {\n            setFollows(props.getCheckIfFollowerResponse.follows);\n        }\n    }, [props.getCheckIfFollowerResponse]);\n    const handleFollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(followUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleUnfollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(unfollowUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getFollowResponse;\n        if (success) {\n            setFollows(true);\n            // NotificationManager.success('You are following', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getFollowResponse]);\n    useEffect(() => {\n        const { success } = props.getUnfollowResponse;\n\n        if (success) {\n            setFollows(false);\n            // NotificationManager.success('You are unfollowing', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getUnfollowResponse]);\n    const gotoPage = (url) => {\n        props.history.push(url);\n    };\n    if (loading) return <LoadingAnim />;\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <Row>\n                        <Col className=\"right-align\" sm=\"2\">\n                            <SideSubMenu\n                                organization={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.organization : {}}\n                                handleFollowClick={handleFollowClick}\n                                handleUnfollowClick={handleUnfollowClick}\n                                follows={follows}\n                                gotoPage={gotoPage}\n                            />\n                        </Col>\n                        <Col sm=\"9\" className=\"left-border\">\n                            <PostTypeMenu selected={props.match.params.postType} userId={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.organization.userId : ''} />\n                            <hr />\n                            <EventListView allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.allPosts : []} gotoPostDetails={gotoPostDetails} />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    const getAllPostsResponse = state.Post.getAllPosts;\n    console.log('🚀 ~ file: organization-post-list.js ~ line 95 ~ mapStateToProps ~ getAllPostsResponse', state);\n    const getPublicInfoResponse = state.Organization.getPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n        getAllPostsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchEvent);\n","import React from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport { communityFollowerListPage, communityFollowingListPage, communityFriendListPage, communityRequestListPage } from '../../constants/route-paths';\nconst CommunityMenu = (props) => {\n    const selected = props.selected;\n    return (\n        <Nav variant=\"pills\" activeKey={selected}>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"friend\" href={communityFriendListPage}>\n                    Friends\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"following\" href={communityFollowingListPage}>\n                    Followings\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"follower\" href={communityFollowerListPage}>\n                    Followers\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"request\" href={communityRequestListPage}>\n                    Requests\n                </Nav.Link>\n            </Nav.Item>\n        </Nav>\n    );\n};\nexport default CommunityMenu;\n","import React from 'react';\nimport { Card, CardColumns } from 'react-bootstrap';\nconst SampleOrgList = (props) => {\n    return (\n        <CardColumns className=\"four-columns\">\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name 1</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name 2</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n        </CardColumns>\n    );\n};\nexport default SampleOrgList;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityFriends = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"friend\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityFriends);\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityFollowers = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"follower\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityFollowers);\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityFollowings = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"following\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityFollowings);\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityRequests = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"request\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityRequests);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport UserSignUp from './containers/user/sign-up';\nimport UserSignIn from './containers/user/sign-in';\nimport UserSignOut from './containers/user/sign-out';\nimport LayoutRoute from './route-layout';\nimport * as RoutePath from './constants/route-paths';\nimport Layout from './hoc/layout';\nimport DashboardLayout from './hoc/dashboard-layout';\nimport UserAuthCheck from './hoc/auth';\nimport HomePage from './containers/home/home';\nimport SearchOrganization from './containers/search/search-organization';\nimport SearchEvent from './containers/search/search-event';\n\nimport IndividualBasicInfo from './containers/individual/individual-basic-info';\nimport IndividualInvolvement from './containers/individual/individual-involvement';\nimport IndividualPrivacy from './containers/individual/individual-privacy';\n// import IndividualList from './containers/individual/individual-list';\nimport IndividualDetails from './containers/individual/individual-details';\n\nimport OrganizationBasicInfo from './containers/organization/organization-basic-info';\nimport OrganizationServiceInfo from './containers/organization/organization-service-info';\nimport OrganizationInternalLink from './containers/organization/organization-internal-link';\n// import OrganizationList from './containers/organization/organization-list';\nimport OrganizationDetails from './containers/organization/organization-details';\nimport Messages from './containers/message/messages';\n\n// POST\n// import ManageNews from './containers/news/manage-news';\n\n// // EVENTS\n// import CreateEvent from './containers/event/create-event';\n// import DisplayEvent from './containers/event/display-event';\n// import ListingEvents from './containers/event/listing-events';\n// import ManageEvents from './containers/event/manage-events';\n\n// // PROJECTS\n// import CreateProject from './containers/project/create-project';\n// import DisplayProject from './containers/project/display-project';\n// import ListingProjects from './containers/project/listing-projects';\n// import ManageProjects from './containers/project/manage-projects';\n\n// POSTS\nimport CreatePost from './containers/post/create-post';\nimport DisplayPost from './containers/post/display-post';\nimport ListingPosts from './containers/post/listing-posts';\nimport ManagePosts from './containers/post/manage-posts';\nimport PostListPageByOrganizationAndPostType from './containers/organization/organization-post-list';\n// // VOLUNTEERING\n// import CreateVolunteering from './containers/volunteering/create-volunteering';\n// import DisplayVolunteering from './containers/volunteering/display-volunteering';\n// import ListingVolunteerings from './containers/volunteering/listing-volunteerings';\n// import ManageVolunteerings from './containers/volunteering/manage-volunteerings';\n\n//COMMUNITY\nimport CommunityFriends from './containers/community/friends';\nimport CommunityFollowers from './containers/community/followers';\nimport CommunityFollowings from './containers/community/followings';\nimport CommunityRequests from './containers/community/requests';\n\nconst allRoles = ['individual', 'organization', 'admin'];\nconst individualAndAdminRoles = ['individual', 'admin'];\nconst organizationAndAdminRoles = [, 'organization', 'admin'];\nconst adminRoles = ['admin'];\nconst Routes = () => {\n    return (\n        <Switch>\n            <LayoutRoute path={RoutePath.signUpPage} exact component={UserAuthCheck(UserSignUp, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signInPage} exact component={UserAuthCheck(UserSignIn, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signOutPage} exact component={UserSignOut} layout={Layout} />\n\n            <LayoutRoute path={RoutePath.individualCompleteBasicInfoPage} exact component={UserAuthCheck(IndividualBasicInfo, individualAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompleteInvolvementPage} exact component={UserAuthCheck(IndividualInvolvement, ['individual', 'admin'], true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompletePrivacyPage} exact component={UserAuthCheck(IndividualPrivacy, ['individual', 'admin'], true)} layout={Layout} />\n\n            <LayoutRoute path={RoutePath.individualEditBasicInfoPage} exact component={UserAuthCheck(IndividualBasicInfo, ['individual', 'admin'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.individualEditInvolvementPage} exact component={UserAuthCheck(IndividualInvolvement, ['individual', 'admin'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.individualEditPrivacyPage} exact component={UserAuthCheck(IndividualPrivacy, ['individual', 'admin'], true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.individualDetailsPage} exact component={UserAuthCheck(IndividualDetails, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.organizationCompleteBasicInfoPage} exact component={UserAuthCheck(OrganizationBasicInfo, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteServiceInfoPage} exact component={UserAuthCheck(OrganizationServiceInfo, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteInternalLinkPage} exact component={UserAuthCheck(OrganizationInternalLink, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationDetailsPage} exact component={UserAuthCheck(OrganizationDetails, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.organizationEditBasicInfoPage} exact component={UserAuthCheck(OrganizationBasicInfo, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationEditServiceInfoPage} exact component={UserAuthCheck(OrganizationServiceInfo, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationEditInternalLinkPage} exact component={UserAuthCheck(OrganizationInternalLink, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.homePage} exact component={UserAuthCheck(HomePage, allRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationSearchPage} exact component={UserAuthCheck(SearchOrganization, allRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventSearchPage} exact component={UserAuthCheck(SearchEvent, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path=\"/messages\" exact component={Messages} layout={DashboardLayout} />\n            {/* POST */}\n            {/* <LayoutRoute path={RoutePath.newsManagePage} exact component={UserAuthCheck(ManageNews, ['organization'], true)} layout={DashboardLayout} /> */}\n            <LayoutRoute path={RoutePath.postManagePage} exact component={UserAuthCheck(ManagePosts, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute\n                path={RoutePath.postListPageByOrganizationAndPostType(':userId', ':postType')}\n                exact\n                component={UserAuthCheck(PostListPageByOrganizationAndPostType, ['organization'], true)}\n                layout={DashboardLayout}\n            />\n            {/* EVENTS */}\n            {/* <LayoutRoute path={RoutePath.eventCreatePage} exact component={UserAuthCheck(CreateEvent, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventEditPage + ':eventId'} exact component={UserAuthCheck(CreateEvent, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventListByOrganizationPage} exact component={UserAuthCheck(ManageEvents, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventListPage} exact component={UserAuthCheck(ListingEvents, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventDetailsPage + ':eventId'} exact component={UserAuthCheck(DisplayEvent, allRoles, true)} layout={DashboardLayout} /> */}\n\n            {/* PROJECTS */}\n            {/* <LayoutRoute path={RoutePath.projectCreatePage} exact component={UserAuthCheck(CreateProject, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectEditPage + ':projectId'} exact component={UserAuthCheck(CreateProject, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectListByOrganizationPage} exact component={UserAuthCheck(ManageProjects, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectListPage} exact component={UserAuthCheck(ListingProjects, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectDetailsPage + ':projectId'} exact component={UserAuthCheck(DisplayProject, allRoles, true)} layout={DashboardLayout} /> */}\n\n            {/* POSTS */}\n            {/* <LayoutRoute path={RoutePath.postCreatePage} exact component={UserAuthCheck(CreatePost, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postEditPage + ':postId'} exact component={UserAuthCheck(CreatePost, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postListByOrganizationPage} exact component={UserAuthCheck(ManagePosts, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postListPage} exact component={UserAuthCheck(ListingPosts, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postDetailsPage + ':postId'} exact component={UserAuthCheck(DisplayPost, allRoles, true)} layout={DashboardLayout} /> */}\n\n            {/* VOLUNTEERING */}\n            {/* <LayoutRoute path={RoutePath.volunteeringCreatePage} exact component={UserAuthCheck(CreateVolunteering, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringEditPage + ':volunteeringId'} exact component={UserAuthCheck(CreateVolunteering, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringListByOrganizationPage} exact component={UserAuthCheck(ManageVolunteerings, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringListPage} exact component={UserAuthCheck(ListingVolunteerings, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringDetailsPage + ':volunteeringId'} exact component={UserAuthCheck(DisplayVolunteering, allRoles, true)} layout={DashboardLayout} /> */}\n\n            {/* POSTS */}\n            <LayoutRoute path={RoutePath.postCreatePage(':postType')} exact component={UserAuthCheck(CreatePost, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postEditPage(':postType', ':postId')} exact component={UserAuthCheck(CreatePost, ['organization'], true)} layout={DashboardLayout} />\n            {/* <LayoutRoute path={RoutePath.postListByOrganizationPage(':postType')} exact component={UserAuthCheck(ManagePosts, ['organization'], true)} layout={DashboardLayout} /> */}\n            <LayoutRoute path={RoutePath.postListPage(':postType')} exact component={UserAuthCheck(ListingPosts, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postDetailsPage(':postType', ':postId')} exact component={UserAuthCheck(DisplayPost, allRoles, true)} layout={DashboardLayout} />\n\n            {/* COMMUNITY */}\n            <LayoutRoute path={RoutePath.communityFriendListPage} exact component={UserAuthCheck(CommunityFriends, individualAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.communityFollowerListPage} exact component={UserAuthCheck(CommunityFollowers, individualAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.communityFollowingListPage} exact component={UserAuthCheck(CommunityFollowings, individualAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.communityRequestListPage} exact component={UserAuthCheck(CommunityRequests, individualAndAdminRoles, true)} layout={DashboardLayout} />\n        </Switch>\n    );\n};\nexport default Routes;\n","import * as Types from '../constants/reducer-types';\r\nconst initialState = {\r\n    getUser: {\r\n        user: {},\r\n        individual: {},\r\n        organization: {},\r\n    },\r\n    setUser: {},\r\n    allUsers: [],\r\n};\r\nconst UserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.GET_ALL_USERS:\r\n            return { ...state, allUsers: action.payload };\r\n        case Types.GET_USER:\r\n            return { ...state, getUser: action.payload };\r\n        case Types.SET_USER:\r\n            return { ...state, setUser: action.payload };\r\n        case Types.DELETE_USER:\r\n            return { ...state, user: action.payload };\r\n        case Types.CLEAR_USER:\r\n            return { ...state, user: {} };\r\n        case Types.CLEAR_ALL_USERS:\r\n            return { ...state, allUsers: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default UserReducer;\r\n","import * as Types from '../constants/reducer-types';\r\n\r\nconst initialState = {\r\n    auth: {\r\n        isAuth: false,\r\n        user: {},\r\n    },\r\n    changePassword: {},\r\n    recoverPassword: {},\r\n};\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.USER_AUTH:\r\n            return { ...state, auth: action.payload };\r\n        case Types.USER_SIGN_IN:\r\n            return { ...state, auth: action.payload };\r\n        case Types.USER_SIGN_OUT:\r\n            return { ...state, auth: action.payload };\r\n        case Types.USER_SIGN_UP:\r\n            return { ...state, auth: action.payload };\r\n        case Types.CHANGE_PASSWORD:\r\n            return { ...state, changePassword: action.payload };\r\n        case Types.RECOVER_PASSWORD:\r\n            return { ...state, recoverPassword: action.payload };\r\n        case Types.RESET_PASSWORD:\r\n            return { ...state, changePassword: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default AuthReducer;\r\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    allAreaOfInterest: {},\n};\nconst AreaOfInterestReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_AREA_OF_INTEREST:\n            return { ...state, allAreaOfInterest: action.payload };\n        default:\n            return state;\n    }\n};\nexport default AreaOfInterestReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getBasicInfo: {},\n    getInvolvement: {},\n    getPrivacy: {},\n    getPublicInfo: {},\n\n    setBasicInfo: {},\n    setInvolvement: {},\n    setPrivacy: {},\n\n    getAllIndividuals: {},\n};\nconst UserReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_INDIVIDUAL_BASIC_INFO:\n            return { ...state, getBasicInfo: action.payload };\n        case Types.GET_INDIVIDUAL_INVOLVEMENT:\n            return { ...state, getInvolvement: action.payload };\n        case Types.GET_INDIVIDUAL_PRIVACY:\n            return { ...state, getPrivacy: action.payload };\n        case Types.GET_ALL_INDIVIDUALS:\n            return { ...state, getAllIndividuals: action.payload };\n        case Types.GET_INDIVIDUAL_PUBLIC_INFO:\n            return { ...state, getPublicInfo: action.payload };\n\n        case Types.SET_INDIVIDUAL_BASIC_INFO:\n            return { ...state, setBasicInfo: action.payload };\n        case Types.SET_INDIVIDUAL_INVOLVEMENT:\n            return { ...state, setInvolvement: action.payload };\n        case Types.SET_INDIVIDUAL_PRIVACY:\n            return { ...state, setPrivacy: action.payload };\n\n        case Types.CLEAR_INDIVIDUAL_BASIC_INFO:\n            return { ...state, getBasicInfo: action.payload, setBasicInfo: action.payload };\n        case Types.CLEAR_INDIVIDUAL_INVOLVEMENT:\n            return { ...state, getInvolvement: action.payload, setInvolvement: action.payload };\n        case Types.CLEAR_INDIVIDUAL_PRIVACY:\n            return { ...state, getPrivacy: action.payload, setPrivacy: action.payload };\n        default:\n            return state;\n    }\n};\nexport default UserReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getBasicInfo: {},\n    getServiceInfo: {},\n    getInternalLink: {},\n    getPublicInfo: {},\n\n    setBasicInfo: {},\n    setServiceInfo: {},\n    setInternalLink: {},\n\n    getAllOrganizations: {},\n    getAllSuggestions: {},\n};\nconst UserReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ORGANIZATION_BASIC_INFO:\n            return { ...state, getBasicInfo: action.payload };\n        case Types.GET_ORGANIZATION_SERVICE_INFO:\n            return { ...state, getServiceInfo: action.payload };\n        case Types.GET_ORGANIZATION_INTERNAL_LINK:\n            return { ...state, getInternalLink: action.payload };\n        case Types.GET_ALL_ORGANIZATIONS:\n            return { ...state, getAllOrganizations: action.payload };\n        case Types.GET_ORGANIZATION_PUBLIC_INFO:\n            return { ...state, getPublicInfo: action.payload };\n\n        case Types.SET_ORGANIZATION_BASIC_INFO:\n            return { ...state, setBasicInfo: action.payload };\n        case Types.SET_ORGANIZATION_SERVICE_INFO:\n            return { ...state, setServiceInfo: action.payload };\n        case Types.SET_ORGANIZATION_INTERNAL_LINK:\n            return { ...state, setInternalLink: action.payload };\n\n        case Types.CLEAR_ORGANIZATION_BASIC_INFO:\n            return { ...state, getBasicInfo: action.payload, setBasicInfo: action.payload };\n        case Types.CLEAR_ORGANIZATION_SERVICE_INFO:\n            return { ...state, getServiceInfo: action.payload, setServiceInfo: action.payload };\n        case Types.CLEAR_ORGANIZATION_INTERNAL_LINK:\n            return { ...state, getInternalLink: action.payload, setInternalLink: action.payload };\n\n        case Types.GET_ALL_SUGGESTED_ORGANIZATIONS:\n            return { ...state, getAllSuggestions: action.payload };\n        default:\n            return state;\n    }\n};\nexport default UserReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getGlobalImpactAreas: {\n        success: false,\n    },\n    getImpactAreasByUser: { success: false },\n};\n\nconst ImpactAreaReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_GLOBAL_IMPACT_AREAS:\n            return { ...state, getGlobalImpactAreas: action.payload };\n        case Types.GET_ALL_IMPACT_AREAS_BY_USER:\n            return { ...state, getImpactAreasByUser: action.payload };\n        default:\n            return state;\n    }\n};\nexport default ImpactAreaReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getAllOrganizationTypes: {\n        success: false,\n    },\n};\n\nconst OrganizationTypeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_ORGANIZATION_TYPES:\n            return { ...state, getAllOrganizationTypes: action.payload };\n        default:\n            return state;\n    }\n};\nexport default OrganizationTypeReducer;\n","import * as Types from '../constants/reducer-types';\n\nconst initialState = {\n    getPost: {},\n    setPost: {},\n    getAllPosts: {},\n    deletePost: {},\n    homeFeed: {},\n    getAllSuggestions: {},\n    like: {},\n    cancelLike: {},\n    interested: {},\n    cancelInterested: {},\n    going: {},\n    cancelGoing: {},\n};\nconst PostReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_POST:\n            return { ...state, getPost: action.payload };\n        case Types.SET_POST:\n            return { ...state, setPost: action.payload };\n        case Types.GET_ALL_POSTS:\n            return { ...state, getAllPosts: action.payload };\n        case Types.CLEAR_POST:\n            return { ...state, getPost: action.payload, setPost: action.payload };\n        case Types.DELETE_POST:\n            return { ...state, deletePost: action.payload };\n        case Types.HOME_FEED:\n            return { ...state, homeFeed: action.payload };\n        case Types.GET_ALL_SUGGESTED_POSTS:\n            return { ...state, getAllSuggestions: action.payload };\n\n        case Types.LIKE_POST:\n            return { ...state, like: action.payload };\n        case Types.CANCEL_LIKE_POST:\n            return { ...state, cancelLike: action.payload };\n\n        case Types.INTERESTED_POST:\n            return { ...state, interested: action.payload };\n        case Types.CANCEL_INTERESTED_POST:\n            return { ...state, cancelInterested: action.payload };\n\n        case Types.GOING_POST:\n            return { ...state, going: action.payload };\n        case Types.CANCEL_GOING_POST:\n            return { ...state, cancelGoing: action.payload };\n        default:\n            return { ...state };\n    }\n};\nexport default PostReducer;\n","import * as Types from '../constants/reducer-types';\n\nconst initialState = {\n    followUser: {},\n    unfollowUser: {},\n    getAllFollowers: {},\n    getAllFollowings: {},\n    checkIfFollower: {},\n};\nconst FollowReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.FOLLOW_USER:\n            return { ...state, followUser: action.payload };\n        case Types.UNFOLLOW_USER:\n            return { ...state, unfollowUser: action.payload };\n        case Types.GET_ALL_FOLLOWERS:\n            return { ...state, getAllFollowers: action.payload };\n        case Types.GET_ALL_FOLLOWINGS:\n            return { ...state, getAllFollowings: action.payload, setEvent: action.payload };\n        case Types.CHECK_IF_FOLLOWER:\n            return { ...state, checkIfFollower: action.payload };\n        default:\n            return { ...state };\n    }\n};\nexport default FollowReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getGlobalSkills: {\n        success: false,\n    },\n    getSkillsByUser: { success: false },\n};\n\nconst SkillReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_GLOBAL_SKILLS:\n            return { ...state, getGlobalSkills: action.payload };\n        case Types.GET_ALL_SKILLS_BY_USER:\n            return { ...state, getSkillsByUser: action.payload };\n        default:\n            return state;\n    }\n};\nexport default SkillReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getGlobalLanguages: {\n        success: false,\n    },\n    getLanguagesByUser: { success: false },\n};\n\nconst LanguageReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_GLOBAL_LANGUAGES:\n            return { ...state, getGlobalLanguages: action.payload };\n        case Types.GET_ALL_LANGUAGES_BY_USER:\n            return { ...state, getLanguagesByUser: action.payload };\n        default:\n            return state;\n    }\n};\nexport default LanguageReducer;\n","import { combineReducers } from 'redux';\r\nimport User from './userReducer';\r\nimport Auth from './authReducer';\r\nimport AreaOfInterest from './area-of-interest-reducer';\r\nimport Individual from './individualReducer';\r\nimport Organization from './organizationReducer';\r\nimport ImpactArea from './impact-area-reducer';\r\nimport OrganizationType from './organization-type-reducer';\r\n// import Event from './event-reducer';\r\n// import Project from './project-reducer';\r\nimport Post from './post-reducer';\r\n// import Volunteering from './volunteering-reducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport Follow from './follow-reducer';\r\nimport Skill from './skill-reducer';\r\nimport Language from './language-reducer';\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    Auth,\r\n    User,\r\n    AreaOfInterest,\r\n    Individual,\r\n    Organization,\r\n    ImpactArea,\r\n    OrganizationType,\r\n\r\n    Post,\r\n\r\n    Follow,\r\n    Skill,\r\n    Language,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport Routes from \"./route\";\nimport reducers from \"./reducers\";\nimport { NotificationContainer } from \"react-notifications\";\n\nconst createStoreWithMiddleware = applyMiddleware(\n\tpromiseMiddleware,\n\tReduxThunk\n)(createStore);\n\nReactDOM.render(\n\t<Provider store={createStoreWithMiddleware(reducers)}>\n\t\t<BrowserRouter>\n\t\t\t<NotificationContainer />\n\t\t\t<Routes />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}