{"version":3,"sources":["actions/validate.js","components/form_template/input-render.js","constants/route-paths.js","components/user/sign-up-form.js","constants/api-paths.js","data_accesses/user-da.js","data_accesses/search-da.js","data_accesses/area-of-interest-da.js","constants/reducer-types.js","actions/index.js","actions/asyncValidate.js","components/form_template/loading-anim.js","constants/user-type-data.js","containers/user/sign-up.js","components/user/sign-in-form.js","containers/user/sign-in.js","containers/user/sign-out.js","route-layout.js","components/layout/react-autosuggest-lib.js","constants/default-images.js","components/layout/global-notification.js","components/layout/header.js","components/layout/footer.js","hoc/layout.js","hoc/dashboard-layout.js","hoc/auth.js","containers/home/sample-home-posts.js","containers/home/sample-home-suggestions.js","containers/home/home.js","components/organization/organization-list-view.js","data_accesses/impact-area-da.js","actions/impact-area-action.js","data_accesses/organization-da.js","data_accesses/organization-type-da.js","actions/organization-type-action.js","components/search/search-menu.js","components/search/filter-organization.js","constants/country-and-state.js","components/organization/organization-map-view.js","constants/default-user-information.js","containers/search/search-organization.js","actions/organization-action.js","components/event/event-card-view.js","data_accesses/event-da.js","actions/event-action.js","components/event/event-map-view.js","containers/search/search-event.js","data_accesses/individual-da.js","constants/genders.js","constants/races.js","constants/step-headers.js","components/individual/individual-basic-info-form.js","constants/misc.js","data_accesses/language-da.js","data_accesses/skill-da.js","actions/skill-action.js","containers/individual/individual-basic-info.js","actions/language-action.js","actions/individual-action.js","constants/involvement-types.js","components/individual/individual-involvement-form.js","containers/individual/individual-involvement.js","constants/privacy-activity-types.js","constants/privacy-search-types.js","components/individual/individual-privacy-form.js","containers/individual/individual-privacy.js","constants/languages.js","components/individual/individual-details-view.js","containers/individual/individual-details.js","components/organization/organization-basic-info-form.js","containers/organization/organization-basic-info.js","constants/service-area-types.js","components/organization/organization-service-info-form.js","containers/organization/organization-service-info.js","components/organization/organization-internal-link-form.js","containers/organization/organization-internal-link.js","components/organization/organization-details-view.js","data_accesses/follow-da.js","containers/organization/organization-details.js","actions/follow-action.js","containers/message/sample-thread-list.js","containers/message/sample-thread-details.js","containers/message/messages.js","containers/news/manage-news.js","components/event/event-image-list.js","components/event/event-geo-coding.js","components/event/event-form.js","containers/event/create-event.js","components/form_template/details-render.js","components/form_template/buttons-render.js","components/event/event-details.js","containers/event/display-event.js","containers/event/listing-events.js","components/event/event-list.js","containers/event/manage-events.js","components/project/project-image-list.js","components/project/project-geo-coding.js","components/project/project-form.js","data_accesses/project-da.js","actions/project-action.js","containers/project/create-project.js","components/project/project-map-view.js","components/project/project-details.js","containers/project/display-project.js","containers/project/listing-projects.js","components/project/project-list.js","containers/project/manage-projects.js","components/post/post-image-list.js","components/post/post-form.js","data_accesses/post-da.js","actions/post-action.js","containers/post/create-post.js","components/post/post-details.js","containers/post/display-post.js","containers/post/listing-posts.js","components/post/post-list.js","containers/post/manage-posts.js","components/volunteering/volunteering-image-list.js","components/volunteering/volunteering-geo-coding.js","components/volunteering/volunteering-form.js","data_accesses/volunteering-da.js","actions/volunteering-action.js","containers/volunteering/create-volunteering.js","components/volunteering/volunteering-map-view.js","components/volunteering/volunteering-details.js","containers/volunteering/display-volunteering.js","containers/volunteering/listing-volunteerings.js","components/volunteering/volunteering-list.js","containers/volunteering/manage-volunteerings.js","components/community/community-menu.js","containers/community/sample-users.js","containers/community/friends.js","containers/community/followers.js","containers/community/followings.js","containers/community/requests.js","route.js","reducers/userReducer.js","reducers/authReducer.js","reducers/area-of-interest-reducer.js","reducers/individualReducer.js","reducers/organizationReducer.js","reducers/impact-area-reducer.js","reducers/organization-type-reducer.js","reducers/event-reducer.js","reducers/project-reducer.js","reducers/post-reducer.js","reducers/volunteering-reducer.js","reducers/follow-reducer.js","reducers/skill-reducer.js","reducers/language-reducer.js","reducers/index.js","index.js"],"names":["required","value","props","isCheckable","checked","FormText","color","stringLengthRange","lower","upper","length","email","isEmail","date","moment","isValid","InputRender","input","label","type","placeholder","meta","touched","error","warning","className","InputRenderWithLargeLabel","min","max","unit","step","TextRender","col1","col2","rows","CheckBoxRender","SaInputRender","asyncValidating","style","marginBottom","name","SelectRender","children","Row","Col","sm","DatePickerRender","minDate","selectedDate","zIndex","setDate","console","log","Date","selected","dateFormat","CreatableMultiSelectRender","options","onChange","onBlur","isMulti","MultiSelectRender","DateTimePickerRender","showTimeSelect","signInPage","signUpPage","signOutPage","homePage","individualCompleteBasicInfoPage","individualCompleteInvolvementPage","individualCompletePrivacyPage","individualEditBasicInfoPage","individualEditInvolvementPage","individualEditPrivacyPage","organizationCompleteBasicInfoPage","organizationCompleteServiceInfoPage","organizationEditBasicInfoPage","organizationEditServiceInfoPage","userCommonSettingsPage","newsManagePage","eventCreatePage","eventEditPage","eventListByOrganizationPage","eventDetailsPage","projectCreatePage","projectEditPage","projectListByOrganizationPage","projectDetailsPage","postCreatePage","postEditPage","postListByOrganizationPage","postDetailsPage","volunteeringCreatePage","volunteeringEditPage","volunteeringListByOrganizationPage","volunteeringDetailsPage","communityFriendListPage","communityFollowerListPage","communityFollowingListPage","communityRequestListPage","stringRange6To256","stringRange6To100","SignUpForm","submitting","Container","md","onSubmit","handleSignUpSubmit","ProgressBar","now","handleUserTypeChange","isIndividualChecked","display","defaultChecked","Field","component","validate","Button","disabled","size","fontSize","to","RoutePath","serverAddress","apiConfig","headers","Authorization","getLocalStorage","getOrganizationList","getAllEvents","getAllEventsByOrganization","userId","getAllProjects","getAllPosts","getAllVolunteerings","getAllFollower","user_signup","user","axios","post","then","response","data","catch","err","user_signin","user_signout","create_new_user","delete_user","delete","update_user","model","put","APIPaths","get_all_users","userType","queryString","get","get_user","user_auth","change_password","passwords","recover_password","reset_password","token","get_all_area_of_interest","search_by_name","USER_SIGN_IN","USER_SIGN_UP","USER_SIGN_OUT","USER_AUTH","SET_USER","GET_USER","GET_ALL_USERS","DELETE_USER","CLEAR_USER","CLEAR_ALL_USERS","CHANGE_PASSWORD","RECOVER_PASSWORD","RESET_PASSWORD","GET_ALL_AREA_OF_INTEREST","GET_ALL_GLOBAL_IMPACT_AREAS","GET_ALL_IMPACT_AREAS_BY_USER","GET_ALL_GLOBAL_SKILLS","GET_ALL_SKILLS_BY_USER","GET_ALL_GLOBAL_LANGUAGES","GET_ALL_LANGUAGES_BY_USER","GET_ALL_ORGANIZATION_TYPES","GET_INDIVIDUAL_BASIC_INFO","GET_INDIVIDUAL_INVOLVEMENT","GET_INDIVIDUAL_PRIVACY","SET_INDIVIDUAL_BASIC_INFO","SET_INDIVIDUAL_INVOLVEMENT","SET_INDIVIDUAL_PRIVACY","CLEAR_INDIVIDUAL_BASIC_INFO","CLEAR_INDIVIDUAL_INVOLVEMENT","CLEAR_INDIVIDUAL_PRIVACY","GET_ALL_INDIVIDUALS","GET_INDIVIDUAL_PUBLIC_INFO","GET_ORGANIZATION_BASIC_INFO","GET_ORGANIZATION_SERVICE_INFO","GET_ORGANIZATION_INTERNAL_LINK","SET_ORGANIZATION_BASIC_INFO","SET_ORGANIZATION_SERVICE_INFO","SET_ORGANIZATION_INTERNAL_LINK","CLEAR_ORGANIZATION_BASIC_INFO","CLEAR_ORGANIZATION_SERVICE_INFO","CLEAR_ORGANIZATION_INTERNAL_LINK","GET_ALL_ORGANIZATIONS","GET_ORGANIZATION_PUBLIC_INFO","GET_EVENT","SET_EVENT","GET_ALL_EVENTS","CLEAR_EVENT","DELETE_EVENT","FOLLOW_USER","UNFOLLOW_USER","GET_ALL_FOLLOWERS","GET_ALL_FOLLOWINGS","CHECK_IF_FOLLOWER","GET_PROJECT","SET_PROJECT","GET_ALL_PROJECTS","CLEAR_PROJECT","DELETE_PROJECT","GET_POST","SET_POST","GET_ALL_POSTS","CLEAR_POST","DELETE_POST","GET_VOLUNTEERING","SET_VOLUNTEERING","GET_ALL_VOLUNTEERINGS","CLEAR_VOLUNTEERING","DELETE_VOLUNTEERING","setLocalStorage","key","window","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","parse","getItem","authenticate","userAuth","Types","payload","isAuth","clearUser","searchUsersByName","SearchDA","asyncValidate","dispatch","field","_id","emailExists","LoadingAnim","userTypeData","id","getUserTypeDataById","SignUp","event","state","target","setState","values","parseInt","UserDA","formSubmitted","loading","componentWillUnmount","password","prevProps","prevState","this","auth","success","Object","entries","map","valueJSON","NotificationManager","history","push","getBasicInfoPageByUserType","handleSubmit","Component","reduxForm","form","errors","confirmPassword","asyncChangeFields","asyncBlurFields","enableReinitialize","connect","Auth","SignInForm","handleSignInSubmit","SignIn","componentDidUpdate","errorFlag","errorMessage","message","SignOut","AppRoute","Layout","layout","rest","render","getSuggestionValue","suggestion","individual","firstName","lastName","individualNameRender","renderSectionTitle","section","getSectionSuggestions","users","App","cutOffName","substr","renderSuggestion","width","onClick","getSuggestions","a","str","trim","escapedValue","replace","newValue","method","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","inputProps","Form","inline","multiSection","React","withRouter","defaultIndividualProfilePicture","defaultOrganizationProfilePicture","RenderBellIcon","Image","src","roundedCircle","Badge","variant","NotificationRender","index","NavDropdown","Item","thumbnail","format","SampleNotificationsRender","padding","GlobalNotification","title","alignRight","Divider","Header","profilePicture","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","round","Footer","DashboardLayout","individualSideNav","onSelect","defaultSelected","eventKey","organizationSideNav","adminSideNav","UserAuthChecker","ComposedClass","allowedUserTypes","allowAuthenticatedUsers","AuthenticationCheck","authDone","includes","mapStateToProps","SamplePosts","useState","show","setShow","handleClose","handleShow","Modal","onHide","closeButton","Title","Body","ppl","i","height","org","description","latitude","longitude","createdAt","ttl","Home","OrganizationListView","allOrganizations","CardColumns","basicInfo","Card","gotoOrganizationDetails","Img","alt","Text","get_all_global_impact_areas","get_all_impact_areas_by_user","getAllGlobalImpactAreas","ImpactAreaDA","getAllImpactAreasByUser","get_basic_info","set_basic_info","get_service_info","set_service_info","serviceInfo","get_internal_link","set_internal_links","internalLink","get_public_info","get_list","get_list_by_filter","filter","t","toString","slice","get_all_events_by_organization","get_all_projects_by_organization","get_all_posts_by_organization","get_all_volunteerings_by_organization","get_all","getAllOrganizationTypes","OrganizationTypeDA","SearchMenu","activeKey","sz","Link","e","changeFilter","impactAreas","organizationTypes","serviceArea","address","keyword","resetFilter","handleOnApplyFilter","countries","code","getCountryByCode","country","states","Australia","Canada","Japan","UnitedStates","getStateByCountryAndCode","countyCode","libraries","mapContainerStyle","zoomControl","center","lat","lng","AllOrganizationOnMap","useLoadScript","googleMapsApiKey","process","isLoaded","loadError","markers","currentLocation","setSelected","onMapLoad","useCallback","mapRef","current","useRef","zoom","onLoad","marker","position","onCloseClick","area","fullAddress","street1","street2","city","addressMaker","defaultCurrentLocation","getImpactAreaResponse","ImpactArea","getGlobalImpactAreas","getOrganizationTypeResponse","OrganizationType","getAllOrganizationsResponse","Organization","getAllOrganizations","setCurrentLocation","activePage","setActivePage","setLoading","viewType","setViewType","keywords","setFilter","useEffect","navigator","geolocation","getCurrentPosition","coords","lg","filter_","filters","OrganizationDA","getAllOrganizationsByFilter","itemClass","linkClass","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","page","EventListView","allEvents","gotoEventDetails","defaultImage","startDateTime","create_event","get_event_by_id","eventId","get_all_events","update_event_by_id","delete_event_by_id","params","getEventById","EventDA","clearEvent","AllEventOnMap","getAllEventsResponse","Event","impactArea","getAllEventsByFilter","get_involvement","set_involvement","involvement","get_privacy","set_privacy","privacy","allGenders","allRaces","individualHeaders","stepNo","percent","header","organizationHeaders","BasicInfoForm","editMode","infoModal","setInfoModal","stateAndCountry","selectedCountry","setSelectedCountry","handleOnSubmit","gender","allLanguages","allSkills","rounded","handlePictureUpload","htmlFor","get_all_global_languages","get_all_languages_by_user","get_all_global_skills","get_all_skills_by_user","getAllSkillsByUser","SkillDA","getSkillResponse","Skill","getSkillsByUser","getLanguageResponse","Language","getLanguagesByUser","getBasicInfoResponse","Individual","getBasicInfo","setBasicInfoResponse","setBasicInfo","initialValues","races","race","setProfilePicture","setEditMode","setStateAndCountry","getInitialInfo","LanguageDA","IndividualDA","handleSetResponse","location","pathname","split","handleGetResponse","file","files","reader","FileReader","readAsDataURL","onload","result","onerror","skills","languages","allInvolvementTypes","ProfileStep3","allImpactAreas","involvementType","handleBackButton","handleSkipButton","getImpactAreasByUser","getInvolvementResponse","getInvolvement","setInvolvementResponse","setInvolvement","allActivityTypes","allSearchTypes","PrivacyForm","activity","search","getPrivacyResponse","getPrivacy","setPrivacyResponse","setPrivacy","DetailsView","infoRender","para","tagsRender","tags","tag","kids","dateOfBirth","language","communityInvolvement","getPublicInfoResponse","getPublicInfo","individualUserId","match","allOrganizationTypes","getAllOrganizationTypesResponse","allServiceAreaTypes","ServiceInfoForm","getServiceInfoResponse","getServiceInfo","setServiceInfoResponse","setServiceInfo","getOrganizationTypesResponse","InternalLinkForm","getInternalLinkResponse","getInternalLink","setInternalLinkResponse","setInternalLink","organization","follows","keywordsRender","RenderListButtonItem","ListGroup","alert","OverlayTrigger","placement","overlay","Tooltip","handleUnfollowClick","handleFollowClick","trigger","contactEmail","website","phone","ein","serviceAreas","mission","follow_user","unfollow_user","get_all_followers","get_all_followings","check_if_follower","followerId","followingId","getCheckIfFollowerResponse","Follow","checkIfFollower","getFollowResponse","followUser","getUnfollowResponse","unfollowUser","setFollows","organizationUserId","FollowDA","ThreadList","ThreadDetails","Messages","ManagePosts","ButtonRender","path","marginTop","CardDeck","border","RoutePaths","EventImageList","images","pill","Table","striped","bordered","hover","responsive","image","handleImageDescriptionEdit","handleImageDelete","handleImagePosition","disableDefaultUI","searchBoxStyle","SearchBoxRender","panTo","usePlacesAutocomplete","requestOptions","radius","ready","status","setValue","clearSuggestions","handleSelect","getGeocode","results","getLatLng","EventGeoCoding","selectedLocation","parseFloat","handleLocationChange","setZoom","latLng","EventForm","handleGoToManageEvents","menuPlacement","setLocation","getEventResponse","getEvent","setEventResponse","setEvent","setImages","creatorId","updateEventById","createEvent","idx","movement","images_","confirmAlert","buttons","splice","TagWithLabelRender","DescriptionRender","valueRender","ImageAndDescriptionRender","InfoRender","LikeButtonRender","GoingButtonRender","DisplayEvent","endDateTime","ListingEvent","EventList","handleGoToEventCreate","handleGoToEventDetails","handleGoToEventEdit","events","ProjectImageList","ProjectGeoCoding","ProjectForm","handleGoToManageProjects","create_project","project","get_project_by_id","projectId","get_all_projects","update_project_by_id","delete_project_by_id","getProjectById","ProjectDA","clearProject","getProjectResponse","Project","getProject","setProjectResponse","setProject","updateProjectById","createProject","AllProjectOnMap","allProjects","DisplayProject","ListingProject","ProjectList","handleGoToProjectCreate","handleGoToProjectDetails","handleGoToProjectEdit","getAllProjectsResponse","getAllProjectsByOrganization","projects","PostImageList","PostForm","handleGoToManagePosts","create_post","get_post_by_id","postId","get_all_posts","update_post_by_id","delete_post_by_id","getPostById","PostDA","clearPost","getPostResponse","Post","getPost","setPostResponse","setPost","updatePostById","createPost","DisplayPost","PostList","allPosts","handleGoToPostCreate","handleGoToPostDetails","handleGoToPostEdit","getAllPostsResponse","getAllPostsByOrganization","posts","VolunteeringImageList","VolunteeringGeoCoding","VolunteeringForm","handleGoToManageVolunteerings","create_volunteering","volunteering","get_volunteering_by_id","volunteeringId","get_all_volunteerings","update_volunteering_by_id","delete_volunteering_by_id","getVolunteeringById","VolunteeringDA","clearVolunteering","getVolunteeringResponse","Volunteering","getVolunteering","setVolunteeringResponse","setVolunteering","updateVolunteeringById","createVolunteering","AllVolunteeringOnMap","allVolunteerings","DisplayVolunteering","ListingVolunteering","VolunteeringList","handleGoToVolunteeringCreate","handleGoToVolunteeringDetails","handleGoToVolunteeringEdit","getAllVolunteeringsResponse","getAllVolunteeringsByOrganization","volunteerings","CommunityMenu","SampleOrgList","allRoles","individualAndAdminRoles","organizationAndAdminRoles","Routes","exact","UserAuthCheck","UserSignUp","UserSignIn","UserSignOut","IndividualBasicInfo","IndividualInvolvement","IndividualPrivacy","IndividualDetails","OrganizationBasicInfo","OrganizationServiceInfo","OrganizationInternalLink","OrganizationDetails","HomePage","SearchOrganization","SearchEvent","ManageNews","CreateEvent","ManageEvents","ListingEvents","CreateProject","ManageProjects","ListingProjects","CreatePost","ListingPosts","CreateVolunteering","ManageVolunteerings","ListingVolunteerings","CommunityFriends","CommunityFollowers","CommunityFollowings","CommunityRequests","initialState","getUser","setUser","allUsers","UserReducer","action","changePassword","recoverPassword","AuthReducer","allAreaOfInterest","AreaOfInterestReducer","getAllIndividuals","ImpactAreaReducer","OrganizationTypeReducer","deleteEvent","EventReducer","deleteProject","ProjectReducer","deletePost","PostReducer","deleteVolunteering","VolunteeringReducer","getAllFollowers","getAllFollowings","FollowReducer","getGlobalSkills","SkillReducer","getGlobalLanguages","LanguageReducer","rootReducer","combineReducers","formReducer","User","AreaOfInterest","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","store","reducers","document","getElementById"],"mappings":"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","file":"static/js/main.01a094a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { isEmail, isNumeric } from 'validator';\r\nimport { FormText } from 'reactstrap';\r\nimport moment from 'moment';\r\nexport const required = (value, props) => {\r\n    if (!value || (props.isCheckable && !props.checked)) {\r\n        return <FormText color=\"danger\">This field is required.</FormText>;\r\n    }\r\n};\r\n\r\nexport const rangeLimit = (lower, upper) => (value, props) => {\r\n    if (value) {\r\n        if (parseInt(value) < parseInt(lower) || parseInt(value) > parseInt(upper)) {\r\n            return (\r\n                <FormText color=\"danger\">\r\n                    Range exceeded. Range is {lower} to {upper}\r\n                </FormText>\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\nexport const numeric = (value, props) => {\r\n    if (value) {\r\n        if (value || (props.isCheckable && !props.checked)) {\r\n            if (!isNumeric(value.toString())) {\r\n                return (\r\n                    <FormText color=\"danger\">\r\n                        <b>{value}</b> is not a numeric value.\r\n                    </FormText>\r\n                );\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const alphabetic = (value, props) => {\r\n    if (value) {\r\n        if (value || (props.isCheckable && !props.checked)) {\r\n            if (!value.match(/^[A-Za-z\\s]+$/)) {\r\n                return <FormText color=\"danger\">Use only alphabetic characters.</FormText>;\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const phoneNumber = (value, props) => {\r\n    if (value) {\r\n        if (value || (props.isCheckable && !props.checked)) {\r\n            if (!value.match(/^[0-9\\-().\\s]{6,15}$/)) {\r\n                return <FormText color=\"danger\">Invalid phone number.</FormText>;\r\n            }\r\n        }\r\n    }\r\n};\r\nexport const stringLimit = (limit) => (value, props) => {\r\n    if (value) {\r\n        if (value.length > 0 && value.length > limit) return <FormText color=\"danger\">Limit of characters (max {limit}) exceeded.</FormText>;\r\n    }\r\n};\r\nexport const stringLengthRange = (lower, upper) => (value, props) => {\r\n    if (value) {\r\n        if (value.length > 0 && value.length > upper) return <FormText color=\"danger\">Limit of characters (max {upper}) exceeded.</FormText>;\r\n        else if (value.length > 0 && value.length < lower) return <FormText color=\"danger\">Enter minimum ({lower}) characters.</FormText>;\r\n    }\r\n};\r\nexport const email = (value) => {\r\n    if (value) {\r\n        if (!isEmail(value)) {\r\n            return <FormText color=\"danger\">'{value}' is not a valid email.</FormText>;\r\n        }\r\n    }\r\n};\r\nexport const stringLowerLimit = (limit) => (value, props) => {\r\n    if (value.length < limit) return <FormText color=\"danger\">Minimum {limit} characters required. </FormText>;\r\n};\r\nexport const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.confirmPassword) {\r\n        errors.confirmPassword = <FormText color=\"danger\">This field is required.</FormText>;\r\n    } else if (values.confirmPassword !== values.password) {\r\n        errors.confirmPassword = <FormText color=\"danger\">Password and confirm password mismatched.</FormText>;\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport const requiredSelect = (value, props) => {\r\n    if (!value || value === '0' || (props.isCheckable && !props.checked)) {\r\n        return <FormText color=\"danger\">This field is required.</FormText>;\r\n    }\r\n};\r\nexport const date = (value, props) => {\r\n    if (value) {\r\n        if (value || (props.isCheckable && !props.checked)) {\r\n            if (!moment(value).isValid()) {\r\n                return <FormText color=\"danger\">Invalid date.</FormText>;\r\n            }\r\n        }\r\n    }\r\n};\r\n","import React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\n\r\nexport const InputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-4\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-8\">\r\n                <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputRenderWithLargeLabel = ({ input, label, type, placeholder, min, max, unit, step, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-6\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-6\">\r\n                {type === 'number' ? (\r\n                    <div className=\"input-group\">\r\n                        <input {...input} placeholder={placeholder} type={type} className=\"form-control\" min={min} max={max} unit={unit} step={step} />\r\n                        {unit && (\r\n                            <div className=\"input-group-append\">\r\n                                <span className=\"input-group-text\">{unit}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                )}\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const TextRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <textarea {...input} placeholder={placeholder} rows=\"5\" className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const CheckBoxRender = ({ input, label, type, placeholder, col1, col2, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <input {...input} type={type} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputNumberRender = ({ input, label, type, placeholder, step, min, max, unit, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className=\"col-sm-3 col-form-label\">{label}</label>\r\n            <div className=\"col-sm-8\">\r\n                <div className=\"input-group\">\r\n                    <input style={{ float: 'left' }} {...input} placeholder={placeholder} step={step} min={min} max={max} type={type} className=\"form-control\" />\r\n                    <span className=\"InputNumberUnitSpan\">{unit}</span>\r\n                </div>\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SaInputRender = ({ input, label, type, placeholder, meta: { asyncValidating, touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div style={{ marginBottom: '10px' }} className={className}>\r\n            <label className=\"col-sm-4 signUpLabel\">{label}</label>\r\n\r\n            <div className={asyncValidating ? 'async-validating col-sm-8' : 'col-sm-8'}>\r\n                <input {...input} placeholder={placeholder} type={type} className={'form-control ' + input.name} />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SelectRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2}>\r\n                <select {...input} className=\"form-control\">\r\n                    {children}\r\n                </select>\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const HalfInputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <>\r\n            <input {...input} placeholder={placeholder} type={type} className=\"form-control half-text-input\" />\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </>\r\n    );\r\n};\r\n\r\n// export const SwitchRender = ({ input, label, type, id, checked, placeholder, meta: { touched, error, warning } }) => {\r\n//     const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n//     return (\r\n//         <div className={className}>\r\n//             <div className=\"col-sm-9\">\r\n//                 <label className=\"form-label\">{label}</label>\r\n//             </div>\r\n\r\n//             <div className=\"col-sm-3 custom-control custom-switch\">\r\n//                 {/* <input type=\"checkbox\" className=\"custom-control-input\" id={id} checked={checked} /> */}\r\n//                 <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\"></input>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\nexport const SwitchRender = ({ input, label, type, placeholder, id, defaultChecked, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-6\" htmlFor={id}>\r\n                {label}\r\n            </label>\r\n            <div className=\"col-sm-3 custom-control custom-switch\" style={{ marginLeft: 20 }}>\r\n                <input {...input} type=\"checkbox\" className=\"custom-control-input\" id={id} defaultChecked={input.value} />\r\n                <label className=\"custom-control-label\" htmlFor={id}>\r\n                    {/* Toggle this switch element */}\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DatePickerRender = ({ input, label, minDate, selectedDate, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-4\">{label}</label>\r\n            <div className=\"col-sm-8 date-picker-div\" style={{ zIndex: zIndex }}>\r\n                <DatePicker className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CreatableMultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <CreatableSelect {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} placeholder={placeholder} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const MultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <Select {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const DateTimePickerRender = ({ input, label, minDate, selectedDate, col1, col2, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'form-label col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2} style={{ zIndex: zIndex }}>\r\n                <DatePicker showTimeSelect className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy h:mm aa\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","//OLD\r\n// Sign related pages\r\nexport const signInPage = '/user/sign-in';\r\nexport const signUpPage = '/user/sign-up';\r\nexport const signOutPage = '/user/sign-out';\r\nexport const forgotPasswordPage = '/user/forgot-password';\r\n// Individual View\r\nexport const homePage = '/';\r\n\r\nexport const userProfilePage = '/profile/'; //+userId take userid from param\r\nexport const passwordChangePage = '/settings/password/change'; // take userid from auth\r\n\r\nexport const unAuthorizedPage = '/user/unauthorized';\r\n\r\nexport const getPasswordResetPage = (userId, resetTokenId) => {\r\n    return `/user/${userId}/reset/${resetTokenId}`;\r\n};\r\nexport const notFoundPage = '*';\r\n\r\n// New\r\n// export const completeUserProfile = '/user/complete-profile';\r\nexport const organizationSearchPage = '/search/organization';\r\nexport const eventSearchPage = '/search/event';\r\n\r\n// BREAKING DOWN\r\n\r\n// INDIVIDUAL\r\nexport const individualCompleteBasicInfoPage = '/complete/individual/basic-info';\r\nexport const individualCompleteInvolvementPage = '/complete/individual/involvement';\r\nexport const individualCompletePrivacyPage = '/complete/individual/privacy';\r\n\r\nexport const individualEditBasicInfoPage = '/edit/individual/basic-info';\r\nexport const individualEditInvolvementPage = '/edit/individual/involvement';\r\nexport const individualEditPrivacyPage = '/edit/individual/privacy';\r\n\r\nexport const individualDetailsPage = '/individual/details/:userId';\r\nexport const individualListPage = '/individual/all';\r\n\r\n// ORGANIZATION\r\nexport const organizationCompleteBasicInfoPage = '/complete/organization/basic-info';\r\nexport const organizationCompleteServiceInfoPage = '/complete/organization/service-info';\r\nexport const organizationCompleteInternalLinkPage = '/complete/organization/internal-link';\r\n\r\nexport const organizationEditBasicInfoPage = '/edit/organization/basic-info';\r\nexport const organizationEditServiceInfoPage = '/edit/organization/service-info';\r\nexport const organizationEditInternalLinkPage = '/edit/organization/internal-link';\r\n\r\nexport const organizationDetailsPage = '/organization/details/:userId';\r\nexport const organizationListPage = '/user/organization/all';\r\n\r\n// COMMON: (INDIVIDUAL+ORGANIZATION)\r\nexport const userCommonSettingsPage = '/user/common/settings';\r\n\r\n// CALENDER / SCHEDULER\r\nexport const schedulerPage = '/calender/view';\r\n\r\n// MAILBOX\r\nexport const mailInboxPage = '/mails/inbox';\r\nexport const mailComposePage = '/mail/compose';\r\nexport const mailDraftPage = '/mail/draft';\r\nexport const mailSentPage = '/mail/sent';\r\n\r\n// CUSTOM\r\nexport const getBasicInfoPageByUserType = (userType) => {\r\n    return `/complete/${userType}/basic-info`;\r\n};\r\n// POSTS\r\nexport const newsManagePage = '/user/news';\r\n\r\n// EVENTS\r\nexport const eventCreatePage = '/user/event/create';\r\nexport const eventEditPage = '/user/event/edit/';\r\nexport const eventListByOrganizationPage = '/user/event/all';\r\nexport const eventListPage = '/event/all';\r\nexport const eventDetailsPage = '/event/details/';\r\n\r\n// PROJECTS\r\nexport const projectCreatePage = '/user/project/create';\r\nexport const projectEditPage = '/user/project/edit/';\r\nexport const projectListByOrganizationPage = '/user/project/all';\r\nexport const projectListPage = '/project/all';\r\nexport const projectDetailsPage = '/project/details/';\r\n\r\n// POSTS\r\nexport const postCreatePage = '/user/post/create';\r\nexport const postEditPage = '/user/post/edit/';\r\nexport const postListByOrganizationPage = '/user/post/all';\r\nexport const postListPage = '/post/all';\r\nexport const postDetailsPage = '/post/details/';\r\n\r\n// VOLUNTEERING\r\nexport const volunteeringCreatePage = '/user/volunteering/create';\r\nexport const volunteeringEditPage = '/user/volunteering/edit/';\r\nexport const volunteeringListByOrganizationPage = '/user/volunteering/all';\r\nexport const volunteeringListPage = '/volunteering/all';\r\nexport const volunteeringDetailsPage = '/volunteering/details/';\r\n\r\n// COMMUNITY\r\nexport const communityFriendListPage = '/community/friends';\r\nexport const communityFollowerListPage = '/community/followers';\r\nexport const communityFollowingListPage = '/community/followings';\r\nexport const communityRequestListPage = '/community/requests';\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { required, email, stringLengthRange } from '../../actions/validate';\r\nimport { SaInputRender } from '../form_template/input-render';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\r\n\r\nconst stringRange6To256 = stringLengthRange(6, 256);\r\nconst stringRange6To100 = stringLengthRange(6, 100);\r\n\r\nconst SignUpForm = (props) => {\r\n    const submitting = props.submitting;\r\n    return (\r\n        <Container className=\"saLoginForm\">\r\n            <Row>\r\n                <Col></Col>\r\n                <Col md=\"6\" className=\"sign-ing-form\">\r\n                    <form onSubmit={props.handleSignUpSubmit}>\r\n                        <div className=\"center-text\">\r\n                            <h3>Sign Up On CascAid</h3>\r\n                        </div>\r\n                        <div>\r\n                            <p>Step 1 of 7</p>\r\n                            <ProgressBar now={14} />\r\n                            <br />\r\n                            <h4>Sign up as</h4>\r\n                        </div>\r\n                        <Row onChange={props.handleUserTypeChange}>\r\n                            <Col className=\"sign-as-left\">\r\n                                <label className={`btn ${props.isIndividualChecked ? 'user-type-checked' : 'user-type-unchecked'}`}>\r\n                                    <input className=\"sign-radio-btn\" style={{ display: 'none' }} type=\"radio\" value={1} name=\"regType\" defaultChecked /> Individual\r\n                                </label>\r\n                            </Col>\r\n                            <Col className=\"sign-as-right\">\r\n                                <label className={`btn ${!props.isIndividualChecked ? 'user-type-checked' : 'user-type-unchecked'}`}>\r\n                                    <input className=\"sign-radio-btn\" style={{ display: 'none' }} type=\"radio\" value={2} name=\"regType\" />\r\n                                    Organization\r\n                                </label>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <br />\r\n                        <div className=\"container\">\r\n                            <Field name=\"email\" type=\"text\" component={SaInputRender} placeholder=\"example@example.com\" label=\"Email\" validate={[required, email, stringRange6To256]} />\r\n                            <Field name=\"password\" type=\"password\" component={SaInputRender} label=\"Password\" validate={[required, stringRange6To100]} />\r\n                            <Field name=\"confirmPassword\" type=\"password\" component={SaInputRender} label=\"Confirm Password\" validate={[required, stringRange6To100]} />\r\n                            <br />\r\n                            <Row>\r\n                                <Col sm=\"6\">\r\n                                    <Button className=\"btn signUpBtn\" disabled={submitting} type=\"submit\" size=\"sm\">\r\n                                        SIGN UP\r\n                                    </Button>\r\n                                </Col>\r\n                                {/* <Col sm=\"6\"></Col> */}\r\n                            </Row>\r\n                            <br />\r\n                            <p>\r\n                                Already have an account? &nbsp;\r\n                                <Link\r\n                                    style={{\r\n                                        fontSize: '14px',\r\n                                    }}\r\n                                    to={RoutePath.signInPage}\r\n                                >\r\n                                    Sign In\r\n                                </Link>\r\n                            </p>\r\n                        </div>\r\n                    </form>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import { getLocalStorage } from '../actions';\r\n// export const serverAddress = `http://localhost:3001`;\r\nexport const serverAddress = `http://172.104.35.84`;\r\nexport const checkEmailExist = serverAddress + `/api/users/email/`;\r\nexport const userSignUp = serverAddress + `/api/auth/sign-up`;\r\nexport const userSignIn = serverAddress + `/api/auth/sign-in`;\r\nexport const userSignOut = serverAddress + `/api/auth/sign-out`;\r\nexport const getOneUser = serverAddress + `/api/users/`;\r\nexport const getAllUsers = serverAddress + `/api/users`;\r\nexport const createOneUser = serverAddress + `/api/users`;\r\nexport const updateUser = serverAddress + `/api/users/`;\r\nexport const deleteOneUser = serverAddress + `/api/users/`;\r\nexport const userAuth = serverAddress + `/api/auth`;\r\nexport const changePassword = serverAddress + `/api/auth/`;\r\nexport const recoverPassword = serverAddress + `/api/auth/recover`;\r\nexport const resetPassword = serverAddress + `/api/auth/`;\r\nexport const getAllAreaOfInterests = serverAddress + `/api/area-of-interest/`;\r\n\r\nexport const apiConfig = () => ({ headers: { Authorization: `Bearer ${getLocalStorage(`token`)}` } });\r\n// NEW API\r\nexport const getIndividualBasicInfo = (userId) => serverAddress + `/api/users/individual/${userId}/basic-info`;\r\nexport const getIndividualInvolvement = (userId) => serverAddress + `/api/users/individual/${userId}/involvement`;\r\nexport const getIndividualPrivacy = (userId) => serverAddress + `/api/users/individual/${userId}/privacy`;\r\n\r\nexport const getOrganizationBasicInfo = (userId) => serverAddress + `/api/users/organization/${userId}/basic-info`;\r\nexport const getOrganizationServiceInfo = (userId) => serverAddress + `/api/users/organization/${userId}/service-info`;\r\nexport const getOrganizationInternalLink = (userId) => serverAddress + `/api/users/organization/${userId}/internal-link`;\r\n\r\nexport const setIndividualBasicInfo = (userId) => serverAddress + `/api/users/individual/${userId}/basic-info`;\r\nexport const setIndividualInvolvement = (userId) => serverAddress + `/api/users/individual/${userId}/involvement`;\r\nexport const setIndividualPrivacy = (userId) => serverAddress + `/api/users/individual/${userId}/privacy`;\r\n\r\nexport const setOrganizationBasicInfo = (userId) => serverAddress + `/api/users/organization/${userId}/basic-info`;\r\nexport const setOrganizationServiceInfo = (userId) => serverAddress + `/api/users/organization/${userId}/service-info`;\r\nexport const setOrganizationInternalLink = (userId) => serverAddress + `/api/users/organization/${userId}/internal-link`;\r\n\r\nexport const getIndividualList = serverAddress + `/api/users/individual`;\r\nexport const getOrganizationList = serverAddress + `/api/users/organization`;\r\n\r\nexport const getIndividualPublicInfo = (userId) => serverAddress + `/api/users/individual/${userId}/public-info`;\r\nexport const getOrganizationPublicInfo = (userId) => serverAddress + `/api/users/organization/${userId}/public-info`;\r\n\r\nexport const responseLog = (apiPath, response) => {\r\n    console.log(`RESPONSE FROM ` + apiPath + `: ` + response);\r\n};\r\nexport const errorLog = (apiPath, err) => {\r\n    console.log(`ERROR FROM`, apiPath, err);\r\n};\r\n\r\n// Impact Area\r\nexport const getAllGlobalImpactAreas = serverAddress + `/api/impact-area/global`;\r\nexport const getAllImpactAreasByUser = serverAddress + `/api/impact-area/user/`;\r\n\r\n// Skill\r\nexport const getAllGlobalSkills = serverAddress + `/api/skills/global`;\r\nexport const getAllSkillsByUser = serverAddress + `/api/skills/user/`;\r\n\r\n// Languages\r\nexport const getAllGlobalLanguages = serverAddress + `/api/languages/global`;\r\nexport const getAllLanguagesByUser = serverAddress + `/api/languages/user/`;\r\n\r\n// SEARCH\r\nexport const searchByName = serverAddress + `/api/users/search/`;\r\n\r\n// Organization Type\r\nexport const getAllOrganizationTypes = serverAddress + `/api/organization-type/`;\r\n\r\n// EVENTS\r\nexport const getEventById = serverAddress + `/api/events/`;\r\nexport const createEvent = serverAddress + `/api/events/`;\r\nexport const updateEventById = serverAddress + `/api/events/`;\r\nexport const deleteEventById = serverAddress + `/api/events/`;\r\nexport const getAllEvents = serverAddress + `/api/events`;\r\n\r\nexport const getAllEventsByOrganization = (userId) => serverAddress + `/api/organization/${userId}/events`;\r\n\r\n// PROJECTS\r\nexport const getProjectById = serverAddress + `/api/projects/`;\r\nexport const createProject = serverAddress + `/api/projects/`;\r\nexport const updateProjectById = serverAddress + `/api/projects/`;\r\nexport const deleteProjectById = serverAddress + `/api/projects/`;\r\nexport const getAllProjects = serverAddress + `/api/projects`;\r\n\r\nexport const getAllProjectsByOrganization = (userId) => serverAddress + `/api/organization/${userId}/projects`;\r\n\r\n// POSTS\r\nexport const getPostById = serverAddress + `/api/posts/`;\r\nexport const createPost = serverAddress + `/api/posts/`;\r\nexport const updatePostById = serverAddress + `/api/posts/`;\r\nexport const deletePostById = serverAddress + `/api/posts/`;\r\nexport const getAllPosts = serverAddress + `/api/posts`;\r\n\r\nexport const getAllPostsByOrganization = (userId) => serverAddress + `/api/organization/${userId}/posts`;\r\n\r\n// VOLUNTEERING\r\nexport const getVolunteeringById = serverAddress + `/api/volunteerings/`;\r\nexport const createVolunteering = serverAddress + `/api/volunteerings/`;\r\nexport const updateVolunteeringById = serverAddress + `/api/volunteerings/`;\r\nexport const deleteVolunteeringById = serverAddress + `/api/volunteerings/`;\r\nexport const getAllVolunteerings = serverAddress + `/api/volunteerings`;\r\n\r\nexport const getAllVolunteeringsByOrganization = (userId) => serverAddress + `/api/organization/${userId}/volunteerings`;\r\n\r\n// FOLLOW\r\nexport const followUser = serverAddress + `/api/follows/follow`;\r\nexport const unfollowUser = serverAddress + `/api/follows/unfollow`;\r\n\r\nexport const getAllFollower = (userId) => serverAddress + `/api/follows/follower/${userId}`;\r\nexport const getAllFollowing = (userId) => serverAddress + `/api/follows/following/${userId}`;\r\nexport const checkIfFollower = (followerId, followingId) => serverAddress + `/api/follows/${followerId}/${followingId}`;\r\n","import axios from 'axios';\r\nimport * as APIPaths from '../constants/api-paths';\r\nclass UserDA {\r\n    user_signup = (user) => {\r\n        return axios\r\n            .post(APIPaths.userSignUp, user)\r\n            .then((response) => {\r\n                return response.data;\r\n            })\r\n            .catch((err) => err.response.data);\r\n    };\r\n    user_signin = (user) => {\r\n        return axios\r\n            .post(APIPaths.userSignIn, user)\r\n            .then((response) => {\r\n                return response.data;\r\n            })\r\n            .catch((err) => err.response.data);\r\n    };\r\n    user_signout = () => {\r\n        return axios\r\n            .post(APIPaths.userSignOut)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    create_new_user = (user) => {\r\n        return axios\r\n            .post(APIPaths.createOneUser, user)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    delete_user = (userId) => {\r\n        return axios\r\n            .delete(APIPaths.deleteOneUser + userId)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    update_user = (userId, step, user, model) => {\r\n        return axios\r\n            .put(APIPaths.updateUser + userId, { user, step, model }, APIPaths.apiConfig())\r\n            .then((response) => {\r\n                return response.data;\r\n            })\r\n            .catch((err) => {\r\n                return err.response.data;\r\n            });\r\n    };\r\n\r\n    get_all_users = (userType) => {\r\n        let queryString = '';\r\n        if (userType && (userType === 'organization' || userType === 'individual')) {\r\n            queryString += '?userType=' + userType;\r\n        }\r\n        return axios\r\n            .get(APIPaths.getAllUsers + queryString)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    get_user = (userId) => {\r\n        return axios\r\n            .get(APIPaths.getOneUser + userId, APIPaths.apiConfig())\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    user_auth = () => {\r\n        return axios\r\n            .get(APIPaths.userAuth)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    change_password = (userId, passwords) => {\r\n        return axios\r\n            .put(APIPaths.changePassword + userId + '/password', passwords)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    recover_password = (email) => {\r\n        return axios\r\n            .post(APIPaths.recoverPassword, email)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n    reset_password = (userId, token, passwords) => {\r\n        return axios\r\n            .post(APIPaths.resetPassword + userId + '/reset/' + token, passwords)\r\n            .then((response) => response.data)\r\n            .catch((err) => err.response.data);\r\n    };\r\n}\r\n\r\nexport default new UserDA();\r\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass SearchDA {\n    search_by_name = (name) => {\n        return axios\n            .get(APIPaths.searchByName + name)\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new SearchDA();\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass AreaOfInterestDA {\n    get_all_area_of_interest = () => {\n        return axios\n            .get(APIPaths.getAllAreaOfInterests)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new AreaOfInterestDA();\n","export const USER_SIGN_IN = 'USER_SIGN_IN';\r\nexport const USER_SIGN_UP = 'USER_SIGN_UP';\r\nexport const USER_SIGN_OUT = 'USER_SIGN_OUT';\r\nexport const USER_AUTH = 'USER_AUTH';\r\nexport const SET_USER = 'SET_USER';\r\nexport const GET_USER = 'GET_USER';\r\nexport const GET_ALL_USERS = 'GET_ALL_USERS';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const CLEAR_USER = 'CLEAR_USER';\r\nexport const CLEAR_ALL_USERS = 'CLEAR_ALL_USERS';\r\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\nexport const RECOVER_PASSWORD = 'RECOVER_PASSWORD';\r\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\r\n\r\nexport const GET_ALL_AREA_OF_INTEREST = 'GET_ALL_AREA_OF_INTEREST';\r\n\r\n// IMPACT AREA\r\nexport const GET_ALL_GLOBAL_IMPACT_AREAS = 'GET_ALL_GLOBAL_IMPACT_AREAS';\r\nexport const GET_ALL_IMPACT_AREAS_BY_USER = 'GET_ALL_IMPACT_AREAS_BY_USER';\r\n\r\n// SKILL\r\nexport const GET_ALL_GLOBAL_SKILLS = 'GET_ALL_GLOBAL_SKILLS';\r\nexport const GET_ALL_SKILLS_BY_USER = 'GET_ALL_SKILLS_BY_USER';\r\n\r\n// LANGUAGE\r\nexport const GET_ALL_GLOBAL_LANGUAGES = 'GET_ALL_GLOBAL_LANGUAGES';\r\nexport const GET_ALL_LANGUAGES_BY_USER = 'GET_ALL_LANGUAGES_BY_USER';\r\n\r\nexport const GET_ALL_ORGANIZATION_TYPES = 'GET_ALL_ORGANIZATION_TYPES';\r\n\r\n// INDIVIDUAL\r\nexport const GET_INDIVIDUAL_BASIC_INFO = 'GET_INDIVIDUAL_BASIC_INFO';\r\nexport const GET_INDIVIDUAL_INVOLVEMENT = 'GET_INDIVIDUAL_INVOLVEMENT';\r\nexport const GET_INDIVIDUAL_PRIVACY = 'GET_INDIVIDUAL_PRIVACY';\r\n\r\nexport const SET_INDIVIDUAL_BASIC_INFO = 'SET_INDIVIDUAL_BASIC_INFO';\r\nexport const SET_INDIVIDUAL_INVOLVEMENT = 'SET_INDIVIDUAL_INVOLVEMENT';\r\nexport const SET_INDIVIDUAL_PRIVACY = 'SET_INDIVIDUAL_PRIVACY';\r\n\r\nexport const CLEAR_INDIVIDUAL_BASIC_INFO = 'CLEAR_INDIVIDUAL_BASIC_INFO';\r\nexport const CLEAR_INDIVIDUAL_INVOLVEMENT = 'CLEAR_INDIVIDUAL_INVOLVEMENT';\r\nexport const CLEAR_INDIVIDUAL_PRIVACY = 'CLEAR_INDIVIDUAL_PRIVACY';\r\n\r\nexport const GET_ALL_INDIVIDUALS = 'GET_ALL_INDIVIDUALS';\r\nexport const GET_INDIVIDUAL_PUBLIC_INFO = 'GET_INDIVIDUAL_PUBLIC_INFO';\r\n\r\n// ORGANIZATION\r\nexport const GET_ORGANIZATION_BASIC_INFO = 'GET_ORGANIZATION_BASIC_INFO';\r\nexport const GET_ORGANIZATION_SERVICE_INFO = 'GET_ORGANIZATION_SERVICE_INFO';\r\nexport const GET_ORGANIZATION_INTERNAL_LINK = 'GET_ORGANIZATION_INTERNAL_LINK';\r\n\r\nexport const SET_ORGANIZATION_BASIC_INFO = 'SET_ORGANIZATION_BASIC_INFO';\r\nexport const SET_ORGANIZATION_SERVICE_INFO = 'SET_ORGANIZATION_SERVICE_INFO';\r\nexport const SET_ORGANIZATION_INTERNAL_LINK = 'SET_ORGANIZATION_INTERNAL_LINK';\r\n\r\nexport const CLEAR_ORGANIZATION_BASIC_INFO = 'CLEAR_ORGANIZATION_BASIC_INFO';\r\nexport const CLEAR_ORGANIZATION_SERVICE_INFO = 'CLEAR_ORGANIZATION_SERVICE_INFO';\r\nexport const CLEAR_ORGANIZATION_INTERNAL_LINK = 'CLEAR_ORGANIZATION_INTERNAL_LINK';\r\n\r\nexport const GET_ALL_ORGANIZATIONS = 'GET_ALL_ORGANIZATIONS';\r\nexport const GET_ORGANIZATION_PUBLIC_INFO = 'GET_ORGANIZATION_PUBLIC_INFO';\r\n\r\n// EVENTS\r\nexport const GET_EVENT = 'GET_EVENT';\r\nexport const SET_EVENT = 'SET_EVENT';\r\nexport const GET_ALL_EVENTS = 'GET_ALL_EVENTS';\r\nexport const CLEAR_EVENT = 'CLEAR_EVENT';\r\nexport const DELETE_EVENT = 'DELETE_EVENT';\r\n\r\n// Follow\r\nexport const FOLLOW_USER = 'FOLLOW_USER';\r\nexport const UNFOLLOW_USER = 'UNFOLLOW_USER';\r\nexport const GET_ALL_FOLLOWERS = 'GET_ALL_FOLLOWERS';\r\nexport const GET_ALL_FOLLOWINGS = 'GET_ALL_FOLLOWINGS';\r\nexport const CHECK_IF_FOLLOWER = 'CHECK_IF_FOLLOWER';\r\n\r\n// PROJECTS\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const SET_PROJECT = 'SET_PROJECT';\r\nexport const GET_ALL_PROJECTS = 'GET_ALL_PROJECTS';\r\nexport const CLEAR_PROJECT = 'CLEAR_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\n\r\n// POSTS\r\nexport const GET_POST = 'GET_POST';\r\nexport const SET_POST = 'SET_POST';\r\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\r\nexport const CLEAR_POST = 'CLEAR_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\n\r\n// VOLUNTEERING\r\nexport const GET_VOLUNTEERING = 'GET_VOLUNTEERING';\r\nexport const SET_VOLUNTEERING = 'SET_VOLUNTEERING';\r\nexport const GET_ALL_VOLUNTEERINGS = 'GET_ALL_VOLUNTEERINGS';\r\nexport const CLEAR_VOLUNTEERING = 'CLEAR_VOLUNTEERING';\r\nexport const DELETE_VOLUNTEERING = 'DELETE_VOLUNTEERING';\r\n","import UserDA from '../data_accesses/user-da';\r\nimport AreaOfInterestDA from '../data_accesses/area-of-interest-da';\r\nimport SearchDA from '../data_accesses/search-da';\r\nimport * as Types from '../constants/reducer-types';\r\n\r\nexport const setLocalStorage = (key, value) => {\r\n    if (window !== 'undefined') {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n};\r\nexport const removeLocalStorage = (key) => {\r\n    if (window !== 'undefined') {\r\n        localStorage.removeItem(key);\r\n    }\r\n};\r\nexport const getLocalStorage = (key) => {\r\n    if (window !== 'undefined') {\r\n        return JSON.parse(localStorage.getItem(key));\r\n    }\r\n};\r\n\r\nexport const printLocalStorage = () => {\r\n    Object.entries(localStorage).map(([key, valueJSON]) => {\r\n        const value = JSON.parse(valueJSON);\r\n\r\n        return value;\r\n    });\r\n};\r\nexport const authenticate = (user, token) => {\r\n    setLocalStorage('user', user);\r\n    setLocalStorage('token', token);\r\n};\r\n\r\nexport const userAuth = () => {\r\n    if (window !== 'undefined') {\r\n        const token = getLocalStorage('token');\r\n        const user = getLocalStorage('user');\r\n        if (token && user)\r\n            return {\r\n                type: Types.USER_AUTH,\r\n                payload: {\r\n                    isAuth: true,\r\n                    user,\r\n                },\r\n            };\r\n        else\r\n            return {\r\n                type: Types.USER_AUTH,\r\n                payload: {\r\n                    isAuth: false,\r\n                },\r\n            };\r\n    }\r\n};\r\n\r\nexport const userSignUp = (user) => {\r\n    return {\r\n        type: Types.USER_SIGN_UP,\r\n        payload: UserDA.user_signup(user),\r\n    };\r\n};\r\n\r\nexport const userSignIn = (user) => {\r\n    return {\r\n        type: Types.USER_SIGN_IN,\r\n        payload: UserDA.user_signin(user),\r\n    };\r\n};\r\n\r\nexport const userSignOut = () => {\r\n    removeLocalStorage('token');\r\n    removeLocalStorage('user');\r\n    return { type: Types.USER_SIGN_OUT, payload: {} };\r\n};\r\n\r\nexport const deleteUser = (user) => ({\r\n    type: Types.DELETE_USER,\r\n    payload: UserDA.delete_user(user),\r\n});\r\n\r\nexport const getUserInformation = (userId) => {\r\n    return {\r\n        type: Types.GET_USER,\r\n        payload: UserDA.get_user(userId),\r\n    };\r\n};\r\nexport const setUserInformation = (userId, step, user, model) => {\r\n    return {\r\n        type: Types.SET_USER,\r\n        payload: UserDA.update_user(userId, step, user, model),\r\n    };\r\n};\r\n\r\nexport const getUser = (userId) => {\r\n    if (userId === 0) {\r\n        return {\r\n            type: Types.GET_USER,\r\n            payload: {\r\n                success: true,\r\n                user: {},\r\n            },\r\n        };\r\n    } else {\r\n        return {\r\n            type: Types.GET_USER,\r\n            payload: UserDA.get_user(userId),\r\n        };\r\n    }\r\n};\r\n\r\nexport const setUser = (userId, user) => {\r\n    if (userId === 0) {\r\n        return {\r\n            type: Types.SET_USER,\r\n            payload: UserDA.create_new_user(user),\r\n        };\r\n    } else {\r\n        return {\r\n            type: Types.SET_USER,\r\n            payload: UserDA.update_user(userId, user),\r\n        };\r\n    }\r\n};\r\n\r\nexport const getAllUsers = (userType) => {\r\n    return {\r\n        type: Types.GET_ALL_USERS,\r\n        payload: UserDA.get_all_users(userType),\r\n    };\r\n};\r\n\r\n// export const userAuth = () => {\r\n//     return {\r\n//         type: Types.USER_AUTH,\r\n//         payload: UserDA.user_auth(),\r\n//     };\r\n// };\r\n\r\nexport const clearUser = () => {\r\n    return {\r\n        type: Types.CLEAR_USER,\r\n        payload: {},\r\n    };\r\n};\r\n\r\nexport const clearAllUsers = () => {\r\n    return {\r\n        type: Types.CLEAR_ALL_USERS,\r\n        payload: {},\r\n    };\r\n};\r\n\r\nexport const userChangePassword = (userId, passwords) => {\r\n    return {\r\n        type: Types.CHANGE_PASSWORD,\r\n        payload: UserDA.change_password(userId, passwords),\r\n    };\r\n};\r\n\r\nexport const userForgotPassword = (email) => {\r\n    return {\r\n        type: Types.RECOVER_PASSWORD,\r\n        payload: UserDA.recover_password(email),\r\n    };\r\n};\r\n\r\nexport const userResetPassword = (userId, token, passwords) => {\r\n    return {\r\n        type: Types.RESET_PASSWORD,\r\n        payload: UserDA.reset_password(userId, token, passwords),\r\n    };\r\n};\r\n\r\nexport const getAllAreaOfInterests = () => {\r\n    return {\r\n        type: Types.GET_ALL_AREA_OF_INTEREST,\r\n        payload: AreaOfInterestDA.get_all_area_of_interest(),\r\n    };\r\n};\r\n\r\n//\r\nexport const searchUsersByName = (name) => {\r\n    if (name.length > 0) return SearchDA.search_by_name(name);\r\n};\r\n","import React from \"react\";\r\nimport * as APIPaths from \"../constants/api-paths\";\r\nimport axios from \"axios\";\r\nimport { FormText } from \"reactstrap\";\r\n\r\nconst asyncValidate = (value, dispatch, props, field) => {\r\n\tlet queryString = \"\";\r\n\tif (value._id) {\r\n\t\tqueryString += `?currentUserId=${value._id}`;\r\n\t}\r\n\treturn axios\r\n\t\t.get(APIPaths.checkEmailExist + value.email + queryString)\r\n\t\t.then((response) => {\r\n\t\t\tif (response.data.emailExists) {\r\n\t\t\t\tlet err = {\r\n\t\t\t\t\temail: (\r\n\t\t\t\t\t\t<FormText color=\"danger\">\r\n\t\t\t\t\t\t\tThis Email is already used.\r\n\t\t\t\t\t\t</FormText>\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t\tthrow err;\r\n\t\t\t} else {\r\n\t\t\t\tlet err = {};\r\n\t\t\t\treturn err;\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tif (err.email) throw err;\r\n\t\t\tif (err.response.data.emailExists) {\r\n\t\t\t\tlet err = {\r\n\t\t\t\t\temail: (\r\n\t\t\t\t\t\t<FormText color=\"danger\">\r\n\t\t\t\t\t\t\tThis Email is already used.\r\n\t\t\t\t\t\t</FormText>\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\t\t\t\tthrow err;\r\n\t\t\t} else {\r\n\t\t\t\tlet err = {};\r\n\t\t\t\treturn err;\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\nexport default asyncValidate;\r\n","import React from 'react';\r\nconst LoadingAnim = (props) => {\r\n\treturn (\r\n\t\t<div className=\"loadingAnim\">\r\n\t\t\t<div className=\"lds-ripple\">\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoadingAnim;\r\n","const userTypeData = [\r\n    { id: 1, name: 'individual', label: 'Individual' },\r\n    { id: 2, name: 'organization', label: 'Organization' },\r\n    { id: 3, name: 'admin', label: 'Admin' },\r\n];\r\n\r\nexport const getAllUserTypeData = () => {\r\n    return userTypeData;\r\n};\r\nexport const getUserTypeDataById = (id) => {\r\n    return userTypeData[id - 1];\r\n};\r\n\r\nconst userTypeFilterData = [\r\n    { id: 1, value: 'both', label: 'Both' },\r\n    { id: 2, value: 'individual', label: 'Individual' },\r\n    { id: 3, value: 'organization', label: 'Organization' },\r\n];\r\n\r\nexport const getAllUserTypeFilterData = () => {\r\n    return userTypeFilterData;\r\n};\r\nexport const getUserTypeFilterDataByValue = (value) => {\r\n    for (let type = 0; type < userTypeFilterData.length; type++) {\r\n        if (userTypeFilterData[type].value === value) return userTypeFilterData[type];\r\n    }\r\n    return userTypeFilterData[0]; // default return both\r\n};\r\nconst userTypeOptionData = [\r\n    { id: 1, value: 'individual', label: 'Individual' },\r\n    { id: 2, value: 'organization', label: 'Organization' },\r\n];\r\n\r\nexport const getAllUserTypeOptionData = () => {\r\n    return userTypeOptionData;\r\n};\r\nexport const getUserTypeOptionDataByValue = (value) => {\r\n    for (let type = 0; type < userTypeOptionData.length; type++) {\r\n        if (userTypeOptionData[type].value === value) return userTypeOptionData[type];\r\n    }\r\n    return userTypeOptionData[0]; // default return both\r\n};\r\n","import React, { Component } from 'react';\r\nimport SignUpForm from '../../components/user/sign-up-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { userSignUp, clearUser, authenticate, printLocalStorage } from '../../actions';\r\nimport { validate } from '../../actions/validate';\r\nimport asyncValidate from '../../actions/asyncValidate';\r\nimport LoadingAnim from '../../components/form_template/loading-anim';\r\nimport { getUserTypeDataById } from '../../constants/user-type-data';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { getBasicInfoPageByUserType } from '../../constants/route-paths';\r\nclass SignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n                userType: 1,\r\n            },\r\n            isIndividualChecked: true,\r\n            formSubmitted: false,\r\n        };\r\n    }\r\n    handleUserTypeChange = (event) => {\r\n        let user = this.state.user;\r\n        user.userType = event.target.value;\r\n        if (event.target.value === '1') this.setState({ isIndividualChecked: true });\r\n        else this.setState({ isIndividualChecked: false });\r\n    };\r\n    onSubmit = (values) => {\r\n        values.userType = getUserTypeDataById(parseInt(this.state.user.userType)).name;\r\n        this.props.dispatch(userSignUp(values));\r\n        this.setState({ formSubmitted: true, loading: true });\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.formSubmitted && prevProps.auth !== this.props.auth) {\r\n            if (this.props.auth) {\r\n                if (this.props.auth.success && this.props.auth.isAuth) {\r\n                    authenticate(this.props.auth.user, this.props.auth.token);\r\n                    printLocalStorage();\r\n                    NotificationManager.success('Welcome to CascAid', 'Success');\r\n                    const userType = getUserTypeDataById(parseInt(this.state.user.userType)).name;\r\n                    this.props.history.push(getBasicInfoPageByUserType(userType));\r\n                } else if (this.props.auth.success === false && this.props.auth.isAuth === false) {\r\n                    this.setState({ loading: false, formSubmitted: false });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentWillUnmount = () => {\r\n        this.props.dispatch(clearUser());\r\n    };\r\n    render() {\r\n        const { submitting } = this.props;\r\n        if (this.state.loading) return <LoadingAnim />;\r\n        else {\r\n            return (\r\n                <SignUpForm\r\n                    handleUserTypeChange={this.handleUserTypeChange}\r\n                    isIndividualChecked={this.state.isIndividualChecked}\r\n                    submitting={submitting}\r\n                    handleSignUpSubmit={this.props.handleSubmit((event) => this.onSubmit(event))}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\n\r\nSignUp = reduxForm({\r\n    form: 'SignUp',\r\n    validate,\r\n    asyncValidate,\r\n    asyncChangeFields: ['email'],\r\n    asyncBlurFields: ['email'],\r\n    enableReinitialize: true,\r\n})(SignUp);\r\n\r\nSignUp = connect(mapStateToProps, null)(SignUp);\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { required, email, stringLengthRange } from '../../actions/validate';\r\nimport { SaInputRender } from '../form_template/input-render';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nconst stringRange6To256 = stringLengthRange(6, 256);\r\nconst stringRange6To100 = stringLengthRange(6, 100);\r\n\r\nconst SignInForm = (props) => {\r\n    const submitting = props.submitting;\r\n    return (\r\n        <Container className=\"saLoginForm\">\r\n            <Row>\r\n                <Col></Col>\r\n                <Col md=\"6\" className=\"sign-ing-form\">\r\n                    <form onSubmit={props.handleSignInSubmit}>\r\n                        <div className=\"center-text\">\r\n                            <h3>Sign In To CascAid</h3>\r\n                        </div>\r\n\r\n                        <br />\r\n\r\n                        <Field name=\"email\" type=\"text\" component={SaInputRender} placeholder=\"example@example.com\" label=\"Email\" validate={[required, email, stringRange6To256]} />\r\n                        <Field name=\"password\" type=\"password\" component={SaInputRender} label=\"Password\" validate={[required, stringRange6To100]} />\r\n                        <br />\r\n                        <Row>\r\n                            <Col sm=\"6\">\r\n                                <Button className=\"btn signUpBtn\" disabled={submitting} type=\"submit\" size=\"sm\">\r\n                                    SIGN IN\r\n                                </Button>\r\n                            </Col>\r\n                            <Col sm=\"6\">\r\n                                <Link to={RoutePath.forgotPasswordPage}>Forgot your password?</Link>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <p>\r\n                            Do not have an account? &nbsp;\r\n                            <Link\r\n                                style={{\r\n                                    fontSize: '14px',\r\n                                }}\r\n                                to={RoutePath.signUpPage}\r\n                            >\r\n                                Sign Up\r\n                            </Link>\r\n                        </p>\r\n                    </form>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Container>\r\n        // <div className=\"saLoginForm\">\r\n        // \t{props.errorFlag && (\r\n        // \t\t<div className=\"signinErrorMessage\">{props.errorMessage}</div>\r\n        // \t)}\r\n\r\n        // \t<form onSubmit={props.handleSignInSubmit}>\r\n        // \t\t<div className=\"centerText\">\r\n        // \t\t\t<h3>Sign In To CascAid</h3>\r\n        // \t\t</div>\r\n        // \t\t<div className=\"container\">\r\n        // \t\t\t<Field\r\n        // \t\t\t\tname=\"email\"\r\n        // \t\t\t\ttype=\"text\"\r\n        // \t\t\t\tcomponent={SaInputRender}\r\n        // \t\t\t\tplaceholder=\"example@example.com\"\r\n        // \t\t\t\tlabel=\"Email\"\r\n        // \t\t\t\tvalidate={[required, email, stringRange6To256]}\r\n        // \t\t\t/>\r\n        // \t\t\t<Field\r\n        // \t\t\t\tname=\"password\"\r\n        // \t\t\t\ttype=\"password\"\r\n        // \t\t\t\tcomponent={SaInputRender}\r\n        // \t\t\t\tlabel=\"Password\"\r\n        // \t\t\t\tvalidate={[required, stringRange6To100]}\r\n        // \t\t\t/>\r\n        // \t\t\t<br />\r\n        // \t\t\t<button\r\n        // \t\t\t\tclassName=\"btn signUpBtn\"\r\n        // \t\t\t\tdisabled={submitting}\r\n        // \t\t\t\ttype=\"submit\"\r\n        // \t\t\t>\r\n        // \t\t\t\tSIGN IN\r\n        // \t\t\t</button>\r\n        // \t\t\t<Link to={RoutePath.forgotPasswordPage}>\r\n        // \t\t\t\tForgot your password?\r\n        // \t\t\t</Link>\r\n        // \t\t\t<br />\r\n        // \t\t\t<p>\r\n        // \t\t\t\tDo not have an account? &nbsp;\r\n        // \t\t\t\t<Link\r\n        // \t\t\t\t\tstyle={{\r\n        // \t\t\t\t\t\tfontSize: \"14px\",\r\n        // \t\t\t\t\t\tcolor: \"#3070d1\",\r\n        // \t\t\t\t\t}}\r\n        // \t\t\t\t\tto={RoutePath.signUpPage}\r\n        // \t\t\t\t>\r\n        // \t\t\t\t\tSign Up\r\n        // \t\t\t\t</Link>\r\n        // \t\t\t</p>\r\n        // \t\t</div>\r\n        // \t</form>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default SignInForm;\r\n","import React, { Component } from 'react';\r\nimport SignInForm from '../../components/user/sign-in-form';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { userSignIn, clearUser, authenticate } from '../../actions';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                email: '',\r\n                password: '',\r\n            },\r\n            formSubmitted: false,\r\n            errorFlag: false,\r\n            errorMessage: '',\r\n        };\r\n    }\r\n\r\n    onSubmit = (values) => {\r\n        this.props.dispatch(userSignIn(values));\r\n        this.setState({ formSubmitted: true });\r\n    };\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (this.state.formSubmitted && prevProps.auth !== this.props.auth) {\r\n            if (this.props.auth) {\r\n                if (this.props.auth.success && this.props.auth.isAuth) {\r\n                    authenticate(this.props.auth.user, this.props.auth.token);\r\n                    NotificationManager.success('Welcome to CascAid', 'Success');\r\n                    this.props.history.push(RoutePath.homePage);\r\n                } else if (this.props.auth.success === false && this.props.auth.isAuth === false) {\r\n                    this.setState({\r\n                        formSubmitted: false,\r\n                        errorFlag: true,\r\n                        errorMessage: this.props.auth.message,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    componentWillUnmount = () => {\r\n        this.props.dispatch(clearUser());\r\n    };\r\n    render() {\r\n        const { submitting } = this.props;\r\n\r\n        return (\r\n            <SignInForm submitting={submitting} errorFlag={this.state.errorFlag} errorMessage={this.state.errorMessage} handleSignInSubmit={this.props.handleSubmit((event) => this.onSubmit(event))} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\n\r\nSignIn = reduxForm({\r\n    form: 'SignIn',\r\n    enableReinitialize: true,\r\n})(SignIn);\r\n\r\nSignIn = connect(mapStateToProps, null)(SignIn);\r\nexport default SignIn;\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { userSignOut } from \"../../actions\";\r\nimport * as RoutePath from \"../../constants/route-paths\";\r\n\r\nclass SignOut extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.dispatch(userSignOut());\r\n\t\tthis.props.history.push(RoutePath.signInPage);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nexport default connect()(SignOut);\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nconst AppRoute = ({ component: Component, layout: Layout, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={(props) => (\n                <Layout>\n                    <Component {...props} />\n                </Layout>\n            )}\n        />\n    );\n};\n\nexport default AppRoute;\n","import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { withRouter } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\nimport { searchUsersByName } from '../../actions';\nconst individualNameRender = (individual) => {\n    let name = individual.firstName ? individual.firstName + ' ' : '';\n    name += individual.lastName ? individual.lastName : '';\n    return name;\n};\nfunction escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n    if (suggestion.userType === 'organization') return suggestion.name;\n    else if (suggestion.userType === 'individual') return individualNameRender(suggestion);\n}\n\nfunction renderSectionTitle(section) {\n    return <strong>{section.userType}</strong>;\n}\n\nfunction getSectionSuggestions(section) {\n    return section.users;\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            suggestions: [],\n        };\n    }\n    individualNameRender = (individual) => {\n        let name = individual.firstName ? individual.firstName + ' ' : '';\n        name += individual.lastName ? individual.lastName : '';\n        return name;\n    };\n    cutOffName = (name) => {\n        if (name && name.length <= 25) return name;\n        else return name.substr(0, 24) + ' ...';\n    };\n    renderSuggestion = (suggestion) => {\n        return (\n            <div\n                style={{ width: '100%' }}\n                onClick={() => {\n                    this.props.history.push(`/${suggestion.userType}/details/${suggestion.userId}`);\n                }}\n            >\n                {suggestion.userType === 'individual' && <small className=\"suggestion-text\">{this.cutOffName(this.individualNameRender(suggestion))}</small>}\n                {suggestion.userType === 'organization' && <small className=\"suggestion-text\">{this.cutOffName(suggestion.name)}</small>}\n            </div>\n        );\n    };\n    getSuggestions = async (value) => {\n        const escapedValue = escapeRegexCharacters(value.trim());\n\n        if (escapedValue === '') {\n            return [];\n        }\n        const users = await searchUsersByName(escapedValue).then((response) => {\n            if (response.success) {\n                return response.users;\n            } else return [];\n        });\n\n        return users;\n    };\n    onChange = (event, { newValue, method }) => {\n        this.setState({\n            value: newValue,\n        });\n    };\n\n    onSuggestionsFetchRequested = async ({ value }) => {\n        const users = await this.getSuggestions(value);\n\n        this.setState({\n            suggestions: users,\n        });\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: [],\n        });\n    };\n\n    render() {\n        const { value, suggestions } = this.state;\n        const inputProps = {\n            placeholder: 'Type name...',\n            value,\n            onChange: this.onChange,\n        };\n\n        return (\n            <Form inline>\n                <Autosuggest\n                    multiSection={true}\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={this.renderSuggestion}\n                    renderSectionTitle={renderSectionTitle}\n                    getSectionSuggestions={getSectionSuggestions}\n                    inputProps={inputProps}\n                />\n            </Form>\n        );\n    }\n}\n\nexport default withRouter(App);\n","import { serverAddress } from './api-paths';\nexport const defaultIndividualProfilePicture = serverAddress + '/default-images/default-individual-profile-picture.jpg';\nexport const defaultIndividualCoverPicture = serverAddress + '/default-images/default-individual-cover-picture.jpg';\n\nexport const defaultOrganizationProfilePicture = serverAddress + '/default-images/default-organization-profile-picture.png';\nexport const defaultOrganizationCoverPicture = serverAddress + '/default-images/default-organization-cover-picture.png';\n\nexport const defaultEventIcon = serverAddress + '/default-images/default-event-icon.png';\nexport const defaultProjectIcon = serverAddress + '/default-images/default-project-icon.png';\nexport const defaultStoryIcon = serverAddress + '/default-images/default-story-icon.png';\nexport const defaultVolunteerIcon = serverAddress + '/default-images/default-volunteer-icon.png';\nexport const defaultPostIcon = serverAddress + '/default-images/default-post-icon.png';\nexport const defaultEventPicture = serverAddress + '/default-images/default-event-picture.jpg';\n\nexport const defaultIImage = serverAddress + '/default-images/default-i-image.png';\nexport const defaultPImage = serverAddress + '/default-images/default-p-image.png';\nexport const defaultVImage = serverAddress + '/default-images/default-v-image.png';\n","import React from 'react';\nimport NotificationBadge from 'react-notification-badge';\nimport { Effect } from 'react-notification-badge';\nimport { Button, Badge, NavDropdown, Image, Row, Container, Col } from 'react-bootstrap';\nimport * as RoutePath from '../../constants/route-paths';\nimport moment from 'moment';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst RenderBellIcon = () => {\n    const count = 99;\n\n    return (\n        <Button className=\"notification-bell\">\n            {/* <BsBellFill />  */}\n            <Image src=\"http://localhost:3001/default-images/flag-icon.png\" roundedCircle />\n            <Badge className=\"notification-count\" variant=\"dark\">\n                {count}\n            </Badge>\n        </Button>\n    );\n};\nconst NotificationRender = (index) => {\n    return (\n        <NavDropdown.Item className=\"notification-row\">\n            <Row>\n                <Col sm=\"3\">\n                    <Image src={defaultIndividualProfilePicture} width=\"40\" thumbnail className=\"notification-image\" />\n                </Col>\n                <Col sm=\"9\">\n                    <p className=\"notification-title\">Mr X is Following You.</p>\n                    <p className=\"notification-time\">{moment(new Date()).format('LLL')}</p>\n                </Col>\n            </Row>\n        </NavDropdown.Item>\n    );\n};\nconst SampleNotificationsRender = () => {\n    return (\n        <Container style={{ width: 300, padding: 0 }}>\n            <NotificationRender />\n            <NotificationRender />\n            <NotificationRender />\n            <NotificationRender />\n            <NotificationRender />\n        </Container>\n    );\n};\nconst GlobalNotification = (props) => {\n    return (\n        <NavDropdown title={<RenderBellIcon />} id=\"basic-nav-dropdown\" alignRight={true}>\n            <SampleNotificationsRender />\n            <NavDropdown.Divider />\n            <NavDropdown.Item>SEE ALL</NavDropdown.Item>\n        </NavDropdown>\n    );\n    //\n};\n\nexport default GlobalNotification;\n","import React from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nimport { Link } from 'react-router-dom';\r\n// import SearchBox from './search-box';\r\nimport ReactAutoSuggest from './react-autosuggest-lib';\r\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\r\nimport Avatar from 'react-avatar';\r\nimport GlobalNotification from './global-notification';\r\nconst Header = (props) => {\r\n    const isAuth = props.isAuth || false;\r\n\r\n    if (isAuth && props.user._id) {\r\n        // const username = props.user.name;\r\n        // const userId = props.user._id;\r\n        const name = props.user.name || 'USER';\r\n        let profilePicture = '';\r\n        if (props.user.userType === 'individual') {\r\n            profilePicture = props.user.profilePicture || defaultIndividualProfilePicture;\r\n        }\r\n        if (props.user.userType === 'organization') {\r\n            profilePicture = props.user.profilePicture || defaultOrganizationProfilePicture;\r\n        }\r\n        return (\r\n            <div className=\"header\">\r\n                <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/\">CascAid</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <ReactAutoSuggest />\r\n                            <GlobalNotification />\r\n                            <NavDropdown title={<Avatar size=\"32\" src={profilePicture} round=\"16px\" />} id=\"basic-nav-dropdown\" alignRight={true}>\r\n                                <NavDropdown.Item disabled={true}>Welcome, {name}</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <Link to={RoutePath.signOutPage} className=\"dropdown-item\">\r\n                                    Sign out\r\n                                </Link>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"header\">\r\n                <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <Navbar.Brand href=\"/\">CascAid</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <Link to={RoutePath.signInPage} className=\"nav-link\">\r\n                                Sign in\r\n                            </Link>\r\n                            <Link to={RoutePath.signUpPage} className=\"nav-link\">\r\n                                Sign up\r\n                            </Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default Header;\r\n","import React from 'react';\r\nconst Footer = (props) => {\r\n\treturn (\r\n\t\t<div className=\"footer\">\r\n\t\t\t<h6>Thank you for staying with us.</h6>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/layout/header';\r\nimport Footer from '../components/layout/footer';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"formBackgroundUI\">\r\n                <Header isAuth={this.props.auth.isAuth || false} user={this.props.auth.user || {}} />\r\n                <div className=\"mainView\">{this.props.children}</div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(Layout);\r\n// -webkit-column-count: 5!important;\r\n","import React, { Component } from 'react';\r\nimport Header from '../components/layout/header';\r\nimport Footer from '../components/layout/footer';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { connect } from 'react-redux';\r\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FaHome, FaSearch, FaConnectdevelop, FaCalendarAlt, FaUserCog, FaEnvelope, FaNewspaper } from 'react-icons/fa';\r\nimport { BsFilePost } from 'react-icons/bs';\r\nimport * as RoutePath from '../constants/route-paths';\r\nclass DashboardLayout extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n    individualSideNav = () => {\r\n        return (\r\n            <SideNav\r\n                onSelect={(selected) => {\r\n                    this.props.history.push(selected);\r\n                }}\r\n            >\r\n                <SideNav.Toggle />\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaHome size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Home</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/search/organization\">\r\n                        <NavIcon>\r\n                            <FaSearch size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Discover</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.communityFriendListPage}>\r\n                        <NavIcon>\r\n                            <FaConnectdevelop size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Community</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaCalendarAlt size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Calender</NavText>\r\n                    </NavItem>\r\n\r\n                    <NavItem eventKey=\"/messages\">\r\n                        <NavIcon>\r\n                            <FaEnvelope size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Mails</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.individualEditBasicInfoPage}>\r\n                        <NavIcon>\r\n                            <FaUserCog size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Profile Settings</NavText>\r\n\r\n                        <NavItem eventKey={RoutePath.individualEditBasicInfoPage}>\r\n                            <NavText>Basic Information</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.individualEditInvolvementPage}>\r\n                            <NavText>Involvement</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.individualEditPrivacyPage}>\r\n                            <NavText>Privacy</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.userCommonSettingsPage}>\r\n                            <NavText>Account Settings</NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n        );\r\n    };\r\n    organizationSideNav = () => {\r\n        return (\r\n            <SideNav\r\n                onSelect={(selected) => {\r\n                    this.props.history.push(selected);\r\n                }}\r\n            >\r\n                <SideNav.Toggle />\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaHome size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Home</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/search/organization\">\r\n                        <NavIcon>\r\n                            <FaSearch size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Discover</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaConnectdevelop size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Community</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaCalendarAlt size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Calender</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.newsManagePage}>\r\n                        <NavIcon>\r\n                            {/* <BsFilePost size={24} /> */}\r\n                            <FaNewspaper size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Posts</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/messages\">\r\n                        <NavIcon>\r\n                            <FaEnvelope size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Mails</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.organizationEditBasicInfoPage}>\r\n                        <NavIcon>\r\n                            <FaUserCog size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Profile Settings</NavText>\r\n\r\n                        <NavItem eventKey={RoutePath.organizationEditBasicInfoPage}>\r\n                            <NavText>Basic Information</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.organizationEditServiceInfoPage}>\r\n                            <NavText>Service Information</NavText>\r\n                        </NavItem>\r\n                        {/* <NavItem eventKey={RoutePath.organizationEditInternalLinkPage}>\r\n                <NavText>Internal Link</NavText>\r\n            </NavItem> */}\r\n                        <NavItem eventKey={RoutePath.userCommonSettingsPage}>\r\n                            <NavText>Account Settings</NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n        );\r\n    };\r\n    adminSideNav = () => {\r\n        return <></>;\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props.auth);\r\n        const isAuth = this.props.auth.isAuth;\r\n        const user = this.props.auth.user;\r\n\r\n        return (\r\n            <div>\r\n                <Header isAuth={isAuth || false} user={user || {}} />\r\n                <div className=\"full-page-div\">\r\n                    <div>\r\n                        {user && user.userType === 'individual' && this.individualSideNav()}\r\n                        {user && user.userType === 'organization' && this.organizationSideNav()}\r\n                        {user && user.userType === 'admin' && this.adminSideNav()}\r\n                        {/* </SideNav.Nav>\r\n                        </SideNav> */}\r\n                        <main className=\"main-div\">{this.props.children}</main>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(withRouter(DashboardLayout));\r\n","import React, { Component } from 'react';\r\nimport { userAuth } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport LoadingAnim from '../components/form_template/loading-anim';\r\nimport * as RoutePath from '../constants/route-paths';\r\nimport { NotificationManager } from 'react-notifications';\r\nconst UserAuthChecker = (ComposedClass, allowedUserTypes, allowAuthenticatedUsers = true) => {\r\n    class AuthenticationCheck extends Component {\r\n        state = {\r\n            loading: true,\r\n            authDone: false,\r\n        };\r\n\r\n        componentDidMount() {\r\n            this.props.dispatch(userAuth());\r\n        }\r\n        componentDidUpdate(prevProps, prevState) {\r\n            if (prevState.authDone === false) {\r\n                if (this.props.auth.isAuth && allowAuthenticatedUsers) {\r\n                    // Check for authorization\r\n                    if (allowedUserTypes.includes(this.props.auth.user.userType)) {\r\n                        // Authentication and authorization done.\r\n                        this.setState({\r\n                            loading: false,\r\n                            authDone: true,\r\n                        });\r\n                    } else {\r\n                        // Go to warning (unauthorized) page\r\n                    }\r\n                } else if (this.props.auth.isAuth && !allowAuthenticatedUsers) {\r\n                    // Already logged in, so go to homepage. can not go there until logout\r\n                    this.props.history.push(RoutePath.homePage);\r\n                    NotificationManager.success('Your are already logged in', 'Success');\r\n                } else if (!this.props.auth.isAuth && allowAuthenticatedUsers) {\r\n                    // Not logged in, so go to sign in page.\r\n                    // NotificationManager.warning(\r\n                    // \t'You have to log in first',\r\n                    // \t'Not allowed'\r\n                    // );\r\n                    this.props.history.push(RoutePath.signInPage);\r\n                } else if (!this.props.auth.isAuth && !allowAuthenticatedUsers) {\r\n                    // Go to the composed class. example: sign in page.\r\n                    this.setState({\r\n                        loading: false,\r\n                        authDone: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        render() {\r\n            if (this.state.loading) {\r\n                return <LoadingAnim />;\r\n            } else return <ComposedClass {...this.props} auth={this.props.auth} />;\r\n        }\r\n    }\r\n    function mapStateToProps(state) {\r\n        return {\r\n            auth: state.Auth.auth,\r\n        };\r\n    }\r\n    return connect(mapStateToProps)(AuthenticationCheck);\r\n};\r\nexport default UserAuthChecker;\r\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Container, Row, Col, Image, Button, Modal } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FaThumbsUp, FaLocationArrow, FaHeart } from 'react-icons/fa';\nconst SamplePosts = (props) => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const posts = [\n        {\n            type: 'Event',\n            id: 0,\n            name: 'Moss Montoya Robertson Fleming Carolina Morgan Whitney Gallegos Avis Ryan English Hall ',\n            org: 'Patrick Espinoza Flores Anderson',\n            description:\n                'Minim aliquip esse in esse culpa ullamco duis aute ex occaecat voluptate consequat. Non est pariatur exercitation incididunt deserunt anim minim duis officia et sunt ea sunt. Exercitation et culpa excepteur aute qui irure. Labore dolore dolor sint esse cillum eiusmod pariatur. Aliqua labore nulla non esse consectetur incididunt elit dolore ea exercitation quis elit elit. Qui id laboris cupidatat amet velit ut dolor.\\r\\n',\n            latitude: 25.652657,\n            longitude: -72.434629,\n            createdAt: '2016-06-20T01:07:40-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Post',\n            id: 1,\n            name: 'Craig Buck Fitzgerald Kirkland Althea Crane Acevedo Burgess Hines Bernard Rocha Powell ',\n            org: 'Hollie Travis Darcy Conner',\n            description:\n                'Mollit ut et quis veniam eiusmod enim fugiat Lorem qui in minim. Elit id nostrud non officia nostrud ad Lorem commodo. Elit ex velit ipsum magna quis. Non adipisicing veniam id pariatur sint cupidatat enim qui veniam est ipsum velit. Mollit duis eiusmod qui incididunt. Sunt nostrud velit reprehenderit ea mollit pariatur aliqua reprehenderit non excepteur cupidatat consectetur ex incididunt. Elit proident nulla nostrud do.\\r\\n',\n            latitude: 64.109759,\n            longitude: -140.925495,\n            createdAt: '2016-10-17T07:04:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Project',\n            id: 2,\n            name: 'Santiago Chaney Tucker Finch Debbie Walker Knowles Padilla Virginia Merrill Celina Pierce ',\n            org: 'Logan Perkins Dunlap Heath',\n            description:\n                'Ex do adipisicing ullamco ad sint. Laborum in irure dolor amet pariatur Lorem est magna officia esse qui et dolore. Qui veniam consectetur commodo laborum pariatur qui consectetur ea veniam nisi pariatur nulla cillum veniam. Labore incididunt aliquip in ut consequat nulla anim nostrud ea labore pariatur.\\r\\n',\n            latitude: 67.37103,\n            longitude: 10.44369,\n            createdAt: '2014-12-04T01:23:05-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Volunteering',\n            id: 3,\n            name: 'Brittney Jefferson Whitley Mcfadden Watts Blackwell Carson Schmidt Lila Barnett Foster Mccarthy ',\n            org: 'Shelly Bryan Kenya Lopez',\n            description:\n                'In non reprehenderit aliquip sit mollit nisi duis. Eu do voluptate ut consequat qui laboris labore sunt exercitation veniam. Sit sunt dolore excepteur veniam irure laborum occaecat aliquip ad occaecat fugiat incididunt adipisicing irure.\\r\\n',\n            latitude: -34.069339,\n            longitude: -112.189468,\n            createdAt: '2018-02-26T07:14:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'In Kind',\n            id: 4,\n            name: 'Andrews Fry Riddle Weeks Lara Nelson Morton Nichols Rush Cherry Carver Reed ',\n            org: 'Waller Williams Ward Bentley',\n            description:\n                'Id sit tempor laboris irure sint in nisi laboris excepteur ad irure adipisicing. Ipsum officia occaecat consectetur sunt. Do deserunt aute esse irure non est eiusmod ad id ullamco. Aliqua id adipisicing pariatur ea incididunt reprehenderit amet commodo sit pariatur culpa. Duis sint aute exercitation elit pariatur dolor.\\r\\n',\n            latitude: 53.897686,\n            longitude: 76.513392,\n            createdAt: '2017-12-23T05:01:13-06:00',\n            ttl: 7,\n        },\n    ];\n    const people = [\n        {\n            id: 0,\n            name: 'Vera Knowles',\n        },\n        {\n            id: 1,\n            name: 'Jefferson Nielsen',\n        },\n        {\n            id: 2,\n            name: 'Mari Mcintyre',\n        },\n        {\n            id: 3,\n            name: 'Letha Holland',\n        },\n        {\n            id: 4,\n            name: 'Alexandra Lawrence',\n        },\n        {\n            id: 5,\n            name: 'Bryan Singleton',\n        },\n    ];\n    const mapImage = 'http://localhost:3001/default-images/sample-g-map.png';\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>10 People liked this post</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {people.map((ppl, i) => {\n                        return (\n                            <Container className=\"ppl-liked-list\" key={i}>\n                                <Row>\n                                    <Col sm={2}>\n                                        <Image src=\"https://picsum.photos/200/200\" thumbnail style={{ width: '100%', height: '100%' }} />\n                                    </Col>\n                                    <Col sm={6} className=\"v-middle\">\n                                        {ppl.name}\n                                    </Col>\n                                    <Col sm={4} className=\"v-middle\">\n                                        <Button size=\"sm\">Add Friend</Button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        );\n                    })}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {posts.map((post, i) => {\n                return (\n                    <div key={i} className=\"justify-text post-box\">\n                        <h4 style={{ color: 'cadetblue' }}>{post.type}</h4>\n                        <h5>{post.name}</h5>\n                        <Row>\n                            <Col sm={2}>\n                                <Image src={defaultOrganizationProfilePicture} thumbnail style={{ height: 50, width: 50 }} />\n                            </Col>\n                            <Col sm=\"10\">\n                                <h6>{post.org}</h6>\n                                <small>{moment(post.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"justify-text\">\n                                {post.description}\n                                <a href=\"#\">See More</a>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\" className=\"home-post-image\">\n                                <Image src=\"https://picsum.photos/400/300\" thumbnail style={{ width: '100%', height: '100%' }} />\n                                <div className=\"home-post-image-text\">{post.ttl} More Images</div>\n                            </Col>\n                            <Col sm=\"6\">\n                                <Image src={mapImage} thumbnail style={{ width: '100%', height: '100%' }} />\n                            </Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Button variant=\"primary\" size=\"sm\">\n                                    <FaThumbsUp /> &nbsp;Like\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"info\" size=\"sm\">\n                                    <FaHeart /> &nbsp;Interested\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"secondary\" size=\"sm\">\n                                    <FaLocationArrow />\n                                    &nbsp; Going\n                                </Button>\n                                &nbsp;\n                            </Col>\n                            <Col className=\"right-align\">\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={handleShow}>\n                                    10 Liked\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-info\" size=\"sm\" onClick={handleShow}>\n                                    100 Interested\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleShow}>\n                                    1000 Going\n                                </Button>\n                                &nbsp;\n                            </Col>\n                        </Row>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nexport default SamplePosts;\n","import React from 'react';\nimport moment from 'moment';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst SamplePosts = (props) => {\n    const posts = [\n        {\n            type: 'Event',\n            id: 0,\n            name: 'Moss Montoya Robertson Fleming Carolina Morgan Whitney Gallegos Avis Ryan English Hall ',\n            org: 'Patrick Espinoza Flores Anderson',\n            description:\n                'Minim aliquip esse in esse culpa ullamco duis aute ex occaecat voluptate consequat. Non est pariatur exercitation incididunt deserunt anim minim duis officia et sunt ea sunt. Exercitation et culpa excepteur aute qui irure. Labore dolore dolor sint esse cillum eiusmod pariatur. Aliqua labore nulla non esse consectetur incididunt elit dolore ea exercitation quis elit elit. Qui id laboris cupidatat amet velit ut dolor.\\r\\n',\n            latitude: 25.652657,\n            longitude: -72.434629,\n            createdAt: '2016-06-20T01:07:40-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Post',\n            id: 1,\n            name: 'Craig Buck Fitzgerald Kirkland Althea Crane Acevedo Burgess Hines Bernard Rocha Powell ',\n            org: 'Hollie Travis Darcy Conner',\n            description:\n                'Mollit ut et quis veniam eiusmod enim fugiat Lorem qui in minim. Elit id nostrud non officia nostrud ad Lorem commodo. Elit ex velit ipsum magna quis. Non adipisicing veniam id pariatur sint cupidatat enim qui veniam est ipsum velit. Mollit duis eiusmod qui incididunt. Sunt nostrud velit reprehenderit ea mollit pariatur aliqua reprehenderit non excepteur cupidatat consectetur ex incididunt. Elit proident nulla nostrud do.\\r\\n',\n            latitude: 64.109759,\n            longitude: -140.925495,\n            createdAt: '2016-10-17T07:04:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Project',\n            id: 2,\n            name: 'Santiago Chaney Tucker Finch Debbie Walker Knowles Padilla Virginia Merrill Celina Pierce ',\n            org: 'Logan Perkins Dunlap Heath',\n            description:\n                'Ex do adipisicing ullamco ad sint. Laborum in irure dolor amet pariatur Lorem est magna officia esse qui et dolore. Qui veniam consectetur commodo laborum pariatur qui consectetur ea veniam nisi pariatur nulla cillum veniam. Labore incididunt aliquip in ut consequat nulla anim nostrud ea labore pariatur.\\r\\n',\n            latitude: 67.37103,\n            longitude: 10.44369,\n            createdAt: '2014-12-04T01:23:05-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Volunteering',\n            id: 3,\n            name: 'Brittney Jefferson Whitley Mcfadden Watts Blackwell Carson Schmidt Lila Barnett Foster Mccarthy ',\n            org: 'Shelly Bryan Kenya Lopez',\n            description:\n                'In non reprehenderit aliquip sit mollit nisi duis. Eu do voluptate ut consequat qui laboris labore sunt exercitation veniam. Sit sunt dolore excepteur veniam irure laborum occaecat aliquip ad occaecat fugiat incididunt adipisicing irure.\\r\\n',\n            latitude: -34.069339,\n            longitude: -112.189468,\n            createdAt: '2018-02-26T07:14:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'In Kind',\n            id: 4,\n            name: 'Andrews Fry Riddle Weeks Lara Nelson Morton Nichols Rush Cherry Carver Reed ',\n            org: 'Waller Williams Ward Bentley',\n            description:\n                'Id sit tempor laboris irure sint in nisi laboris excepteur ad irure adipisicing. Ipsum officia occaecat consectetur sunt. Do deserunt aute esse irure non est eiusmod ad id ullamco. Aliqua id adipisicing pariatur ea incididunt reprehenderit amet commodo sit pariatur culpa. Duis sint aute exercitation elit pariatur dolor.\\r\\n',\n            latitude: 53.897686,\n            longitude: 76.513392,\n            createdAt: '2017-12-23T05:01:13-06:00',\n            ttl: 7,\n        },\n    ];\n    const mapImage = 'http://cascaid.sky4242.com/default-images/sample-g-map.png';\n    return (\n        <div>\n            <Row>\n                <Col>\n                    <h6>Suggestions for you.</h6>\n                    <small>Based on your profile</small>\n                </Col>\n            </Row>\n\n            {posts.map((post, i) => {\n                return (\n                    <div key={i} className=\"post-box\">\n                        <Row>\n                            <Col sm={3}>\n                                <Image src={defaultOrganizationProfilePicture} thumbnail style={{ height: 50, width: 50 }} />\n                            </Col>\n                            <Col sm=\"9\">\n                                <h6>{post.org}</h6>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>Organization Type: Non-profit, Political</Col>\n                        </Row>\n                        <Row>\n                            <Col>Impact Areas: ASD ZXC QWE ...</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <small>House# 99, Apt# B2, Road# 4/25, Block# A, Dhaka 1213</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <Button variant=\"outline-primary\" size=\"sm\">\n                                    Go to Description\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-info\" size=\"sm\">\n                                    Details\n                                </Button>\n                            </Col>\n                        </Row>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nexport default SamplePosts;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport SamplePosts from './sample-home-posts';\nimport SampleSuggestions from './sample-home-suggestions';\nconst Home = (props) => {\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <Row>\n                        <Col md=\"8\">\n                            <SamplePosts />\n                        </Col>\n                        <Col md=\"4\">\n                            <SampleSuggestions />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default Home;\n","import React from 'react';\nimport { Card, CardColumns } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst OrganizationListView = (props) => {\n    const allOrganizations = props.allOrganizations;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allOrganizations && allOrganizations.length > 0) {\n        return (\n            <CardColumns>\n                {allOrganizations.map((org, i) => {\n                    if (org && org.basicInfo && org.basicInfo.name) {\n                        return (\n                            <Card\n                                className=\"special-btn special-card\"\n                                key={i}\n                                onClick={() => {\n                                    props.gotoOrganizationDetails(org.userId);\n                                }}\n                            >\n                                <Card.Img\n                                    variant=\"top\"\n                                    src={org.basicInfo.profilePicture ? org.basicInfo.profilePicture : defaultOrganizationProfilePicture}\n                                    alt=\"No Image Found\"\n                                    className=\"organization-list-image\"\n                                />\n                                <Card.Body>\n                                    <Card.Text className=\"left-text bold-text\">{org.basicInfo.name}</Card.Text>\n                                    <Card.Text className=\"justify-text\">\n                                        <small>{descriptionRender(org.basicInfo.description)}</small>\n                                    </Card.Text>\n                                </Card.Body>\n                                {/* <Card.Footer></Card.Footer> */}\n                            </Card>\n                        );\n                    } else return <></>;\n                })}\n            </CardColumns>\n        );\n    } else return <h4>No Organizations Found</h4>;\n};\nexport default OrganizationListView;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass ImpactAreaDA {\n    get_all_global_impact_areas = () => {\n        return axios\n            .get(APIPaths.getAllGlobalImpactAreas)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_all_impact_areas_by_user = (userId) => {\n        return axios\n            .get(APIPaths.getAllImpactAreasByUser + `${userId}`)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new ImpactAreaDA();\n","import * as Types from '../constants/reducer-types';\nimport ImpactAreaDA from '../data_accesses/impact-area-da';\n\nexport const getAllGlobalImpactAreas = () => {\n    return {\n        type: Types.GET_ALL_GLOBAL_IMPACT_AREAS,\n        payload: ImpactAreaDA.get_all_global_impact_areas(),\n    };\n};\nexport const getAllImpactAreasByUser = (userId) => {\n    return {\n        type: Types.GET_ALL_IMPACT_AREAS_BY_USER,\n        payload: ImpactAreaDA.get_all_impact_areas_by_user(userId),\n    };\n};\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass OrganizationDA {\n    get_basic_info = (userId) => {\n        return axios\n            .get(APIPaths.getOrganizationBasicInfo(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_basic_info = (userId, basicInfo) => {\n        return axios\n            .put(APIPaths.setOrganizationBasicInfo(userId), basicInfo, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_service_info = (userId) => {\n        return axios\n            .get(APIPaths.getOrganizationServiceInfo(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_service_info = (userId, serviceInfo) => {\n        return axios\n            .put(APIPaths.setOrganizationServiceInfo(userId), serviceInfo, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_internal_link = (userId) => {\n        return axios\n            .get(APIPaths.getOrganizationInternalLink(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_internal_links = (userId, internalLink) => {\n        return axios\n            .put(APIPaths.setOrganizationInternalLink(userId), internalLink, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_public_info = (userId) => {\n        return axios\n            .get(APIPaths.getOrganizationPublicInfo(userId))\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_list = () => {\n        return axios\n            .get(APIPaths.getOrganizationList)\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_list_by_filter = (filter) => {\n        let queryString = '?';\n\n        for (let t in filter) {\n            if (filter[t]) {\n                console.log(t);\n                queryString += t.toString();\n                queryString += '=';\n                queryString += JSON.stringify(filter[t]);\n                queryString += '&';\n            }\n        }\n        return axios\n            .get(APIPaths.getOrganizationList + queryString.slice(0, -1))\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_events_by_organization = (userId) => {\n        console.log(APIPaths.getAllEventsByOrganization(userId));\n        return axios\n            .get(APIPaths.getAllEventsByOrganization(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_projects_by_organization = (userId) => {\n        return axios\n            .get(APIPaths.getAllProjectsByOrganization(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_posts_by_organization = (userId) => {\n        return axios\n            .get(APIPaths.getAllPostsByOrganization(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_volunteerings_by_organization = (userId) => {\n        return axios\n            .get(APIPaths.getAllVolunteeringsByOrganization(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new OrganizationDA();\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass OrganizationTypeDA {\n    get_all = () => {\n        return axios\n            .get(APIPaths.getAllOrganizationTypes)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new OrganizationTypeDA();\n","import * as Types from '../constants/reducer-types';\nimport OrganizationTypeDA from '../data_accesses/organization-type-da';\n\nexport const getAllOrganizationTypes = () => {\n    return {\n        type: Types.GET_ALL_ORGANIZATION_TYPES,\n        payload: OrganizationTypeDA.get_all(),\n    };\n};\n","import React from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nconst SearchMenu = (props) => {\n    const selected = props.selected;\n    return (\n        <Nav variant=\"pills\" activeKey={selected}>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"organization\" href=\"/search/organization\">\n                    Organization\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"event\" href=\"/search/event\">\n                    Events\n                </Nav.Link>\n            </Nav.Item>\n        </Nav>\n    );\n};\nexport default SearchMenu;\n","import React from 'react';\nimport Select from 'react-select';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nconst SearchMenu = (props) => {\n    console.log(props);\n    return (\n        <>\n            <label>Organization Name</label>\n            <input className=\"form-control\" type=\"text\" value={props.filter.name} onChange={(e) => props.changeFilter('name', e.target.value)} />\n            <br />\n            <label>Impact Area</label>\n            <Select onChange={(value) => props.changeFilter('impactAreas', value)} isMulti={true} options={props.impactAreas} value={props.filter.impactAreas} />\n            <br />\n            <label>Organization Type</label>\n            <Select onChange={(value) => props.changeFilter('organizationTypes', value)} isMulti={true} options={props.organizationTypes} value={props.filter.organizationTypes} />\n            <br />\n            <label>Service Area</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.serviceArea}\n                onChange={(e) => {\n                    props.changeFilter('serviceArea', e.target.value);\n                }}\n            />\n            <br />\n            <label>Organization Address</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.address}\n                onChange={(e) => {\n                    props.changeFilter('address', e.target.value);\n                }}\n                placeholder=\"zip code/city/state/country\"\n            />\n            <br />\n            <label>Keyword</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.keyword}\n                onChange={(e) => {\n                    props.changeFilter('keyword', e.target.value);\n                }}\n            />\n            <br />\n            <br />\n            <Button\n                variant=\"outline-danger\"\n                size=\"sm\"\n                onClick={() => {\n                    props.resetFilter();\n                }}\n            >\n                Reset\n            </Button>\n            &nbsp;\n            <Button\n                size=\"sm\"\n                onClick={() => {\n                    props.handleOnApplyFilter();\n                }}\n            >\n                Search\n            </Button>\n            <div style={{ height: 25 }} />\n        </>\n    );\n};\nexport default SearchMenu;\n","export const countries = [\n    { name: 'Australia', code: 'Australia' },\n    { name: 'Canada', code: 'Canada' },\n    { name: 'Japan', code: 'Japan' },\n    { name: 'United States', code: 'UnitedStates' },\n    { name: 'United Kingdom', code: 'UnitedKingdom' },\n];\nexport const getCountryByCode = (code) => {\n    const country = countries.filter((country) => country.code === code);\n    if (country && country.length > 0) return country[0].name;\n};\nexport const states = {\n    Australia: [\n        { code: 'AustralianCapitalTerritory', name: 'Australian Capital Territory' },\n        { code: 'NewSouthWales', name: 'New South Wales' },\n        { code: 'NorthernTerritory', name: 'Northern Territory' },\n        { code: 'Queensland', name: 'Queensland' },\n        { code: 'SouthAustralia', name: 'South Australia' },\n        { code: 'Tasmania', name: 'Tasmania' },\n        { code: 'Victoria', name: 'Victoria' },\n        { code: 'WesternAustralia', name: 'Western Australia' },\n    ],\n    Canada: [\n        { code: 'AB', name: 'Alberta' },\n        { code: 'BC', name: 'British Columbia' },\n        { code: 'MB', name: 'Manitoba' },\n        { code: 'NB', name: 'New Brunswick' },\n        { code: 'NL', name: 'Newfoundland and Labrador' },\n        { code: 'NS', name: 'Nova Scotia' },\n        { code: 'NT', name: 'Northwest Territories' },\n        { code: 'NU', name: 'Nunavut' },\n        { code: 'ON', name: 'Ontario' },\n        { code: 'PE', name: 'Prince Edward Island' },\n        { code: 'QC', name: 'Quebec' },\n        { code: 'SK', name: 'Saskatchewan' },\n        { code: 'YT', name: 'Yukon' },\n    ],\n    Japan: [\n        { code: '01', name: 'Hokkaido' },\n        { code: '02', name: 'Aomori' },\n        { code: '03', name: 'Iwate' },\n        { code: '04', name: 'Miyagi' },\n        { code: '05', name: 'Akita' },\n        { code: '06', name: 'Yamagata' },\n        { code: '07', name: 'Fukushima' },\n        { code: '08', name: 'Ibaraki' },\n        { code: '09', name: 'Tochigi' },\n        { code: '10', name: 'Gunma' },\n        { code: '11', name: 'Saitama' },\n        { code: '12', name: 'Chiba' },\n        { code: '13', name: 'Tokyo' },\n        { code: '14', name: 'Kanagawa' },\n        { code: '15', name: 'Niigata' },\n        { code: '16', name: 'Toyama' },\n        { code: '17', name: 'Ishikawa' },\n        { code: '18', name: 'Fukui' },\n        { code: '19', name: 'Yamanashi' },\n        { code: '20', name: 'Nagano' },\n        { code: '21', name: 'Gifu' },\n        { code: '22', name: 'Shizuoka' },\n        { code: '23', name: 'Aichi' },\n        { code: '24', name: 'Mie' },\n        { code: '25', name: 'Shiga' },\n        { code: '26', name: 'Kyoto' },\n        { code: '27', name: 'Osaka' },\n        { code: '28', name: 'Hyogo' },\n        { code: '29', name: 'Nara' },\n        { code: '30', name: 'Wakayama' },\n        { code: '31', name: 'Tottori' },\n        { code: '32', name: 'Shimane' },\n        { code: '33', name: 'Okayama' },\n        { code: '34', name: 'Hiroshima' },\n        { code: '35', name: 'Yamaguchi' },\n        { code: '36', name: 'Tokushima' },\n        { code: '37', name: 'Kagawa' },\n        { code: '38', name: 'Ehime' },\n        { code: '39', name: 'Kochi' },\n        { code: '40', name: 'Fukuoka' },\n        { code: '41', name: 'Saga' },\n        { code: '42', name: 'Nagasaki' },\n        { code: '43', name: 'Kumamoto' },\n        { code: '44', name: 'Oita' },\n        { code: '45', name: 'Miyazaki' },\n        { code: '46', name: 'Kagoshima' },\n        { code: '47', name: 'Okinawa' },\n    ],\n    UnitedStates: [\n        {\n            name: 'Armed Forces Americas (except Canada)',\n            code: 'ArmedForcesAmericas',\n        },\n        { name: 'Armed Forces', code: 'ArmedForces' },\n        { name: 'Alaska', code: 'Alaska' },\n        { name: 'Alabama', code: 'Alabama' },\n        { name: 'Armed Forces Pacific', code: 'ArmedForcesPacific' },\n        { name: 'Arkansas', code: 'Arkansas' },\n        { name: 'American Samoa', code: 'AmericanSamoa' },\n        { name: 'Arizona', code: 'Arizona' },\n        { name: 'California', code: 'California' },\n        { name: 'Colorado', code: 'Colorado' },\n        { name: 'Connecticut', code: 'Connecticut' },\n        { name: 'District of Columbia', code: 'DistrictOfColumbia' },\n        { name: 'Delaware', code: 'Delaware' },\n        { name: 'Florida', code: 'Florida' },\n        { name: 'Georgia', code: 'Georgia' },\n        { name: 'Guam', code: 'Guam' },\n        { name: 'Hawaii', code: 'Hawaii' },\n        { name: 'Iowa', code: 'Iowa' },\n        { name: 'Idaho', code: 'Idaho' },\n        { name: 'Illinois', code: 'Illinois' },\n        { name: 'Indiana', code: 'Indiana' },\n        { name: 'Kansas', code: 'Kansas' },\n        { name: 'Kentucky', code: 'Kentucky' },\n        { name: 'Louisiana', code: 'Louisiana' },\n        { name: 'Massachusetts', code: 'Massachusetts' },\n        { name: 'Maryland', code: 'Maryland' },\n        { name: 'Maine', code: 'Maine' },\n        { name: 'Marshall Islands', code: 'MarshallIslands' },\n        { name: 'Michigan', code: 'Michigan' },\n        { name: 'Minnesota', code: 'Minnesota' },\n        { name: 'Missouri', code: 'Missouri' },\n        { name: 'Northern Mariana Islands', code: 'NorthernMarianaIslands' },\n        { name: 'Mississippi', code: 'Mississippi' },\n        { name: 'Montana', code: 'Montana' },\n        { name: 'North Carolina', code: 'NorthCarolina' },\n        { name: 'North Dakota', code: 'NorthDakota' },\n        { name: 'Nebraska', code: 'Nebraska' },\n        { name: 'New Hampshire', code: 'NewHampshire' },\n        { name: 'New Jersey', code: 'NewJersey' },\n        { name: 'New Mexico', code: 'NewMexico' },\n        { name: 'Nevada', code: 'Nevada' },\n        { name: 'New York', code: 'NewYork' },\n        { name: 'Ohio', code: 'Ohio' },\n        { name: 'Oklahoma', code: 'Oklahoma' },\n        { name: 'Oregon', code: 'Oregon' },\n        { name: 'Pennsylvania', code: 'Pennsylvania' },\n        { name: 'Puerto Rico', code: 'PuertoRico' },\n        { name: 'Palau', code: 'Palau' },\n        { name: 'Rhode Island', code: 'RhodeIsland' },\n        { name: 'South Carolina', code: 'SouthCarolina' },\n        { name: 'South Dakota', code: 'SouthDakota' },\n        { name: 'Tennessee', code: 'Tennessee' },\n        { name: 'Texas', code: 'Texas' },\n        { name: 'Utah', code: 'Utah' },\n        { name: 'Virginia', code: 'Virginia' },\n        { name: 'Virgin Islands', code: 'VirginIslands' },\n        { name: 'Vermont', code: 'Vermont' },\n        { name: 'Washington', code: 'Washington' },\n        { name: 'Wisconsin', code: 'Wisconsin' },\n        { name: 'West Virginia', code: 'WestVirginia' },\n        { name: 'Wyoming', code: 'Wyoming' },\n    ],\n};\nexport const getStateByCountryAndCode = (countyCode, code) => {\n    let states_ = states[countyCode];\n    let state = states_.filter((state) => state.code === code);\n    if (state && state.length > 0) return state[0].name;\n};\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { Button, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllOrganizationOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allOrganizations;\n    console.log('🚀 ~ file: organization-map-view.js ~ line 27 ~ AllOrganizationOnMap ~ markers', markers);\n\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n    const pairsRender = (label, tags) => {\n        return (\n            <label>\n                {label}{' '}\n                {tags.map((t, i) => {\n                    return i === 0 ? tags.label : ', ' + tags.label;\n                })}\n            </label>\n        );\n    };\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.basicInfo.address && marker.basicInfo.address.latitude && marker.basicInfo.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.basicInfo.address.latitude,\n                                    lng: marker.basicInfo.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.basicInfo.address.latitude,\n                            lng: selected.basicInfo.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h6>{selected.basicInfo.name}</h6>\n                            <label>\n                                Organization Type:{' '}\n                                {selected.organizationTypes.map((type, i) => {\n                                    return (\n                                        <Badge variant=\"primary\" key={i}>\n                                            {type.label}\n                                        </Badge>\n                                    );\n                                    // return i !== 0 ? ', ' + type.label : type.label;\n                                })}\n                            </label>\n                            <br />\n                            <label>\n                                Impact Areas:{' '}\n                                {selected.impactAreas.map((area, i) => {\n                                    // return i !== 0 ? ', ' + area.label : area.label;\n                                    return (\n                                        <Badge variant=\"primary\" key={i}>\n                                            {area.label}\n                                        </Badge>\n                                    );\n                                })}\n                            </label>\n                            <label>Address: {addressMaker(selected.basicInfo.address)}</label>\n                            {/* {pairsRender('Organization Type', selected.basicInfo.organizationTypes)} */}\n                            <br />\n                            <Button\n                                size=\"sm\"\n                                variant=\"outline-primary\"\n                                onClick={() => {\n                                    props.gotoOrganizationDetails(selected.userId);\n                                }}\n                            >\n                                Go to Page\n                            </Button>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllOrganizationOnMap;\n","export const defaultCurrentLocation = {\n    latitude: 39.953194,\n    longitude: -75.163345,\n};\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport OrganizationListView from '../../components/organization/organization-list-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllOrganizationsByFilter } from '../../actions/organization-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport SearchMenu from '../../components/search/search-menu';\nimport FilterOrganization from '../../components/search/filter-organization';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport OrganizationMapView from '../../components/organization/organization-map-view';\nimport Pagination from 'react-js-pagination';\nimport { defaultCurrentLocation } from '../../constants/default-user-information';\n\nconst SearchOrganization = (props) => {\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [filter, setFilter] = useState({\n        name: '',\n        impactAreas: [],\n        organizationTypes: [],\n        serviceArea: '',\n        address: '',\n        keyword: '',\n        keywords: [],\n    });\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(position);\n            if (position) {\n                const coords = position.coords;\n                setCurrentLocation({\n                    latitude: coords.latitude,\n                    longitude: coords.longitude,\n                });\n            }\n        });\n    }, []);\n    const resetFilter = () => {\n        setFilter({\n            name: '',\n            impactAreas: [],\n            organizationTypes: [],\n            serviceArea: '',\n            address: '',\n            keyword: '',\n            keywords: [],\n        });\n    };\n    const changeFilter = (key, value) => {\n        console.log('🚀 ~ file: search-organization.js ~ line 53 ~ changeFilter ~ key, value', key, value);\n        let filter_ = filter;\n        filter[key] = value;\n        console.log(filter_);\n        setFilter({ ...filter_ });\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllOrganizationsByFilter(filter));\n        setLoading(false);\n        setActivePage(1);\n        console.log('FFF', filter);\n    };\n    const gotoOrganizationDetails = (userId) => {\n        props.history.push(`/organization/details/${userId}`);\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getAllGlobalImpactAreas());\n            props.dispatch(getAllOrganizationTypes());\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col lg={4}>\n                        <SearchMenu selected=\"organization\" />\n                        <hr />\n                        <FilterOrganization\n                            changeFilter={changeFilter}\n                            resetFilter={resetFilter}\n                            handleOnApplyFilter={handleOnApplyFilter}\n                            filter={filter}\n                            organizationTypes={props.getOrganizationTypeResponse?.success ? props.getOrganizationTypeResponse.organizationTypes : []}\n                            impactAreas={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []}\n                        />\n                    </Col>\n                    <Col lg={8}>\n                        <Nav\n                            variant=\"pills\"\n                            activeKey={viewType}\n                            onSelect={(eventKey) => {\n                                setViewType(eventKey);\n                            }}\n                            size=\"sm\"\n                        >\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"list\" title=\"list\">\n                                    List\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"map\" title=\"map\">\n                                    Map\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <hr />\n                        {viewType === 'list' && (\n                            <>\n                                <Pagination\n                                    itemClass=\"page-item\"\n                                    linkClass=\"page-link\"\n                                    activePage={activePage}\n                                    itemsCountPerPage={30}\n                                    totalItemsCount={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations.length : 0}\n                                    pageRangeDisplayed={5}\n                                    onChange={(page) => {\n                                        setActivePage(page);\n                                    }}\n                                />\n                                <OrganizationListView\n                                    allOrganizations={\n                                        props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations.slice((activePage - 1) * 30, activePage * 30 - 1) : []\n                                    }\n                                    gotoOrganizationDetails={gotoOrganizationDetails}\n                                />\n                            </>\n                        )}\n                        {viewType === 'map' && (\n                            <OrganizationMapView\n                                allOrganizations={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations : []}\n                                gotoOrganizationDetails={gotoOrganizationDetails}\n                                zoom={8}\n                                currentLocation={currentLocation}\n                            />\n                        )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getOrganizationTypeResponse = state.OrganizationType.getAllOrganizationTypes;\n    const getAllOrganizationsResponse = state.Organization.getAllOrganizations;\n    return {\n        getImpactAreaResponse,\n        getAllOrganizationsResponse,\n        getOrganizationTypeResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchOrganization);\n","import * as Types from '../constants/reducer-types';\nimport OrganizationDA from '../data_accesses/organization-da';\n\nexport const getBasicInfo = (userId) => {\n    return {\n        type: Types.GET_ORGANIZATION_BASIC_INFO,\n        payload: OrganizationDA.get_basic_info(userId),\n    };\n};\n\nexport const getServiceInfo = (userId) => {\n    return {\n        type: Types.GET_ORGANIZATION_SERVICE_INFO,\n        payload: OrganizationDA.get_service_info(userId),\n    };\n};\nexport const getInternalLink = (userId) => {\n    return {\n        type: Types.GET_ORGANIZATION_INTERNAL_LINK,\n        payload: OrganizationDA.get_internal_link(userId),\n    };\n};\nexport const getPublicInfo = (userId) => {\n    return {\n        type: Types.GET_ORGANIZATION_PUBLIC_INFO,\n        payload: OrganizationDA.get_public_info(userId),\n    };\n};\n\nexport const getAllOrganizations = () => {\n    return {\n        type: Types.GET_ALL_ORGANIZATIONS,\n        payload: OrganizationDA.get_list(),\n    };\n};\n\nexport const getAllOrganizationsByFilter = (filter) => {\n    let filters = { ...filter };\n    if (filters.impactAreas && filters.impactAreas.length > 0) filters.impactAreas = filters.impactAreas.map((area) => area._id);\n    if (filters.organizationTypes && filters.organizationTypes.length > 0) filters.organizationTypes = filters.organizationTypes.map((type) => type._id);\n    return {\n        type: Types.GET_ALL_ORGANIZATIONS,\n        payload: OrganizationDA.get_list_by_filter(filters),\n    };\n};\n\nexport const setBasicInfo = (userId, basicInfo) => {\n    return {\n        type: Types.SET_ORGANIZATION_BASIC_INFO,\n        payload: OrganizationDA.set_basic_info(userId, basicInfo),\n    };\n};\n\nexport const setServiceInfo = (userId, serviceInfo) => {\n    return {\n        type: Types.SET_ORGANIZATION_SERVICE_INFO,\n        payload: OrganizationDA.set_service_info(userId, serviceInfo),\n    };\n};\nexport const setInternalLink = (userId, internalLink) => {\n    return {\n        type: Types.SET_ORGANIZATION_INTERNAL_LINK,\n        payload: OrganizationDA.set_internal_links(userId, internalLink),\n    };\n};\n\nexport const clearBasicInfo = (userId) => {\n    return {\n        type: Types.CLEAR_ORGANIZATION_BASIC_INFO,\n        payload: {},\n    };\n};\n\nexport const clearServiceInfo = (userId) => {\n    return {\n        type: Types.CLEAR_ORGANIZATION_SERVICE_INFO,\n        payload: {},\n    };\n};\nexport const clearInternalLink = (userId) => {\n    return {\n        type: Types.CLEAR_ORGANIZATION_INTERNAL_LINK,\n        payload: {},\n    };\n};\n\nexport const getAllEventsByOrganization = (userId) => {\n    return {\n        type: Types.GET_ALL_EVENTS,\n        payload: OrganizationDA.get_all_events_by_organization(userId),\n    };\n};\n\nexport const getAllProjectsByOrganization = (userId) => {\n    return {\n        type: Types.GET_ALL_PROJECTS,\n        payload: OrganizationDA.get_all_projects_by_organization(userId),\n    };\n};\n\nexport const getAllPostsByOrganization = (userId) => {\n    return {\n        type: Types.GET_ALL_POSTS,\n        payload: OrganizationDA.get_all_posts_by_organization(userId),\n    };\n};\n\nexport const getAllVolunteeringsByOrganization = (userId) => {\n    return {\n        type: Types.GET_ALL_VOLUNTEERINGS,\n        payload: OrganizationDA.get_all_volunteerings_by_organization(userId),\n    };\n};\n","import React from 'react';\nimport { Card, CardColumns } from 'react-bootstrap';\nimport { defaultEventPicture } from '../../constants/default-images';\nimport moment from 'moment';\nconst EventListView = (props) => {\n    const allEvents = props.allEvents;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allEvents && allEvents.length > 0) {\n        return (\n            <CardColumns md=\"6\">\n                {allEvents.map((event, i) => {\n                    if (event && event._id) {\n                        return (\n                            <Card\n                                className=\"special-btn special-card\"\n                                key={i}\n                                onClick={() => {\n                                    props.gotoEventDetails(event._id);\n                                }}\n                            >\n                                <Card.Img variant=\"top\" src={event.defaultImage ? event.defaultImage : defaultEventPicture} alt=\"No Image Found\" />\n                                <Card.Body>\n                                    <Card.Title className=\"center-aligned\">{event.title}</Card.Title>\n                                    <Card.Text className=\"justify-text\">\n                                        <small>{descriptionRender(event.description)}</small>\n                                    </Card.Text>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <small>On {moment(event.startDateTime).format('LL')}</small>\n                                </Card.Footer>\n                            </Card>\n                        );\n                    } else return <></>;\n                })}\n            </CardColumns>\n        );\n    } else return <h4>No Events Found</h4>;\n};\nexport default EventListView;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass EventDA {\n    create_event = (event) => {\n        return axios\n            .post(APIPaths.createEvent, event, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_event_by_id = (eventId) => {\n        return axios\n            .get(APIPaths.getEventById + eventId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_events = () => {\n        return axios\n            .get(APIPaths.getAllEvents, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    update_event_by_id = (eventId, event) => {\n        return axios\n            .put(APIPaths.updateEventById + eventId, event, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    delete_event_by_id = (eventId) => {\n        return axios\n            .delete(APIPaths.deleteEventById + eventId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_list_by_filter = (title, impactAreas) => {\n        const params = `?title=${title}&impactAreas=${JSON.stringify(impactAreas)}`;\n        return axios\n            .get(APIPaths.getAllEvents + params, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new EventDA();\n","import EventDA from '../data_accesses/event-da';\nimport * as Types from '../constants/reducer-types';\nexport const createEvent = (event) => {\n    return {\n        type: Types.SET_EVENT,\n        payload: EventDA.create_event(event),\n    };\n};\nexport const getEventById = (eventId) => {\n    return {\n        type: Types.GET_EVENT,\n        payload: EventDA.get_event_by_id(eventId),\n    };\n};\nexport const getAllEvents = () => {\n    return {\n        type: Types.GET_ALL_EVENTS,\n        payload: EventDA.get_all_events(),\n    };\n};\nexport const deleteEventById = (eventId) => {\n    return {\n        type: Types.DELETE_EVENT,\n        payload: EventDA.delete_event_by_id(eventId),\n    };\n};\nexport const updateEventById = (eventId, event) => {\n    return {\n        type: Types.SET_EVENT,\n        payload: EventDA.update_event_by_id(eventId, event),\n    };\n};\nexport const clearEvent = () => {\n    return {\n        type: Types.CLEAR_EVENT,\n        payload: {},\n    };\n};\n\nexport const getAllEventsByFilter = ({ title, impactArea }) => {\n    impactArea = impactArea.map((area) => area._id);\n    return {\n        type: Types.GET_ALL_EVENTS,\n        payload: EventDA.get_list_by_filter(title, impactArea),\n    };\n};\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllEventOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allEvents;\n    console.log('🚀 ~ file: event-map-view.js ~ line 27 ~ AllEventOnMap ~ markers', markers);\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Event</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            <Link to={RoutePath.eventDetailsPage + selected._id}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllEventOnMap;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport EventListView from '../../components/event/event-card-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllEventsByFilter } from '../../actions/event-action';\nimport EventMapView from '../../components/event/event-map-view';\nimport SearchMenu from '../../components/search/search-menu';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport Select from 'react-select';\nimport Pagination from 'react-js-pagination';\nimport { defaultCurrentLocation } from '../../constants/default-user-information';\nconst SearchEvent = (props) => {\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [filter, setFilter] = useState({\n        title: '',\n        impactArea: [],\n    });\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(position);\n            if (position) {\n                const coords = position.coords;\n                setCurrentLocation({\n                    latitude: coords.latitude,\n                    longitude: coords.longitude,\n                });\n            }\n        });\n    }, []);\n    const changeFilter = (key, value) => {\n        let filter_ = filter;\n        filter[key] = value;\n        console.log(filter_);\n        setFilter(filter_);\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllEventsByFilter(filter));\n        setLoading(false);\n        setActivePage(1);\n    };\n    const gotoEventDetails = (userId) => {\n        props.history.push(`/event/details/${userId}`);\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getAllGlobalImpactAreas());\n\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    if (loading) return <LoadingAnim />;\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col lg={4}>\n                    <SearchMenu selected=\"event\" />\n                    <hr />\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Event title\"\n                        className=\"form-control\"\n                        onChange={(e) => {\n                            changeFilter('title', e.target.value);\n                        }}\n                    />\n                    <br />\n                    <label>Impact Area</label>\n                    <Select onChange={(value) => changeFilter('impactArea', value)} isMulti={true} options={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []} />\n                    <br />\n\n                    <br />\n                    <br />\n                    <Button\n                        onClick={() => {\n                            handleOnApplyFilter();\n                        }}\n                    >\n                        Search\n                    </Button>\n                    <div style={{ height: 25 }} />\n                </Col>\n                <Col lg={8}>\n                    <Nav\n                        variant=\"pills\"\n                        activeKey={viewType}\n                        onSelect={(eventKey) => {\n                            setViewType(eventKey);\n                        }}\n                        size=\"sm\"\n                    >\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"list\" title=\"list\">\n                                List\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"map\" title=\"map\">\n                                Map\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <hr />\n                    {viewType === 'list' && (\n                        <>\n                            <Pagination\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                                activePage={activePage}\n                                itemsCountPerPage={30}\n                                totalItemsCount={props.getAllEventsResponse.success ? props.getAllEventsResponse.allEvents.length : 0}\n                                pageRangeDisplayed={5}\n                                onChange={(page) => {\n                                    setActivePage(page);\n                                }}\n                            />\n                            <EventListView\n                                allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.allEvents.slice((activePage - 1) * 30, activePage * 30 - 1) : []}\n                                gotoEventDetails={gotoEventDetails}\n                            />\n                        </>\n                    )}\n                    {viewType === 'map' && (\n                        <EventMapView\n                            allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.allEvents.slice((activePage - 1) * 30, activePage * 30 - 1) : []}\n                            zoom={6}\n                            currentLocation={currentLocation}\n                        />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getAllEventsResponse = state.Event.getAllEvents;\n    return {\n        getImpactAreaResponse,\n        getAllEventsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchEvent);\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass IndividualDA {\n    get_basic_info = (userId) => {\n        return axios\n            .get(APIPaths.getIndividualBasicInfo(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_basic_info = (userId, basicInfo) => {\n        return axios\n            .put(APIPaths.setIndividualBasicInfo(userId), basicInfo, APIPaths.apiConfig())\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_involvement = (userId) => {\n        return axios\n            .get(APIPaths.getIndividualInvolvement(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_involvement = (userId, involvement) => {\n        return axios\n            .put(APIPaths.setIndividualInvolvement(userId), involvement, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_privacy = (userId) => {\n        return axios\n            .get(APIPaths.getIndividualPrivacy(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    set_privacy = (userId, privacy) => {\n        return axios\n            .put(APIPaths.setIndividualPrivacy(userId), privacy, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_public_info = (userId) => {\n        return axios\n            .get(APIPaths.getIndividualPublicInfo(userId))\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_list = () => {\n        return axios\n            .get(APIPaths.getIndividualList)\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new IndividualDA();\n","export const allGenders = [\n    { id: 1, value: 'female', label: 'Female' },\n    { id: 2, value: 'male', label: 'Male' },\n    { id: 3, value: 'transgender-female', label: 'Transgender Female' },\n    { id: 4, value: 'transgender-male', label: 'Transgender Male' },\n    { id: 3, value: 'transgender-non-conforming', label: 'Gender Non-Conforming' },\n    { id: 4, value: 'other', label: 'Other' },\n];\n\nexport const getGenderByValue = (value) => {\n    const genders = allGenders.filter((gender) => gender.value === value);\n    if (genders && genders.length > 0) return genders[0].label;\n    else return 'Not Found';\n};\n","export const allRaces = [\n    { id: 1, value: 'american-indian-alaska-native', label: 'American Indian/Alaska Native' },\n    { id: 2, value: 'asian', label: 'Asian' },\n    { id: 3, value: 'black', label: 'Black' },\n    { id: 4, value: 'hispanic', label: 'Hispanic' },\n    { id: 5, value: 'middle-eastern-north-african', label: 'Middle Eastern/North African' },\n    { id: 6, value: 'native-hawaiian-other-pacific-islander', label: 'Native Hawaiian/Other Pacific Islander' },\n    { id: 7, value: 'white', label: 'White' },\n    { id: 8, value: 'other', label: 'Other' },\n];\nexport const getRaceByValue = (value) => {\n    const name = 'Name not found!';\n    for (let race = 0; race < allRaces.length; race++) {\n        if (allRaces[race].value === value) return allRaces[race].name;\n    }\n    return name;\n};\n\nexport const getRacesByValues = (values) => {\n    return allRaces.filter((race) => values.includes(race.value));\n};\n","export const individualHeaders = {\n    1: { stepNo: 1, percent: 20, header: 'Sign Up On CascAid' },\n    2: { stepNo: 2, percent: 40, header: 'Tell us about yourself' },\n    3: { stepNo: 3, percent: 60, header: 'Community and Impact Interest' },\n    4: { stepNo: 4, percent: 80, header: 'Adjust any privacy settings if needed' },\n    5: { stepNo: 5, percent: 100, header: 'Tell us about yourself' },\n};\nexport const organizationHeaders = {\n    1: { stepNo: 1, percent: 20, header: 'Sign Up On CascAid' },\n    2: { stepNo: 2, percent: 40, header: 'Tell us about yourself' },\n    3: { stepNo: 3, percent: 60, header: 'Tell Us About Your Organization' },\n    4: { stepNo: 4, percent: 80, header: 'Add any internal link if available' },\n    5: { stepNo: 5, percent: 100, header: 'Tell us about yourself' },\n};\n","import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, MultiSelectRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport { information_asking_reason } from '../../constants/misc';\nimport { Container, Row, Col, ProgressBar, Button, Modal, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { allGenders } from '../../constants/genders';\nimport { allRaces } from '../../constants/races';\nimport { individualHeaders } from '../../constants/step-headers';\nimport { date } from '../../actions/validate';\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const editMode = props.editMode;\n    const [infoModal, setInfoModal] = useState(false);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country ? props.stateAndCountry.country : 'US');\n    // const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Modal\n                show={infoModal}\n                onHide={() => {\n                    setInfoModal(false);\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Why do we ask for this information</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p className=\"justify-text\">{information_asking_reason}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => {\n                            setInfoModal(false);\n                        }}\n                    >\n                        I understand\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        {editMode ? (\n                            <h4>Basic Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {individualHeaders[2].stepNo} of 5</p>\n                                <ProgressBar now={individualHeaders[2].percent} />\n                                <br />\n                                <h4>{individualHeaders[2].header}</h4>\n                                <small\n                                    className=\"small-simple-btn\"\n                                    onClick={() => {\n                                        setInfoModal(true);\n                                    }}\n                                >\n                                    Why do we ask for this information?\n                                </small>\n                                <div style={{ height: 20 }} />\n                            </div>\n                        )}\n                        <Row>\n                            <Col>\n                                <Field name=\"firstName\" type=\"text\" component={InputRender} label=\"First Name\" placeholder=\"John\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"lastName\" type=\"text\" component={InputRender} label=\"Last Name\" placeholder=\"Doe\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"6\">\n                                <Field name=\"dateOfBirth\" type=\"text\" component={DatePickerRender} label=\"Date Of Birth\" zIndex={4000} validate={[date]} />\n                            </Col>\n                            <Col sm=\"6\">\n                                <Field name=\"kids\" type=\"text\" component={SelectRender} label=\"Kids\" col1={4} col2={8}>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"4+\">4+</option>\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"gender\" type=\"text\" component={SelectRender} label=\"Gender\" col1={4} col2={8}>\n                                    {allGenders.map((gender, i) => {\n                                        return (\n                                            <option key={i} value={gender.value}>\n                                                {gender.label}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"races\" component={MultiSelectRender} label=\"Race\" col1={2} col2={10} options={allRaces} zIndex={3000} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"languages\" component={CreatableMultiSelectRender} label=\"Language Fluency\" col1={2} col2={10} options={props.allLanguages} zIndex={2000} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skills\" col1={2} col2={10} options={props.allSkills} zIndex={1000} />\n                            </Col>\n                        </Row>\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","export const information_asking_reason = `We want to be able to connect you to the organizations and people that will best help you get the most out of your community involvement. This information helps those organizations find you efficiently. Populate only with what you are comfortable with`;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass LanguageDA {\n    get_all_global_languages = () => {\n        return axios\n            .get(APIPaths.getAllGlobalLanguages)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_all_languages_by_user = (userId) => {\n        return axios\n            .get(APIPaths.getAllLanguagesByUser + `${userId}`)\n            .then((response) => {\n                console.log('🚀 ~ file: language-da.js ~ line 16 ~ LanguageDA ~ .then ~ response', response);\n\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new LanguageDA();\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\nclass SkillDA {\n    get_all_global_skills = () => {\n        return axios\n            .get(APIPaths.getAllGlobalSkills)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n    get_all_skills_by_user = (userId) => {\n        return axios\n            .get(APIPaths.getAllSkillsByUser + `${userId}`)\n            .then((response) => {\n                return response.data;\n            })\n            .catch((err) => err.response.data);\n    };\n}\nexport default new SkillDA();\n","import * as Types from '../constants/reducer-types';\nimport SkillDA from '../data_accesses/skill-da';\n\nexport const getAllGlobalSkills = () => {\n    return {\n        type: Types.GET_ALL_GLOBAL_SKILLS,\n        payload: SkillDA.get_all_global_skills(),\n    };\n};\nexport const getAllSkillsByUser = (userId) => {\n    return {\n        type: Types.GET_ALL_SKILLS_BY_USER,\n        payload: SkillDA.get_all_skills_by_user(userId),\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/individual-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualBasicInfoForm from '../../components/individual/individual-basic-info-form';\nimport { individualCompleteInvolvementPage } from '../../constants/route-paths';\n// import { getLanguagesByValues } from '../../constants/languages';\nimport { getAllLanguagesByUser } from '../../actions/language-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { getRacesByValues } from '../../constants/races';\n\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: '',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllLanguagesByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            props.dispatch(getBasicInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompleteInvolvementPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            races: values.races && values.races.length > 0 ? values.races.map((race) => race.value) : [],\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualBasicInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                allLanguages={props.getLanguageResponse.success ? props.getLanguageResponse.languages : []}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log('ST', state);\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getLanguageResponse = state.Language.getLanguagesByUser;\n    const getBasicInfoResponse = state.Individual.getBasicInfo;\n    const setBasicInfoResponse = state.Individual.setBasicInfo;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues) {\n            if (initialValues.races && initialValues.races.length > 0 && typeof initialValues.races[0] === 'string') initialValues.races = getRacesByValues(initialValues.races);\n            if (initialValues.address && !initialValues.address.country) {\n                initialValues.address.country = 'US';\n            } else if (!initialValues.address) {\n                initialValues.address = {\n                    country: 'US',\n                };\n            }\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getSkillResponse,\n        getLanguageResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","import * as Types from '../constants/reducer-types';\nimport LanguageDA from '../data_accesses/language-da';\n\nexport const getAllGlobalLanguages = () => {\n    return {\n        type: Types.GET_ALL_GLOBAL_LANGUAGES,\n        payload: LanguageDA.get_all_global_languages(),\n    };\n};\nexport const getAllLanguagesByUser = (userId) => {\n    return {\n        type: Types.GET_ALL_LANGUAGES_BY_USER,\n        payload: LanguageDA.get_all_languages_by_user(userId),\n    };\n};\n","import * as Types from '../constants/reducer-types';\nimport IndividualDA from '../data_accesses/individual-da';\n\nexport const getBasicInfo = (userId) => {\n    return {\n        type: Types.GET_INDIVIDUAL_BASIC_INFO,\n        payload: IndividualDA.get_basic_info(userId),\n    };\n};\n\nexport const getInvolvement = (userId) => {\n    return {\n        type: Types.GET_INDIVIDUAL_INVOLVEMENT,\n        payload: IndividualDA.get_involvement(userId),\n    };\n};\nexport const getPrivacy = (userId) => {\n    return {\n        type: Types.GET_INDIVIDUAL_PRIVACY,\n        payload: IndividualDA.get_privacy(userId),\n    };\n};\nexport const getPublicInfo = (userId) => {\n    return {\n        type: Types.GET_INDIVIDUAL_PUBLIC_INFO,\n        payload: IndividualDA.get_public_info(userId),\n    };\n};\n\nexport const getAllIndividuals = () => {\n    return {\n        type: Types.GET_ALL_INDIVIDUALS,\n        payload: IndividualDA.get_list(),\n    };\n};\n\nexport const setBasicInfo = (userId, basicInfo) => {\n    return {\n        type: Types.SET_INDIVIDUAL_BASIC_INFO,\n        payload: IndividualDA.set_basic_info(userId, basicInfo),\n    };\n};\n\nexport const setInvolvement = (userId, involvement) => {\n    return {\n        type: Types.SET_INDIVIDUAL_INVOLVEMENT,\n        payload: IndividualDA.set_involvement(userId, involvement),\n    };\n};\nexport const setPrivacy = (userId, privacy) => {\n    return {\n        type: Types.SET_INDIVIDUAL_PRIVACY,\n        payload: IndividualDA.set_privacy(userId, privacy),\n    };\n};\n\nexport const clearBasicInfo = (userId) => {\n    return {\n        type: Types.CLEAR_INDIVIDUAL_BASIC_INFO,\n        payload: {},\n    };\n};\n\nexport const clearInvolvement = (userId) => {\n    return {\n        type: Types.CLEAR_INDIVIDUAL_INVOLVEMENT,\n        payload: {},\n    };\n};\nexport const clearPrivacy = (userId) => {\n    return {\n        type: Types.CLEAR_INDIVIDUAL_PRIVACY,\n        payload: {},\n    };\n};\n","export const allInvolvementTypes = [\n    { id: 1, value: 'convenient', label: 'A convenient event as it comes' },\n    { id: 2, value: 'full-day', label: 'Full Day Events' },\n    { id: 3, value: 'structured-recurring', label: 'Structured, Recurring Event' },\n    { id: 4, value: 'as-much-possible', label: 'As much as Possible!' },\n];\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport { InputRenderWithLargeLabel, CheckBoxRender, SelectRender, TextRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { allInvolvementTypes } from '../../constants/involvement-types';\nimport { individualHeaders } from '../../constants/step-headers';\nconst ProfileStep3 = (props) => {\n    const submitting = props.submitting;\n    const editMode = props.editMode;\n    const allImpactAreas = props.allImpactAreas;\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col lg=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n                        {editMode ? (\n                            <h4>Involvement Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {individualHeaders[3].stepNo} of 5</p>\n                                <ProgressBar now={individualHeaders[3].percent} />\n                                <br />\n                                <h4>{individualHeaders[3].header}</h4>\n                            </div>\n                        )}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area of interest\" col1={4} col2={8} options={allImpactAreas} zIndex={2000} />\n                        {/* <label>Tell us a bit about what you currently do!</label> */}\n                        <label>Community Involvement</label>\n                        <Field name=\"communityInvolvement\" type=\"text\" component={TextRender} label=\"Tell us a bit about what you currently do!\" col1={12} col2={12} />\n\n                        <Field id=\"volunteerOpportunity\" name=\"volunteerOpportunity\" type=\"checkbox\" component={CheckBoxRender} label=\"I am looking for Volunteer Opportunities\" col1={6} col2={6} />\n\n                        <Field id=\"project\" name=\"project\" component={CheckBoxRender} type=\"checkbox\" label=\"I am looking for Projects\" col1={6} col2={6} />\n                        <Field id=\"boardMembership\" name=\"boardMembership\" component={CheckBoxRender} type=\"checkbox\" label=\"I am looking for Board Membership\" col1={6} col2={6} />\n                        <Field id=\"committees\" name=\"committees\" component={CheckBoxRender} type=\"checkbox\" label=\"I am looking for Committees/Advisory Boards\" col1={6} col2={6} />\n                        <Field\n                            id=\"availabilityPerWeek\"\n                            name=\"availabilityPerWeek\"\n                            type=\"number\"\n                            component={InputRenderWithLargeLabel}\n                            min=\"0\"\n                            max=\"40\"\n                            step=\"1\"\n                            label=\"Average Weekly Hours Available\"\n                        />\n                        <Field id=\"typeOfInvolvement\" name=\"typeOfInvolvement\" type=\"text\" component={SelectRender} label=\"I want the following type of involvement\" col1={6} col2={6}>\n                            {allInvolvementTypes.map((involvementType, i) => {\n                                return (\n                                    <option key={involvementType.value} value={involvementType.value}>\n                                        {involvementType.label}\n                                    </option>\n                                );\n                            })}\n                        </Field>\n\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleBackButton();\n                                        }}\n                                    >\n                                        Back\n                                    </Button>\n                                )}\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleSkipButton();\n                                        }}\n                                    >\n                                        Skip\n                                    </Button>\n                                )}\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default ProfileStep3;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInvolvement, setInvolvement, clearInvolvement } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualInvolvementForm from '../../components/individual/individual-involvement-form';\nimport { individualCompleteBasicInfoPage, individualCompletePrivacyPage } from '../../constants/route-paths';\n\nconst Involvement = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInvolvement(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInvolvementResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompletePrivacyPage);\n                props.dispatch(clearInvolvement());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, involvement } = props.getInvolvementResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInvolvementResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInvolvementResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInvolvement(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(individualCompletePrivacyPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualInvolvementForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInvolvementResponse = state.Individual.getInvolvement;\n    const setInvolvementResponse = state.Individual.setInvolvement;\n    let initialValues = {};\n\n    if (getInvolvementResponse.success) {\n        initialValues = getInvolvementResponse.involvement;\n    }\n    console.log('initialValues', initialValues);\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInvolvementResponse,\n        setInvolvementResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Involvement',\n        enableReinitialize: true,\n    })(Involvement),\n);\n","export const allActivityTypes = [\n    { id: 4, value: 'Public', label: 'Anyone' },\n    { id: 1, value: 'no-one', label: 'No One' },\n    { id: 2, value: 'friends', label: 'Friends' },\n    { id: 3, value: 'friends-of-friends', label: 'Friends Of Friends' },\n];\n","export const allSearchTypes = [\n    { id: 1, value: 'always', label: 'Anyone' },\n    { id: 2, value: 'never', label: 'Never' },\n    { id: 3, value: 'friends-of-friends', label: 'Friends Of Friends' },\n];\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport { CheckBoxRender, SelectRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { allActivityTypes } from '../../constants/privacy-activity-types';\nimport { allSearchTypes } from '../../constants/privacy-search-types';\nimport { individualHeaders } from '../../constants/step-headers';\nconst PrivacyForm = (props) => {\n    const editMode = props.editMode;\n    const submitting = props.submitting;\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n                        {editMode ? (\n                            <h4>Privacy Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {individualHeaders[4].stepNo} of 5</p>\n                                <ProgressBar now={individualHeaders[4].percent} />\n                                <br />\n                                <h4>{individualHeaders[4].header}</h4>\n                            </div>\n                        )}\n\n                        <Field id=\"publicCalender\" name=\"isCalenderPublic\" component={CheckBoxRender} label=\"My calender is public\" col1={6} col2={6} type=\"checkbox\" />\n                        <Field\n                            id=\"isEmailSearchable\"\n                            name=\"isEmailSearchable\"\n                            component={CheckBoxRender}\n                            label=\"Add me to an organization’s mailing list when I follow them\"\n                            col1={6}\n                            col2={6}\n                            type=\"checkbox\"\n                        />\n                        <Field id=\"project\" name=\"isUserSearchable\" component={CheckBoxRender} label=\"Organization can find me in searches\" col1={6} col2={6} type=\"checkbox\" />\n                        <Field id=\"showOnSearch\" name=\"showOnSearch\" type=\"text\" component={SelectRender} label=\"I show up in individual searches done by:\" col1={6} col2={6}>\n                            {allActivityTypes.map((activity, i) => {\n                                return (\n                                    <option key={activity.value} value={activity.value}>\n                                        {activity.label}\n                                    </option>\n                                );\n                            })}\n                        </Field>\n                        <Field id=\"showActivity\" name=\"showActivity\" type=\"text\" component={SelectRender} label=\"My activity shows up on the feeds of\" col1={6} col2={6}>\n                            {allSearchTypes.map((search, i) => {\n                                return (\n                                    <option key={search.value} value={search.value}>\n                                        {search.label}\n                                    </option>\n                                );\n                            })}\n                        </Field>\n\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleBackButton();\n                                        }}\n                                    >\n                                        Back\n                                    </Button>\n                                )}\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default PrivacyForm;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPrivacy, setPrivacy, clearPrivacy } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualPrivacyForm from '../../components/individual/individual-privacy-form';\nimport { individualCompleteInvolvementPage, homePage } from '../../constants/route-paths';\nconst Privacy = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getPrivacy(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setPrivacyResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.dispatch(clearPrivacy());\n                props.history.push(homePage);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, privacy } = props.getPrivacyResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getPrivacyResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setPrivacyResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setPrivacy(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteInvolvementPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualPrivacyForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getPrivacyResponse = state.Individual.getPrivacy;\n    const setPrivacyResponse = state.Individual.setPrivacy;\n    let initialValues = {};\n\n    if (getPrivacyResponse.success) {\n        initialValues = getPrivacyResponse.privacy;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPrivacyResponse,\n        setPrivacyResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Privacy',\n        enableReinitialize: true,\n    })(Privacy),\n);\n","// export const allLanguages = [\n//     { id: 1, value: 'english', label: 'English' },\n//     { id: 2, value: 'spanish', label: 'Spanish' },\n//     { id: 3, value: 'mandarin', label: 'Mandarin' },\n//     { id: 4, value: 'hindi', label: 'Hindi' },\n//     { id: 5, value: 'bengali', label: 'Bengali' },\n//     { id: 6, value: 'portuguese', label: 'Portuguese' },\n//     { id: 7, value: 'russian', label: 'Russian' },\n//     { id: 8, value: 'japanese', label: 'Japanese' },\n//     { id: 9, value: 'western-punjabi', label: 'Western Punjabi' },\n//     { id: 10, value: 'turkish', label: 'Turkish' },\n//     { id: 11, value: 'korean', label: 'Korean' },\n//     { id: 12, value: 'french', label: 'French' },\n//     { id: 13, value: 'german', label: 'German' },\n//     { id: 14, value: 'urdu', label: 'Urdu' },\n//     { id: 15, value: 'italian', label: 'Italian' },\n//     { id: 16, value: 'arabian', label: 'Arabian' },\n//     { id: 17, value: 'dutch', label: 'Dutch' },\n//     { id: 18, value: 'thai', label: 'Thai' },\n//     { id: 19, value: 'greek', label: 'Greek' },\n//     { id: 20, value: 'polish', label: 'Polish' },\n// ];\nexport const allLanguages = [\n    {\n        id: 1,\n        value: 'english',\n        label: 'English',\n    },\n    {\n        id: 2,\n        value: 'spanish',\n        label: 'Spanish',\n    },\n    {\n        id: 3,\n        value: 'mandarin',\n        label: 'Mandarin',\n    },\n    {\n        id: 4,\n        value: 'cantonese',\n        label: 'Cantonese',\n    },\n    {\n        id: 5,\n        value: 'vietnamese',\n        label: 'Vietnamese',\n    },\n    {\n        id: 6,\n        value: 'russian',\n        label: 'Russian',\n    },\n    {\n        id: 7,\n        value: 'arabic',\n        label: 'Arabic',\n    },\n    {\n        id: 8,\n        value: 'haitan',\n        label: 'Haitan',\n    },\n    {\n        id: 9,\n        value: 'french',\n        label: 'French',\n    },\n    {\n        id: 10,\n        value: 'khmer',\n        label: 'Khmer',\n    },\n    {\n        id: 11,\n        value: 'malayalam',\n        label: 'Malayalam',\n    },\n    {\n        id: 12,\n        value: 'kannada',\n        label: 'Kannada',\n    },\n    {\n        id: 13,\n        value: 'portuguese',\n        label: 'Portuguese',\n    },\n    {\n        id: 14,\n        value: 'korean',\n        label: 'Korean',\n    },\n    {\n        id: 15,\n        value: 'italian',\n        label: 'Italian',\n    },\n    {\n        id: 16,\n        value: 'bengali',\n        label: 'Bengali',\n    },\n    {\n        id: 17,\n        value: 'ukranian',\n        label: 'Ukranian',\n    },\n    {\n        id: 18,\n        value: 'tagalog',\n        label: 'Tagalog',\n    },\n    {\n        id: 19,\n        value: 'gujarati',\n        label: 'Gujarati',\n    },\n    {\n        id: 20,\n        value: 'amharic',\n        label: 'Amharic',\n    },\n    {\n        id: 21,\n        value: 'somali',\n        label: 'Somali',\n    },\n    {\n        id: 22,\n        value: 'hindi',\n        label: 'Hindi',\n    },\n    {\n        id: 23,\n        value: 'polish',\n        label: 'Polish',\n    },\n    {\n        id: 24,\n        value: 'urdu',\n        label: 'Urdu',\n    },\n    {\n        id: 25,\n        value: 'swahili',\n        label: 'Swahili',\n    },\n    {\n        id: 26,\n        value: 'nepali',\n        label: 'Nepali',\n    },\n    {\n        id: 27,\n        value: 'martathi',\n        label: 'Martathi',\n    },\n    {\n        id: 28,\n        value: 'tamil',\n        label: 'Tamil',\n    },\n    {\n        id: 29,\n        value: 'japanese',\n        label: 'Japanese',\n    },\n    {\n        id: 30,\n        value: 'hebrew',\n        label: 'Hebrew',\n    },\n    {\n        id: 31,\n        value: 'telugu',\n        label: 'Telugu',\n    },\n    {\n        id: 32,\n        value: 'thai',\n        label: 'Thai',\n    },\n    {\n        id: 33,\n        value: 'lao',\n        label: 'Lao',\n    },\n];\n\nexport const getLanguageByValue = (value) => {\n    const languages = allLanguages.filter((language) => language.value === value);\n    if (languages && languages.length > 0) return languages[0].label;\n    else return 'Not Found';\n};\n\nexport const getLanguagesByValues = (values) => {\n    console.log(values);\n    return allLanguages.filter((language) => values.includes(language.value));\n};\n","import React from 'react';\nimport { Container, Image, Row, Col, Badge } from 'react-bootstrap';\nimport moment from 'moment';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { getLanguagesByValues } from '../../constants/languages';\nimport { getRacesByValues } from '../../constants/races';\nimport { getGenderByValue } from '../../constants/genders';\nimport { defaultIndividualProfilePicture } from '../../constants/default-images';\nconst DetailsView = (props) => {\n    const individual = props.individual;\n    const infoRender = (label, value) => {\n        console.log(label, value);\n        if (value)\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value\n                            .toString()\n                            .split('\\n')\n                            .map((para, i) => (\n                                <p key={i} className=\"justify-text\">\n                                    {para}\n                                </p>\n                            ))}\n                    </Col>\n                </Row>\n            );\n        else return <></>;\n    };\n\n    const tagsRender = (label, tags) => {\n        console.log('🚀 ~ file: individual-details-view.js ~ line 48 ~ tagsRender ~ tags', tags);\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {tags.map((tag, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {tag.label}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            // if (address.street1) fullAddress += address.street1 + ', ';\n            // if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.code) fullAddress += address.code + '\\n';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + '\\n';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n\n    if (individual._id) {\n        const basicInfo = individual.basicInfo;\n        console.log('🚀 ~ file: individual-details-view.js ~ line 63 ~ DetailsView ~ basicInfo', basicInfo);\n        const involvement = individual.involvement;\n        const impactAreas = involvement.impactAreas;\n\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"right-align\" sm=\"2\">\n                        <Image className=\"left-image\" src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultIndividualProfilePicture} width=\"100%\" thumbnail />\n                    </Col>\n                    <Col sm=\"9\" className=\"left-border\">\n                        <h3>{basicInfo.firstName + ' ' + basicInfo.lastName}</h3>\n                        {/* {infoRender('Phone', basicInfo.phone)} */}\n                        {infoRender('Kids', basicInfo.kids)}\n                        {infoRender('Date Of Birth', moment(basicInfo.dateOfBirth).format('LL'))}\n                        {/* {tagsRender('Race', getRacesByValues(basicInfo.races))} */}\n                        {/* {infoRender('Gender', getGenderByValue(basicInfo.gender))} */}\n                        {tagsRender('Language Fluency', getLanguagesByValues(basicInfo.languages))}\n                        <br />\n                        {infoRender('Address', addressMaker(basicInfo.address))}\n                        <div style={{ height: 25 }} />\n                        <hr />\n                        <div style={{ height: 25 }} />\n                        {infoRender('About Me', involvement.communityInvolvement)}\n                        {tagsRender('Impact Area', impactAreas)}\n\n                        <div style={{ height: 25 }} />\n                    </Col>\n                </Row>\n                <div style={{ height: 25 }} />\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/individual-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/individual/individual-details-view';\nconst IndividualDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const individualUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(individualUserId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView individual={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.individual : {}} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Individual.getPublicInfo;\n\n    return {\n        getPublicInfoResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(IndividualDetails);\n","import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\n\nimport { Container, Row, Col, ProgressBar, Button, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { organizationHeaders } from '../../constants/step-headers';\n\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const allOrganizationTypes = props.allOrganizationTypes;\n    const editMode = props.editMode;\n    console.log('PROPS', props);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country ? props.stateAndCountry.country : 'US');\n    const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        {editMode ? (\n                            <h4>Basic Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {organizationHeaders[2].stepNo} of 5</p>\n                                <ProgressBar now={organizationHeaders[2].percent} />\n                                <br />\n                                <h4>{organizationHeaders[2].header}</h4>\n\n                                <div style={{ height: 20 }} />\n                            </div>\n                        )}\n                        <Row>\n                            <Col>\n                                <Field name=\"name\" type=\"text\" component={InputRender} label=\"Name\" placeholder=\"Your organization name...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" placeholder=\"000-0000-000\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"ein\" type=\"text\" component={InputRender} label=\"EIN\" placeholder=\"ABCD...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"website\" type=\"text\" component={InputRender} label=\"Website URL\" placeholder=\"www.abc.xyz\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"contactEmail\" type=\"text\" component={InputRender} label=\"Contact Email\" placeholder=\"help@abc.com\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"mission\" type=\"text\" component={TextRender} label=\"Mission\" placeholder=\"Your organization mission...\" col1={2} col2={10} />\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Your organization mission...\" col1={2} col2={10} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"organizationTypes\" component={MultiSelectRender} label=\"Organization Type\" col1={3} col2={9} options={allOrganizationTypes} zIndex={2000} />\n                            </Col>\n                        </Row>\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/organization-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationBasicInfoForm from '../../components/organization/organization-basic-info-form';\nimport { organizationCompleteServiceInfoPage } from '../../constants/route-paths';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: 'US',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getBasicInfo(user._id));\n        }\n        props.dispatch(getAllOrganizationTypes());\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(organizationCompleteServiceInfoPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address && basicInfo.address.country) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            organizationTypes: values.organizationTypes && values.organizationTypes.length > 0 ? values.organizationTypes.map((type) => type._id) : [],\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationBasicInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n                allOrganizationTypes={props.getAllOrganizationTypesResponse.success ? props.getAllOrganizationTypesResponse.organizationTypes : []}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getBasicInfoResponse = state.Organization.getBasicInfo;\n    const setBasicInfoResponse = state.Organization.setBasicInfo;\n    const getAllOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues.address && !initialValues.address.country) {\n            initialValues.address.country = 'US';\n        } else if (!initialValues.address) {\n            initialValues.address = {\n                country: 'US',\n            };\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getAllOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","export const allServiceAreaTypes = [\n    { id: 1, value: 'neighborhood', label: 'Neighborhood' },\n    { id: 2, value: 'zip-code', label: 'Zip Code' },\n    { id: 3, value: 'city', label: 'City' },\n    { id: 4, value: 'county', label: 'County' },\n    { id: 5, value: 'state', label: 'State' },\n    { id: 6, value: 'country', label: 'Country' },\n];\n\nexport const getServiceAreaTypeByValue = (value) => {\n    allServiceAreaTypes.forEach((type) => {\n        if (type.value === value) return type;\n    });\n};\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport { InputRender, CreatableMultiSelectRender, MultiSelectRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { allServiceAreaTypes } from '../../constants/service-area-types';\nimport { organizationHeaders } from '../../constants/step-headers';\nconst ServiceInfoForm = (props) => {\n    const submitting = props.submitting;\n    const editMode = props.editMode;\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n                        {editMode ? (\n                            <h4>{organizationHeaders[3].header}</h4>\n                        ) : (\n                            <div>\n                                <p>Step {organizationHeaders[3].stepNo} of 5</p>\n                                <ProgressBar now={organizationHeaders[3].percent} />\n                                <br />\n                                <h4>{organizationHeaders[3].header}</h4>\n                            </div>\n                        )}\n\n                        <Field name=\"serviceAreaTypes\" component={MultiSelectRender} label=\"Service area type\" col1={4} col2={8} options={allServiceAreaTypes} zIndex={5000} />\n                        <Field name=\"serviceAreas\" type=\"text\" component={CreatableMultiSelectRender} label=\"Service Areas\" col1={4} col2={8} placeholder=\"Add new service area\" zIndex={4000} />\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={props.allImpactAreas} zIndex={3000} />\n                        <Field name=\"donationLink\" type=\"text\" component={InputRender} label=\"Donation link\" placeholder=\"\" />\n                        <Field name=\"newsLetterLink\" type=\"text\" component={InputRender} label=\"News letter link\" placeholder=\"\" />\n                        <Field name=\"keywords\" type=\"text\" component={CreatableMultiSelectRender} label=\"Keywords\" col1={4} col2={8} placeholder=\"Add new keywords\" zIndex={2000} />\n\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleBackButton();\n                                        }}\n                                    >\n                                        Back\n                                    </Button>\n                                )}\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                {!editMode && (\n                                    <Button\n                                        className=\"btn signUpBtn\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleSkipButton();\n                                        }}\n                                    >\n                                        Skip\n                                    </Button>\n                                )}\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default ServiceInfoForm;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getServiceInfo, setServiceInfo, clearServiceInfo } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationServiceInfoForm from '../../components/organization/organization-service-info-form';\nimport { homePage, organizationCompleteBasicInfoPage, organizationCompleteInternalLinkPage } from '../../constants/route-paths';\n\nconst ServiceInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllOrganizationTypes());\n            props.dispatch(getServiceInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setServiceInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(homePage);\n                props.dispatch(clearServiceInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, serviceInfo } = props.getServiceInfoResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getServiceInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setServiceInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setServiceInfo(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(homePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationServiceInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allOrganizationTypes={props.getOrganizationTypesResponse.success ? props.getOrganizationTypesResponse.organizationTypes : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getServiceInfoResponse = state.Organization.getServiceInfo;\n    const setServiceInfoResponse = state.Organization.setServiceInfo;\n    const getOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n\n    if (getServiceInfoResponse.success) {\n        initialValues = getServiceInfoResponse.serviceInfo;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getServiceInfoResponse,\n        setServiceInfoResponse,\n        getOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'ServiceInfo',\n        enableReinitialize: true,\n    })(ServiceInfo),\n);\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport { SwitchRender, SelectRender, InputRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { organizationHeaders } from '../../constants/step-headers';\nconst InternalLinkForm = (props) => {\n    const submitting = props.submitting;\n\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n\n                        <div>\n                            <p>Step {organizationHeaders[4].stepNo} of 5</p>\n                            <ProgressBar now={organizationHeaders[4].percent} />\n                            <br />\n                            <h4>{organizationHeaders[4].header}</h4>\n                        </div>\n\n                        <Field name=\"events\" type=\"text\" component={InputRender} label=\"Events link\" />\n                        <Field name=\"rss\" type=\"text\" component={InputRender} label=\"RSS link\" />\n                        <Field name=\"blog\" type=\"text\" component={InputRender} label=\"Blogs link\" />\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default InternalLinkForm;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInternalLink, setInternalLink, clearInternalLink } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationInternalLinkForm from '../../components/organization/organization-internal-link-form';\nimport { organizationCompleteServiceInfoPage, homePage } from '../../constants/route-paths';\nconst InternalLink = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInternalLink(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInternalLinkResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(clearInternalLink());\n            props.history.push(homePage);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, internalLink } = props.getInternalLinkResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInternalLinkResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInternalLinkResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInternalLink(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteServiceInfoPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationInternalLinkForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInternalLinkResponse = state.Organization.getInternalLink;\n    const setInternalLinkResponse = state.Organization.setInternalLink;\n    let initialValues = {};\n\n    if (getInternalLinkResponse.success) {\n        initialValues = getInternalLinkResponse.internalLink;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInternalLinkResponse,\n        setInternalLinkResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'InternalLink',\n        enableReinitialize: true,\n    })(InternalLink),\n);\n","import React from 'react';\nimport { Container, Image, Row, Col, Badge, ListGroup, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport Collapsible from 'react-collapsible';\nimport { RiUserFollowFill, RiUserUnfollowFill } from 'react-icons/ri';\nconst DetailsView = (props) => {\n    const organization = props.organization;\n    const follows = props.follows;\n    const infoRender = (label, value) => {\n        if (value) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value.split('\\n').map((para, i) => (\n                            <p key={i} className=\"justify-text\">\n                                {para}\n                            </p>\n                        ))}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n\n    const keywordsRender = (label, keywords) => {\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {keywords.map((key, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {key}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n    const tagsRender = (label, tags) => {\n        if (tags && tags.length > 0) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {tags.map((tag, i) => {\n                            if (tag)\n                                return (\n                                    <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                        {tag.label}\n                                    </Badge>\n                                );\n                        })}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n    const RenderListButtonItem = (label) => {\n        return (\n            <ListGroup.Item\n                className=\"list-button\"\n                onClick={() => {\n                    alert('YET TO DEVELOP');\n                }}\n            >\n                {label}\n            </ListGroup.Item>\n        );\n    };\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n    if (organization._id) {\n        const basicInfo = organization.basicInfo;\n        const serviceInfo = organization.serviceInfo;\n        const impactAreas = serviceInfo.impactAreas;\n        console.log(basicInfo);\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"right-align\" sm=\"2\">\n                        <Image className=\"left-image\" src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultOrganizationProfilePicture} width=\"100%\" thumbnail />\n                        {follows ? (\n                            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to unfollow</Tooltip>}>\n                                <Button\n                                    size=\"sm\"\n                                    variant=\"outline-info\"\n                                    className=\"details-following-btn\"\n                                    onClick={() => {\n                                        props.handleUnfollowClick();\n                                    }}\n                                >\n                                    <RiUserFollowFill /> Following\n                                </Button>\n                            </OverlayTrigger>\n                        ) : (\n                            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to follow</Tooltip>}>\n                                <Button\n                                    size=\"sm\"\n                                    variant=\"outline-info\"\n                                    className=\"details-follow-btn\"\n                                    onClick={() => {\n                                        props.handleFollowClick();\n                                    }}\n                                >\n                                    <RiUserFollowFill /> Follow\n                                </Button>\n                            </OverlayTrigger>\n                        )}\n                        <Collapsible trigger=\"MENU\" className=\"special-btn\">\n                            <ListGroup>\n                                {RenderListButtonItem('About')}\n                                {RenderListButtonItem('Message')}\n                                {RenderListButtonItem('Events')}\n                                {RenderListButtonItem('Projects')}\n                                {RenderListButtonItem('In-Kind')}\n                                {RenderListButtonItem('Volunteering')}\n                                {RenderListButtonItem('Feed')}\n                            </ListGroup>\n                        </Collapsible>\n                    </Col>\n                    <Col sm=\"9\" className=\"left-border\">\n                        <h3>{basicInfo.name}</h3>\n                        {tagsRender('Organization Type', basicInfo.organizationTypes)}\n                        {infoRender('Contact Email', basicInfo.contactEmail)}\n                        {infoRender('Website', basicInfo.website)}\n\n                        {infoRender('Phone', basicInfo.phone)}\n                        {infoRender('EIN', basicInfo.ein)}\n                        {infoRender('Address', addressMaker(basicInfo.address))}\n\n                        <hr />\n                        <div style={{ height: 25 }} />\n                        {keywordsRender('Service Areas', serviceInfo.serviceAreas)}\n                        {tagsRender('Impact Area', impactAreas)}\n                        {keywordsRender('Keywords', serviceInfo.keywords)}\n                        <div style={{ height: 25 }} />\n                        <hr />\n                        {infoRender('Mission', basicInfo.mission)}\n                        <hr />\n                        {infoRender('Description', basicInfo.description)}\n                        <div style={{ height: 25 }} />\n                    </Col>\n                </Row>\n                <div style={{ height: 25 }} />\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass FollowDA {\n    follow_user = (values) => {\n        return axios\n            .post(APIPaths.followUser, values, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => {\n                console.log(err);\n                return err.response.data;\n            });\n    };\n    unfollow_user = (values) => {\n        return axios\n            .post(APIPaths.unfollowUser, values, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_followers = (userId) => {\n        return axios\n            .post(APIPaths.getAllFollower(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_followings = (userId) => {\n        return axios\n            .post(APIPaths.getAllFollower(userId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n\n    check_if_follower = (followerId, followingId) => {\n        return axios\n            .get(APIPaths.checkIfFollower(followerId, followingId), APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new FollowDA();\n","import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/organization-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/organization/organization-details-view';\nimport { followUser, unfollowUser, checkIfFollower } from '../../actions/follow-action';\n// import { NotificationManager } from 'react-notifications';\nconst OrganizationDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [follows, setFollows] = useState(false);\n    const getInitialInfo = () => {\n        const organizationUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(organizationUserId));\n        const user = props.auth.user;\n        props.dispatch(checkIfFollower(user._id, props.match.params.userId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n    useEffect(() => {\n        const success = props.getCheckIfFollowerResponse;\n        if (success) {\n            setFollows(props.getCheckIfFollowerResponse.follows);\n        }\n    }, [props.getCheckIfFollowerResponse]);\n    const handleFollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(followUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleUnfollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(unfollowUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getFollowResponse;\n        if (success) {\n            setFollows(true);\n            // NotificationManager.success('You are following', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getFollowResponse]);\n    useEffect(() => {\n        const { success } = props.getUnfollowResponse;\n\n        if (success) {\n            setFollows(false);\n            // NotificationManager.success('You are unfollowing', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getUnfollowResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView\n                            organization={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.organization : {}}\n                            handleFollowClick={handleFollowClick}\n                            handleUnfollowClick={handleUnfollowClick}\n                            follows={follows}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Organization.getPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(OrganizationDetails);\n","import FollowDA from '../data_accesses/follow-da';\nimport * as Types from '../constants/reducer-types';\n\nexport const followUser = (values) => {\n    return {\n        type: Types.FOLLOW_USER,\n        payload: FollowDA.follow_user(values),\n    };\n};\nexport const unfollowUser = (values) => {\n    return {\n        type: Types.UNFOLLOW_USER,\n        payload: FollowDA.unfollow_user(values),\n    };\n};\nexport const checkIfFollower = (followerId, followingId) => {\n    return {\n        type: Types.CHECK_IF_FOLLOWER,\n        payload: FollowDA.check_if_follower(followerId, followingId),\n    };\n};\nexport const getAllFollowers = (userId) => {\n    return {\n        type: Types.GET_ALL_FOLLOWERS,\n        payload: FollowDA.get_all_followers(userId),\n    };\n};\nexport const getAllFollowings = (userId) => {\n    return {\n        type: Types.GET_ALL_FOLLOWINGS,\n        payload: FollowDA.get_all_followings(userId),\n    };\n};\n","import React from 'react';\n\nconst ThreadList = (props) => {\n    const list = [\n        {\n            id: 1,\n            name: 'Mst Sadia Sultana',\n            profilePicture: 'http://localhost:3001/uploaded-images/person1.jpg',\n        },\n        {\n            id: 2,\n            name: 'Abdullah al noman',\n            profilePicture: 'http://localhost:3001/uploaded-images/person2.jpg',\n        },\n        {\n            id: 3,\n            name: 'Abu moin',\n            profilePicture: 'http://localhost:3001/uploaded-images/person3.jpg',\n        },\n        {\n            id: 4,\n            name: 'Israt Sharera',\n            profilePicture: 'http://localhost:3001/uploaded-images/person4.jpg',\n        },\n        {\n            id: 5,\n            name: 'Sharmin Akter',\n            profilePicture: 'http://localhost:3001/uploaded-images/person5.jpg',\n        },\n        {\n            id: 6,\n            name: 'Krittika Singh',\n            profilePicture: 'http://localhost:3001/uploaded-images/person6.jpg',\n        },\n        {\n            id: 7,\n            name: 'Debashish Haldar',\n            profilePicture: 'http://localhost:3001/uploaded-images/person7.jpg',\n        },\n        {\n            id: 8,\n            name: 'Subrato Sarker',\n            profilePicture: 'http://localhost:3001/uploaded-images/person8.jpg',\n        },\n    ];\n    return <h4>All Messages</h4>;\n};\n\nexport default ThreadList;\n","import React from 'react';\n\nconst ThreadDetails = (props) => {\n    return <h4>All Messages</h4>;\n};\n\nexport default ThreadDetails;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ThreadList from './sample-thread-list';\nimport ThreadDetails from './sample-thread-details';\nconst Messages = (props) => {\n    return (\n        <Container>\n            <Row className=\"message-main\">\n                <Col sm=\"4\" className=\"thread-list\">\n                    <ThreadList />\n                </Col>\n                <Col sm=\"8\" className=\"thread-details\">\n                    <ThreadDetails />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default Messages;\n","import React from 'react';\nimport { Container, Row, Col, Card, CardDeck, ListGroup, Button } from 'react-bootstrap';\nimport * as DefaultImages from '../../constants/default-images';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManagePosts = (props) => {\n    const ButtonRender = (variant, path, label) => {\n        return (\n            <Button\n                style={{ width: '100%', marginTop: 5 }}\n                variant={variant}\n                size=\"sm\"\n                onClick={() => {\n                    props.history.push(path);\n                }}\n            >\n                {label}\n            </Button>\n        );\n    };\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h1>MANAGE POSTS</h1>\n                    <CardDeck>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultEventIcon} />\n                            <Card.Body>\n                                <Card.Title>EVENTS</Card.Title>\n                            </Card.Body>\n\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.eventListByOrganizationPage, 'Manage Events')}\n                                    {ButtonRender('info', RoutePaths.eventCreatePage, 'Create Event')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultProjectIcon} />\n                            <Card.Body>\n                                <Card.Title>PROJECTS</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.projectListByOrganizationPage, 'Manage Projects')}\n                                    {ButtonRender('info', RoutePaths.projectCreatePage, 'Create Project')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultPImage} />\n                            <Card.Body>\n                                <Card.Title>GENERAL POSTS</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.postListByOrganizationPage, 'Manage General Posts')}\n                                    {ButtonRender('info', RoutePaths.postCreatePage, 'Create General Post')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultVImage} />\n                            <Card.Body>\n                                <Card.Title>VOLUNTEERING</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.volunteeringListByOrganizationPage, 'Manage Volunteerings')}\n                                    {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Create Volunteering')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultIImage} />\n                            <Card.Body>\n                                <Card.Title>In-Kind</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {/* {ButtonRender('primary', RoutePaths.volunteeringListByOrganizationPage, 'Manage Volunteerings')}\n                                    {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Create Volunteering')} */}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                    </CardDeck>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ManagePosts;\n","import React from 'react';\nimport { Table, Image, Button, Row, Col, Badge } from 'react-bootstrap';\nconst EventImageList = (props) => {\n    const images = props.images;\n    if (images && images.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Images</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"dark\" className=\"badge-single \">\n                            Remember: First Image of the list will be your default event image\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr>\n                            <th>Image</th>\n                            <th>Description</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {images.map((image, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td style={{ width: 220 }}>\n                                        <Image src={image.path} thumbnail width=\"200\" />\n                                    </td>\n                                    <td>\n                                        <textarea\n                                            value={image.description}\n                                            placeholder=\"Add description...\"\n                                            rows=\"8\"\n                                            type=\"text\"\n                                            className=\"form-control image-description-input\"\n                                            onChange={(e) => {\n                                                props.handleImageDescriptionEdit(i, e);\n                                            }}\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <Button\n                                            variant=\"outline-danger\"\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        >\n                                            DELETE\n                                        </Button>\n                                        <br />\n                                        <br />\n                                        {i > 0 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'up');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-up-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                        <br />\n                                        <br />\n                                        {i < images.length - 1 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'down');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-down-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Image Added</h5>;\n    }\n};\nexport default EventImageList;\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from '@reach/combobox';\nimport '@reach/combobox/styles.css';\n// const google = window.google;\nconst mapContainerStyle = {\n    height: '100vh',\n};\nconst options = {\n    disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst searchBoxStyle = {\n    width: '100%',\n};\nconst EventGeoCoding = (props) => {\n    //selectedLocation={props.location}\n    //handleLocationChange={props.handleLocationChange}\n\n    const libraries = ['places'];\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const marker = props.selectedLocation;\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n    const onMapClick = (e) => {\n        props.handleLocationChange({\n            latitude: e.latLng.lat(),\n            longitude: e.latLng.lng(),\n        });\n    };\n    const panTo = ({ lat, lng }) => {\n        props.handleLocationChange({\n            latitude: lat,\n            longitude: lng,\n        });\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(14);\n    };\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    else {\n        center = {\n            lat: parseFloat(marker.latitude),\n            lng: parseFloat(marker.longitude),\n        };\n        return (\n            <div>\n                <SearchBoxRender panTo={panTo} />\n                <br />\n                <GoogleMap id=\"map\" onLoad={onMapLoad} mapContainerStyle={mapContainerStyle} zoom={8} center={center} options={options} onClick={onMapClick}>\n                    {marker.latitude && marker.longitude && (\n                        <Marker\n                            key={`${marker.latitude}-${marker.longitude}`}\n                            position={{\n                                lat: parseFloat(marker.latitude),\n                                lng: parseFloat(marker.longitude),\n                            }}\n                        />\n                    )}\n                </GoogleMap>\n            </div>\n        );\n    }\n};\nconst SearchBoxRender = ({ panTo }) => {\n    const handleInput = (e) => {\n        setValue(e.target.value);\n    };\n    const {\n        ready,\n        value,\n        suggestions: { status, data },\n        setValue,\n        clearSuggestions,\n    } = usePlacesAutocomplete({\n        requestOptions: {\n            location: { lat: () => 43.6532, lng: () => -79.3832 },\n            radius: 100 * 1000,\n        },\n    });\n\n    const handleSelect = async (address) => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n            const results = await getGeocode({ address });\n            const { lat, lng } = await getLatLng(results[0]);\n            panTo({ lat, lng });\n        } catch (error) {}\n    };\n\n    return (\n        <Combobox onSelect={handleSelect}>\n            <ComboboxInput style={searchBoxStyle} value={value} onChange={handleInput} disabled={!ready} placeholder=\"Search your location\" />\n            <ComboboxPopover>\n                <ComboboxList key={1}>{status === 'OK' && data.map(({ id, description }) => <ComboboxOption key={id + description} value={description} />)}</ComboboxList>\n            </ComboboxPopover>\n        </Combobox>\n    );\n};\nexport default EventGeoCoding;\n","import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport EventImageList from './event-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\nimport EventGeoCoding from './event-geo-coding';\nconst EventForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Event</h4> : <h4>Create Event</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageEvents();\n                                    }}\n                                >\n                                    Manage Events\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Event Title\" placeholder=\"Your event title...\" />\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Event Description\" placeholder=\"Your event description...\" col1={4} col2={8} />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={MultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Event start time\" col1={4} col2={8} zIndex={3001} />\n\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"Event end time\" col1={4} col2={8} zIndex={2000} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <EventImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <EventGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default EventForm;\n","import React, { useEffect, useState } from 'react';\nimport EventForm from '../../components/event/event-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getEventById, createEvent, updateEventById, clearEvent } from '../../actions/event-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateEvent = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getEventResponse.success) {\n            console.log(props.getEventResponse.event);\n            setImages(props.getEventResponse.event.images);\n            if (props.getEventResponse.event.address) {\n                setLocation({\n                    latitude: props.getEventResponse.event.address.latitude,\n                    longitude: props.getEventResponse.event.address.longitude,\n                });\n            }\n        }\n    }, [props.getEventResponse]);\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageEvents = () => {\n        props.history.push(RoutePaths.eventListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let event = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n            impactAreas: values.impactAreas.map((area) => area._id),\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-event.js ~ line 36 ~ onSubmit ~ event', event);\n        if (editMode) {\n            props.dispatch(updateEventById(props.match.params.eventId, event));\n        } else {\n            props.dispatch(createEvent(event));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (eventId) => {\n            setLoading(true);\n            props.dispatch(getEventById(eventId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.eventId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearEvent());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setEventResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearEvent());\n            if (editMode) props.history.push(RoutePaths.eventDetailsPage + props.match.params.eventId);\n            else {\n                props.history.push(RoutePaths.eventDetailsPage + props.setEventResponse.event._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setEventResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <EventForm\n                handleGoToManageEvents={handleGoToManageEvents}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                location={location}\n                setLocation={setLocation}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n\n    const getEventResponse = state.Event.getEvent;\n    const setEventResponse = state.Event.setEvent;\n    let initialValues = {};\n    if (getEventResponse.success) {\n        initialValues = getEventResponse.event;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getEventResponse,\n        setEventResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateEvent',\n        enableReinitialize: true,\n    })(CreateEvent),\n);\n","import React from 'react';\r\nimport { Row, Col, Badge, Image } from 'react-bootstrap';\r\nexport const DetailsInfoRowRender = ({ label, value }) => {\r\n    if (value) {\r\n        return (\r\n            <Row className=\"detailsRow\">\r\n                <Col sm={3} className=\"detailsLabel\">\r\n                    <label>{label}</label>\r\n                </Col>\r\n\r\n                <Col className=\"detailsValue\">\r\n                    <span>{value}</span>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <Row />;\r\n};\r\n\r\nexport const TagWithLabelRender = (label, tags) => {\r\n    if (label && tags && tags.length > 0) {\r\n        return (\r\n            <Row>\r\n                {label && (\r\n                    <Col md=\"3\">\r\n                        <b>{label}</b>\r\n                    </Col>\r\n                )}\r\n                <Col md=\"9\">\r\n                    {tags.map((tag, i) => {\r\n                        if (tag)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className={'badge-single'}>\r\n                                    {tag.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    if (tags && tags.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    {tags.map((tag, i) => {\r\n                        if (tag)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className={'badge-single'}>\r\n                                    {tag.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const DescriptionRender = (label, value) => {\r\n    const valueRender = () => {\r\n        return (\r\n            <>\r\n                {value.split('\\n').map((para, i) => {\r\n                    return (\r\n                        <p className=\"justify-text\" key={i}>\r\n                            {para}\r\n                        </p>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    };\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">{label}</Col>\r\n                <Col sm=\"9\">{valueRender()}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{valueRender()}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const ImageAndDescriptionRender = (images) => {\r\n    if (images && images.length > 0) {\r\n        return (\r\n            <>\r\n                {images.map((image, i) => {\r\n                    return (\r\n                        <Row key={i} className=\"image-description-box\">\r\n                            <Col sm=\"3\">\r\n                                <Image width=\"100%\" src={image.path} thumbnail />\r\n                            </Col>\r\n                            <Col sm=\"9\">{DescriptionRender('', image.description)}</Col>\r\n                        </Row>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const InfoRender = (label, value) => {\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">{value}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{value}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { FaThumbsUp, FaLocationArrow } from 'react-icons/fa';\r\nexport const DetailsButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-info\" size=\"sm\" {...props}>\r\n            Details\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const EditButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-warning\" size=\"sm\" {...props}>\r\n            Edit\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const DeleteButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-danger\" size=\"sm\" {...props}>\r\n            Delete\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const SaveButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-success\" size=\"sm\" {...props}>\r\n            Save\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const ListButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            Go to list\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const OthersButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-secondary\" size=\"sm\" {...props}>\r\n            Save\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const CancelButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-warning\" size=\"sm\" {...props}>\r\n            Cancel\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const CreateButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-success\" size=\"sm\" {...props}>\r\n            {props.title}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const SendButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-secondary\" size=\"sm\" {...props}>\r\n            Send\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const LikeButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <FaThumbsUp /> Like\r\n        </Button>\r\n    );\r\n};\r\nexport const GoingButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <FaLocationArrow /> Going\r\n        </Button>\r\n    );\r\n};\r\n","import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport EventMapView from './event-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayEvent = (props) => {\n    const event = props.event;\n    const organization = props.organization;\n    if (event && event._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{event.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(event.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('', event.impactAreas)}</Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(event.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(event.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', event.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(event.images)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <EventMapView allEvents={[event]} zoom={16} />\n                            </Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Event is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayEvent;\n","import React, { useState, useEffect } from 'react';\nimport EventDetails from '../../components/event/event-details';\nimport { connect } from 'react-redux';\nimport { getEventById } from '../../actions/event-action';\nconst DisplayEvent = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getEventById(eventId));\n            setLoading(false);\n        };\n        const eventId = props.match.params.eventId;\n        if (eventId) getInitialInfo(eventId);\n        else {\n        }\n    }, [props.auth]);\n    return <EventDetails event={props.getEventResponse.success ? props.getEventResponse.event : {}} organization={props.getEventResponse.success ? props.getEventResponse.organization : {}} />;\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getEventResponse = state.Event.getEvent ? state.Event.getEvent : {};\n    console.log('🚀 ~ file: display-event.js ~ line 23 ~ mapStateToProps ~ getEventResponse', getEventResponse);\n\n    return { getEventResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayEvent);\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst ListingEvent = (props) => {\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h1>Welcome To ListingEvent EVENTS</h1>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ListingEvent;\n","import React from 'react';\nimport { Container, Row, Col, Button, Table } from 'react-bootstrap';\nimport { FaEdit } from 'react-icons/fa';\nconst EventList = (props) => {\n    const allEvents = props.allEvents;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allEvents && allEvents.length > 0) {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>{allEvents.length} Events Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    size=\"sm\"\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToEventCreate();\n                                    }}\n                                >\n                                    Create Event\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Title</th>\n                                    <th>Description</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allEvents.map((event, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td\n                                                className=\"row-details\"\n                                                onClick={() => {\n                                                    props.handleGoToEventDetails(event._id);\n                                                }}\n                                            >\n                                                {event.title}\n                                            </td>\n                                            <td>{descriptionRender(event.description)}</td>\n                                            <td>\n                                                <Button\n                                                    size=\"sm\"\n                                                    onClick={() => {\n                                                        props.handleGoToEventEdit(event._id);\n                                                    }}\n                                                >\n                                                    Edit\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>No Events Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToEventCreate();\n                                    }}\n                                >\n                                    Create Event\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default EventList;\n","import React, { useEffect, useState } from 'react';\nimport EventList from '../../components/event/event-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllEventsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageEvents = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllEventsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToEventEdit = (eventId) => {\n        props.history.push(RoutePaths.eventEditPage + eventId);\n    };\n    const handleGoToEventDetails = (eventId) => {\n        props.history.push(RoutePaths.eventDetailsPage + eventId);\n    };\n    const handleGoToEventCreate = () => {\n        props.history.push(RoutePaths.eventCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <EventList\n                allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.events : []}\n                handleGoToEventEdit={handleGoToEventEdit}\n                handleGoToEventDetails={handleGoToEventDetails}\n                handleGoToEventCreate={handleGoToEventCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllEventsResponse = state.Event.getAllEvents;\n    console.log('🚀 ~ file: manage-events.js ~ line 21 ~ mapStateToProps ~ getAllEventsResponse', getAllEventsResponse);\n\n    return {\n        getAllEventsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageEvents);\n","import React from 'react';\nimport { Table, Image, Button, Row, Col, Badge } from 'react-bootstrap';\nconst ProjectImageList = (props) => {\n    const images = props.images;\n    if (images && images.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Images</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"dark\" className=\"badge-single \">\n                            Remember: First Image of the list will be your default project image\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr>\n                            <th>Image</th>\n                            <th>Description</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {images.map((image, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td style={{ width: 220 }}>\n                                        <Image src={image.path} thumbnail width=\"200\" />\n                                    </td>\n                                    <td>\n                                        <textarea\n                                            value={image.description}\n                                            placeholder=\"Add description...\"\n                                            rows=\"8\"\n                                            type=\"text\"\n                                            className=\"form-control image-description-input\"\n                                            onChange={(e) => {\n                                                props.handleImageDescriptionEdit(i, e);\n                                            }}\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <Button\n                                            variant=\"outline-danger\"\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        >\n                                            DELETE\n                                        </Button>\n                                        <br />\n                                        <br />\n                                        {i > 0 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'up');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-up-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                        <br />\n                                        <br />\n                                        {i < images.length - 1 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'down');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-down-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Image Added</h5>;\n    }\n};\nexport default ProjectImageList;\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from '@reach/combobox';\nimport '@reach/combobox/styles.css';\n// const google = window.google;\nconst mapContainerStyle = {\n    height: '100vh',\n};\nconst options = {\n    disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst searchBoxStyle = {\n    width: '100%',\n};\nconst ProjectGeoCoding = (props) => {\n    //selectedLocation={props.location}\n    //handleLocationChange={props.handleLocationChange}\n\n    const libraries = ['places'];\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const marker = props.selectedLocation;\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n    const onMapClick = (e) => {\n        props.handleLocationChange({\n            latitude: e.latLng.lat(),\n            longitude: e.latLng.lng(),\n        });\n    };\n    const panTo = ({ lat, lng }) => {\n        props.handleLocationChange({\n            latitude: lat,\n            longitude: lng,\n        });\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(14);\n    };\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    else {\n        center = {\n            lat: parseFloat(marker.latitude),\n            lng: parseFloat(marker.longitude),\n        };\n        return (\n            <div>\n                <SearchBoxRender panTo={panTo} />\n                <br />\n                <GoogleMap id=\"map\" onLoad={onMapLoad} mapContainerStyle={mapContainerStyle} zoom={8} center={center} options={options} onClick={onMapClick}>\n                    {marker.latitude && marker.longitude && (\n                        <Marker\n                            key={`${marker.latitude}-${marker.longitude}`}\n                            position={{\n                                lat: parseFloat(marker.latitude),\n                                lng: parseFloat(marker.longitude),\n                            }}\n                        />\n                    )}\n                </GoogleMap>\n            </div>\n        );\n    }\n};\nconst SearchBoxRender = ({ panTo }) => {\n    const handleInput = (e) => {\n        setValue(e.target.value);\n    };\n    const {\n        ready,\n        value,\n        suggestions: { status, data },\n        setValue,\n        clearSuggestions,\n    } = usePlacesAutocomplete({\n        requestOptions: {\n            location: { lat: () => 43.6532, lng: () => -79.3832 },\n            radius: 100 * 1000,\n        },\n    });\n\n    const handleSelect = async (address) => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n            const results = await getGeocode({ address });\n            const { lat, lng } = await getLatLng(results[0]);\n            panTo({ lat, lng });\n        } catch (error) {}\n    };\n\n    return (\n        <Combobox onSelect={handleSelect}>\n            <ComboboxInput style={searchBoxStyle} value={value} onChange={handleInput} disabled={!ready} placeholder=\"Search your location\" />\n            <ComboboxPopover>\n                <ComboboxList key={1}>{status === 'OK' && data.map(({ id, description }) => <ComboboxOption key={id + description} value={description} />)}</ComboboxList>\n            </ComboboxPopover>\n        </Combobox>\n    );\n};\nexport default ProjectGeoCoding;\n","import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport ProjectImageList from './project-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, CheckBoxRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport ProjectGeoCoding from './project-geo-coding';\nconst ProjectForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const allSkills = props.allSkills;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Project</h4> : <h4>Create Project</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageProjects();\n                                    }}\n                                >\n                                    Manage Projects\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Project Title\" placeholder=\"Your project title...\" />\n\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Project start time\" col1={4} col2={8} zIndex={6001} />\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"Project end time\" col1={4} col2={8} zIndex={6000} />\n\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Project Description\" placeholder=\"Your project description...\" col1={4} col2={8} />\n                        {/* Skill */}\n                        <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skill\" col1={4} col2={8} options={allSkills} zIndex={5000} menuPlacement=\"top\" />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        <Field name=\"topNeed\" type=\"checkbox\" component={CheckBoxRender} label=\"Top Need\" col1={4} col2={8} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <ProjectImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <ProjectGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ProjectForm;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass ProjectDA {\n    create_project = (project) => {\n        return axios\n            .post(APIPaths.createProject, project, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_project_by_id = (projectId) => {\n        return axios\n            .get(APIPaths.getProjectById + projectId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_projects = () => {\n        return axios\n            .get(APIPaths.getAllProjects, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    update_project_by_id = (projectId, project) => {\n        return axios\n            .put(APIPaths.updateProjectById + projectId, project, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    delete_project_by_id = (projectId) => {\n        return axios\n            .delete(APIPaths.deleteProjectById + projectId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_list_by_filter = (title, impactAreas) => {\n        const params = `?title=${title}&impactAreas=${JSON.stringify(impactAreas)}`;\n        return axios\n            .get(APIPaths.getAllProjects + params, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new ProjectDA();\n","import ProjectDA from '../data_accesses/project-da';\nimport * as Types from '../constants/reducer-types';\nexport const createProject = (project) => {\n    return {\n        type: Types.SET_PROJECT,\n        payload: ProjectDA.create_project(project),\n    };\n};\nexport const getProjectById = (projectId) => {\n    return {\n        type: Types.GET_PROJECT,\n        payload: ProjectDA.get_project_by_id(projectId),\n    };\n};\nexport const getAllProjects = () => {\n    return {\n        type: Types.GET_ALL_PROJECTS,\n        payload: ProjectDA.get_all_projects(),\n    };\n};\nexport const deleteProjectById = (projectId) => {\n    return {\n        type: Types.DELETE_PROJECT,\n        payload: ProjectDA.delete_project_by_id(projectId),\n    };\n};\nexport const updateProjectById = (projectId, project) => {\n    return {\n        type: Types.SET_PROJECT,\n        payload: ProjectDA.update_project_by_id(projectId, project),\n    };\n};\nexport const clearProject = () => {\n    return {\n        type: Types.CLEAR_PROJECT,\n        payload: {},\n    };\n};\n\nexport const getAllProjectsByFilter = ({ title, impactArea }) => {\n    impactArea = impactArea.map((area) => area._id);\n    return {\n        type: Types.GET_ALL_PROJECTS,\n        payload: ProjectDA.get_list_by_filter(title, impactArea),\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport ProjectForm from '../../components/project/project-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getProjectById, createProject, updateProjectById, clearProject } from '../../actions/project-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateProject = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getProjectResponse.success) {\n            console.log(props.getProjectResponse.project);\n            setImages(props.getProjectResponse.project.images);\n            if (props.getProjectResponse.project.address) {\n                setLocation({\n                    latitude: props.getProjectResponse.project.address.latitude,\n                    longitude: props.getProjectResponse.project.address.longitude,\n                });\n            }\n        }\n    }, [props.getProjectResponse]);\n    const handlePictureUpload = (project) => {\n        var file = project.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (project.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageProjects = () => {\n        props.history.push(RoutePaths.projectListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let project = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-project.js ~ line 36 ~ onSubmit ~ project', project);\n        if (editMode) {\n            props.dispatch(updateProjectById(props.match.params.projectId, project));\n        } else {\n            props.dispatch(createProject(project));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (projectId) => {\n            setLoading(true);\n            props.dispatch(getProjectById(projectId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.projectId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearProject());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setProjectResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearProject());\n            if (editMode) props.history.push(RoutePaths.projectDetailsPage + props.match.params.projectId);\n            else {\n                props.history.push(RoutePaths.projectDetailsPage + props.setProjectResponse.project._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setProjectResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <ProjectForm\n                handleGoToManageProjects={handleGoToManageProjects}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((project) => {\n                    onSubmit(project);\n                })}\n                location={location}\n                setLocation={setLocation}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getProjectResponse = state.Project.getProject;\n    const setProjectResponse = state.Project.setProject;\n    let initialValues = {};\n    if (getProjectResponse.success) {\n        initialValues = getProjectResponse.project;\n    }\n    return {\n        getImpactAreaResponse,\n        getSkillResponse,\n        initialValues,\n        getProjectResponse,\n        setProjectResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateProject',\n        enableReinitialize: true,\n    })(CreateProject),\n);\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllProjectOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allProjects;\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Project</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            <Link to={RoutePath.projectDetailsPage + selected._id}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllProjectOnMap;\n","import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport ProjectMapView from './project-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayProject = (props) => {\n    const project = props.project;\n    const organization = props.organization;\n    if (project && project._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{project.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(project.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('Impact Areas', project.impactAreas)}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{TagWithLabelRender('Skills', project.skills)}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(project.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(project.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', project.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(project.images)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <ProjectMapView allProjects={[project]} zoom={16} />\n                            </Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Project is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayProject;\n","import React, { useState, useEffect } from 'react';\nimport ProjectDetails from '../../components/project/project-details';\nimport { connect } from 'react-redux';\nimport { getProjectById } from '../../actions/project-action';\nconst DisplayProject = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getProjectById(projectId));\n            setLoading(false);\n        };\n        const projectId = props.match.params.projectId;\n        if (projectId) getInitialInfo(projectId);\n        else {\n        }\n    }, [props.auth]);\n    return (\n        <ProjectDetails\n            project={props.getProjectResponse.success ? props.getProjectResponse.project : {}}\n            organization={props.getProjectResponse.success ? props.getProjectResponse.organization : {}}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getProjectResponse = state.Project.getProject ? state.Project.getProject : {};\n    console.log('🚀 ~ file: display-project.js ~ line 23 ~ mapStateToProps ~ getProjectResponse', getProjectResponse);\n\n    return { getProjectResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayProject);\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst ListingProject = (props) => {\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h1>Welcome To ListingProject EVENTS</h1>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ListingProject;\n","import React from 'react';\nimport { Container, Row, Col, Button, Table } from 'react-bootstrap';\n\nconst ProjectList = (props) => {\n    const allProjects = props.allProjects;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allProjects && allProjects.length > 0) {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>{allProjects.length} Projects Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    size=\"sm\"\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToProjectCreate();\n                                    }}\n                                >\n                                    Create Project\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Title</th>\n                                    <th>Description</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allProjects.map((project, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td\n                                                className=\"row-details\"\n                                                onClick={() => {\n                                                    props.handleGoToProjectDetails(project._id);\n                                                }}\n                                            >\n                                                {project.title}\n                                            </td>\n                                            <td>{descriptionRender(project.description)}</td>\n                                            <td>\n                                                <Button\n                                                    size=\"sm\"\n                                                    onClick={() => {\n                                                        props.handleGoToProjectEdit(project._id);\n                                                    }}\n                                                >\n                                                    Edit\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>No Projects Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToProjectCreate();\n                                    }}\n                                >\n                                    Create Project\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default ProjectList;\n","import React, { useEffect, useState } from 'react';\nimport ProjectList from '../../components/project/project-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllProjectsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageProjects = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllProjectsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToProjectEdit = (projectId) => {\n        props.history.push(RoutePaths.projectEditPage + projectId);\n    };\n    const handleGoToProjectDetails = (projectId) => {\n        props.history.push(RoutePaths.projectDetailsPage + projectId);\n    };\n    const handleGoToProjectCreate = () => {\n        props.history.push(RoutePaths.projectCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <ProjectList\n                allProjects={props.getAllProjectsResponse.success ? props.getAllProjectsResponse.projects : []}\n                handleGoToProjectEdit={handleGoToProjectEdit}\n                handleGoToProjectDetails={handleGoToProjectDetails}\n                handleGoToProjectCreate={handleGoToProjectCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllProjectsResponse = state.Project.getAllProjects;\n    console.log('🚀 ~ file: manage-projects.js ~ line 21 ~ mapStateToProps ~ getAllProjectsResponse', getAllProjectsResponse);\n\n    return {\n        getAllProjectsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageProjects);\n","import React from 'react';\nimport { Table, Image, Button, Row, Col, Badge } from 'react-bootstrap';\nconst PostImageList = (props) => {\n    const images = props.images;\n    if (images && images.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Images</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"dark\" className=\"badge-single \">\n                            Remember: First Image of the list will be your default post image\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr>\n                            <th>Image</th>\n                            <th>Description</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {images.map((image, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td style={{ width: 220 }}>\n                                        <Image src={image.path} thumbnail width=\"200\" />\n                                    </td>\n                                    <td>\n                                        <textarea\n                                            value={image.description}\n                                            placeholder=\"Add description...\"\n                                            rows=\"8\"\n                                            type=\"text\"\n                                            className=\"form-control image-description-input\"\n                                            onChange={(e) => {\n                                                props.handleImageDescriptionEdit(i, e);\n                                            }}\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <Button\n                                            variant=\"outline-danger\"\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        >\n                                            DELETE\n                                        </Button>\n                                        <br />\n                                        <br />\n                                        {i > 0 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'up');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-up-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                        <br />\n                                        <br />\n                                        {i < images.length - 1 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'down');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-down-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Image Added</h5>;\n    }\n};\nexport default PostImageList;\n","import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport PostImageList from './post-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport PostGeoCoding from './post-geo-coding';\nconst PostForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Post</h4> : <h4>Create Post</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManagePosts();\n                                    }}\n                                >\n                                    Manage Posts\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Post Title\" placeholder=\"Your post title...\" />\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Post Description\" placeholder=\"Your post description...\" col1={4} col2={8} />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <PostImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default PostForm;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass PostDA {\n    create_post = (post) => {\n        return axios\n            .post(APIPaths.createPost, post, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_post_by_id = (postId) => {\n        return axios\n            .get(APIPaths.getPostById + postId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_posts = () => {\n        return axios\n            .get(APIPaths.getAllPosts, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    update_post_by_id = (postId, post) => {\n        return axios\n            .put(APIPaths.updatePostById + postId, post, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    delete_post_by_id = (postId) => {\n        return axios\n            .delete(APIPaths.deletePostById + postId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_list_by_filter = (title, impactAreas) => {\n        const params = `?title=${title}&impactAreas=${JSON.stringify(impactAreas)}`;\n        return axios\n            .get(APIPaths.getAllPosts + params, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new PostDA();\n","import PostDA from '../data_accesses/post-da';\nimport * as Types from '../constants/reducer-types';\nexport const createPost = (post) => {\n    return {\n        type: Types.SET_POST,\n        payload: PostDA.create_post(post),\n    };\n};\nexport const getPostById = (postId) => {\n    return {\n        type: Types.GET_POST,\n        payload: PostDA.get_post_by_id(postId),\n    };\n};\nexport const getAllPosts = () => {\n    return {\n        type: Types.GET_ALL_POSTS,\n        payload: PostDA.get_all_posts(),\n    };\n};\nexport const deletePostById = (postId) => {\n    return {\n        type: Types.DELETE_POST,\n        payload: PostDA.delete_post_by_id(postId),\n    };\n};\nexport const updatePostById = (postId, post) => {\n    return {\n        type: Types.SET_POST,\n        payload: PostDA.update_post_by_id(postId, post),\n    };\n};\nexport const clearPost = () => {\n    return {\n        type: Types.CLEAR_POST,\n        payload: {},\n    };\n};\n\nexport const getAllPostsByFilter = ({ title, impactArea }) => {\n    impactArea = impactArea.map((area) => area._id);\n    return {\n        type: Types.GET_ALL_POSTS,\n        payload: PostDA.get_list_by_filter(title, impactArea),\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport PostForm from '../../components/post/post-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPostById, createPost, updatePostById, clearPost } from '../../actions/post-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreatePost = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getPostResponse.success) {\n            console.log(props.getPostResponse.post);\n            setImages(props.getPostResponse.post.images);\n            if (props.getPostResponse.post.address) {\n                setLocation({\n                    latitude: props.getPostResponse.post.address.latitude,\n                    longitude: props.getPostResponse.post.address.longitude,\n                });\n            }\n        }\n    }, [props.getPostResponse]);\n    const handlePictureUpload = (post) => {\n        var file = post.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (post.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManagePosts = () => {\n        props.history.push(RoutePaths.postListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let post = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-post.js ~ line 36 ~ onSubmit ~ post', post);\n        if (editMode) {\n            props.dispatch(updatePostById(props.match.params.postId, post));\n        } else {\n            props.dispatch(createPost(post));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (postId) => {\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.postId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearPost());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setPostResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearPost());\n            if (editMode) props.history.push(RoutePaths.postDetailsPage + props.match.params.postId);\n            else {\n                props.history.push(RoutePaths.postDetailsPage + props.setPostResponse.post._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setPostResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <PostForm\n                handleGoToManagePosts={handleGoToManagePosts}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((post) => {\n                    onSubmit(post);\n                })}\n                location={location}\n                setLocation={setLocation}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n\n    const getPostResponse = state.Post.getPost;\n    const setPostResponse = state.Post.setPost;\n    let initialValues = {};\n    if (getPostResponse.success) {\n        initialValues = getPostResponse.post;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPostResponse,\n        setPostResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreatePost',\n        enableReinitialize: true,\n    })(CreatePost),\n);\n","import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport PostMapView from './post-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayPost = (props) => {\n    const post = props.post;\n    const organization = props.organization;\n    if (post && post._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{post.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('', post.impactAreas)}</Col>\n                        </Row>\n                        <br />\n\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', post.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(post.images)}</Col>\n                        </Row>\n\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Post is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayPost;\n","import React, { useState, useEffect } from 'react';\nimport PostDetails from '../../components/post/post-details';\nimport { connect } from 'react-redux';\nimport { getPostById } from '../../actions/post-action';\nconst DisplayPost = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n            setLoading(false);\n        };\n        const postId = props.match.params.postId;\n        if (postId) getInitialInfo(postId);\n        else {\n        }\n    }, [props.auth]);\n    return <PostDetails post={props.getPostResponse.success ? props.getPostResponse.post : {}} organization={props.getPostResponse.success ? props.getPostResponse.organization : {}} />;\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getPostResponse = state.Post.getPost ? state.Post.getPost : {};\n    console.log('🚀 ~ file: display-post.js ~ line 23 ~ mapStateToProps ~ getPostResponse', getPostResponse);\n\n    return { getPostResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayPost);\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst ListingEvent = (props) => {\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h1>Welcome To ListingEvent EVENTS</h1>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ListingEvent;\n","import React from 'react';\nimport { Container, Row, Col, Button, Table } from 'react-bootstrap';\n\nconst PostList = (props) => {\n    const allPosts = props.allPosts;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allPosts && allPosts.length > 0) {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>{allPosts.length} Posts Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    size=\"sm\"\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToPostCreate();\n                                    }}\n                                >\n                                    Create Post\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Title</th>\n                                    <th>Description</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allPosts.map((post, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td\n                                                className=\"row-details\"\n                                                onClick={() => {\n                                                    props.handleGoToPostDetails(post._id);\n                                                }}\n                                            >\n                                                {post.title}\n                                            </td>\n                                            <td>{descriptionRender(post.description)}</td>\n                                            <td>\n                                                <Button\n                                                    size=\"sm\"\n                                                    onClick={() => {\n                                                        props.handleGoToPostEdit(post._id);\n                                                    }}\n                                                >\n                                                    Edit\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>No Posts Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToPostCreate();\n                                    }}\n                                >\n                                    Create Post\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default PostList;\n","import React, { useEffect, useState } from 'react';\nimport PostList from '../../components/post/post-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllPostsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManagePosts = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllPostsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToPostEdit = (postId) => {\n        props.history.push(RoutePaths.postEditPage + postId);\n    };\n    const handleGoToPostDetails = (postId) => {\n        props.history.push(RoutePaths.postDetailsPage + postId);\n    };\n    const handleGoToPostCreate = () => {\n        props.history.push(RoutePaths.postCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <PostList\n                allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.posts : []}\n                handleGoToPostEdit={handleGoToPostEdit}\n                handleGoToPostDetails={handleGoToPostDetails}\n                handleGoToPostCreate={handleGoToPostCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllPostsResponse = state.Post.getAllPosts;\n    console.log('🚀 ~ file: manage-posts.js ~ line 21 ~ mapStateToProps ~ getAllPostsResponse', getAllPostsResponse);\n\n    return {\n        getAllPostsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManagePosts);\n","import React from 'react';\nimport { Table, Image, Button, Row, Col, Badge } from 'react-bootstrap';\nconst VolunteeringImageList = (props) => {\n    const images = props.images;\n    if (images && images.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Images</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"dark\" className=\"badge-single \">\n                            Remember: First Image of the list will be your default volunteering image\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr>\n                            <th>Image</th>\n                            <th>Description</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {images.map((image, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td style={{ width: 220 }}>\n                                        <Image src={image.path} thumbnail width=\"200\" />\n                                    </td>\n                                    <td>\n                                        <textarea\n                                            value={image.description}\n                                            placeholder=\"Add description...\"\n                                            rows=\"8\"\n                                            type=\"text\"\n                                            className=\"form-control image-description-input\"\n                                            onChange={(e) => {\n                                                props.handleImageDescriptionEdit(i, e);\n                                            }}\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <Button\n                                            variant=\"outline-danger\"\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        >\n                                            DELETE\n                                        </Button>\n                                        <br />\n                                        <br />\n                                        {i > 0 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'up');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-up-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                        <br />\n                                        <br />\n                                        {i < images.length - 1 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'down');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-down-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Image Added</h5>;\n    }\n};\nexport default VolunteeringImageList;\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete';\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from '@reach/combobox';\nimport '@reach/combobox/styles.css';\n// const google = window.google;\nconst mapContainerStyle = {\n    height: '100vh',\n};\nconst options = {\n    disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst searchBoxStyle = {\n    width: '100%',\n};\nconst VolunteeringGeoCoding = (props) => {\n    //selectedLocation={props.location}\n    //handleLocationChange={props.handleLocationChange}\n\n    const libraries = ['places'];\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const marker = props.selectedLocation;\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n    const onMapClick = (e) => {\n        props.handleLocationChange({\n            latitude: e.latLng.lat(),\n            longitude: e.latLng.lng(),\n        });\n    };\n    const panTo = ({ lat, lng }) => {\n        props.handleLocationChange({\n            latitude: lat,\n            longitude: lng,\n        });\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(14);\n    };\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    else {\n        center = {\n            lat: parseFloat(marker.latitude),\n            lng: parseFloat(marker.longitude),\n        };\n        return (\n            <div>\n                <SearchBoxRender panTo={panTo} />\n                <br />\n                <GoogleMap id=\"map\" onLoad={onMapLoad} mapContainerStyle={mapContainerStyle} zoom={8} center={center} options={options} onClick={onMapClick}>\n                    {marker.latitude && marker.longitude && (\n                        <Marker\n                            key={`${marker.latitude}-${marker.longitude}`}\n                            position={{\n                                lat: parseFloat(marker.latitude),\n                                lng: parseFloat(marker.longitude),\n                            }}\n                        />\n                    )}\n                </GoogleMap>\n            </div>\n        );\n    }\n};\nconst SearchBoxRender = ({ panTo }) => {\n    const handleInput = (e) => {\n        setValue(e.target.value);\n    };\n    const {\n        ready,\n        value,\n        suggestions: { status, data },\n        setValue,\n        clearSuggestions,\n    } = usePlacesAutocomplete({\n        requestOptions: {\n            location: { lat: () => 43.6532, lng: () => -79.3832 },\n            radius: 100 * 1000,\n        },\n    });\n\n    const handleSelect = async (address) => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n            const results = await getGeocode({ address });\n            const { lat, lng } = await getLatLng(results[0]);\n            panTo({ lat, lng });\n        } catch (error) {}\n    };\n\n    return (\n        <Combobox onSelect={handleSelect}>\n            <ComboboxInput style={searchBoxStyle} value={value} onChange={handleInput} disabled={!ready} placeholder=\"Search your location\" />\n            <ComboboxPopover>\n                <ComboboxList key={1}>{status === 'OK' && data.map(({ id, description }) => <ComboboxOption key={id + description} value={description} />)}</ComboboxList>\n            </ComboboxPopover>\n        </Combobox>\n    );\n};\nexport default VolunteeringGeoCoding;\n","import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport VolunteeringImageList from './volunteering-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, CreatableMultiSelectRender, CheckBoxRender } from '../form_template/input-render';\nimport VolunteeringGeoCoding from './volunteering-geo-coding';\nconst VolunteeringForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const allSkills = props.allSkills;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Volunteering</h4> : <h4>Create Volunteering</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageVolunteerings();\n                                    }}\n                                >\n                                    Manage Volunteerings\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Volunteering Title\" placeholder=\"Your volunteering title...\" />\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Volunteering start time\" col1={4} col2={8} zIndex={6001} />\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"Volunteering end time\" col1={4} col2={8} zIndex={6000} />\n\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Volunteering Description\" placeholder=\"Your Volunteering description...\" col1={4} col2={8} />\n                        {/* Skill */}\n                        <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skill\" col1={4} col2={8} options={allSkills} zIndex={5000} menuPlacement=\"top\" />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        <Field name=\"topNeed\" type=\"checkbox\" component={CheckBoxRender} label=\"Top Need\" col1={4} col2={8} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <VolunteeringImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <VolunteeringGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default VolunteeringForm;\n","import axios from 'axios';\nimport * as APIPaths from '../constants/api-paths';\n\nclass VolunteeringDA {\n    create_volunteering = (volunteering) => {\n        return axios\n            .post(APIPaths.createVolunteering, volunteering, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_volunteering_by_id = (volunteeringId) => {\n        return axios\n            .get(APIPaths.getVolunteeringById + volunteeringId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_all_volunteerings = () => {\n        return axios\n            .get(APIPaths.getAllVolunteerings, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    update_volunteering_by_id = (volunteeringId, volunteering) => {\n        return axios\n            .put(APIPaths.updateVolunteeringById + volunteeringId, volunteering, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    delete_volunteering_by_id = (volunteeringId) => {\n        return axios\n            .delete(APIPaths.deleteVolunteeringById + volunteeringId, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n    get_list_by_filter = (title, impactAreas) => {\n        const params = `?title=${title}&impactAreas=${JSON.stringify(impactAreas)}`;\n        return axios\n            .get(APIPaths.getAllVolunteerings + params, APIPaths.apiConfig())\n            .then((response) => response.data)\n            .catch((err) => err.response.data);\n    };\n}\nexport default new VolunteeringDA();\n","import VolunteeringDA from '../data_accesses/volunteering-da';\nimport * as Types from '../constants/reducer-types';\nexport const createVolunteering = (volunteering) => {\n    return {\n        type: Types.SET_VOLUNTEERING,\n        payload: VolunteeringDA.create_volunteering(volunteering),\n    };\n};\nexport const getVolunteeringById = (volunteeringId) => {\n    return {\n        type: Types.GET_VOLUNTEERING,\n        payload: VolunteeringDA.get_volunteering_by_id(volunteeringId),\n    };\n};\nexport const getAllVolunteerings = () => {\n    return {\n        type: Types.GET_ALL_VOLUNTEERINGS,\n        payload: VolunteeringDA.get_all_volunteerings(),\n    };\n};\nexport const deleteVolunteeringById = (volunteeringId) => {\n    return {\n        type: Types.DELETE_VOLUNTEERING,\n        payload: VolunteeringDA.delete_volunteering_by_id(volunteeringId),\n    };\n};\nexport const updateVolunteeringById = (volunteeringId, volunteering) => {\n    return {\n        type: Types.SET_VOLUNTEERING,\n        payload: VolunteeringDA.update_volunteering_by_id(volunteeringId, volunteering),\n    };\n};\nexport const clearVolunteering = () => {\n    return {\n        type: Types.CLEAR_VOLUNTEERING,\n        payload: {},\n    };\n};\n\nexport const getAllVolunteeringsByFilter = ({ title, impactArea }) => {\n    impactArea = impactArea.map((area) => area._id);\n    return {\n        type: Types.GET_ALL_VOLUNTEERINGS,\n        payload: VolunteeringDA.get_list_by_filter(title, impactArea),\n    };\n};\n","import React, { useEffect, useState } from 'react';\nimport VolunteeringForm from '../../components/volunteering/volunteering-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getVolunteeringById, createVolunteering, updateVolunteeringById, clearVolunteering } from '../../actions/volunteering-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateVolunteering = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getVolunteeringResponse.success) {\n            console.log(props.getVolunteeringResponse.volunteering);\n            setImages(props.getVolunteeringResponse.volunteering.images);\n            if (props.getVolunteeringResponse.volunteering.address) {\n                setLocation({\n                    latitude: props.getVolunteeringResponse.volunteering.address.latitude,\n                    longitude: props.getVolunteeringResponse.volunteering.address.longitude,\n                });\n            }\n        }\n    }, [props.getVolunteeringResponse]);\n    const handlePictureUpload = (volunteering) => {\n        var file = volunteering.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (volunteering.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageVolunteerings = () => {\n        props.history.push(RoutePaths.volunteeringListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let volunteering = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-volunteering.js ~ line 36 ~ onSubmit ~ volunteering', volunteering);\n        if (editMode) {\n            props.dispatch(updateVolunteeringById(props.match.params.volunteeringId, volunteering));\n        } else {\n            props.dispatch(createVolunteering(volunteering));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (volunteeringId) => {\n            setLoading(true);\n            props.dispatch(getVolunteeringById(volunteeringId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.volunteeringId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearVolunteering());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setVolunteeringResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearVolunteering());\n            if (editMode) props.history.push(RoutePaths.volunteeringDetailsPage + props.match.params.volunteeringId);\n            else {\n                props.history.push(RoutePaths.volunteeringDetailsPage + props.setVolunteeringResponse.volunteering._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setVolunteeringResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <VolunteeringForm\n                handleGoToManageVolunteerings={handleGoToManageVolunteerings}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((volunteering) => {\n                    onSubmit(volunteering);\n                })}\n                location={location}\n                setLocation={setLocation}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getVolunteeringResponse = state.Volunteering.getVolunteering;\n    const setVolunteeringResponse = state.Volunteering.setVolunteering;\n    let initialValues = {};\n    if (getVolunteeringResponse.success) {\n        initialValues = getVolunteeringResponse.volunteering;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getSkillResponse,\n        getVolunteeringResponse,\n        setVolunteeringResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateVolunteering',\n        enableReinitialize: true,\n    })(CreateVolunteering),\n);\n","import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllVolunteeringOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allVolunteerings;\n\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Volunteering</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            <Link to={RoutePath.volunteeringDetailsPage + selected._id}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllVolunteeringOnMap;\n","import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport VolunteeringMapView from './volunteering-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayVolunteering = (props) => {\n    const volunteering = props.volunteering;\n    const organization = props.organization;\n    if (volunteering && volunteering._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{volunteering.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(volunteering.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('Impact Areas', volunteering.impactAreas)}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{TagWithLabelRender('Skills', volunteering.skills)}</Col>\n                        </Row>\n                        <hr />\n                        <br />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(volunteering.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(volunteering.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', volunteering.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(volunteering.images)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <VolunteeringMapView allVolunteerings={[volunteering]} zoom={16} />\n                            </Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Volunteering is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayVolunteering;\n","import React, { useState, useEffect } from 'react';\nimport VolunteeringDetails from '../../components/volunteering/volunteering-details';\nimport { connect } from 'react-redux';\nimport { getVolunteeringById } from '../../actions/volunteering-action';\nconst DisplayVolunteering = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getVolunteeringById(volunteeringId));\n            setLoading(false);\n        };\n        const volunteeringId = props.match.params.volunteeringId;\n        if (volunteeringId) getInitialInfo(volunteeringId);\n        else {\n        }\n    }, [props.auth]);\n    return (\n        <VolunteeringDetails\n            volunteering={props.getVolunteeringResponse.success ? props.getVolunteeringResponse.volunteering : {}}\n            organization={props.getVolunteeringResponse.success ? props.getVolunteeringResponse.organization : {}}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getVolunteeringResponse = state.Volunteering.getVolunteering ? state.Volunteering.getVolunteering : {};\n    console.log('🚀 ~ file: display-volunteering.js ~ line 23 ~ mapStateToProps ~ getVolunteeringResponse', getVolunteeringResponse);\n\n    return { getVolunteeringResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayVolunteering);\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst ListingVolunteering = (props) => {\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h1>Welcome To ListingVolunteering EVENTS</h1>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ListingVolunteering;\n","import React from 'react';\nimport { Container, Row, Col, Button, Table } from 'react-bootstrap';\n\nconst VolunteeringList = (props) => {\n    const allVolunteerings = props.allVolunteerings;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allVolunteerings && allVolunteerings.length > 0) {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>{allVolunteerings.length} Volunteerings Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    size=\"sm\"\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToVolunteeringCreate();\n                                    }}\n                                >\n                                    Create Volunteering\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Title</th>\n                                    <th>Description</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allVolunteerings.map((volunteering, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td\n                                                className=\"row-details\"\n                                                onClick={() => {\n                                                    props.handleGoToVolunteeringDetails(volunteering._id);\n                                                }}\n                                            >\n                                                {volunteering.title}\n                                            </td>\n                                            <td>{descriptionRender(volunteering.description)}</td>\n                                            <td>\n                                                <Button\n                                                    size=\"sm\"\n                                                    onClick={() => {\n                                                        props.handleGoToVolunteeringEdit(volunteering._id);\n                                                    }}\n                                                >\n                                                    Edit\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>No Volunteerings Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToVolunteeringCreate();\n                                    }}\n                                >\n                                    Create Volunteering\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default VolunteeringList;\n","import React, { useEffect, useState } from 'react';\nimport VolunteeringList from '../../components/volunteering/volunteering-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllVolunteeringsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageVolunteerings = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllVolunteeringsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToVolunteeringEdit = (volunteeringId) => {\n        props.history.push(RoutePaths.volunteeringEditPage + volunteeringId);\n    };\n    const handleGoToVolunteeringDetails = (volunteeringId) => {\n        props.history.push(RoutePaths.volunteeringDetailsPage + volunteeringId);\n    };\n    const handleGoToVolunteeringCreate = () => {\n        props.history.push(RoutePaths.volunteeringCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <VolunteeringList\n                allVolunteerings={props.getAllVolunteeringsResponse.success ? props.getAllVolunteeringsResponse.volunteerings : []}\n                handleGoToVolunteeringEdit={handleGoToVolunteeringEdit}\n                handleGoToVolunteeringDetails={handleGoToVolunteeringDetails}\n                handleGoToVolunteeringCreate={handleGoToVolunteeringCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllVolunteeringsResponse = state.Volunteering.getAllVolunteerings;\n    console.log('🚀 ~ file: manage-volunteerings.js ~ line 21 ~ mapStateToProps ~ getAllVolunteeringsResponse', getAllVolunteeringsResponse);\n\n    return {\n        getAllVolunteeringsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageVolunteerings);\n","import React from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport { communityFollowerListPage, communityFollowingListPage, communityFriendListPage, communityRequestListPage } from '../../constants/route-paths';\nconst CommunityMenu = (props) => {\n    const selected = props.selected;\n    return (\n        <Nav variant=\"pills\" activeKey={selected}>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"friend\" href={communityFriendListPage}>\n                    Friends\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"following\" href={communityFollowingListPage}>\n                    Followings\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"follower\" href={communityFollowerListPage}>\n                    Followers\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"request\" href={communityRequestListPage}>\n                    Requests\n                </Nav.Link>\n            </Nav.Item>\n        </Nav>\n    );\n};\nexport default CommunityMenu;\n","import React from 'react';\nimport { Card, CardColumns } from 'react-bootstrap';\nconst SampleOrgList = (props) => {\n    return (\n        <CardColumns className=\"four-columns\">\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name 1</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name 2</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n            <Card>\n                <Card.Img variant=\"top\" src=\"http://localhost:3001/uploaded-images/desk2.jpg\" />\n                <Card.Body className=\"justify-text\">\n                    <Card.Title>Name</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                    <small className=\"text-muted\">YET TO DEVELOP</small>\n                </Card.Footer>\n            </Card>\n        </CardColumns>\n    );\n};\nexport default SampleOrgList;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityFriends = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"friend\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityFriends);\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityFollowers = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"follower\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityFollowers);\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityFollowings = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"following\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityFollowings);\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityRequests = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"request\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityRequests);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport UserSignUp from './containers/user/sign-up';\nimport UserSignIn from './containers/user/sign-in';\nimport UserSignOut from './containers/user/sign-out';\nimport LayoutRoute from './route-layout';\nimport * as RoutePath from './constants/route-paths';\nimport Layout from './hoc/layout';\nimport DashboardLayout from './hoc/dashboard-layout';\nimport UserAuthCheck from './hoc/auth';\nimport HomePage from './containers/home/home';\nimport SearchOrganization from './containers/search/search-organization';\nimport SearchEvent from './containers/search/search-event';\n\nimport IndividualBasicInfo from './containers/individual/individual-basic-info';\nimport IndividualInvolvement from './containers/individual/individual-involvement';\nimport IndividualPrivacy from './containers/individual/individual-privacy';\n// import IndividualList from './containers/individual/individual-list';\nimport IndividualDetails from './containers/individual/individual-details';\n\nimport OrganizationBasicInfo from './containers/organization/organization-basic-info';\nimport OrganizationServiceInfo from './containers/organization/organization-service-info';\nimport OrganizationInternalLink from './containers/organization/organization-internal-link';\n// import OrganizationList from './containers/organization/organization-list';\nimport OrganizationDetails from './containers/organization/organization-details';\nimport Messages from './containers/message/messages';\n\n// POST\nimport ManageNews from './containers/news/manage-news';\n\n// EVENTS\nimport CreateEvent from './containers/event/create-event';\nimport DisplayEvent from './containers/event/display-event';\nimport ListingEvents from './containers/event/listing-events';\nimport ManageEvents from './containers/event/manage-events';\n\n// PROJECTS\nimport CreateProject from './containers/project/create-project';\nimport DisplayProject from './containers/project/display-project';\nimport ListingProjects from './containers/project/listing-projects';\nimport ManageProjects from './containers/project/manage-projects';\n\n// POSTS\nimport CreatePost from './containers/post/create-post';\nimport DisplayPost from './containers/post/display-post';\nimport ListingPosts from './containers/post/listing-posts';\nimport ManagePosts from './containers/post/manage-posts';\n\n// VOLUNTEERING\nimport CreateVolunteering from './containers/volunteering/create-volunteering';\nimport DisplayVolunteering from './containers/volunteering/display-volunteering';\nimport ListingVolunteerings from './containers/volunteering/listing-volunteerings';\nimport ManageVolunteerings from './containers/volunteering/manage-volunteerings';\n\n//COMMUNITY\nimport CommunityFriends from './containers/community/friends';\nimport CommunityFollowers from './containers/community/followers';\nimport CommunityFollowings from './containers/community/followings';\nimport CommunityRequests from './containers/community/requests';\n\nconst allRoles = ['individual', 'organization', 'admin'];\nconst individualAndAdminRoles = ['individual', 'admin'];\nconst organizationAndAdminRoles = [, 'organization', 'admin'];\nconst adminRoles = ['admin'];\nconst Routes = () => {\n    return (\n        <Switch>\n            <LayoutRoute path={RoutePath.signUpPage} exact component={UserAuthCheck(UserSignUp, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signInPage} exact component={UserAuthCheck(UserSignIn, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signOutPage} exact component={UserSignOut} layout={Layout} />\n\n            <LayoutRoute path={RoutePath.individualCompleteBasicInfoPage} exact component={UserAuthCheck(IndividualBasicInfo, individualAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompleteInvolvementPage} exact component={UserAuthCheck(IndividualInvolvement, ['individual', 'admin'], true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompletePrivacyPage} exact component={UserAuthCheck(IndividualPrivacy, ['individual', 'admin'], true)} layout={Layout} />\n\n            <LayoutRoute path={RoutePath.individualEditBasicInfoPage} exact component={UserAuthCheck(IndividualBasicInfo, ['individual', 'admin'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.individualEditInvolvementPage} exact component={UserAuthCheck(IndividualInvolvement, ['individual', 'admin'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.individualEditPrivacyPage} exact component={UserAuthCheck(IndividualPrivacy, ['individual', 'admin'], true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.individualDetailsPage} exact component={UserAuthCheck(IndividualDetails, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.organizationCompleteBasicInfoPage} exact component={UserAuthCheck(OrganizationBasicInfo, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteServiceInfoPage} exact component={UserAuthCheck(OrganizationServiceInfo, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteInternalLinkPage} exact component={UserAuthCheck(OrganizationInternalLink, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationDetailsPage} exact component={UserAuthCheck(OrganizationDetails, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.organizationEditBasicInfoPage} exact component={UserAuthCheck(OrganizationBasicInfo, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationEditServiceInfoPage} exact component={UserAuthCheck(OrganizationServiceInfo, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationEditInternalLinkPage} exact component={UserAuthCheck(OrganizationInternalLink, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.homePage} exact component={UserAuthCheck(HomePage, allRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationSearchPage} exact component={UserAuthCheck(SearchOrganization, allRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventSearchPage} exact component={UserAuthCheck(SearchEvent, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path=\"/messages\" exact component={Messages} layout={DashboardLayout} />\n            {/* POST */}\n            <LayoutRoute path={RoutePath.newsManagePage} exact component={UserAuthCheck(ManageNews, ['organization'], true)} layout={DashboardLayout} />\n\n            {/* EVENTS */}\n            <LayoutRoute path={RoutePath.eventCreatePage} exact component={UserAuthCheck(CreateEvent, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventEditPage + ':eventId'} exact component={UserAuthCheck(CreateEvent, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventListByOrganizationPage} exact component={UserAuthCheck(ManageEvents, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventListPage} exact component={UserAuthCheck(ListingEvents, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventDetailsPage + ':eventId'} exact component={UserAuthCheck(DisplayEvent, allRoles, true)} layout={DashboardLayout} />\n\n            {/* PROJECTS */}\n            <LayoutRoute path={RoutePath.projectCreatePage} exact component={UserAuthCheck(CreateProject, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectEditPage + ':projectId'} exact component={UserAuthCheck(CreateProject, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectListByOrganizationPage} exact component={UserAuthCheck(ManageProjects, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectListPage} exact component={UserAuthCheck(ListingProjects, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectDetailsPage + ':projectId'} exact component={UserAuthCheck(DisplayProject, allRoles, true)} layout={DashboardLayout} />\n\n            {/* POSTS */}\n            <LayoutRoute path={RoutePath.postCreatePage} exact component={UserAuthCheck(CreatePost, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postEditPage + ':postId'} exact component={UserAuthCheck(CreatePost, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postListByOrganizationPage} exact component={UserAuthCheck(ManagePosts, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postListPage} exact component={UserAuthCheck(ListingPosts, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postDetailsPage + ':postId'} exact component={UserAuthCheck(DisplayPost, allRoles, true)} layout={DashboardLayout} />\n\n            {/* VOLUNTEERING */}\n            <LayoutRoute path={RoutePath.volunteeringCreatePage} exact component={UserAuthCheck(CreateVolunteering, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringEditPage + ':volunteeringId'} exact component={UserAuthCheck(CreateVolunteering, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringListByOrganizationPage} exact component={UserAuthCheck(ManageVolunteerings, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringListPage} exact component={UserAuthCheck(ListingVolunteerings, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringDetailsPage + ':volunteeringId'} exact component={UserAuthCheck(DisplayVolunteering, allRoles, true)} layout={DashboardLayout} />\n\n            {/* COMMUNITY */}\n            <LayoutRoute path={RoutePath.communityFriendListPage} exact component={UserAuthCheck(CommunityFriends, individualAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.communityFollowerListPage} exact component={UserAuthCheck(CommunityFollowers, individualAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.communityFollowingListPage} exact component={UserAuthCheck(CommunityFollowings, individualAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.communityRequestListPage} exact component={UserAuthCheck(CommunityRequests, individualAndAdminRoles, true)} layout={DashboardLayout} />\n        </Switch>\n    );\n};\nexport default Routes;\n","import * as Types from '../constants/reducer-types';\r\nconst initialState = {\r\n    getUser: {\r\n        user: {},\r\n        individual: {},\r\n        organization: {},\r\n    },\r\n    setUser: {},\r\n    allUsers: [],\r\n};\r\nconst UserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.GET_ALL_USERS:\r\n            return { ...state, allUsers: action.payload };\r\n        case Types.GET_USER:\r\n            return { ...state, getUser: action.payload };\r\n        case Types.SET_USER:\r\n            return { ...state, setUser: action.payload };\r\n        case Types.DELETE_USER:\r\n            return { ...state, user: action.payload };\r\n        case Types.CLEAR_USER:\r\n            return { ...state, user: {} };\r\n        case Types.CLEAR_ALL_USERS:\r\n            return { ...state, allUsers: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default UserReducer;\r\n","import * as Types from '../constants/reducer-types';\r\n\r\nconst initialState = {\r\n    auth: {\r\n        isAuth: false,\r\n        user: {},\r\n    },\r\n    changePassword: {},\r\n    recoverPassword: {},\r\n};\r\nconst AuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case Types.USER_AUTH:\r\n            return { ...state, auth: action.payload };\r\n        case Types.USER_SIGN_IN:\r\n            return { ...state, auth: action.payload };\r\n        case Types.USER_SIGN_OUT:\r\n            return { ...state, auth: action.payload };\r\n        case Types.USER_SIGN_UP:\r\n            return { ...state, auth: action.payload };\r\n        case Types.CHANGE_PASSWORD:\r\n            return { ...state, changePassword: action.payload };\r\n        case Types.RECOVER_PASSWORD:\r\n            return { ...state, recoverPassword: action.payload };\r\n        case Types.RESET_PASSWORD:\r\n            return { ...state, changePassword: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default AuthReducer;\r\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    allAreaOfInterest: {},\n};\nconst AreaOfInterestReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_AREA_OF_INTEREST:\n            return { ...state, allAreaOfInterest: action.payload };\n        default:\n            return state;\n    }\n};\nexport default AreaOfInterestReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getBasicInfo: {},\n    getInvolvement: {},\n    getPrivacy: {},\n    getPublicInfo: {},\n\n    setBasicInfo: {},\n    setInvolvement: {},\n    setPrivacy: {},\n\n    getAllIndividuals: {},\n};\nconst UserReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_INDIVIDUAL_BASIC_INFO:\n            return { ...state, getBasicInfo: action.payload };\n        case Types.GET_INDIVIDUAL_INVOLVEMENT:\n            return { ...state, getInvolvement: action.payload };\n        case Types.GET_INDIVIDUAL_PRIVACY:\n            return { ...state, getPrivacy: action.payload };\n        case Types.GET_ALL_INDIVIDUALS:\n            return { ...state, getAllIndividuals: action.payload };\n        case Types.GET_INDIVIDUAL_PUBLIC_INFO:\n            return { ...state, getPublicInfo: action.payload };\n\n        case Types.SET_INDIVIDUAL_BASIC_INFO:\n            return { ...state, setBasicInfo: action.payload };\n        case Types.SET_INDIVIDUAL_INVOLVEMENT:\n            return { ...state, setInvolvement: action.payload };\n        case Types.SET_INDIVIDUAL_PRIVACY:\n            return { ...state, setPrivacy: action.payload };\n\n        case Types.CLEAR_INDIVIDUAL_BASIC_INFO:\n            return { ...state, getBasicInfo: action.payload, setBasicInfo: action.payload };\n        case Types.CLEAR_INDIVIDUAL_INVOLVEMENT:\n            return { ...state, getInvolvement: action.payload, setInvolvement: action.payload };\n        case Types.CLEAR_INDIVIDUAL_PRIVACY:\n            return { ...state, getPrivacy: action.payload, setPrivacy: action.payload };\n        default:\n            return state;\n    }\n};\nexport default UserReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getBasicInfo: {},\n    getServiceInfo: {},\n    getInternalLink: {},\n    getPublicInfo: {},\n\n    setBasicInfo: {},\n    setServiceInfo: {},\n    setInternalLink: {},\n\n    getAllOrganizations: {},\n};\nconst UserReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ORGANIZATION_BASIC_INFO:\n            return { ...state, getBasicInfo: action.payload };\n        case Types.GET_ORGANIZATION_SERVICE_INFO:\n            return { ...state, getServiceInfo: action.payload };\n        case Types.GET_ORGANIZATION_INTERNAL_LINK:\n            return { ...state, getInternalLink: action.payload };\n        case Types.GET_ALL_ORGANIZATIONS:\n            return { ...state, getAllOrganizations: action.payload };\n        case Types.GET_ORGANIZATION_PUBLIC_INFO:\n            return { ...state, getPublicInfo: action.payload };\n\n        case Types.SET_ORGANIZATION_BASIC_INFO:\n            return { ...state, setBasicInfo: action.payload };\n        case Types.SET_ORGANIZATION_SERVICE_INFO:\n            return { ...state, setServiceInfo: action.payload };\n        case Types.SET_ORGANIZATION_INTERNAL_LINK:\n            return { ...state, setInternalLink: action.payload };\n\n        case Types.CLEAR_ORGANIZATION_BASIC_INFO:\n            return { ...state, getBasicInfo: action.payload, setBasicInfo: action.payload };\n        case Types.CLEAR_ORGANIZATION_SERVICE_INFO:\n            return { ...state, getServiceInfo: action.payload, setServiceInfo: action.payload };\n        case Types.CLEAR_ORGANIZATION_INTERNAL_LINK:\n            return { ...state, getInternalLink: action.payload, setInternalLink: action.payload };\n        default:\n            return state;\n    }\n};\nexport default UserReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getGlobalImpactAreas: {\n        success: false,\n    },\n    getImpactAreasByUser: { success: false },\n};\n\nconst ImpactAreaReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_GLOBAL_IMPACT_AREAS:\n            return { ...state, getGlobalImpactAreas: action.payload };\n        case Types.GET_ALL_IMPACT_AREAS_BY_USER:\n            return { ...state, getImpactAreasByUser: action.payload };\n        default:\n            return state;\n    }\n};\nexport default ImpactAreaReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getAllOrganizationTypes: {\n        success: false,\n    },\n};\n\nconst OrganizationTypeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_ORGANIZATION_TYPES:\n            return { ...state, getAllOrganizationTypes: action.payload };\n        default:\n            return state;\n    }\n};\nexport default OrganizationTypeReducer;\n","import * as Types from '../constants/reducer-types';\n\nconst initialState = {\n    getEvent: {},\n    setEvent: {},\n    getAllEvents: {},\n    deleteEvent: {},\n};\nconst EventReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_EVENT:\n            return { ...state, getEvent: action.payload };\n        case Types.SET_EVENT:\n            return { ...state, setEvent: action.payload };\n        case Types.GET_ALL_EVENTS:\n            return { ...state, getAllEvents: action.payload };\n        case Types.CLEAR_EVENT:\n            return { ...state, getEvent: action.payload, setEvent: action.payload };\n        case Types.DELETE_EVENT:\n            return { ...state, deleteEvent: action.payload };\n        default:\n            return { ...state };\n    }\n};\nexport default EventReducer;\n","import * as Types from '../constants/reducer-types';\n\nconst initialState = {\n    getProject: {},\n    setProject: {},\n    getAllProjects: {},\n    deleteProject: {},\n};\nconst ProjectReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_PROJECT:\n            return { ...state, getProject: action.payload };\n        case Types.SET_PROJECT:\n            return { ...state, setProject: action.payload };\n        case Types.GET_ALL_PROJECTS:\n            return { ...state, getAllProjects: action.payload };\n        case Types.CLEAR_PROJECT:\n            return { ...state, getProject: action.payload, setProject: action.payload };\n        case Types.DELETE_PROJECT:\n            return { ...state, deleteProject: action.payload };\n        default:\n            return { ...state };\n    }\n};\nexport default ProjectReducer;\n","import * as Types from '../constants/reducer-types';\n\nconst initialState = {\n    getPost: {},\n    setPost: {},\n    getAllPosts: {},\n    deletePost: {},\n};\nconst PostReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_POST:\n            return { ...state, getPost: action.payload };\n        case Types.SET_POST:\n            return { ...state, setPost: action.payload };\n        case Types.GET_ALL_POSTS:\n            return { ...state, getAllPosts: action.payload };\n        case Types.CLEAR_POST:\n            return { ...state, getPost: action.payload, setPost: action.payload };\n        case Types.DELETE_POST:\n            return { ...state, deletePost: action.payload };\n        default:\n            return { ...state };\n    }\n};\nexport default PostReducer;\n","import * as Types from '../constants/reducer-types';\n\nconst initialState = {\n    getVolunteering: {},\n    setVolunteering: {},\n    getAllVolunteerings: {},\n    deleteVolunteering: {},\n};\nconst VolunteeringReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_VOLUNTEERING:\n            return { ...state, getVolunteering: action.payload };\n        case Types.SET_VOLUNTEERING:\n            return { ...state, setVolunteering: action.payload };\n        case Types.GET_ALL_VOLUNTEERINGS:\n            return { ...state, getAllVolunteerings: action.payload };\n        case Types.CLEAR_VOLUNTEERING:\n            return { ...state, getVolunteering: action.payload, setVolunteering: action.payload };\n        case Types.DELETE_VOLUNTEERING:\n            return { ...state, deleteVolunteering: action.payload };\n        default:\n            return { ...state };\n    }\n};\nexport default VolunteeringReducer;\n","import * as Types from '../constants/reducer-types';\n\nconst initialState = {\n    followUser: {},\n    unfollowUser: {},\n    getAllFollowers: {},\n    getAllFollowings: {},\n    checkIfFollower: {},\n};\nconst FollowReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.FOLLOW_USER:\n            return { ...state, followUser: action.payload };\n        case Types.UNFOLLOW_USER:\n            return { ...state, unfollowUser: action.payload };\n        case Types.GET_ALL_FOLLOWERS:\n            return { ...state, getAllFollowers: action.payload };\n        case Types.GET_ALL_FOLLOWINGS:\n            return { ...state, getAllFollowings: action.payload, setEvent: action.payload };\n        case Types.CHECK_IF_FOLLOWER:\n            return { ...state, checkIfFollower: action.payload };\n        default:\n            return { ...state };\n    }\n};\nexport default FollowReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getGlobalSkills: {\n        success: false,\n    },\n    getSkillsByUser: { success: false },\n};\n\nconst SkillReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_GLOBAL_SKILLS:\n            return { ...state, getGlobalSkills: action.payload };\n        case Types.GET_ALL_SKILLS_BY_USER:\n            return { ...state, getSkillsByUser: action.payload };\n        default:\n            return state;\n    }\n};\nexport default SkillReducer;\n","import * as Types from '../constants/reducer-types';\nconst initialState = {\n    getGlobalLanguages: {\n        success: false,\n    },\n    getLanguagesByUser: { success: false },\n};\n\nconst LanguageReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Types.GET_ALL_GLOBAL_LANGUAGES:\n            return { ...state, getGlobalLanguages: action.payload };\n        case Types.GET_ALL_LANGUAGES_BY_USER:\n            return { ...state, getLanguagesByUser: action.payload };\n        default:\n            return state;\n    }\n};\nexport default LanguageReducer;\n","import { combineReducers } from 'redux';\r\nimport User from './userReducer';\r\nimport Auth from './authReducer';\r\nimport AreaOfInterest from './area-of-interest-reducer';\r\nimport Individual from './individualReducer';\r\nimport Organization from './organizationReducer';\r\nimport ImpactArea from './impact-area-reducer';\r\nimport OrganizationType from './organization-type-reducer';\r\nimport Event from './event-reducer';\r\nimport Project from './project-reducer';\r\nimport Post from './post-reducer';\r\nimport Volunteering from './volunteering-reducer';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport Follow from './follow-reducer';\r\nimport Skill from './skill-reducer';\r\nimport Language from './language-reducer';\r\nconst rootReducer = combineReducers({\r\n    form: formReducer,\r\n    Auth,\r\n    User,\r\n    AreaOfInterest,\r\n    Individual,\r\n    Organization,\r\n    ImpactArea,\r\n    OrganizationType,\r\n    Event,\r\n    Project,\r\n    Post,\r\n    Volunteering,\r\n    Follow,\r\n    Skill,\r\n    Language,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promiseMiddleware from \"redux-promise\";\nimport ReduxThunk from \"redux-thunk\";\nimport Routes from \"./route\";\nimport reducers from \"./reducers\";\nimport { NotificationContainer } from \"react-notifications\";\n\nconst createStoreWithMiddleware = applyMiddleware(\n\tpromiseMiddleware,\n\tReduxThunk\n)(createStore);\n\nReactDOM.render(\n\t<Provider store={createStoreWithMiddleware(reducers)}>\n\t\t<BrowserRouter>\n\t\t\t<NotificationContainer />\n\t\t\t<Routes />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}