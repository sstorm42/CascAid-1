[{"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js":"1","/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js":"2","/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js":"3","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js":"4","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js":"5","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js":"6","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js":"7","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js":"8","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js":"9","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js":"10","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js":"11","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js":"12","/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js":"13","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js":"14","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js":"15","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js":"16","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js":"17","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js":"18","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js":"19","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js":"20","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js":"21","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js":"22","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js":"23","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js":"24","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js":"25","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js":"26","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js":"27","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_1.js":"28","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_3.js":"29","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_4.js":"30","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_2.js":"31","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_5.js":"32","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_6.js":"33","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_7.js":"34","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js":"35","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js":"36","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js":"37","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js":"38","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js":"39","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js":"40","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js":"41","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js":"42","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js":"43","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/area-of-interest-da.js":"44","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js":"45","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js":"46","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js":"47","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js":"48","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-event.js":"49","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js":"50","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js":"51","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js":"52","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js":"53","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js":"54","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js":"55","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js":"56","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js":"57","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js":"58","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js":"59","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js":"60","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js":"61","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js":"62","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js":"63","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js":"64","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js":"65","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js":"66","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js":"67","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js":"68","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js":"69","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js":"70","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js":"71","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js":"72","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js":"73","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js":"74","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js":"75","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js":"76","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js":"77","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js":"78","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js":"79","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js":"80","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js":"81","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js":"82","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js":"83","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-type-action.js":"84","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-type-da.js":"85","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organization-type-reducer.js":"86","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/messages.js":"87","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-list.js":"88","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-details.js":"89","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/genders.js":"90","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/languages.js":"91","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-images.js":"92","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/manage-events.js":"93","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/create-event.js":"94","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/listing-events.js":"95","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/display-event.js":"96","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/manage-posts.js":"97","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-form.js":"98","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/event-reducer.js":"99","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/event-action.js":"100","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/event-da.js":"101","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-image-list.js":"102","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-list.js":"103","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-details.js":"104","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/details-render.js":"105","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/buttons-render.js":"106"},{"size":720,"mtime":1612160740398,"results":"107","hashOfConfig":"108"},{"size":305,"mtime":1612159937291,"results":"109","hashOfConfig":"110"},{"size":6580,"mtime":1613903930768,"results":"111","hashOfConfig":"108"},{"size":700,"mtime":1613829947831,"results":"112","hashOfConfig":"108"},{"size":791,"mtime":1613822340266,"results":"113","hashOfConfig":"108"},{"size":183,"mtime":1612161227578,"results":"114","hashOfConfig":"108"},{"size":2708,"mtime":1613380392192,"results":"115","hashOfConfig":"108"},{"size":3617,"mtime":1613711460041,"results":"116","hashOfConfig":"108"},{"size":1004,"mtime":1612162487807,"results":"117","hashOfConfig":"108"},{"size":4560,"mtime":1613391155230,"results":"118","hashOfConfig":"108"},{"size":907,"mtime":1612335997688,"results":"119","hashOfConfig":"108"},{"size":1037,"mtime":1612275636573,"results":"120","hashOfConfig":"108"},{"size":384,"mtime":1612364173406,"results":"121","hashOfConfig":"108"},{"size":2988,"mtime":1613886884859,"results":"122","hashOfConfig":"108"},{"size":7535,"mtime":1613821255155,"results":"123","hashOfConfig":"108"},{"size":3378,"mtime":1612973820035,"results":"124","hashOfConfig":"108"},{"size":2328,"mtime":1612845862351,"results":"125","hashOfConfig":"108"},{"size":1448,"mtime":1612241447302,"results":"126","hashOfConfig":"108"},{"size":3995,"mtime":1613036235120,"results":"127","hashOfConfig":"108"},{"size":4128,"mtime":1614072243235,"results":"128","hashOfConfig":"108"},{"size":234,"mtime":1612161648565,"results":"129","hashOfConfig":"108"},{"size":10394,"mtime":1613888583602,"results":"130","hashOfConfig":"108"},{"size":2789,"mtime":1613829666681,"results":"131","hashOfConfig":"108"},{"size":1553,"mtime":1612878897820,"results":"132","hashOfConfig":"110"},{"size":3151,"mtime":1613386389535,"results":"133","hashOfConfig":"108"},{"size":3974,"mtime":1614188225213,"results":"134","hashOfConfig":"108"},{"size":5148,"mtime":1612878632182,"results":"135","hashOfConfig":"110"},{"size":2839,"mtime":1612275397476,"results":"136","hashOfConfig":"110"},{"size":6755,"mtime":1612878548496,"results":"137","hashOfConfig":"110"},{"size":4627,"mtime":1612855538692,"results":"138","hashOfConfig":"110"},{"size":13155,"mtime":1612878525889,"results":"139","hashOfConfig":"110"},{"size":3588,"mtime":1612367151967,"results":"140","hashOfConfig":"110"},{"size":136,"mtime":1612173566517,"results":"141","hashOfConfig":"110"},{"size":136,"mtime":1612173570845,"results":"142","hashOfConfig":"110"},{"size":334,"mtime":1612199776690,"results":"143","hashOfConfig":"108"},{"size":259,"mtime":1612246275992,"results":"144","hashOfConfig":"108"},{"size":204,"mtime":1612794906131,"results":"145","hashOfConfig":"108"},{"size":2755,"mtime":1613386570898,"results":"146","hashOfConfig":"108"},{"size":348,"mtime":1613199592533,"results":"147","hashOfConfig":"108"},{"size":411,"mtime":1612162325570,"results":"148","hashOfConfig":"108"},{"size":296,"mtime":1613714767296,"results":"149","hashOfConfig":"108"},{"size":6366,"mtime":1613731618781,"results":"150","hashOfConfig":"108"},{"size":922,"mtime":1613706179484,"results":"151","hashOfConfig":"108"},{"size":396,"mtime":1612975983721,"results":"152","hashOfConfig":"108"},{"size":402,"mtime":1612795080494,"results":"153","hashOfConfig":"108"},{"size":509,"mtime":1613151325217,"results":"154","hashOfConfig":"110"},{"size":503,"mtime":1612850760242,"results":"155","hashOfConfig":"108"},{"size":3233,"mtime":1612872182313,"results":"156","hashOfConfig":"110"},{"size":2391,"mtime":1614152588836,"results":"157","hashOfConfig":"108"},{"size":6845,"mtime":1614152577436,"results":"158","hashOfConfig":"108"},{"size":3233,"mtime":1612872360624,"results":"159","hashOfConfig":"108"},{"size":2527,"mtime":1613386369306,"results":"160","hashOfConfig":"110"},{"size":3543,"mtime":1613713175509,"results":"161","hashOfConfig":"108"},{"size":5017,"mtime":1614057675739,"results":"162","hashOfConfig":"108"},{"size":3246,"mtime":1613713305867,"results":"163","hashOfConfig":"108"},{"size":0,"mtime":1612974584064,"results":"164","hashOfConfig":"110"},{"size":1319,"mtime":1613386446737,"results":"165","hashOfConfig":"108"},{"size":4809,"mtime":1614056777113,"results":"166","hashOfConfig":"108"},{"size":3942,"mtime":1613734811989,"results":"167","hashOfConfig":"108"},{"size":3148,"mtime":1613386436550,"results":"168","hashOfConfig":"108"},{"size":0,"mtime":1612974691472,"results":"169","hashOfConfig":"110"},{"size":1338,"mtime":1613149946997,"results":"170","hashOfConfig":"108"},{"size":10413,"mtime":1613714871371,"results":"171","hashOfConfig":"108"},{"size":805,"mtime":1613714995486,"results":"172","hashOfConfig":"108"},{"size":1898,"mtime":1613046954368,"results":"173","hashOfConfig":"108"},{"size":2117,"mtime":1613386399868,"results":"174","hashOfConfig":"108"},{"size":1718,"mtime":1613139377905,"results":"175","hashOfConfig":"108"},{"size":1795,"mtime":1613150190611,"results":"176","hashOfConfig":"108"},{"size":5394,"mtime":1613713126685,"results":"177","hashOfConfig":"108"},{"size":488,"mtime":1613480600581,"results":"178","hashOfConfig":"108"},{"size":670,"mtime":1613480711488,"results":"179","hashOfConfig":"108"},{"size":599,"mtime":1613480586726,"results":"180","hashOfConfig":"108"},{"size":4435,"mtime":1613713409469,"results":"181","hashOfConfig":"108"},{"size":3586,"mtime":1614178657131,"results":"182","hashOfConfig":"108"},{"size":332,"mtime":1613113138461,"results":"183","hashOfConfig":"108"},{"size":2541,"mtime":1614058408117,"results":"184","hashOfConfig":"108"},{"size":8304,"mtime":1613735330770,"results":"185","hashOfConfig":"108"},{"size":2823,"mtime":1614059426612,"results":"186","hashOfConfig":"108"},{"size":4030,"mtime":1613734862337,"results":"187","hashOfConfig":"108"},{"size":2348,"mtime":1613136650677,"results":"188","hashOfConfig":"108"},{"size":4485,"mtime":1613738244742,"results":"189","hashOfConfig":"108"},{"size":6719,"mtime":1613904091850,"results":"190","hashOfConfig":"108"},{"size":1979,"mtime":1614057903289,"results":"191","hashOfConfig":"108"},{"size":291,"mtime":1613480773486,"results":"192","hashOfConfig":"108"},{"size":385,"mtime":1613480844402,"results":"193","hashOfConfig":"108"},{"size":450,"mtime":1613482423474,"results":"194","hashOfConfig":"108"},{"size":591,"mtime":1613491415945,"results":"195","hashOfConfig":"108"},{"size":1407,"mtime":1613491369980,"results":"196","hashOfConfig":"108"},{"size":131,"mtime":1613490873554,"results":"197","hashOfConfig":"108"},{"size":615,"mtime":1613475065090,"results":"198","hashOfConfig":"108"},{"size":4192,"mtime":1614055942375,"results":"199","hashOfConfig":"108"},{"size":903,"mtime":1613822856085,"results":"200","hashOfConfig":"108"},{"size":1869,"mtime":1613887993404,"results":"201","hashOfConfig":"108"},{"size":6295,"mtime":1614088849748,"results":"202","hashOfConfig":"108"},{"size":376,"mtime":1613819188566,"results":"203","hashOfConfig":"108"},{"size":1178,"mtime":1614075232404,"results":"204","hashOfConfig":"108"},{"size":4015,"mtime":1613829053368,"results":"205","hashOfConfig":"108"},{"size":4030,"mtime":1613888646300,"results":"206","hashOfConfig":"108"},{"size":819,"mtime":1614074947538,"results":"207","hashOfConfig":"108"},{"size":964,"mtime":1613887783697,"results":"208","hashOfConfig":"108"},{"size":1291,"mtime":1613834158287,"results":"209","hashOfConfig":"108"},{"size":4446,"mtime":1613887183819,"results":"210","hashOfConfig":"108"},{"size":4393,"mtime":1614088381851,"results":"211","hashOfConfig":"108"},{"size":3660,"mtime":1614084876950,"results":"212","hashOfConfig":"108"},{"size":3792,"mtime":1614083564686,"results":"213","hashOfConfig":"108"},{"size":2411,"mtime":1614084773035,"results":"214","hashOfConfig":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},"1u8wb1x",{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14vz1v0",{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"217"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"217"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"317"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"217"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"328"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"217"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"217"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"217"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"217"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"217"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"217"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"217"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"328"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"217"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"217"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"217"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"217"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"217"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"217"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"217"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"217"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"217"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"217"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js",[],["454","455"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js",["456","457"],"import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport UserSignUp from './containers/user/sign-up';\nimport UserSignIn from './containers/user/sign-in';\nimport UserSignOut from './containers/user/sign-out';\nimport LayoutRoute from './route-layout';\nimport * as RoutePath from './constants/route-paths';\nimport Layout from './hoc/layout';\nimport DashboardLayout from './hoc/dashboard-layout';\nimport UserAuthCheck from './hoc/auth';\nimport HomePage from './containers/home/home';\nimport SearchOrganization from './containers/search/search-organization';\nimport SearchEvent from './containers/search/search-event';\n\nimport IndividualBasicInfo from './containers/individual/individual-basic-info';\nimport IndividualInvolvement from './containers/individual/individual-involvement';\nimport IndividualPrivacy from './containers/individual/individual-privacy';\n// import IndividualList from './containers/individual/individual-list';\nimport IndividualDetails from './containers/individual/individual-details';\n\nimport OrganizationBasicInfo from './containers/organization/organization-basic-info';\nimport OrganizationServiceInfo from './containers/organization/organization-service-info';\nimport OrganizationInternalLink from './containers/organization/organization-internal-link';\n// import OrganizationList from './containers/organization/organization-list';\nimport OrganizationDetails from './containers/organization/organization-details';\nimport Messages from './containers/message/messages';\n\n// POST\nimport ManagePosts from './containers/post/manage-posts';\n\n// EVENTS\nimport CreateEvent from './containers/event/create-event';\nimport DisplayEvent from './containers/event/display-event';\nimport ListingEvents from './containers/event/listing-events';\nimport ManageEvents from './containers/event/manage-events';\nconst allRoles = ['individual', 'organization', 'admin'];\nconst individualAndAdminRoles = ['individual', 'admin'];\nconst organizationAndAdminRoles = [, 'organization', 'admin'];\nconst adminRoles = ['admin'];\nconst Routes = () => {\n    return (\n        <Switch>\n            <LayoutRoute path={RoutePath.signUpPage} exact component={UserAuthCheck(UserSignUp, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signInPage} exact component={UserAuthCheck(UserSignIn, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signOutPage} exact component={UserSignOut} layout={Layout} />\n\n            <LayoutRoute path={RoutePath.individualCompleteBasicInfoPage} exact component={UserAuthCheck(IndividualBasicInfo, individualAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompleteInvolvementPage} exact component={UserAuthCheck(IndividualInvolvement, ['individual', 'admin'], true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompletePrivacyPage} exact component={UserAuthCheck(IndividualPrivacy, ['individual', 'admin'], true)} layout={Layout} />\n\n            <LayoutRoute path={RoutePath.individualEditBasicInfoPage} exact component={UserAuthCheck(IndividualBasicInfo, ['individual', 'admin'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.individualEditInvolvementPage} exact component={UserAuthCheck(IndividualInvolvement, ['individual', 'admin'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.individualEditPrivacyPage} exact component={UserAuthCheck(IndividualPrivacy, ['individual', 'admin'], true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.individualDetailsPage} exact component={UserAuthCheck(IndividualDetails, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.organizationCompleteBasicInfoPage} exact component={UserAuthCheck(OrganizationBasicInfo, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteServiceInfoPage} exact component={UserAuthCheck(OrganizationServiceInfo, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteInternalLinkPage} exact component={UserAuthCheck(OrganizationInternalLink, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationDetailsPage} exact component={UserAuthCheck(OrganizationDetails, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.organizationEditBasicInfoPage} exact component={UserAuthCheck(OrganizationBasicInfo, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationEditServiceInfoPage} exact component={UserAuthCheck(OrganizationServiceInfo, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationEditInternalLinkPage} exact component={UserAuthCheck(OrganizationInternalLink, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.homePage} exact component={UserAuthCheck(HomePage, allRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationSearchPage} exact component={UserAuthCheck(SearchOrganization, allRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventSearchPage} exact component={SearchEvent} layout={DashboardLayout} />\n\n            <LayoutRoute path=\"/messages\" exact component={Messages} layout={DashboardLayout} />\n            {/* POST */}\n            <LayoutRoute path={RoutePath.postManagePage} exact component={UserAuthCheck(ManagePosts, ['organization'], true)} layout={DashboardLayout} />\n\n            {/* EVENTS */}\n            <LayoutRoute path={RoutePath.eventCreatePage} exact component={UserAuthCheck(CreateEvent, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventEditPage + ':eventId'} exact component={UserAuthCheck(CreateEvent, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventListByOrganizationPage} exact component={UserAuthCheck(ManageEvents, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventListPage} exact component={UserAuthCheck(ListingEvents, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventDetailsPage + ':eventId'} exact component={UserAuthCheck(DisplayEvent, allRoles, true)} layout={DashboardLayout} />\n        </Switch>\n    );\n};\nexport default Routes;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js",["458","459"],"import React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\n\r\nexport const InputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-4\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-8\">\r\n                <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputRenderWithLargeLabel = ({ input, label, type, placeholder, min, max, unit, step, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-6\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-6\">\r\n                {type === 'number' ? (\r\n                    <div className=\"input-group\">\r\n                        <input {...input} placeholder={placeholder} type={type} className=\"form-control\" min={min} max={max} unit={unit} step={step} />\r\n                        {unit && (\r\n                            <div className=\"input-group-append\">\r\n                                <span className=\"input-group-text\">{unit}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                )}\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const TextRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <textarea {...input} placeholder={placeholder} rows=\"5\" className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const CheckBoxRender = ({ input, label, type, placeholder, col1, col2, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <input {...input} type={type} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputNumberRender = ({ input, label, type, placeholder, step, min, max, unit, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className=\"col-sm-3 col-form-label\">{label}</label>\r\n            <div className=\"col-sm-8\">\r\n                <div className=\"input-group\">\r\n                    <input style={{ float: 'left' }} {...input} placeholder={placeholder} step={step} min={min} max={max} type={type} className=\"form-control\" />\r\n                    <span className=\"InputNumberUnitSpan\">{unit}</span>\r\n                </div>\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SaInputRender = ({ input, label, type, placeholder, meta: { asyncValidating, touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div style={{ marginBottom: '10px' }} className={className}>\r\n            <label className=\"col-sm-4 signUpLabel\">{label}</label>\r\n\r\n            <div className={asyncValidating ? 'async-validating col-sm-8' : 'col-sm-8'}>\r\n                <input {...input} placeholder={placeholder} type={type} className={'form-control ' + input.name} />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SelectRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2}>\r\n                <select {...input} className=\"form-control\">\r\n                    {children}\r\n                </select>\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const HalfInputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <>\r\n            <input {...input} placeholder={placeholder} type={type} className=\"form-control half-text-input\" />\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </>\r\n    );\r\n};\r\n\r\n// export const SwitchRender = ({ input, label, type, id, checked, placeholder, meta: { touched, error, warning } }) => {\r\n//     const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n//     return (\r\n//         <div className={className}>\r\n//             <div className=\"col-sm-9\">\r\n//                 <label className=\"form-label\">{label}</label>\r\n//             </div>\r\n\r\n//             <div className=\"col-sm-3 custom-control custom-switch\">\r\n//                 {/* <input type=\"checkbox\" className=\"custom-control-input\" id={id} checked={checked} /> */}\r\n//                 <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\"></input>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\nexport const SwitchRender = ({ input, label, type, placeholder, id, defaultChecked, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-6\" htmlFor={id}>\r\n                {label}\r\n            </label>\r\n            <div className=\"col-sm-3 custom-control custom-switch\" style={{ marginLeft: 20 }}>\r\n                <input {...input} type=\"checkbox\" className=\"custom-control-input\" id={id} defaultChecked={input.value} />\r\n                <label className=\"custom-control-label\" htmlFor={id}>\r\n                    {/* Toggle this switch element */}\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DatePickerRender = ({ input, label, minDate, selectedDate, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-4\">{label}</label>\r\n            <div className=\"col-sm-8 date-picker-div\" style={{ zIndex: zIndex }}>\r\n                <DatePicker className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CreatableMultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <CreatableSelect {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} placeholder={placeholder} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const MultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <Select {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const DateTimePickerRender = ({ input, label, minDate, selectedDate, col1, col2, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'form-label col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2} style={{ zIndex: zIndex }}>\r\n                <DatePicker showTimeSelect className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy h:mm aa\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js",["460","461","462"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport Step1 from '../../components/profile_step/step_1';\nimport Step2 from '../../components/profile_step/step_2';\nimport Step3 from '../../components/profile_step/step_3';\nimport Step4 from '../../components/profile_step/step_4';\nimport Step5 from '../../components/profile_step/step_5';\nimport Step6 from '../../components/profile_step/step_6';\nimport Step7 from '../../components/profile_step/step_7';\nimport { getUserInformation, setUserInformation, getAllAreaOfInterests } from '../../actions';\nimport { NotificationManager } from 'react-notifications';\nconst CompleteProfile = (props) => {\n    const [stepId, setStepId] = useState(2);\n    const [loading, setLoading] = useState(false);\n    const [image, setImage] = useState();\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        props.dispatch(getAllAreaOfInterests());\n        if (user && user._id) {\n            props.dispatch(getUserInformation(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setUserResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setStepId(props.setUserResponse.stepCompleted + 1);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setUserResponse]);\n    const changeStep = () => {\n        if (props.user && props.user.stepCompleted) {\n            setStepId(props.user.stepCompleted + 1);\n        }\n    };\n    const onSubmit = (values) => {\n        setLoading(true);\n        console.log('🚀 ~ file: complete-profile.js ~ line 44 ~ onSubmit ~ values', values);\n        if (stepId === 2) {\n            if (values.basicInfo) values.basicInfo.photo = image;\n            else\n                values.basicInfo = {\n                    photo: image,\n                };\n        }\n        props.dispatch(setUserInformation(props.auth.user._id, stepId, props.user, values));\n        setLoading(false);\n    };\n    useEffect(() => {\n        changeStep();\n    }, [props.user]);\n    const handleBackButton = (stepId) => {\n        if (stepId > 2) {\n            setStepId(stepId - 1);\n        }\n    };\n    const handleSkipButton = (stepId) => {\n        if (stepId < 5) {\n            setStepId(stepId + 1);\n        }\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setImage(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const steps = [\n        <Step1 />,\n        <Step1 />,\n        <Step2\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            image={image}\n            handlePictureUpload={handlePictureUpload}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step3\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            areaOfInterests={props.areaOfInterest.success ? props.areaOfInterest.areaOfInterests : []}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step4\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step5\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n        />,\n        <Step6 />,\n        <Step7 />,\n    ];\n    if (loading) return <LoadingAnim />;\n    else return steps[stepId];\n};\nconst mapStateToProps = (state) => {\n    const user = state.User.getUser.user;\n    const individual = state.User.getUser.individual;\n    const organization = state.User.getUser.organization;\n    let initialValues = {};\n    if (user && user.userType) {\n        if (user.userType === 'individual') initialValues = individual;\n        else if (user.userType === 'organization') initialValues = organization;\n    }\n    const setUserResponse = state.User.setUser;\n\n    return {\n        user,\n        individual,\n        organization,\n        initialValues,\n        setUserResponse,\n        areaOfInterest: state.AreaOfInterest.allAreaOfInterest,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CompleteProfile',\n        enableReinitialize: true,\n    })(CompleteProfile),\n);\n",["463","464"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_1.js",[],["465","466"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_3.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_4.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_2.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_5.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_6.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_7.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/area-of-interest-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js",[],["467","468"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-event.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js",["469"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport OrganizationListView from '../../components/organization/organization-list-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllOrganizationsByFilter } from '../../actions/organization-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\n// import { allOrganizationTypes } from '../../constants/organization-types';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport Select from 'react-select';\nimport Pagination from 'react-js-pagination';\n\nconst SearchOrganization = (props) => {\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [filter, setFilter] = useState({\n        impactArea: [],\n        organizationType: [],\n    });\n\n    const changeFilter = (key, value) => {\n        let filter_ = filter;\n        filter[key] = value;\n        setFilter(filter_);\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllOrganizationsByFilter(filter));\n        setLoading(false);\n        setActivePage(1);\n    };\n    const gotoOrganizationDetails = (userId) => {\n        props.history.push(`/organization/details/${userId}`);\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getAllGlobalImpactAreas());\n            props.dispatch(getAllOrganizationTypes());\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col lg={4}>\n                        <Nav variant=\"pills\" activeKey=\"organization\">\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"organization\" href=\"/search/organization\">\n                                    Organization\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"event\" href=\"/search/event\">\n                                    Events\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <hr />\n                        <label>Impact Area</label>\n                        <Select onChange={(value) => changeFilter('impactArea', value)} isMulti={true} options={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []} />\n                        <br />\n                        <label>Organization Type</label>\n                        <Select\n                            onChange={(value) => changeFilter('organizationType', value)}\n                            isMulti={true}\n                            options={props.getOrganizationTypeResponse?.success ? props.getOrganizationTypeResponse.organizationTypes : []}\n                        />\n                        {/* <Select onChange={(value) => changeFilter('organizationType', value)} isMulti={true} options={allOrganizationTypes} /> */}\n                        <br />\n                        <br />\n                        <Button\n                            onClick={() => {\n                                handleOnApplyFilter();\n                            }}\n                        >\n                            Search\n                        </Button>\n                        <div style={{ height: 25 }} />\n                    </Col>\n                    <Col lg={8}>\n                        <Nav\n                            variant=\"pills\"\n                            activeKey={viewType}\n                            onSelect={(eventKey) => {\n                                setViewType(eventKey);\n                            }}\n                            size=\"sm\"\n                        >\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"list\" title=\"list\">\n                                    List\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"map\" title=\"map\">\n                                    Map\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <hr />\n                        {viewType === 'list' && (\n                            <>\n                                <Pagination\n                                    itemClass=\"page-item\"\n                                    linkClass=\"page-link\"\n                                    activePage={activePage}\n                                    itemsCountPerPage={30}\n                                    totalItemsCount={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations.length : 0}\n                                    pageRangeDisplayed={5}\n                                    onChange={(page) => {\n                                        setActivePage(page);\n                                    }}\n                                />\n                                <OrganizationListView\n                                    allOrganizations={\n                                        props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations.slice((activePage - 1) * 30, activePage * 30 - 1) : []\n                                    }\n                                    gotoOrganizationDetails={gotoOrganizationDetails}\n                                />\n                            </>\n                        )}\n                        {viewType === 'map' && (\n                            <>\n                                <Image src=\"http://172.104.35.84/default-images/sample-g-map.png\" width=\"100%\" height=\"auto\" thumbnail />\n                            </>\n                        )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getOrganizationTypeResponse = state.OrganizationType.getAllOrganizationTypes;\n    const getAllOrganizationsResponse = state.Organization.getAllOrganizations;\n    return {\n        getImpactAreaResponse,\n        getAllOrganizationsResponse,\n        getOrganizationTypeResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchOrganization);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js",["470"],"import React from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport { Form, FormControl } from 'react-bootstrap';\nfunction App() {\n    const movieItems = [\n        {\n            id: 0,\n            title: 'Titanic',\n            description: 'A movie about love',\n        },\n        {\n            id: 1,\n            title: 'Dead Poets Society',\n            description: 'A movie about poetry and the meaning of life',\n        },\n        {\n            id: 2,\n            title: 'Terminator 2',\n            description: 'A robot from the future is sent back in time',\n        },\n        {\n            id: 3,\n            title: 'Alien 2',\n            description: 'Ripley is back for a new adventure',\n        },\n    ];\n\n    const handleOnSearch = (string, results) => {\n        // onSearch will have as the first callback parameter\n        // the string searched and for the second the results.\n        console.log(string, results);\n    };\n\n    const handleOnSelect = (item) => {\n        // the item selected\n        console.log(item);\n    };\n\n    const handleOnFocus = () => {\n        console.log('Focused');\n    };\n\n    return (\n        <div style={{ minWidth: 100, zIndex: 5000 }}>\n            <Form inline>\n                {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" /> */}\n                {/* <Button variant=\"outline-light\">Search</Button> */}\n\n                <ReactSearchAutocomplete\n                    className=\"form-control mr-sm-2\"\n                    items={movieItems}\n                    fuseOptions={{ keys: ['title', 'description'] }} // Search on both fields\n                    resultStringKeyName=\"title\" // String to display in the results\n                    onSearch={handleOnSearch}\n                    onSelect={handleOnSelect}\n                    onFocus={handleOnFocus}\n                    showIcon={false}\n                    styling={{\n                        height: '34px',\n                        border: '1px solid darkgreen',\n                        borderRadius: '4px',\n                        backgroundColor: 'white',\n                        boxShadow: 'none',\n                        hoverBackgroundColor: 'lightgreen',\n                        color: 'darkgreen',\n                        fontSize: '12px',\n                        fontFamily: 'Courier',\n                        iconColor: 'green',\n                        lineColor: 'lightgreen',\n                        placeholderColor: 'darkgreen',\n                        zIndex: 5000,\n                    }}\n                />\n            </Form>\n        </div>\n    );\n}\n\nexport default App;\n",["471","472"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js",["473","474","475","476"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInvolvement, setInvolvement, clearInvolvement } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualInvolvementForm from '../../components/individual/individual-involvement-form';\nimport { individualCompleteBasicInfoPage, individualCompletePrivacyPage } from '../../constants/route-paths';\n\nconst Involvement = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInvolvement(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInvolvementResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompletePrivacyPage);\n                props.dispatch(clearInvolvement());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, involvement } = props.getInvolvementResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInvolvementResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInvolvementResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInvolvement(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(individualCompletePrivacyPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualInvolvementForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInvolvementResponse = state.Individual.getInvolvement;\n    const setInvolvementResponse = state.Individual.setInvolvement;\n    let initialValues = {};\n\n    if (getInvolvementResponse.success) {\n        initialValues = getInvolvementResponse.involvement;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInvolvementResponse,\n        setInvolvementResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Involvement',\n        enableReinitialize: true,\n    })(Involvement),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js",["477","478","479"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/individual-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualBasicInfoForm from '../../components/individual/individual-basic-info-form';\nimport { individualCompleteInvolvementPage } from '../../constants/route-paths';\nimport { getLanguagesByValues } from '../../constants/languages';\nimport { getRacesByValues } from '../../constants/races';\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: '',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getBasicInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompleteInvolvementPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            races: values.races && values.races.length > 0 ? values.races.map((race) => race.value) : [],\n            languages: values.languages && values.languages.length > 0 ? values.languages.map((language) => language.value) : [],\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualBasicInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getBasicInfoResponse = state.Individual.getBasicInfo;\n    const setBasicInfoResponse = state.Individual.setBasicInfo;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues) {\n            if (initialValues.languages && initialValues.languages.length > 0 && typeof initialValues.languages[0] === 'string')\n                initialValues.languages = getLanguagesByValues(initialValues.languages);\n            if (initialValues.races && initialValues.races.length > 0 && typeof initialValues.races[0] === 'string') initialValues.races = getRacesByValues(initialValues.races);\n            if (initialValues.address && !initialValues.address.country) {\n                initialValues.address.country = 'US';\n            } else if (!initialValues.address) {\n                initialValues.address = {\n                    country: 'US',\n                };\n            }\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js",["480","481","482","483"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPrivacy, setPrivacy, clearPrivacy } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualPrivacyForm from '../../components/individual/individual-privacy-form';\nimport { individualCompleteInvolvementPage, homePage } from '../../constants/route-paths';\nconst Privacy = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getPrivacy(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setPrivacyResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.dispatch(clearPrivacy());\n                props.history.push(homePage);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, privacy } = props.getPrivacyResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getPrivacyResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setPrivacyResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setPrivacy(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteInvolvementPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualPrivacyForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getPrivacyResponse = state.Individual.getPrivacy;\n    const setPrivacyResponse = state.Individual.setPrivacy;\n    let initialValues = {};\n\n    if (getPrivacyResponse.success) {\n        initialValues = getPrivacyResponse.privacy;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPrivacyResponse,\n        setPrivacyResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Privacy',\n        enableReinitialize: true,\n    })(Privacy),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js",["484","485"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/individual-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/individual/individual-details-view';\nconst IndividualDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const individualUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(individualUserId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView individual={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.individual : {}} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Individual.getPublicInfo;\n\n    return {\n        getPublicInfoResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(IndividualDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js",["486","487","488"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/organization-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationBasicInfoForm from '../../components/organization/organization-basic-info-form';\nimport { organizationCompleteServiceInfoPage } from '../../constants/route-paths';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: 'US',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getBasicInfo(user._id));\n        }\n        props.dispatch(getAllOrganizationTypes());\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(organizationCompleteServiceInfoPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address && basicInfo.address.country) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            organizationTypes: values.organizationTypes && values.organizationTypes.length > 0 ? values.organizationTypes.map((type) => type._id) : [],\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationBasicInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n                allOrganizationTypes={props.getAllOrganizationTypesResponse.success ? props.getAllOrganizationTypesResponse.organizationTypes : []}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getBasicInfoResponse = state.Organization.getBasicInfo;\n    const setBasicInfoResponse = state.Organization.setBasicInfo;\n    const getAllOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues.address && !initialValues.address.country) {\n            initialValues.address.country = 'US';\n        } else if (!initialValues.address) {\n            initialValues.address = {\n                country: 'US',\n            };\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getAllOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js",["489","490","491","492","493"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getServiceInfo, setServiceInfo, clearServiceInfo } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationServiceInfoForm from '../../components/organization/organization-service-info-form';\nimport { homePage, organizationCompleteBasicInfoPage, organizationCompleteInternalLinkPage } from '../../constants/route-paths';\n\nconst ServiceInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllOrganizationTypes());\n            props.dispatch(getServiceInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setServiceInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(homePage);\n                props.dispatch(clearServiceInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, serviceInfo } = props.getServiceInfoResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getServiceInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setServiceInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setServiceInfo(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(homePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationServiceInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allOrganizationTypes={props.getOrganizationTypesResponse.success ? props.getOrganizationTypesResponse.organizationTypes : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getServiceInfoResponse = state.Organization.getServiceInfo;\n    const setServiceInfoResponse = state.Organization.setServiceInfo;\n    const getOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n\n    if (getServiceInfoResponse.success) {\n        initialValues = getServiceInfoResponse.serviceInfo;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getServiceInfoResponse,\n        setServiceInfoResponse,\n        getOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'ServiceInfo',\n        enableReinitialize: true,\n    })(ServiceInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js",["494","495","496","497"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInternalLink, setInternalLink, clearInternalLink } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationInternalLinkForm from '../../components/organization/organization-internal-link-form';\nimport { organizationCompleteServiceInfoPage, homePage } from '../../constants/route-paths';\nconst InternalLink = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInternalLink(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInternalLinkResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(clearInternalLink());\n            props.history.push(homePage);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, internalLink } = props.getInternalLinkResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInternalLinkResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInternalLinkResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInternalLink(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteServiceInfoPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationInternalLinkForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInternalLinkResponse = state.Organization.getInternalLink;\n    const setInternalLinkResponse = state.Organization.setInternalLink;\n    let initialValues = {};\n\n    if (getInternalLinkResponse.success) {\n        initialValues = getInternalLinkResponse.internalLink;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInternalLinkResponse,\n        setInternalLinkResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'InternalLink',\n        enableReinitialize: true,\n    })(InternalLink),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js",["498","499"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/organization-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/organization/organization-details-view';\nconst OrganizationDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const organizationUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(organizationUserId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView organization={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.organization : {}} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Organization.getPublicInfo;\n    return {\n        getPublicInfoResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(OrganizationDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js",["500","501","502"],"import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\n\nimport { Container, Row, Col, ProgressBar, Button, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { organizationHeaders } from '../../constants/step-headers';\n\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const allOrganizationTypes = props.allOrganizationTypes;\n    const editMode = props.editMode;\n    console.log('PROPS', props);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country ? props.stateAndCountry.country : 'US');\n    const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        {editMode ? (\n                            <h4>Basic Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {organizationHeaders[2].stepNo} of 5</p>\n                                <ProgressBar now={organizationHeaders[2].percent} />\n                                <br />\n                                <h4>{organizationHeaders[2].header}</h4>\n\n                                <div style={{ height: 20 }} />\n                            </div>\n                        )}\n                        <Row>\n                            <Col>\n                                <Field name=\"name\" type=\"text\" component={InputRender} label=\"Name\" placeholder=\"Your organization name...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" placeholder=\"000-0000-000\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"ein\" type=\"text\" component={InputRender} label=\"EIN\" placeholder=\"ABCD...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"website\" type=\"text\" component={InputRender} label=\"Website URL\" placeholder=\"www.abc.xyz\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"contactEmail\" type=\"text\" component={InputRender} label=\"Contact Email\" placeholder=\"help@abc.com\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"mission\" type=\"text\" component={TextRender} label=\"Mission\" placeholder=\"Your organization mission...\" col1={2} col2={10} />\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Your organization mission...\" col1={2} col2={10} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"organizationTypes\" component={MultiSelectRender} label=\"Organization Type\" col1={3} col2={9} options={allOrganizationTypes} zIndex={2000} />\n                            </Col>\n                        </Row>\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js",["503","504"],"import React from 'react';\nimport { Field } from 'redux-form';\nimport { SwitchRender, SelectRender, InputRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { organizationHeaders } from '../../constants/step-headers';\nconst InternalLinkForm = (props) => {\n    const submitting = props.submitting;\n\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n\n                        <div>\n                            <p>Step {organizationHeaders[4].stepNo} of 5</p>\n                            <ProgressBar now={organizationHeaders[4].percent} />\n                            <br />\n                            <h4>{organizationHeaders[4].header}</h4>\n                        </div>\n\n                        <Field name=\"events\" type=\"text\" component={InputRender} label=\"Events link\" />\n                        <Field name=\"rss\" type=\"text\" component={InputRender} label=\"RSS link\" />\n                        <Field name=\"blog\" type=\"text\" component={InputRender} label=\"Blogs link\" />\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default InternalLinkForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js",["505"],"import React from 'react';\nimport { Container, Image, Row, Col, Badge, ListGroup } from 'react-bootstrap';\nimport moment from 'moment';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport Collapsible from 'react-collapsible';\nconst DetailsView = (props) => {\n    const organization = props.organization;\n    const infoRender = (label, value) => {\n        if (value) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value.split('\\n').map((para, i) => (\n                            <p key={i} className=\"justify-text\">\n                                {para}\n                            </p>\n                        ))}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n\n    const keywordsRender = (label, keywords) => {\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {keywords.map((key, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {key}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n    const tagsRender = (label, tags) => {\n        if (tags && tags.length > 0) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {tags.map((tag, i) => {\n                            if (tag)\n                                return (\n                                    <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                        {tag.label}\n                                    </Badge>\n                                );\n                            else return <></>;\n                        })}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n    if (organization._id) {\n        const basicInfo = organization.basicInfo;\n        const serviceInfo = organization.serviceInfo;\n        const impactAreas = serviceInfo.impactAreas;\n        console.log(basicInfo);\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"right-align\" sm=\"2\">\n                        <Image className=\"left-image\" src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultOrganizationProfilePicture} width=\"100%\" thumbnail />\n                        <Collapsible trigger=\"MENU\" className=\"special-btn\">\n                            <ListGroup>\n                                <ListGroup.Item\n                                    className=\"list-button\"\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                >\n                                    About\n                                </ListGroup.Item>\n                                <ListGroup.Item\n                                    className=\"list-button\"\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                >\n                                    Events\n                                </ListGroup.Item>\n                                <ListGroup.Item\n                                    className=\"list-button\"\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                >\n                                    Projects\n                                </ListGroup.Item>\n                                <ListGroup.Item\n                                    className=\"list-button\"\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                >\n                                    Message\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Collapsible>\n                    </Col>\n                    <Col sm=\"9\" className=\"left-border\">\n                        <h3>{basicInfo.name}</h3>\n                        {tagsRender('Organization Type', basicInfo.organizationTypes)}\n                        {infoRender('Contact Email', basicInfo.contactEmail)}\n                        {infoRender('Website', basicInfo.website)}\n\n                        {infoRender('Phone', basicInfo.phone)}\n                        {infoRender('EIN', basicInfo.ein)}\n                        {infoRender('Address', addressMaker(basicInfo.address))}\n                        <hr />\n                        {infoRender('Mission', basicInfo.mission)}\n                        <hr />\n                        {infoRender('Description', basicInfo.description)}\n                        <div style={{ height: 25 }} />\n                        <hr />\n                        <div style={{ height: 25 }} />\n                        {keywordsRender('Service Areas', serviceInfo.serviceAreas)}\n                        {tagsRender('Impact Area', impactAreas)}\n                        {keywordsRender('Keywords', serviceInfo.keywords)}\n                        <div style={{ height: 25 }} />\n                    </Col>\n                </Row>\n                <div style={{ height: 25 }} />\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-type-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-type-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organization-type-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/messages.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-list.js",["506"],"import React from 'react';\n\nconst ThreadList = (props) => {\n    const list = [\n        {\n            id: 1,\n            name: 'Mst Sadia Sultana',\n            profilePicture: 'http://localhost:3001/uploaded-images/person1.jpg',\n        },\n        {\n            id: 2,\n            name: 'Abdullah al noman',\n            profilePicture: 'http://localhost:3001/uploaded-images/person2.jpg',\n        },\n        {\n            id: 3,\n            name: 'Abu moin',\n            profilePicture: 'http://localhost:3001/uploaded-images/person3.jpg',\n        },\n        {\n            id: 4,\n            name: 'Israt Sharera',\n            profilePicture: 'http://localhost:3001/uploaded-images/person4.jpg',\n        },\n        {\n            id: 5,\n            name: 'Sharmin Akter',\n            profilePicture: 'http://localhost:3001/uploaded-images/person5.jpg',\n        },\n        {\n            id: 6,\n            name: 'Krittika Singh',\n            profilePicture: 'http://localhost:3001/uploaded-images/person6.jpg',\n        },\n        {\n            id: 7,\n            name: 'Debashish Haldar',\n            profilePicture: 'http://localhost:3001/uploaded-images/person7.jpg',\n        },\n        {\n            id: 8,\n            name: 'Subrato Sarker',\n            profilePicture: 'http://localhost:3001/uploaded-images/person8.jpg',\n        },\n    ];\n    return <h4>All Messages</h4>;\n};\n\nexport default ThreadList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-details.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/genders.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/languages.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-images.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/manage-events.js",["507"],"import React, { useEffect, useState } from 'react';\nimport EventList from '../../components/event/event-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllEventsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageEvents = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllEventsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToEventEdit = (eventId) => {\n        props.history.push(RoutePaths.eventEditPage + eventId);\n    };\n    const handleGoToEventDetails = (eventId) => {\n        props.history.push(RoutePaths.eventDetailsPage + eventId);\n    };\n    const handleGoToEventCreate = () => {\n        props.history.push(RoutePaths.eventCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <EventList\n                allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.events : []}\n                handleGoToEventEdit={handleGoToEventEdit}\n                handleGoToEventDetails={handleGoToEventDetails}\n                handleGoToEventCreate={handleGoToEventCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllEventsResponse = state.Event.getAllEvents;\n    console.log('🚀 ~ file: manage-events.js ~ line 21 ~ mapStateToProps ~ getAllEventsResponse', getAllEventsResponse);\n\n    return {\n        getAllEventsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageEvents);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/create-event.js",["508","509","510","511","512"],"import React, { useEffect, useState } from 'react';\nimport EventForm from '../../components/event/event-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getEventById, createEvent, updateEventById, clearEvent } from '../../actions/event-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateEvent = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getEventResponse.success) {\n            console.log(props.getEventResponse.event);\n            setImages(props.getEventResponse.event.images);\n        }\n    }, [props.getEventResponse]);\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageEvents = () => {\n        props.history.push(RoutePaths.eventListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let event = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n            impactAreas: values.impactAreas.map((area) => area._id),\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-event.js ~ line 36 ~ onSubmit ~ event', event);\n        if (editMode) {\n            props.dispatch(updateEventById(props.match.params.eventId, event));\n        } else {\n            props.dispatch(createEvent(event));\n        }\n        setLoading(false);\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (eventId) => {\n            setLoading(true);\n            props.dispatch(getEventById(eventId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.eventId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearEvent());\n        };\n    }, []);\n    useEffect(() => {\n        const { success, message } = props.setEventResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearEvent());\n            if (editMode) props.history.push(RoutePaths.eventDetailsPage + props.match.params.eventId);\n            else {\n                props.history.push(RoutePaths.eventDetailsPage + props.setEventResponse.event._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setEventResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <EventForm\n                handleGoToManageEvents={handleGoToManageEvents}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n\n    const getEventResponse = state.Event.getEvent;\n    const setEventResponse = state.Event.setEvent;\n    let initialValues = {};\n    if (getEventResponse.success) {\n        initialValues = getEventResponse.event;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getEventResponse,\n        setEventResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateEvent',\n        enableReinitialize: true,\n    })(CreateEvent),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/listing-events.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/display-event.js",["513","514"],"import React, { useState, useEffect } from 'react';\nimport EventDetails from '../../components/event/event-details';\nimport { connect } from 'react-redux';\nimport { getEventById } from '../../actions/event-action';\nconst DisplayEvent = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getEventById(eventId));\n            setLoading(false);\n        };\n        const eventId = props.match.params.eventId;\n        if (eventId) getInitialInfo(eventId);\n        else {\n        }\n    }, [props.auth]);\n    return <EventDetails event={props.getEventResponse.success ? props.getEventResponse.event : {}} organization={props.getEventResponse.success ? props.getEventResponse.organization : {}} />;\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getEventResponse = state.Event.getEvent ? state.Event.getEvent : {};\n    console.log('🚀 ~ file: display-event.js ~ line 23 ~ mapStateToProps ~ getEventResponse', getEventResponse);\n\n    return { getEventResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayEvent);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/manage-posts.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-form.js",["515"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport EventImageList from './event-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\nconst EventForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Event</h4> : <h4>Create Event</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageEvents();\n                                    }}\n                                >\n                                    Manage Events\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Event Title\" placeholder=\"Your event title...\" />\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Event Description\" placeholder=\"Your event description...\" col1={4} col2={8} />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={MultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Event start time\" col1={4} col2={8} zIndex={3001} />\n\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"Event end time\" col1={4} col2={8} zIndex={2000} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <EventImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default EventForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/event-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/event-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/event-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-image-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-details.js",["516","517"],"import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nconst DisplayEvent = (props) => {\n    const event = props.event;\n    const organization = props.organization;\n    if (event && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{event.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <h6>{name}</h6>\n                                <small>Created At {moment(event.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('', event.impactAreas)}</Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(event.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(event.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', event.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(event.images)}</Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Event is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayEvent;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/details-render.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/buttons-render.js",[],{"ruleId":"518","replacedBy":"519"},{"ruleId":"520","replacedBy":"521"},{"ruleId":"522","severity":1,"message":"523","line":38,"column":35,"nodeType":"524","messageId":"525","endLine":38,"endColumn":62},{"ruleId":"526","severity":1,"message":"527","line":39,"column":7,"nodeType":"528","messageId":"529","endLine":39,"endColumn":17},{"ruleId":"526","severity":1,"message":"530","line":4,"column":20,"nodeType":"528","messageId":"529","endLine":4,"endColumn":30},{"ruleId":"526","severity":1,"message":"531","line":4,"column":32,"nodeType":"528","messageId":"529","endLine":4,"endColumn":43},{"ruleId":"532","severity":1,"message":"533","line":34,"column":8,"nodeType":"524","endLine":34,"endColumn":20,"suggestions":"534"},{"ruleId":"532","severity":1,"message":"535","line":37,"column":8,"nodeType":"524","endLine":37,"endColumn":31,"suggestions":"536"},{"ruleId":"532","severity":1,"message":"537","line":58,"column":8,"nodeType":"524","endLine":58,"endColumn":20,"suggestions":"538"},{"ruleId":"518","replacedBy":"539"},{"ruleId":"520","replacedBy":"540"},{"ruleId":"518","replacedBy":"541"},{"ruleId":"520","replacedBy":"542"},{"ruleId":"518","replacedBy":"543"},{"ruleId":"520","replacedBy":"544"},{"ruleId":"532","severity":1,"message":"545","line":44,"column":8,"nodeType":"524","endLine":44,"endColumn":10,"suggestions":"546"},{"ruleId":"526","severity":1,"message":"531","line":3,"column":16,"nodeType":"528","messageId":"529","endLine":3,"endColumn":27},{"ruleId":"518","replacedBy":"547"},{"ruleId":"520","replacedBy":"548"},{"ruleId":"526","severity":1,"message":"549","line":33,"column":26,"nodeType":"528","messageId":"529","endLine":33,"endColumn":37},{"ruleId":"532","severity":1,"message":"533","line":41,"column":8,"nodeType":"524","endLine":41,"endColumn":20,"suggestions":"550"},{"ruleId":"532","severity":1,"message":"551","line":44,"column":8,"nodeType":"524","endLine":44,"endColumn":38,"suggestions":"552"},{"ruleId":"532","severity":1,"message":"535","line":47,"column":8,"nodeType":"524","endLine":47,"endColumn":38,"suggestions":"553"},{"ruleId":"532","severity":1,"message":"533","line":51,"column":8,"nodeType":"524","endLine":51,"endColumn":20,"suggestions":"554"},{"ruleId":"532","severity":1,"message":"551","line":54,"column":8,"nodeType":"524","endLine":54,"endColumn":36,"suggestions":"555"},{"ruleId":"532","severity":1,"message":"535","line":57,"column":8,"nodeType":"524","endLine":57,"endColumn":36,"suggestions":"556"},{"ruleId":"526","severity":1,"message":"557","line":32,"column":26,"nodeType":"528","messageId":"529","endLine":32,"endColumn":33},{"ruleId":"532","severity":1,"message":"533","line":40,"column":8,"nodeType":"524","endLine":40,"endColumn":20,"suggestions":"558"},{"ruleId":"532","severity":1,"message":"551","line":43,"column":8,"nodeType":"524","endLine":43,"endColumn":34,"suggestions":"559"},{"ruleId":"532","severity":1,"message":"535","line":46,"column":8,"nodeType":"524","endLine":46,"endColumn":34,"suggestions":"560"},{"ruleId":"526","severity":1,"message":"561","line":8,"column":21,"nodeType":"528","messageId":"529","endLine":8,"endColumn":31},{"ruleId":"532","severity":1,"message":"533","line":15,"column":8,"nodeType":"524","endLine":15,"endColumn":47,"suggestions":"562"},{"ruleId":"532","severity":1,"message":"533","line":51,"column":8,"nodeType":"524","endLine":51,"endColumn":20,"suggestions":"563"},{"ruleId":"532","severity":1,"message":"551","line":54,"column":8,"nodeType":"524","endLine":54,"endColumn":36,"suggestions":"564"},{"ruleId":"532","severity":1,"message":"535","line":57,"column":8,"nodeType":"524","endLine":57,"endColumn":36,"suggestions":"565"},{"ruleId":"526","severity":1,"message":"566","line":10,"column":55,"nodeType":"528","messageId":"529","endLine":10,"endColumn":91},{"ruleId":"526","severity":1,"message":"567","line":34,"column":26,"nodeType":"528","messageId":"529","endLine":34,"endColumn":37},{"ruleId":"532","severity":1,"message":"533","line":42,"column":8,"nodeType":"524","endLine":42,"endColumn":20,"suggestions":"568"},{"ruleId":"532","severity":1,"message":"551","line":45,"column":8,"nodeType":"524","endLine":45,"endColumn":38,"suggestions":"569"},{"ruleId":"532","severity":1,"message":"535","line":48,"column":8,"nodeType":"524","endLine":48,"endColumn":38,"suggestions":"570"},{"ruleId":"526","severity":1,"message":"571","line":29,"column":26,"nodeType":"528","messageId":"529","endLine":29,"endColumn":38},{"ruleId":"532","severity":1,"message":"533","line":35,"column":8,"nodeType":"524","endLine":35,"endColumn":20,"suggestions":"572"},{"ruleId":"532","severity":1,"message":"551","line":38,"column":8,"nodeType":"524","endLine":38,"endColumn":39,"suggestions":"573"},{"ruleId":"532","severity":1,"message":"535","line":41,"column":8,"nodeType":"524","endLine":41,"endColumn":39,"suggestions":"574"},{"ruleId":"526","severity":1,"message":"561","line":8,"column":21,"nodeType":"528","messageId":"529","endLine":8,"endColumn":31},{"ruleId":"532","severity":1,"message":"533","line":15,"column":8,"nodeType":"524","endLine":15,"endColumn":47,"suggestions":"575"},{"ruleId":"526","severity":1,"message":"576","line":3,"column":37,"nodeType":"528","messageId":"529","endLine":3,"endColumn":53},{"ruleId":"526","severity":1,"message":"577","line":15,"column":12,"nodeType":"528","messageId":"529","endLine":15,"endColumn":25},{"ruleId":"526","severity":1,"message":"578","line":15,"column":27,"nodeType":"528","messageId":"529","endLine":15,"endColumn":43},{"ruleId":"526","severity":1,"message":"579","line":3,"column":10,"nodeType":"528","messageId":"529","endLine":3,"endColumn":22},{"ruleId":"526","severity":1,"message":"580","line":3,"column":24,"nodeType":"528","messageId":"529","endLine":3,"endColumn":36},{"ruleId":"526","severity":1,"message":"581","line":3,"column":8,"nodeType":"528","messageId":"529","endLine":3,"endColumn":14},{"ruleId":"526","severity":1,"message":"582","line":4,"column":11,"nodeType":"528","messageId":"529","endLine":4,"endColumn":15},{"ruleId":"532","severity":1,"message":"545","line":18,"column":8,"nodeType":"524","endLine":18,"endColumn":20,"suggestions":"583"},{"ruleId":"526","severity":1,"message":"584","line":16,"column":12,"nodeType":"528","messageId":"529","endLine":16,"endColumn":18},{"ruleId":"526","severity":1,"message":"585","line":16,"column":20,"nodeType":"528","messageId":"529","endLine":16,"endColumn":29},{"ruleId":"532","severity":1,"message":"545","line":111,"column":8,"nodeType":"524","endLine":111,"endColumn":20,"suggestions":"586"},{"ruleId":"532","severity":1,"message":"545","line":117,"column":8,"nodeType":"524","endLine":117,"endColumn":10,"suggestions":"587"},{"ruleId":"532","severity":1,"message":"588","line":129,"column":8,"nodeType":"524","endLine":129,"endColumn":32,"suggestions":"589"},{"ruleId":"526","severity":1,"message":"590","line":6,"column":12,"nodeType":"528","messageId":"529","endLine":6,"endColumn":19},{"ruleId":"532","severity":1,"message":"545","line":17,"column":8,"nodeType":"524","endLine":17,"endColumn":20,"suggestions":"591"},{"ruleId":"526","severity":1,"message":"580","line":5,"column":10,"nodeType":"528","messageId":"529","endLine":5,"endColumn":22},{"ruleId":"526","severity":1,"message":"592","line":2,"column":31,"nodeType":"528","messageId":"529","endLine":2,"endColumn":36},{"ruleId":"526","severity":1,"message":"593","line":2,"column":38,"nodeType":"528","messageId":"529","endLine":2,"endColumn":44},"no-native-reassign",["594"],"no-negated-in-lhs",["595"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'adminRoles' is assigned a value but never used.","Identifier","unusedVar","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInitialInfo'. Either include it or remove the dependency array.",["596"],"React Hook useEffect has a missing dependency: 'handleSetResponse'. Either include it or remove the dependency array.",["597"],"React Hook useEffect has a missing dependency: 'changeStep'. Either include it or remove the dependency array.",["598"],["594"],["595"],["594"],["595"],["594"],["595"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["599"],["594"],["595"],"'involvement' is assigned a value but never used.",["600"],"React Hook useEffect has a missing dependency: 'handleGetResponse'. Either include it or remove the dependency array.",["601"],["602"],["603"],["604"],["605"],"'privacy' is assigned a value but never used.",["606"],["607"],["608"],"'setLoading' is assigned a value but never used.",["609"],["610"],["611"],["612"],"'organizationCompleteInternalLinkPage' is defined but never used.","'serviceInfo' is assigned a value but never used.",["613"],["614"],["615"],"'internalLink' is assigned a value but never used.",["616"],["617"],["618"],["619"],"'DatePickerRender' is defined but never used.","'selectedState' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'SwitchRender' is defined but never used.","'SelectRender' is defined but never used.","'moment' is defined but never used.","'list' is assigned a value but never used.",["620"],"'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.",["621"],["622"],"React Hook useEffect has missing dependencies: 'editMode' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["623"],"'loading' is assigned a value but never used.",["624"],"'Image' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"625","fix":"633"},{"desc":"634","fix":"635"},{"desc":"636","fix":"637"},{"desc":"625","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"625","fix":"643"},{"desc":"644","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},{"desc":"625","fix":"650"},{"desc":"639","fix":"651"},{"desc":"641","fix":"652"},{"desc":"625","fix":"653"},{"desc":"654","fix":"655"},{"desc":"656","fix":"657"},{"desc":"625","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"648","fix":"663"},{"desc":"664","fix":"665"},{"desc":"664","fix":"666"},{"desc":"631","fix":"667"},{"desc":"668","fix":"669"},{"desc":"664","fix":"670"},"Update the dependencies array to be: [getInitialInfo, props.auth]",{"range":"671","text":"672"},"Update the dependencies array to be: [handleSetResponse, props.setUserResponse]",{"range":"673","text":"674"},"Update the dependencies array to be: [changeStep, props.user]",{"range":"675","text":"676"},"Update the dependencies array to be: [props]",{"range":"677","text":"678"},{"range":"679","text":"672"},"Update the dependencies array to be: [handleGetResponse, props.getInvolvementResponse]",{"range":"680","text":"681"},"Update the dependencies array to be: [handleSetResponse, props.setInvolvementResponse]",{"range":"682","text":"683"},{"range":"684","text":"672"},"Update the dependencies array to be: [handleGetResponse, props.getBasicInfoResponse]",{"range":"685","text":"686"},"Update the dependencies array to be: [handleSetResponse, props.setBasicInfoResponse]",{"range":"687","text":"688"},{"range":"689","text":"672"},"Update the dependencies array to be: [handleGetResponse, props.getPrivacyResponse]",{"range":"690","text":"691"},"Update the dependencies array to be: [handleSetResponse, props.setPrivacyResponse]",{"range":"692","text":"693"},"Update the dependencies array to be: [getInitialInfo, props.auth, props.match.params.userId]",{"range":"694","text":"695"},{"range":"696","text":"672"},{"range":"697","text":"686"},{"range":"698","text":"688"},{"range":"699","text":"672"},"Update the dependencies array to be: [handleGetResponse, props.getServiceInfoResponse]",{"range":"700","text":"701"},"Update the dependencies array to be: [handleSetResponse, props.setServiceInfoResponse]",{"range":"702","text":"703"},{"range":"704","text":"672"},"Update the dependencies array to be: [handleGetResponse, props.getInternalLinkResponse]",{"range":"705","text":"706"},"Update the dependencies array to be: [handleSetResponse, props.setInternalLinkResponse]",{"range":"707","text":"708"},{"range":"709","text":"695"},"Update the dependencies array to be: [props, props.auth]",{"range":"710","text":"711"},{"range":"712","text":"711"},{"range":"713","text":"678"},"Update the dependencies array to be: [editMode, props, props.setEventResponse]",{"range":"714","text":"715"},{"range":"716","text":"711"},[1558,1570],"[getInitialInfo, props.auth]",[1631,1654],"[handleSetResponse, props.setUserResponse]",[2355,2367],"[changeStep, props.user]",[1749,1751],"[props]",[1775,1787],[1848,1878],"[handleGetResponse, props.getInvolvementResponse]",[1939,1969],"[handleSetResponse, props.setInvolvementResponse]",[2197,2209],[2270,2298],"[handleGetResponse, props.getBasicInfoResponse]",[2359,2387],"[handleSetResponse, props.setBasicInfoResponse]",[1690,1702],[1763,1789],"[handleGetResponse, props.getPrivacyResponse]",[1850,1876],"[handleSetResponse, props.setPrivacyResponse]",[665,704],"[getInitialInfo, props.auth, props.match.params.userId]",[2249,2261],[2322,2350],[2411,2439],[1918,1930],[1991,2021],"[handleGetResponse, props.getServiceInfoResponse]",[2082,2112],"[handleSetResponse, props.setServiceInfoResponse]",[1545,1557],[1618,1649],"[handleGetResponse, props.getInternalLinkResponse]",[1710,1741],"[handleSetResponse, props.setInternalLinkResponse]",[677,716],[758,770],"[props, props.auth]",[4174,4186],[4321,4323],[4890,4914],"[editMode, props, props.setEventResponse]",[614,626]]