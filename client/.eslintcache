[{"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js":"1","/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js":"2","/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js":"3","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js":"4","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js":"5","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js":"6","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js":"7","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js":"8","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js":"9","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js":"10","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js":"11","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js":"12","/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js":"13","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js":"14","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js":"15","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js":"16","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js":"17","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js":"18","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js":"19","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js":"20","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js":"21","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js":"22","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js":"23","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js":"24","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js":"25","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js":"26","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js":"27","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_1.js":"28","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_3.js":"29","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_4.js":"30","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_2.js":"31","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_5.js":"32","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_6.js":"33","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_7.js":"34","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js":"35","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js":"36","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js":"37","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js":"38","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js":"39","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js":"40","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js":"41","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js":"42","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js":"43","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/area-of-interest-da.js":"44","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js":"45","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js":"46","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js":"47","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js":"48","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-event.js":"49","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js":"50","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js":"51","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js":"52","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js":"53","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js":"54","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js":"55","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js":"56","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js":"57","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js":"58","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js":"59","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js":"60","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js":"61","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js":"62","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js":"63","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js":"64","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js":"65","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js":"66","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js":"67","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js":"68","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js":"69","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js":"70","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js":"71","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js":"72","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js":"73","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js":"74","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js":"75","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js":"76","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js":"77","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js":"78","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js":"79","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js":"80","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js":"81","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js":"82","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js":"83"},{"size":720,"mtime":1612160740398,"results":"84","hashOfConfig":"85"},{"size":305,"mtime":1612159937291,"results":"86","hashOfConfig":"85"},{"size":3805,"mtime":1613149869793,"results":"87","hashOfConfig":"85"},{"size":566,"mtime":1613061797222,"results":"88","hashOfConfig":"85"},{"size":752,"mtime":1612362390495,"results":"89","hashOfConfig":"85"},{"size":183,"mtime":1612161227578,"results":"90","hashOfConfig":"85"},{"size":2718,"mtime":1613201884129,"results":"91","hashOfConfig":"85"},{"size":3156,"mtime":1612161227703,"results":"92","hashOfConfig":"85"},{"size":1004,"mtime":1612162487807,"results":"93","hashOfConfig":"85"},{"size":4694,"mtime":1613113153306,"results":"94","hashOfConfig":"85"},{"size":907,"mtime":1612335997688,"results":"95","hashOfConfig":"85"},{"size":1037,"mtime":1612275636573,"results":"96","hashOfConfig":"85"},{"size":384,"mtime":1612364173406,"results":"97","hashOfConfig":"85"},{"size":2656,"mtime":1613150051484,"results":"98","hashOfConfig":"85"},{"size":4791,"mtime":1613126188456,"results":"99","hashOfConfig":"85"},{"size":3378,"mtime":1612973820035,"results":"100","hashOfConfig":"85"},{"size":2328,"mtime":1612845862351,"results":"101","hashOfConfig":"85"},{"size":1448,"mtime":1612241447302,"results":"102","hashOfConfig":"85"},{"size":3995,"mtime":1613036235120,"results":"103","hashOfConfig":"85"},{"size":4118,"mtime":1612758605506,"results":"104","hashOfConfig":"85"},{"size":234,"mtime":1612161648565,"results":"105","hashOfConfig":"85"},{"size":9051,"mtime":1613064981446,"results":"106","hashOfConfig":"85"},{"size":2472,"mtime":1613061637759,"results":"107","hashOfConfig":"85"},{"size":1553,"mtime":1612878897820,"results":"108","hashOfConfig":"85"},{"size":3349,"mtime":1612853729903,"results":"109","hashOfConfig":"85"},{"size":3359,"mtime":1613138735893,"results":"110","hashOfConfig":"85"},{"size":5148,"mtime":1612878632182,"results":"111","hashOfConfig":"85"},{"size":2839,"mtime":1612275397476,"results":"112","hashOfConfig":"85"},{"size":6755,"mtime":1612878548496,"results":"113","hashOfConfig":"85"},{"size":4627,"mtime":1612855538692,"results":"114","hashOfConfig":"85"},{"size":13155,"mtime":1612878525889,"results":"115","hashOfConfig":"85"},{"size":3588,"mtime":1612367151967,"results":"116","hashOfConfig":"85"},{"size":136,"mtime":1612173566517,"results":"117","hashOfConfig":"85"},{"size":136,"mtime":1612173570845,"results":"118","hashOfConfig":"85"},{"size":334,"mtime":1612199776690,"results":"119","hashOfConfig":"85"},{"size":259,"mtime":1612246275992,"results":"120","hashOfConfig":"85"},{"size":204,"mtime":1612794906131,"results":"121","hashOfConfig":"85"},{"size":2796,"mtime":1612973952915,"results":"122","hashOfConfig":"85"},{"size":348,"mtime":1613199592533,"results":"123","hashOfConfig":"85"},{"size":411,"mtime":1612162325570,"results":"124","hashOfConfig":"85"},{"size":247,"mtime":1612760877266,"results":"125","hashOfConfig":"85"},{"size":6366,"mtime":1613147712601,"results":"126","hashOfConfig":"85"},{"size":805,"mtime":1612778073302,"results":"127","hashOfConfig":"85"},{"size":396,"mtime":1612975983721,"results":"128","hashOfConfig":"85"},{"size":402,"mtime":1612795080494,"results":"129","hashOfConfig":"85"},{"size":509,"mtime":1613151325217,"results":"130","hashOfConfig":"85"},{"size":503,"mtime":1612850760242,"results":"131","hashOfConfig":"85"},{"size":3233,"mtime":1612872182313,"results":"132","hashOfConfig":"85"},{"size":2392,"mtime":1612875710201,"results":"133","hashOfConfig":"85"},{"size":5152,"mtime":1613218718131,"results":"134","hashOfConfig":"85"},{"size":3233,"mtime":1612872360624,"results":"135","hashOfConfig":"85"},{"size":2642,"mtime":1613070381878,"results":"136","hashOfConfig":"85"},{"size":3479,"mtime":1613132692778,"results":"137","hashOfConfig":"85"},{"size":3637,"mtime":1613219100499,"results":"138","hashOfConfig":"85"},{"size":3177,"mtime":1613068979129,"results":"139","hashOfConfig":"85"},{"size":0,"mtime":1612974584064,"results":"140","hashOfConfig":"85"},{"size":1448,"mtime":1613150029264,"results":"141","hashOfConfig":"85"},{"size":3679,"mtime":1613219088427,"results":"142","hashOfConfig":"85"},{"size":3519,"mtime":1613133167676,"results":"143","hashOfConfig":"85"},{"size":3331,"mtime":1613136414996,"results":"144","hashOfConfig":"85"},{"size":0,"mtime":1612974691472,"results":"145","hashOfConfig":"85"},{"size":1338,"mtime":1613149946997,"results":"146","hashOfConfig":"85"},{"size":10440,"mtime":1613219279038,"results":"147","hashOfConfig":"85"},{"size":833,"mtime":1613136591985,"results":"148","hashOfConfig":"85"},{"size":1898,"mtime":1613046954368,"results":"149","hashOfConfig":"85"},{"size":2195,"mtime":1613139436155,"results":"150","hashOfConfig":"85"},{"size":1718,"mtime":1613139377905,"results":"151","hashOfConfig":"85"},{"size":1795,"mtime":1613150190611,"results":"152","hashOfConfig":"85"},{"size":4891,"mtime":1613068169715,"results":"153","hashOfConfig":"85"},{"size":474,"mtime":1613061692059,"results":"154","hashOfConfig":"85"},{"size":754,"mtime":1613062103450,"results":"155","hashOfConfig":"85"},{"size":592,"mtime":1613062359763,"results":"156","hashOfConfig":"85"},{"size":4092,"mtime":1613068890094,"results":"157","hashOfConfig":"85"},{"size":3033,"mtime":1613149198478,"results":"158","hashOfConfig":"85"},{"size":332,"mtime":1613113138461,"results":"159","hashOfConfig":"85"},{"size":2355,"mtime":1613212102859,"results":"160","hashOfConfig":"85"},{"size":9241,"mtime":1613136608011,"results":"161","hashOfConfig":"85"},{"size":2533,"mtime":1613217874852,"results":"162","hashOfConfig":"85"},{"size":3606,"mtime":1613136183092,"results":"163","hashOfConfig":"85"},{"size":2348,"mtime":1613136650677,"results":"164","hashOfConfig":"85"},{"size":3603,"mtime":1613149441106,"results":"165","hashOfConfig":"85"},{"size":4901,"mtime":1613151493066,"results":"166","hashOfConfig":"85"},{"size":1247,"mtime":1613218663913,"results":"167","hashOfConfig":"85"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"14vz1v0",{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"170"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"170"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"170"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"170"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"170"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"170"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"170"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"170"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"170"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"170"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"170"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"170"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"170"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"170"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"170"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"170"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"170"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"170"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"170"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"170"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"170"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js",[],["361","362"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js",["363","364"],"import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport UserSignUp from './containers/user/sign-up';\nimport UserSignIn from './containers/user/sign-in';\nimport UserSignOut from './containers/user/sign-out';\nimport LayoutRoute from './route-layout';\nimport * as RoutePath from './constants/route-paths';\nimport Layout from './hoc/layout';\nimport DashboardLayout from './hoc/dashboard-layout';\nimport UserAuthCheck from './hoc/auth';\nimport HomePage from './containers/home/home';\nimport SearchOrganization from './containers/search/search-organization';\nimport SearchEvent from './containers/search/search-event';\n\nimport IndividualBasicInfo from './containers/individual/individual-basic-info';\nimport IndividualInvolvement from './containers/individual/individual-involvement';\nimport IndividualPrivacy from './containers/individual/individual-privacy';\nimport IndividualList from './containers/individual/individual-list';\nimport IndividualDetails from './containers/individual/individual-details';\n\nimport OrganizationBasicInfo from './containers/organization/organization-basic-info';\nimport OrganizationServiceInfo from './containers/organization/organization-service-info';\nimport OrganizationInternalLink from './containers/organization/organization-internal-link';\nimport OrganizationList from './containers/organization/organization-list';\nimport OrganizationDetails from './containers/organization/organization-details';\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <LayoutRoute path={RoutePath.signUpPage} exact component={UserAuthCheck(UserSignUp, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signInPage} exact component={UserAuthCheck(UserSignIn, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signOutPage} exact component={UserSignOut} layout={Layout} />\n\n            <LayoutRoute path={RoutePath.individualCompleteBasicInfoPage} exact component={UserAuthCheck(IndividualBasicInfo, ['individual', 'admin', true])} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompleteInvolvementPage} exact component={UserAuthCheck(IndividualInvolvement, ['individual', 'admin', true])} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompletePrivacyPage} exact component={UserAuthCheck(IndividualPrivacy, ['individual', 'admin', true])} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualDetailsPage} exact component={UserAuthCheck(IndividualDetails, ['individual', 'organization', 'admin'], true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.organizationCompleteBasicInfoPage} exact component={UserAuthCheck(OrganizationBasicInfo, ['organization', 'admin', true])} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteServiceInfoPage} exact component={UserAuthCheck(OrganizationServiceInfo, ['organization', 'admin', true])} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteInternalLinkPage} exact component={UserAuthCheck(OrganizationInternalLink, ['organization', 'admin', true])} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationDetailsPage} exact component={UserAuthCheck(OrganizationDetails, ['individual', 'organization', 'admin'], true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.homePage} exact component={UserAuthCheck(HomePage, ['individual', 'organization', 'admin'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationSearchPage} exact component={SearchOrganization} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventSearchPage} exact component={SearchEvent} layout={DashboardLayout} />\n        </Switch>\n    );\n};\nexport default Routes;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js",["365","366"],"import React from 'react';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBox from './search-box';\r\nimport ReactAutoSuggest from './react-autosuggest-lib';\r\nconst Header = (props) => {\r\n    const isAuth = props.isAuth || false;\r\n\r\n    if (isAuth && props.user._id) {\r\n        // const username = props.user.name;\r\n        // const userId = props.user._id;\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                {/* <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <Navbar.Brand href=\"/\">CascAid</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <SearchBox />\r\n                            <Link to={RoutePath.signOutPage} className=\"nav-link\">\r\n                                Sign out\r\n                            </Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar> */}\r\n                <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/\">CascAid</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <ReactAutoSuggest />\r\n                            <Link to={RoutePath.signOutPage} className=\"nav-link\">\r\n                                Sign out\r\n                            </Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"header\">\r\n                <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <Navbar.Brand href=\"/\">CascAid</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <Link to={RoutePath.signInPage} className=\"nav-link\">\r\n                                Sign in\r\n                            </Link>\r\n                            <Link to={RoutePath.signUpPage} className=\"nav-link\">\r\n                                Sign up\r\n                            </Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default Header;\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js",["367","368","369","370","371","372"],"import React, { Component } from 'react';\r\nimport Header from '../components/layout/header';\r\nimport Footer from '../components/layout/footer';\r\nimport ResponsiveMenu from 'react-responsive-navbar';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport * as RoutePaths from '../constants/route-paths';\r\nimport { connect } from 'react-redux';\r\nimport SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FaHome, FaSearch, FaConnectdevelop, FaCalendarAlt, FaUserCog, FaEnvelope } from 'react-icons/fa';\r\nimport { BsFilePost } from 'react-icons/bs';\r\nimport { IoCreateOutline } from 'react-icons/io5';\r\nclass DashboardLayout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <NotificationContainer /> */}\r\n                <Header isAuth={this.props.auth.isAuth || false} user={this.props.auth.user || {}} />\r\n                <div className=\"full-page-div\">\r\n                    <div>\r\n                        <SideNav\r\n                            onSelect={(selected) => {\r\n                                this.props.history.push(selected);\r\n                            }}\r\n                        >\r\n                            <SideNav.Toggle />\r\n                            <SideNav.Nav defaultSelected=\"home\">\r\n                                <NavItem eventKey=\"/\">\r\n                                    <NavIcon>\r\n                                        <FaHome size={24} />\r\n                                    </NavIcon>\r\n                                    <NavText>Home</NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"/search/organization\">\r\n                                    <NavIcon>\r\n                                        <FaSearch size={24} />\r\n                                    </NavIcon>\r\n                                    <NavText>Search</NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"/\">\r\n                                    <NavIcon>\r\n                                        <FaConnectdevelop size={24} />\r\n                                    </NavIcon>\r\n                                    <NavText>Community</NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"/\">\r\n                                    <NavIcon>\r\n                                        <FaCalendarAlt size={24} />\r\n                                    </NavIcon>\r\n                                    <NavText>Calender</NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"/\">\r\n                                    <NavIcon>\r\n                                        <BsFilePost size={24} />\r\n                                    </NavIcon>\r\n                                    <NavText>Post</NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"/\">\r\n                                    <NavIcon>\r\n                                        <FaEnvelope size={24} />\r\n                                    </NavIcon>\r\n                                    <NavText>Mails</NavText>\r\n                                    <NavItem eventKey=\"charts/linechart\">\r\n                                        <NavText>Compose</NavText>\r\n                                    </NavItem>\r\n                                    <NavItem eventKey=\"charts/barchart\">\r\n                                        <NavText>Inbox</NavText>\r\n                                    </NavItem>\r\n                                    <NavItem eventKey=\"charts/barchart\">\r\n                                        <NavText>Sent</NavText>\r\n                                    </NavItem>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"/\">\r\n                                    <NavIcon>\r\n                                        <FaUserCog size={24} />\r\n                                    </NavIcon>\r\n                                    <NavText>Profile Settings</NavText>\r\n                                </NavItem>\r\n                            </SideNav.Nav>\r\n                        </SideNav>\r\n                        <main className=\"main-div\">{this.props.children}</main>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(withRouter(DashboardLayout));\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js",[],["373","374"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js",["375","376","377"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport Step1 from '../../components/profile_step/step_1';\nimport Step2 from '../../components/profile_step/step_2';\nimport Step3 from '../../components/profile_step/step_3';\nimport Step4 from '../../components/profile_step/step_4';\nimport Step5 from '../../components/profile_step/step_5';\nimport Step6 from '../../components/profile_step/step_6';\nimport Step7 from '../../components/profile_step/step_7';\nimport { getUserInformation, setUserInformation, getAllAreaOfInterests } from '../../actions';\nimport { NotificationManager } from 'react-notifications';\nconst CompleteProfile = (props) => {\n    const [stepId, setStepId] = useState(2);\n    const [loading, setLoading] = useState(false);\n    const [image, setImage] = useState();\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        props.dispatch(getAllAreaOfInterests());\n        if (user && user._id) {\n            props.dispatch(getUserInformation(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setUserResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setStepId(props.setUserResponse.stepCompleted + 1);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setUserResponse]);\n    const changeStep = () => {\n        if (props.user && props.user.stepCompleted) {\n            setStepId(props.user.stepCompleted + 1);\n        }\n    };\n    const onSubmit = (values) => {\n        setLoading(true);\n        console.log('🚀 ~ file: complete-profile.js ~ line 44 ~ onSubmit ~ values', values);\n        if (stepId === 2) {\n            if (values.basicInfo) values.basicInfo.photo = image;\n            else\n                values.basicInfo = {\n                    photo: image,\n                };\n        }\n        props.dispatch(setUserInformation(props.auth.user._id, stepId, props.user, values));\n        setLoading(false);\n    };\n    useEffect(() => {\n        changeStep();\n    }, [props.user]);\n    const handleBackButton = (stepId) => {\n        if (stepId > 2) {\n            setStepId(stepId - 1);\n        }\n    };\n    const handleSkipButton = (stepId) => {\n        if (stepId < 5) {\n            setStepId(stepId + 1);\n        }\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setImage(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const steps = [\n        <Step1 />,\n        <Step1 />,\n        <Step2\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            image={image}\n            handlePictureUpload={handlePictureUpload}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step3\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            areaOfInterests={props.areaOfInterest.success ? props.areaOfInterest.areaOfInterests : []}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step4\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step5\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n        />,\n        <Step6 />,\n        <Step7 />,\n    ];\n    if (loading) return <LoadingAnim />;\n    else return steps[stepId];\n};\nconst mapStateToProps = (state) => {\n    const user = state.User.getUser.user;\n    const individual = state.User.getUser.individual;\n    const organization = state.User.getUser.organization;\n    let initialValues = {};\n    if (user && user.userType) {\n        if (user.userType === 'individual') initialValues = individual;\n        else if (user.userType === 'organization') initialValues = organization;\n    }\n    const setUserResponse = state.User.setUser;\n\n    return {\n        user,\n        individual,\n        organization,\n        initialValues,\n        setUserResponse,\n        areaOfInterest: state.AreaOfInterest.allAreaOfInterest,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CompleteProfile',\n        enableReinitialize: true,\n    })(CompleteProfile),\n);\n",["378","379"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_1.js",[],["380","381"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_3.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_4.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_2.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_5.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_6.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_7.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js",["382"],"import React, { Component } from 'react';\r\nimport { userAuth } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport LoadingAnim from '../components/form_template/loading-anim';\r\nimport * as RoutePath from '../constants/route-paths';\r\nimport { NotificationManager } from 'react-notifications';\r\nexport default function (ComposedClass, allowedUserTypes, allowAuthenticatedUsers = true) {\r\n    class AuthenticationCheck extends Component {\r\n        state = {\r\n            loading: true,\r\n            authDone: false,\r\n        };\r\n\r\n        componentDidMount() {\r\n            this.props.dispatch(userAuth());\r\n        }\r\n        componentDidUpdate(prevProps, prevState) {\r\n            if (prevState.authDone === false) {\r\n                if (this.props.auth.isAuth && allowAuthenticatedUsers) {\r\n                    // Check for authorization\r\n                    if (allowedUserTypes.includes(this.props.auth.user.userType)) {\r\n                        // Authentication and authorization done.\r\n                        this.setState({\r\n                            loading: false,\r\n                            authDone: true,\r\n                        });\r\n                    } else {\r\n                        // Go to warning (unauthorized) page\r\n                        this.props.history.push(RoutePath.unAuthorizedPage);\r\n                    }\r\n                } else if (this.props.auth.isAuth && !allowAuthenticatedUsers) {\r\n                    // Already logged in, so go to homepage. can not go there until logout\r\n                    this.props.history.push(RoutePath.homePage);\r\n                    NotificationManager.success('Your are already logged in', 'Success');\r\n                } else if (!this.props.auth.isAuth && allowAuthenticatedUsers) {\r\n                    // Not logged in, so go to sign in page.\r\n                    // NotificationManager.warning(\r\n                    // \t'You have to log in first',\r\n                    // \t'Not allowed'\r\n                    // );\r\n                    this.props.history.push(RoutePath.signInPage);\r\n                } else if (!this.props.auth.isAuth && !allowAuthenticatedUsers) {\r\n                    // Go to the composed class. example: sign in page.\r\n                    this.setState({\r\n                        loading: false,\r\n                        authDone: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        render() {\r\n            if (this.state.loading) {\r\n                return <LoadingAnim />;\r\n            } else return <ComposedClass {...this.props} auth={this.props.auth} />;\r\n        }\r\n    }\r\n    function mapStateToProps(state) {\r\n        return {\r\n            auth: state.Auth.auth,\r\n        };\r\n    }\r\n    return connect(mapStateToProps)(AuthenticationCheck);\r\n}\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/area-of-interest-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js",[],["383","384"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-event.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js",["385","386"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport OrganizationListView from '../../components/organization/organization-list-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllOrganizationsByFilter } from '../../actions/organization-action';\nimport { allOrganizationTypes } from '../../constants/organization-types';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nconst SearchOrganization = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [filter, setFilter] = useState({\n        impactArea: [],\n        organizationType: [],\n    });\n    const getInitialInfo = () => {\n        setLoading(true);\n        props.dispatch(getAllGlobalImpactAreas());\n        setLoading(false);\n    };\n    const changeFilter = (key, value) => {\n        let filter_ = filter;\n        filter[key] = value;\n        setFilter(filter_);\n    };\n    const handleOnApplyFilter = () => {\n        console.log(filter);\n        setLoading(true);\n        props.dispatch(getAllOrganizationsByFilter(filter));\n        setLoading(false);\n    };\n    const gotoOrganizationDetails = (userId) => {\n        props.history.push(`/organization/details/${userId}`);\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, []);\n    console.log(props);\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col lg={4}>\n                    <Nav variant=\"pills\" activeKey=\"organization\">\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"organization\" href=\"/search/organization\">\n                                Organization\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"event\" href=\"/search/event\">\n                                Events\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <hr />\n                    <label>Impact Area</label>\n                    <Select onChange={(value) => changeFilter('impactArea', value)} isMulti={true} options={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []} />\n                    <br />\n                    <label>Organization Type</label>\n                    <Select onChange={(value) => changeFilter('organizationType', value)} isMulti={true} options={allOrganizationTypes} />\n                    <br />\n                    <br />\n                    <Button\n                        onClick={() => {\n                            handleOnApplyFilter();\n                        }}\n                    >\n                        Search\n                    </Button>\n                    <div style={{ height: 25 }} />\n                </Col>\n                <Col lg={8}>\n                    <Nav\n                        variant=\"pills\"\n                        activeKey={viewType}\n                        onSelect={(eventKey) => {\n                            setViewType(eventKey);\n                        }}\n                        size=\"sm\"\n                    >\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"list\" title=\"list\">\n                                List\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"map\" title=\"map\">\n                                Map\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <hr />\n                    {viewType === 'list' && (\n                        <OrganizationListView\n                            allOrganizations={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations : []}\n                            gotoOrganizationDetails={gotoOrganizationDetails}\n                        />\n                    )}\n                    {viewType === 'map' && (\n                        <>\n                            <Image src=\"http://localhost:3001/uploaded-images/sample-g-map.png\" width=\"100%\" height=\"auto\" thumbnail />\n                        </>\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    console.log('🚀 ~ file: search-organization.js ~ line 87 ~ mapStateToProps ~ getImpactAreaResponse', getImpactAreaResponse);\n    const getAllOrganizationsResponse = state.Organization.getAllOrganizations;\n    console.log('🚀 ~ file: search-organization.js ~ line 110 ~ mapStateToProps ~ getAllOrganizationsResponse', getAllOrganizationsResponse);\n    return {\n        getImpactAreaResponse,\n        getAllOrganizationsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchOrganization);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js",["387"],"import React from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport { Form, FormControl } from 'react-bootstrap';\nfunction App() {\n    const movieItems = [\n        {\n            id: 0,\n            title: 'Titanic',\n            description: 'A movie about love',\n        },\n        {\n            id: 1,\n            title: 'Dead Poets Society',\n            description: 'A movie about poetry and the meaning of life',\n        },\n        {\n            id: 2,\n            title: 'Terminator 2',\n            description: 'A robot from the future is sent back in time',\n        },\n        {\n            id: 3,\n            title: 'Alien 2',\n            description: 'Ripley is back for a new adventure',\n        },\n    ];\n\n    const handleOnSearch = (string, results) => {\n        // onSearch will have as the first callback parameter\n        // the string searched and for the second the results.\n        console.log(string, results);\n    };\n\n    const handleOnSelect = (item) => {\n        // the item selected\n        console.log(item);\n    };\n\n    const handleOnFocus = () => {\n        console.log('Focused');\n    };\n\n    return (\n        <div style={{ minWidth: 100, zIndex: 5000 }}>\n            <Form inline>\n                {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" /> */}\n                {/* <Button variant=\"outline-light\">Search</Button> */}\n\n                <ReactSearchAutocomplete\n                    className=\"form-control mr-sm-2\"\n                    items={movieItems}\n                    fuseOptions={{ keys: ['title', 'description'] }} // Search on both fields\n                    resultStringKeyName=\"title\" // String to display in the results\n                    onSearch={handleOnSearch}\n                    onSelect={handleOnSelect}\n                    onFocus={handleOnFocus}\n                    showIcon={false}\n                    styling={{\n                        height: '34px',\n                        border: '1px solid darkgreen',\n                        borderRadius: '4px',\n                        backgroundColor: 'white',\n                        boxShadow: 'none',\n                        hoverBackgroundColor: 'lightgreen',\n                        color: 'darkgreen',\n                        fontSize: '12px',\n                        fontFamily: 'Courier',\n                        iconColor: 'green',\n                        lineColor: 'lightgreen',\n                        placeholderColor: 'darkgreen',\n                        zIndex: 5000,\n                    }}\n                />\n            </Form>\n        </div>\n    );\n}\n\nexport default App;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js",["388","389","390","391"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInvolvement, setInvolvement, clearInvolvement } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualInvolvementForm from '../../components/individual/individual-involvement-form';\nimport { individualCompleteBasicInfoPage, individualCompletePrivacyPage } from '../../constants/route-paths';\n\nconst Involvement = (props) => {\n    const [loading, setLoading] = useState(false);\n\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        console.log(user);\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInvolvement(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInvolvementResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.history.push(individualCompletePrivacyPage);\n            props.dispatch(clearInvolvement());\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, involvement } = props.getInvolvementResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        console.log('HI');\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInvolvementResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInvolvementResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInvolvement(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(individualCompletePrivacyPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualInvolvementForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log('STATE', state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInvolvementResponse = state.Individual.getInvolvement;\n    const setInvolvementResponse = state.Individual.setInvolvement;\n    let initialValues = {};\n    console.log('getInvolvementResponse', getImpactAreaResponse);\n    if (getInvolvementResponse.success) {\n        initialValues = getInvolvementResponse.involvement;\n    }\n    console.log(initialValues);\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInvolvementResponse,\n        setInvolvementResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Involvement',\n        enableReinitialize: true,\n    })(Involvement),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js",["392","393","394"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/individual-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualBasicInfoForm from '../../components/individual/individual-basic-info-form';\nimport { individualCompleteInvolvementPage } from '../../constants/route-paths';\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: '',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getBasicInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.history.push(individualCompleteInvolvementPage);\n            props.dispatch(clearBasicInfo());\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        values.profilePicture = profilePicture;\n        props.dispatch(setBasicInfo(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualBasicInfoForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getBasicInfoResponse = state.Individual.getBasicInfo;\n    const setBasicInfoResponse = state.Individual.setBasicInfo;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js",["395","396","397","398"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPrivacy, setPrivacy, clearPrivacy } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualPrivacyForm from '../../components/individual/individual-privacy-form';\nimport { individualCompleteInvolvementPage, homePage } from '../../constants/route-paths';\nconst Privacy = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        console.log(user);\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getPrivacy(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setPrivacyResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(clearPrivacy());\n            props.history.push(homePage);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, privacy } = props.getPrivacyResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        console.log('HI');\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getPrivacyResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setPrivacyResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setPrivacy(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteInvolvementPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualPrivacyForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log('STATE', state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getPrivacyResponse = state.Individual.getPrivacy;\n    const setPrivacyResponse = state.Individual.setPrivacy;\n    let initialValues = {};\n    console.log('getPrivacyResponse', getImpactAreaResponse);\n    if (getPrivacyResponse.success) {\n        initialValues = getPrivacyResponse.privacy;\n    }\n    console.log(initialValues);\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPrivacyResponse,\n        setPrivacyResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Privacy',\n        enableReinitialize: true,\n    })(Privacy),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js",["399","400"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/individual-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/individual/individual-details-view';\nconst IndividualDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const individualUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(individualUserId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView individual={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.individual : {}} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Individual.getPublicInfo;\n    console.log('🚀 ~ file: individual-details.js ~ line 31 ~ mapStateToProps ~ getPublicInfoResponse', getPublicInfoResponse);\n    return {\n        getPublicInfoResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(IndividualDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js",["401","402","403"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/organization-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationBasicInfoForm from '../../components/organization/organization-basic-info-form';\nimport { organizationCompleteServiceInfoPage } from '../../constants/route-paths';\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: '',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getBasicInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.history.push(organizationCompleteServiceInfoPage);\n            props.dispatch(clearBasicInfo());\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        values.profilePicture = profilePicture;\n        props.dispatch(setBasicInfo(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationBasicInfoForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getBasicInfoResponse = state.Organization.getBasicInfo;\n    const setBasicInfoResponse = state.Organization.setBasicInfo;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js",["404","405","406","407"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getServiceInfo, setServiceInfo, clearServiceInfo } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationServiceInfoForm from '../../components/organization/organization-service-info-form';\nimport { organizationCompleteBasicInfoPage, organizationCompleteInternalLinkPage } from '../../constants/route-paths';\n\nconst ServiceInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        console.log(user);\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getServiceInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setServiceInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.history.push(organizationCompleteInternalLinkPage);\n            props.dispatch(clearServiceInfo());\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, serviceInfo } = props.getServiceInfoResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        console.log('HI');\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getServiceInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setServiceInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setServiceInfo(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(organizationCompleteInternalLinkPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationServiceInfoForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log('STATE', state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getServiceInfoResponse = state.Organization.getServiceInfo;\n    const setServiceInfoResponse = state.Organization.setServiceInfo;\n    let initialValues = {};\n    console.log('getServiceInfoResponse', getImpactAreaResponse);\n    if (getServiceInfoResponse.success) {\n        initialValues = getServiceInfoResponse.serviceInfo;\n    }\n    console.log(initialValues);\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getServiceInfoResponse,\n        setServiceInfoResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'ServiceInfo',\n        enableReinitialize: true,\n    })(ServiceInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js",["408","409","410","411"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInternalLink, setInternalLink, clearInternalLink } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationInternalLinkForm from '../../components/organization/organization-internal-link-form';\nimport { organizationCompleteServiceInfoPage, homePage } from '../../constants/route-paths';\nconst InternalLink = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        console.log(user);\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInternalLink(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInternalLinkResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(clearInternalLink());\n            props.history.push(homePage);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, internalLink } = props.getInternalLinkResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        console.log('HI');\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInternalLinkResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInternalLinkResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInternalLink(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteServiceInfoPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationInternalLinkForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log('STATE', state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInternalLinkResponse = state.Organization.getInternalLink;\n    const setInternalLinkResponse = state.Organization.setInternalLink;\n    let initialValues = {};\n    console.log('getInternalLinkResponse', getImpactAreaResponse);\n    if (getInternalLinkResponse.success) {\n        initialValues = getInternalLinkResponse.internalLink;\n    }\n    console.log(initialValues);\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInternalLinkResponse,\n        setInternalLinkResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'InternalLink',\n        enableReinitialize: true,\n    })(InternalLink),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js",["412","413"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/organization-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/organization/organization-details-view';\nconst OrganizationDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const organizationUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(organizationUserId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView organization={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.organization : {}} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Organization.getPublicInfo;\n    return {\n        getPublicInfoResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(OrganizationDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js",["414","415","416","417","418"],"import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\nimport { information_asking_reason } from '../../constants/misc';\nimport { Container, Row, Col, ProgressBar, Button, Modal, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { allRaces } from '../../constants/races';\nimport { individualHeaders } from '../../constants/step-headers';\n\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const [infoModal, setInfoModal] = useState(false);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country);\n    const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Modal\n                show={infoModal}\n                onHide={() => {\n                    setInfoModal(false);\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Why do we ask for this information</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p className=\"justify-text\">{information_asking_reason}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => {\n                            setInfoModal(false);\n                        }}\n                    >\n                        I understand\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <div>\n                            <p>Step {individualHeaders[2].stepNo} of 5</p>\n                            <ProgressBar now={individualHeaders[2].percent} />\n                            <br />\n                            <h4>{individualHeaders[2].header}</h4>\n                            <small\n                                className=\"small-simple-btn\"\n                                onClick={() => {\n                                    setInfoModal(true);\n                                }}\n                            >\n                                Why do we ask for this information?\n                            </small>\n                            <div style={{ height: 20 }} />\n                        </div>\n\n                        <Row>\n                            <Col>\n                                <Field name=\"firstName\" type=\"text\" component={InputRender} label=\"First Name\" placeholder=\"John\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"lastName\" type=\"text\" component={InputRender} label=\"Last Name\" placeholder=\"Doe\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"6\">\n                                <Field name=\"dateOfBirth\" type=\"text\" component={DatePickerRender} label=\"Date Of Birth\" />\n                            </Col>\n                            <Col sm=\"6\">\n                                <Field name=\"kids\" type=\"text\" component={SelectRender} label=\"Kids\" col1={4} col2={8}>\n                                    <option value=\"0\">0</option>\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"4+\">4+</option>\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" />\n                            </Col>\n                            <Col>\n                                {/* <Field name=\"races\" component={MultiSelectRender} label=\"Race\" col1={4} col2={8} options={allRaces} zIndex={2000} /> */}\n                                {/* <Field name=\"race\" type=\"text\" component={SelectRender} label=\"race\" col1={4} col2={8}>\n                                    {allRaces.map((race, i) => {\n                                        return (\n                                            <option key={i} value={race.value}>\n                                                {race.label}\n                                            </option>\n                                        );\n                                    })}\n                                </Field> */}\n                                <Field name=\"gender\" type=\"text\" component={SelectRender} label=\"Gender\" col1={4} col2={8}>\n                                    <option value=\"male\">Male</option>\n                                    <option value=\"female\">Female</option>\n                                </Field>\n                            </Col>\n                        </Row>\n                        {/* <Row>\n                            <Col>\n                                <Field name=\"gender\" type=\"text\" component={SelectRender} label=\"Gender\" col1={4} col2={8}>\n                                    <option value=\"male\">Male</option>\n                                    <option value=\"female\">Female</option>\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"languages\" type=\"text\" component={InputRender} label=\"Language\" />\n                            </Col>\n                        </Row> */}\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"PIN/ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js",["419","420","421"],"import React from 'react';\nimport { Field } from 'redux-form';\nimport { InputRenderWithLargeLabel, SwitchRender, CheckBoxRender, SelectRender, InputRender, TextRender, CreatableMultiSelectRender, MultiSelectRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { allInvolvementTypes } from '../../constants/involvement-types';\nimport { individualHeaders } from '../../constants/step-headers';\nconst ProfileStep3 = (props) => {\n    const submitting = props.submitting;\n    const allImpactAreas = props.allImpactAreas;\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col lg=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n                        <div>\n                            <p>Step {individualHeaders[3].stepNo} of 5</p>\n                            <ProgressBar now={individualHeaders[3].percent} />\n                            <br />\n                            <h4>{individualHeaders[3].header}</h4>\n                        </div>\n\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area of interest\" col1={4} col2={8} options={allImpactAreas} zIndex={2000} />\n                        <Field name=\"communityInvolvement\" type=\"text\" component={TextRender} label=\"Community Involvement\" />\n                        <label>Tell us a bit about what you currently do!</label>\n                        <Field id=\"volunteerOpportunity\" name=\"volunteerOpportunity\" type=\"checkbox\" component={CheckBoxRender} label=\"I am looking for Volunteer Opportunities\" col1={6} col2={6} />\n\n                        <Field id=\"project\" name=\"project\" component={CheckBoxRender} type=\"checkbox\" label=\"I am looking for Projects\" col1={6} col2={6} />\n                        <Field id=\"boardMembership\" name=\"boardMembership\" component={CheckBoxRender} type=\"checkbox\" label=\"I am looking for Board Membership\" col1={6} col2={6} />\n                        <Field id=\"committees\" name=\"committees\" component={CheckBoxRender} type=\"checkbox\" label=\"I am looking for Committees/Advisory Boards\" col1={6} col2={6} />\n                        <Field\n                            id=\"availabilityPerWeek\"\n                            name=\"availabilityPerWeek\"\n                            type=\"number\"\n                            component={InputRenderWithLargeLabel}\n                            min=\"0\"\n                            max=\"40\"\n                            unit=\"Hour\"\n                            step=\"1\"\n                            label=\"Average Weekly Hours Available\"\n                        />\n                        <Field id=\"typeOfInvolvement\" name=\"typeOfInvolvement\" type=\"text\" component={SelectRender} label=\"I want the following type of involvement\" col1={6} col2={6}>\n                            {allInvolvementTypes.map((involvementType, i) => {\n                                return (\n                                    <option key={involvementType.value} value={involvementType.value}>\n                                        {involvementType.label}\n                                    </option>\n                                );\n                            })}\n                        </Field>\n\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleSkipButton();\n                                    }}\n                                >\n                                    Skip\n                                </Button>\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default ProfileStep3;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js",["422"],"import React from 'react';\nimport { Field } from 'redux-form';\nimport { CheckBoxRender, SelectRender, InputRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { allActivityTypes } from '../../constants/privacy-activity-types';\nimport { allSearchTypes } from '../../constants/privacy-search-types';\nimport { individualHeaders } from '../../constants/step-headers';\nconst PrivacyForm = (props) => {\n    const submitting = props.submitting;\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n                        <div>\n                            <p>Step {individualHeaders[4].stepNo} of 5</p>\n                            <ProgressBar now={individualHeaders[4].percent} />\n                            <br />\n                            <h4>{individualHeaders[4].header}</h4>\n                        </div>\n\n                        <Field id=\"publicCalender\" name=\"isCalenderPublic\" component={CheckBoxRender} label=\"My calender is public\" col1={6} col2={6} type=\"checkbox\" />\n                        <Field\n                            id=\"isEmailSearchable\"\n                            name=\"isEmailSearchable\"\n                            component={CheckBoxRender}\n                            label=\"Add me to an organization’s mailing list when I follow them\"\n                            col1={6}\n                            col2={6}\n                            type=\"checkbox\"\n                        />\n                        <Field id=\"project\" name=\"isUserSearchable\" component={CheckBoxRender} label=\"Organization can find me in searches\" col1={6} col2={6} type=\"checkbox\" />\n                        <Field id=\"showOnSearch\" name=\"showOnSearch\" type=\"text\" component={SelectRender} label=\"I show up in individual searches done by:\" col1={6} col2={6}>\n                            {allActivityTypes.map((activity, i) => {\n                                return (\n                                    <option key={activity.value} value={activity.value}>\n                                        {activity.label}\n                                    </option>\n                                );\n                            })}\n                        </Field>\n                        <Field id=\"showActivity\" name=\"showActivity\" type=\"text\" component={SelectRender} label=\"My activity shows up on the feeds of\" col1={6} col2={6}>\n                            {allSearchTypes.map((search, i) => {\n                                return (\n                                    <option key={search.value} value={search.value}>\n                                        {search.label}\n                                    </option>\n                                );\n                            })}\n                        </Field>\n\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default PrivacyForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js",["423","424","425"],"import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\nimport { information_asking_reason } from '../../constants/misc';\nimport { Container, Row, Col, ProgressBar, Button, Modal, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { organizationHeaders } from '../../constants/step-headers';\nimport { allOrganizationTypes } from '../../constants/organization-types';\n\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const [infoModal, setInfoModal] = useState(false);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country);\n    const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Modal\n                show={infoModal}\n                onHide={() => {\n                    setInfoModal(false);\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Why do we ask for this information</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p className=\"justify-text\">{information_asking_reason}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => {\n                            setInfoModal(false);\n                        }}\n                    >\n                        I understand\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <div>\n                            <p>Step {organizationHeaders[2].stepNo} of 5</p>\n                            <ProgressBar now={organizationHeaders[2].percent} />\n                            <br />\n                            <h4>{organizationHeaders[2].header}</h4>\n                            <small\n                                className=\"small-simple-btn\"\n                                onClick={() => {\n                                    setInfoModal(true);\n                                }}\n                            >\n                                Why do we ask for this information?\n                            </small>\n                            <div style={{ height: 20 }} />\n                        </div>\n\n                        <Row>\n                            <Col>\n                                <Field name=\"name\" type=\"text\" component={InputRender} label=\"Name\" placeholder=\"Your organization name...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" placeholder=\"000-0000-000\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"ein\" type=\"text\" component={InputRender} label=\"EIN\" placeholder=\"ABCD...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"website\" type=\"text\" component={InputRender} label=\"Website URL\" placeholder=\"www.abc.xyz\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"contactEmail\" type=\"text\" component={InputRender} label=\"Contact Email\" placeholder=\"help@abc.com\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"mission\" type=\"text\" component={TextRender} label=\"Mission\" placeholder=\"Your organization mission...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Your organization mission...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"organizationType\" component={MultiSelectRender} label=\"Organization Type\" col1={3} col2={9} options={allOrganizationTypes} />\n                            </Col>\n                        </Row>\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"PIN/ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js",["426","427","428","429"],"import React from 'react';\nimport { Field } from 'redux-form';\nimport { InputRenderWithLargeLabel, SwitchRender, SelectRender, InputRender, TextRender, CreatableMultiSelectRender, MultiSelectRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { allServiceAreaTypes } from '../../constants/service-area-types';\nimport { organizationHeaders } from '../../constants/step-headers';\nconst ServiceInfoForm = (props) => {\n    const submitting = props.submitting;\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n                        <div>\n                            <p>Step {organizationHeaders[3].stepNo} of 5</p>\n                            <ProgressBar now={organizationHeaders[3].percent} />\n                            <br />\n                            <h4>{organizationHeaders[3].header}</h4>\n                        </div>\n\n                        <Field name=\"serviceAreaTypes\" component={MultiSelectRender} label=\"Service area type\" col1={4} col2={8} options={allServiceAreaTypes} zIndex={5000} />\n                        <Field name=\"serviceAreas\" type=\"text\" component={CreatableMultiSelectRender} label=\"Service Areas\" col1={4} col2={8} placeholder=\"Add new service area\" zIndex={4000} />\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={props.allImpactAreas} zIndex={3000} />\n                        <Field name=\"donationLink\" type=\"text\" component={InputRender} label=\"Donation link\" placeholder=\"\" />\n                        <Field name=\"newsLetter\" type=\"text\" component={InputRender} label=\"News letter link\" placeholder=\"\" />\n                        <Field name=\"keywords\" type=\"text\" component={CreatableMultiSelectRender} label=\"Keywords\" col1={4} col2={8} placeholder=\"Add new keywords\" zIndex={2000} />\n\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleSkipButton();\n                                    }}\n                                >\n                                    Skip\n                                </Button>\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default ServiceInfoForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js",["430","431"],"import React from 'react';\nimport { Field } from 'redux-form';\nimport { SwitchRender, SelectRender, InputRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { organizationHeaders } from '../../constants/step-headers';\nconst InternalLinkForm = (props) => {\n    const submitting = props.submitting;\n\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n\n                        <div>\n                            <p>Step {organizationHeaders[4].stepNo} of 5</p>\n                            <ProgressBar now={organizationHeaders[4].percent} />\n                            <br />\n                            <h4>{organizationHeaders[4].header}</h4>\n                        </div>\n\n                        <Field name=\"events\" type=\"text\" component={InputRender} label=\"Events link\" />\n                        <Field name=\"rss\" type=\"text\" component={InputRender} label=\"RSS link\" />\n                        <Field name=\"blog\" type=\"text\" component={InputRender} label=\"Blogs link\" />\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default InternalLinkForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js",["432"],"import React from 'react';\nimport { Container, Image, Row, Col, Badge } from 'react-bootstrap';\nimport moment from 'moment';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { getOrganizationTypeByValue } from '../../constants/organization-types';\nconst DetailsView = (props) => {\n    const organization = props.organization;\n    const infoRender = (label, value) => {\n        return (\n            <Row>\n                <Col md=\"4\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"8\">{value}</Col>\n            </Row>\n        );\n    };\n    const organizationTypeRender = (types) => {\n        console.log(types);\n        return (\n            <Row>\n                <Col md=\"4\">\n                    <b>Organization Type</b>\n                </Col>\n                <Col md=\"8\">\n                    {types.map((type, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {getOrganizationTypeByValue(type)}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n    const keywordsRender = (label, keywords) => {\n        return (\n            <Row>\n                <Col md=\"4\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"8\">\n                    {keywords.map((key, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {key}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n    const tagsRender = (label, tags) => {\n        return (\n            <Row>\n                <Col md=\"4\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"8\">\n                    {tags.map((tag, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {tag.label}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n    if (organization._id) {\n        const basicInfo = organization.basicInfo;\n        const serviceInfo = organization.serviceInfo;\n        const impactAreas = serviceInfo.impactAreas;\n        console.log('🚀 ~ file: organization-details-view.js ~ line 29 ~ DetailsView ~ involvement', organization);\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"right-align\" sm=\"2\">\n                        <Image className=\"left-image\" src={basicInfo.profilePicture} width=\"100%\" thumbnail />\n                    </Col>\n                    <Col sm=\"9\" className=\"left-border\">\n                        <h3>{basicInfo.name}</h3>\n                        {infoRender('Phone', basicInfo.phone)}\n                        {infoRender('EIN', basicInfo.ein)}\n                        {infoRender('Contact Email', basicInfo.contactEmail)}\n                        {infoRender('Website', basicInfo.website)}\n                        {organizationTypeRender(basicInfo.organizationType)}\n                        {infoRender('Address', addressMaker(basicInfo.address))}\n                        {infoRender('Description', basicInfo.description)}\n                        {infoRender('Mission', basicInfo.mission)}\n                        <div style={{ height: 25 }} />\n                        <hr />\n                        <div style={{ height: 25 }} />\n                        {keywordsRender('Service Areas', serviceInfo.serviceAreas)}\n                        {tagsRender('Impact Area', impactAreas)}\n                        {keywordsRender('Keywords', serviceInfo.keywords)}\n                        <div style={{ height: 25 }} />\n                    </Col>\n                </Row>\n                <div style={{ height: 25 }} />\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js",[],{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","replacedBy":"436"},{"ruleId":"437","severity":1,"message":"438","line":18,"column":8,"nodeType":"439","messageId":"440","endLine":18,"endColumn":22},{"ruleId":"437","severity":1,"message":"441","line":24,"column":8,"nodeType":"439","messageId":"440","endLine":24,"endColumn":24},{"ruleId":"437","severity":1,"message":"442","line":2,"column":23,"nodeType":"439","messageId":"440","endLine":2,"endColumn":34},{"ruleId":"437","severity":1,"message":"443","line":5,"column":8,"nodeType":"439","messageId":"440","endLine":5,"endColumn":17},{"ruleId":"437","severity":1,"message":"444","line":4,"column":8,"nodeType":"439","messageId":"440","endLine":4,"endColumn":22},{"ruleId":"437","severity":1,"message":"445","line":6,"column":13,"nodeType":"439","messageId":"440","endLine":6,"endColumn":23},{"ruleId":"437","severity":1,"message":"446","line":8,"column":19,"nodeType":"439","messageId":"440","endLine":8,"endColumn":25},{"ruleId":"437","severity":1,"message":"447","line":8,"column":27,"nodeType":"439","messageId":"440","endLine":8,"endColumn":30},{"ruleId":"437","severity":1,"message":"448","line":13,"column":10,"nodeType":"439","messageId":"440","endLine":13,"endColumn":25},{"ruleId":"449","severity":1,"message":"450","line":15,"column":5,"nodeType":"451","messageId":"452","endLine":17,"endColumn":6},{"ruleId":"433","replacedBy":"453"},{"ruleId":"435","replacedBy":"454"},{"ruleId":"455","severity":1,"message":"456","line":34,"column":8,"nodeType":"457","endLine":34,"endColumn":20,"suggestions":"458"},{"ruleId":"455","severity":1,"message":"459","line":37,"column":8,"nodeType":"457","endLine":37,"endColumn":31,"suggestions":"460"},{"ruleId":"455","severity":1,"message":"461","line":58,"column":8,"nodeType":"457","endLine":58,"endColumn":20,"suggestions":"462"},{"ruleId":"433","replacedBy":"463"},{"ruleId":"435","replacedBy":"464"},{"ruleId":"433","replacedBy":"465"},{"ruleId":"435","replacedBy":"466"},{"ruleId":"467","severity":1,"message":"468","line":7,"column":1,"nodeType":"469","endLine":63,"endColumn":2},{"ruleId":"433","replacedBy":"470"},{"ruleId":"435","replacedBy":"471"},{"ruleId":"437","severity":1,"message":"472","line":10,"column":12,"nodeType":"439","messageId":"440","endLine":10,"endColumn":19},{"ruleId":"455","severity":1,"message":"456","line":37,"column":8,"nodeType":"457","endLine":37,"endColumn":10,"suggestions":"473"},{"ruleId":"437","severity":1,"message":"474","line":3,"column":16,"nodeType":"439","messageId":"440","endLine":3,"endColumn":27},{"ruleId":"437","severity":1,"message":"475","line":31,"column":26,"nodeType":"439","messageId":"440","endLine":31,"endColumn":37},{"ruleId":"455","severity":1,"message":"456","line":38,"column":8,"nodeType":"457","endLine":38,"endColumn":20,"suggestions":"476"},{"ruleId":"455","severity":1,"message":"477","line":41,"column":8,"nodeType":"457","endLine":41,"endColumn":38,"suggestions":"478"},{"ruleId":"455","severity":1,"message":"459","line":44,"column":8,"nodeType":"457","endLine":44,"endColumn":38,"suggestions":"479"},{"ruleId":"455","severity":1,"message":"456","line":44,"column":8,"nodeType":"457","endLine":44,"endColumn":20,"suggestions":"480"},{"ruleId":"455","severity":1,"message":"477","line":47,"column":8,"nodeType":"457","endLine":47,"endColumn":36,"suggestions":"481"},{"ruleId":"455","severity":1,"message":"459","line":50,"column":8,"nodeType":"457","endLine":50,"endColumn":36,"suggestions":"482"},{"ruleId":"437","severity":1,"message":"483","line":29,"column":26,"nodeType":"439","messageId":"440","endLine":29,"endColumn":33},{"ruleId":"455","severity":1,"message":"456","line":36,"column":8,"nodeType":"457","endLine":36,"endColumn":20,"suggestions":"484"},{"ruleId":"455","severity":1,"message":"477","line":39,"column":8,"nodeType":"457","endLine":39,"endColumn":34,"suggestions":"485"},{"ruleId":"455","severity":1,"message":"459","line":42,"column":8,"nodeType":"457","endLine":42,"endColumn":34,"suggestions":"486"},{"ruleId":"437","severity":1,"message":"487","line":8,"column":21,"nodeType":"439","messageId":"440","endLine":8,"endColumn":31},{"ruleId":"455","severity":1,"message":"456","line":15,"column":8,"nodeType":"457","endLine":15,"endColumn":47,"suggestions":"488"},{"ruleId":"455","severity":1,"message":"456","line":44,"column":8,"nodeType":"457","endLine":44,"endColumn":20,"suggestions":"489"},{"ruleId":"455","severity":1,"message":"477","line":47,"column":8,"nodeType":"457","endLine":47,"endColumn":36,"suggestions":"490"},{"ruleId":"455","severity":1,"message":"459","line":50,"column":8,"nodeType":"457","endLine":50,"endColumn":36,"suggestions":"491"},{"ruleId":"437","severity":1,"message":"492","line":31,"column":26,"nodeType":"439","messageId":"440","endLine":31,"endColumn":37},{"ruleId":"455","severity":1,"message":"456","line":38,"column":8,"nodeType":"457","endLine":38,"endColumn":20,"suggestions":"493"},{"ruleId":"455","severity":1,"message":"477","line":41,"column":8,"nodeType":"457","endLine":41,"endColumn":38,"suggestions":"494"},{"ruleId":"455","severity":1,"message":"459","line":44,"column":8,"nodeType":"457","endLine":44,"endColumn":38,"suggestions":"495"},{"ruleId":"437","severity":1,"message":"496","line":29,"column":26,"nodeType":"439","messageId":"440","endLine":29,"endColumn":38},{"ruleId":"455","severity":1,"message":"456","line":36,"column":8,"nodeType":"457","endLine":36,"endColumn":20,"suggestions":"497"},{"ruleId":"455","severity":1,"message":"477","line":39,"column":8,"nodeType":"457","endLine":39,"endColumn":39,"suggestions":"498"},{"ruleId":"455","severity":1,"message":"459","line":42,"column":8,"nodeType":"457","endLine":42,"endColumn":39,"suggestions":"499"},{"ruleId":"437","severity":1,"message":"487","line":8,"column":21,"nodeType":"439","messageId":"440","endLine":8,"endColumn":31},{"ruleId":"455","severity":1,"message":"456","line":15,"column":8,"nodeType":"457","endLine":15,"endColumn":47,"suggestions":"500"},{"ruleId":"437","severity":1,"message":"501","line":3,"column":55,"nodeType":"439","messageId":"440","endLine":3,"endColumn":65},{"ruleId":"437","severity":1,"message":"502","line":3,"column":67,"nodeType":"439","messageId":"440","endLine":3,"endColumn":84},{"ruleId":"437","severity":1,"message":"503","line":7,"column":10,"nodeType":"439","messageId":"440","endLine":7,"endColumn":18},{"ruleId":"437","severity":1,"message":"504","line":14,"column":12,"nodeType":"439","messageId":"440","endLine":14,"endColumn":25},{"ruleId":"437","severity":1,"message":"505","line":14,"column":27,"nodeType":"439","messageId":"440","endLine":14,"endColumn":43},{"ruleId":"437","severity":1,"message":"506","line":3,"column":37,"nodeType":"439","messageId":"440","endLine":3,"endColumn":49},{"ruleId":"437","severity":1,"message":"507","line":3,"column":81,"nodeType":"439","messageId":"440","endLine":3,"endColumn":92},{"ruleId":"437","severity":1,"message":"502","line":3,"column":134,"nodeType":"439","messageId":"440","endLine":3,"endColumn":151},{"ruleId":"437","severity":1,"message":"507","line":3,"column":40,"nodeType":"439","messageId":"440","endLine":3,"endColumn":51},{"ruleId":"437","severity":1,"message":"508","line":3,"column":37,"nodeType":"439","messageId":"440","endLine":3,"endColumn":53},{"ruleId":"437","severity":1,"message":"504","line":14,"column":12,"nodeType":"439","messageId":"440","endLine":14,"endColumn":25},{"ruleId":"437","severity":1,"message":"505","line":14,"column":27,"nodeType":"439","messageId":"440","endLine":14,"endColumn":43},{"ruleId":"437","severity":1,"message":"509","line":3,"column":10,"nodeType":"439","messageId":"440","endLine":3,"endColumn":35},{"ruleId":"437","severity":1,"message":"506","line":3,"column":37,"nodeType":"439","messageId":"440","endLine":3,"endColumn":49},{"ruleId":"437","severity":1,"message":"510","line":3,"column":51,"nodeType":"439","messageId":"440","endLine":3,"endColumn":63},{"ruleId":"437","severity":1,"message":"501","line":3,"column":78,"nodeType":"439","messageId":"440","endLine":3,"endColumn":88},{"ruleId":"437","severity":1,"message":"506","line":3,"column":10,"nodeType":"439","messageId":"440","endLine":3,"endColumn":22},{"ruleId":"437","severity":1,"message":"510","line":3,"column":24,"nodeType":"439","messageId":"440","endLine":3,"endColumn":36},{"ruleId":"437","severity":1,"message":"511","line":3,"column":8,"nodeType":"439","messageId":"440","endLine":3,"endColumn":14},"no-native-reassign",["512"],"no-negated-in-lhs",["513"],"no-unused-vars","'IndividualList' is defined but never used.","Identifier","unusedVar","'OrganizationList' is defined but never used.","'NavDropdown' is defined but never used.","'SearchBox' is defined but never used.","'ResponsiveMenu' is defined but never used.","'RoutePaths' is defined but never used.","'Toggle' is defined but never used.","'Nav' is defined but never used.","'IoCreateOutline' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["512"],["513"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInitialInfo'. Either include it or remove the dependency array.","ArrayExpression",["514"],"React Hook useEffect has a missing dependency: 'handleSetResponse'. Either include it or remove the dependency array.",["515"],"React Hook useEffect has a missing dependency: 'changeStep'. Either include it or remove the dependency array.",["516"],["512"],["513"],["512"],["513"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["512"],["513"],"'loading' is assigned a value but never used.",["517"],"'FormControl' is defined but never used.","'involvement' is assigned a value but never used.",["518"],"React Hook useEffect has a missing dependency: 'handleGetResponse'. Either include it or remove the dependency array.",["519"],["520"],["521"],["522"],["523"],"'privacy' is assigned a value but never used.",["524"],["525"],["526"],"'setLoading' is assigned a value but never used.",["527"],["528"],["529"],["530"],"'serviceInfo' is assigned a value but never used.",["531"],["532"],["533"],"'internalLink' is assigned a value but never used.",["534"],["535"],["536"],["537"],"'TextRender' is defined but never used.","'MultiSelectRender' is defined but never used.","'allRaces' is defined but never used.","'selectedState' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'SwitchRender' is defined but never used.","'InputRender' is defined but never used.","'DatePickerRender' is defined but never used.","'InputRenderWithLargeLabel' is defined but never used.","'SelectRender' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"538","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"538","fix":"551"},{"desc":"552","fix":"553"},{"desc":"554","fix":"555"},{"desc":"538","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"538","fix":"563"},{"desc":"552","fix":"564"},{"desc":"554","fix":"565"},{"desc":"538","fix":"566"},{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"538","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"561","fix":"576"},"Update the dependencies array to be: [getInitialInfo, props.auth]",{"range":"577","text":"578"},"Update the dependencies array to be: [handleSetResponse, props.setUserResponse]",{"range":"579","text":"580"},"Update the dependencies array to be: [changeStep, props.user]",{"range":"581","text":"582"},"Update the dependencies array to be: [getInitialInfo]",{"range":"583","text":"584"},{"range":"585","text":"578"},"Update the dependencies array to be: [handleGetResponse, props.getInvolvementResponse]",{"range":"586","text":"587"},"Update the dependencies array to be: [handleSetResponse, props.setInvolvementResponse]",{"range":"588","text":"589"},{"range":"590","text":"578"},"Update the dependencies array to be: [handleGetResponse, props.getBasicInfoResponse]",{"range":"591","text":"592"},"Update the dependencies array to be: [handleSetResponse, props.setBasicInfoResponse]",{"range":"593","text":"594"},{"range":"595","text":"578"},"Update the dependencies array to be: [handleGetResponse, props.getPrivacyResponse]",{"range":"596","text":"597"},"Update the dependencies array to be: [handleSetResponse, props.setPrivacyResponse]",{"range":"598","text":"599"},"Update the dependencies array to be: [getInitialInfo, props.auth, props.match.params.userId]",{"range":"600","text":"601"},{"range":"602","text":"578"},{"range":"603","text":"592"},{"range":"604","text":"594"},{"range":"605","text":"578"},"Update the dependencies array to be: [handleGetResponse, props.getServiceInfoResponse]",{"range":"606","text":"607"},"Update the dependencies array to be: [handleSetResponse, props.setServiceInfoResponse]",{"range":"608","text":"609"},{"range":"610","text":"578"},"Update the dependencies array to be: [handleGetResponse, props.getInternalLinkResponse]",{"range":"611","text":"612"},"Update the dependencies array to be: [handleSetResponse, props.setInternalLinkResponse]",{"range":"613","text":"614"},{"range":"615","text":"601"},[1558,1570],"[getInitialInfo, props.auth]",[1631,1654],"[handleSetResponse, props.setUserResponse]",[2355,2367],"[changeStep, props.user]",[1420,1422],"[getInitialInfo]",[1618,1630],[1691,1721],"[handleGetResponse, props.getInvolvementResponse]",[1782,1812],"[handleSetResponse, props.setInvolvementResponse]",[1862,1874],[1935,1963],"[handleGetResponse, props.getBasicInfoResponse]",[2024,2052],"[handleSetResponse, props.setBasicInfoResponse]",[1532,1544],[1605,1631],"[handleGetResponse, props.getPrivacyResponse]",[1692,1718],"[handleSetResponse, props.setPrivacyResponse]",[665,704],"[getInitialInfo, props.auth, props.match.params.userId]",[1874,1886],[1947,1975],[2036,2064],[1643,1655],[1716,1746],"[handleGetResponse, props.getServiceInfoResponse]",[1807,1837],"[handleSetResponse, props.setServiceInfoResponse]",[1598,1610],[1671,1702],"[handleGetResponse, props.getInternalLinkResponse]",[1763,1794],"[handleSetResponse, props.setInternalLinkResponse]",[677,716]]