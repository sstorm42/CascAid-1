[{"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js":"1","/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js":"2","/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js":"3","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js":"4","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js":"5","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js":"6","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js":"7","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js":"8","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js":"9","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js":"10","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js":"11","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js":"12","/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js":"13","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js":"14","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js":"15","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js":"16","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js":"17","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js":"18","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js":"19","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js":"20","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js":"21","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js":"22","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js":"23","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js":"24","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js":"25","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js":"26","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js":"27","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_1.js":"28","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_3.js":"29","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_4.js":"30","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_2.js":"31","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_5.js":"32","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_6.js":"33","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_7.js":"34","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js":"35","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js":"36","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js":"37","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js":"38","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js":"39","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js":"40","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js":"41","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js":"42","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js":"43","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/area-of-interest-da.js":"44","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js":"45","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js":"46","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js":"47","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js":"48","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-event.js":"49","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js":"50","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js":"51","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js":"52","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js":"53","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js":"54","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js":"55","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js":"56","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js":"57","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js":"58","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js":"59","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js":"60","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js":"61","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js":"62","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js":"63","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js":"64","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js":"65","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js":"66","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js":"67","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js":"68","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js":"69","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js":"70","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js":"71","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js":"72","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js":"73","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js":"74","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js":"75","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js":"76","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js":"77","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js":"78","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js":"79","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js":"80","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js":"81","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js":"82","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js":"83","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-type-action.js":"84","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-type-da.js":"85","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organization-type-reducer.js":"86","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/messages.js":"87","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-list.js":"88","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-details.js":"89","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/genders.js":"90","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/languages.js":"91","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-images.js":"92","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/manage-events.js":"93","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/create-event.js":"94","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/listing-events.js":"95","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/display-event.js":"96","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/manage-posts.js":"97","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-form.js":"98","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/event-reducer.js":"99","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/event-action.js":"100","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/event-da.js":"101","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-image-list.js":"102","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-list.js":"103","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-details.js":"104","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/details-render.js":"105","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/buttons-render.js":"106","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/search-menu.js":"107","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-card-view.js":"108","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-geo-coding.js":"109","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-map-view.js":"110","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/filter-organization.js":"111","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/follow-reducer.js":"112","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/follow-action.js":"113","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/follow-da.js":"114","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/global-notification.js":"115","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/friends.js":"116","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followers.js":"117","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followings.js":"118","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/requests.js":"119","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/community-menu.js":"120","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/sample-users.js":"121","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-map-view.js":"122","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-user-information.js":"123","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/display-project.js":"124","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/listing-projects.js":"125","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/manage-projects.js":"126","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/create-project.js":"127","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post.js":"128","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/display-post.js":"129","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/listing-posts.js":"130","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/manage-news.js":"131","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/create-volunteering.js":"132","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/listing-volunteerings.js":"133","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/manage-volunteerings.js":"134","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/display-volunteering.js":"135","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/project-action.js":"136","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-form.js":"137","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/project-da.js":"138","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-geo-coding.js":"139","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-image-list.js":"140","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-details.js":"141","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-list.js":"142","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-form.js":"143","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-details.js":"144","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-list.js":"145","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/volunteering-action.js":"146","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-image-list.js":"147","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/volunteering-da.js":"148","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-map-view.js":"149","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-geo-coding.js":"150","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-map-view.js":"151","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/post-reducer.js":"152","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/volunteering-reducer.js":"153","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/project-reducer.js":"154","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-suggestions.js":"155","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-posts.js":"156","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/language-action.js":"157","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/skill-action.js":"158","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/skill-reducer.js":"159","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/language-reducer.js":"160","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/skill-da.js":"161","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/language-da.js":"162","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/post-action.js":"163","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-form.js":"164","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-image-list.js":"165","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-geo-coding.js":"166","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/post-da.js":"167","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-details.js":"168","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-map-view.js":"169","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-list.js":"170"},{"size":720,"mtime":1612160740398,"results":"171","hashOfConfig":"172"},{"size":305,"mtime":1612159937291,"results":"173","hashOfConfig":"174"},{"size":11144,"mtime":1615308440605,"results":"175","hashOfConfig":"172"},{"size":1036,"mtime":1615490797782,"results":"176","hashOfConfig":"172"},{"size":791,"mtime":1613822340266,"results":"177","hashOfConfig":"172"},{"size":183,"mtime":1612161227578,"results":"178","hashOfConfig":"172"},{"size":3110,"mtime":1614869479259,"results":"179","hashOfConfig":"172"},{"size":3617,"mtime":1613711460041,"results":"180","hashOfConfig":"172"},{"size":1004,"mtime":1612162487807,"results":"181","hashOfConfig":"172"},{"size":4560,"mtime":1613391155230,"results":"182","hashOfConfig":"172"},{"size":907,"mtime":1612335997688,"results":"183","hashOfConfig":"172"},{"size":1037,"mtime":1612275636573,"results":"184","hashOfConfig":"172"},{"size":384,"mtime":1612364173406,"results":"185","hashOfConfig":"172"},{"size":4182,"mtime":1615301795111,"results":"186","hashOfConfig":"172"},{"size":7648,"mtime":1615726167983,"results":"187","hashOfConfig":"172"},{"size":3378,"mtime":1612973820035,"results":"188","hashOfConfig":"172"},{"size":2328,"mtime":1612845862351,"results":"189","hashOfConfig":"172"},{"size":1448,"mtime":1612241447302,"results":"190","hashOfConfig":"172"},{"size":3995,"mtime":1613036235120,"results":"191","hashOfConfig":"172"},{"size":4128,"mtime":1614072243235,"results":"192","hashOfConfig":"172"},{"size":234,"mtime":1612161648565,"results":"193","hashOfConfig":"172"},{"size":10394,"mtime":1613888583602,"results":"194","hashOfConfig":"172"},{"size":4141,"mtime":1615490237130,"results":"195","hashOfConfig":"172"},{"size":1553,"mtime":1612878897820,"results":"196","hashOfConfig":"174"},{"size":3151,"mtime":1613386389535,"results":"197","hashOfConfig":"172"},{"size":6169,"mtime":1615728212686,"results":"198","hashOfConfig":"172"},{"size":5148,"mtime":1612878632182,"results":"199","hashOfConfig":"174"},{"size":2839,"mtime":1612275397476,"results":"200","hashOfConfig":"174"},{"size":6755,"mtime":1612878548496,"results":"201","hashOfConfig":"174"},{"size":4627,"mtime":1612855538692,"results":"202","hashOfConfig":"174"},{"size":13155,"mtime":1612878525889,"results":"203","hashOfConfig":"174"},{"size":3588,"mtime":1612367151967,"results":"204","hashOfConfig":"174"},{"size":136,"mtime":1612173566517,"results":"205","hashOfConfig":"174"},{"size":136,"mtime":1612173570845,"results":"206","hashOfConfig":"174"},{"size":334,"mtime":1612199776690,"results":"207","hashOfConfig":"172"},{"size":259,"mtime":1614335298622,"results":"208","hashOfConfig":"172"},{"size":204,"mtime":1612794906131,"results":"209","hashOfConfig":"172"},{"size":2755,"mtime":1613386570898,"results":"210","hashOfConfig":"172"},{"size":688,"mtime":1615479995506,"results":"211","hashOfConfig":"172"},{"size":411,"mtime":1612162325570,"results":"212","hashOfConfig":"172"},{"size":296,"mtime":1613714767296,"results":"213","hashOfConfig":"172"},{"size":6923,"mtime":1614956967886,"results":"214","hashOfConfig":"172"},{"size":922,"mtime":1614335165734,"results":"215","hashOfConfig":"172"},{"size":396,"mtime":1612975983721,"results":"216","hashOfConfig":"172"},{"size":402,"mtime":1612795080494,"results":"217","hashOfConfig":"172"},{"size":509,"mtime":1613151325217,"results":"218","hashOfConfig":"174"},{"size":503,"mtime":1612850760242,"results":"219","hashOfConfig":"172"},{"size":3233,"mtime":1612872182313,"results":"220","hashOfConfig":"174"},{"size":6101,"mtime":1615118911424,"results":"221","hashOfConfig":"172"},{"size":7099,"mtime":1615311386678,"results":"222","hashOfConfig":"172"},{"size":3233,"mtime":1612872360624,"results":"223","hashOfConfig":"174"},{"size":2527,"mtime":1613386369306,"results":"224","hashOfConfig":"174"},{"size":3590,"mtime":1615490538760,"results":"225","hashOfConfig":"172"},{"size":5342,"mtime":1615493543064,"results":"226","hashOfConfig":"172"},{"size":3246,"mtime":1613713305867,"results":"227","hashOfConfig":"172"},{"size":0,"mtime":1612974584064,"results":"228","hashOfConfig":"174"},{"size":1319,"mtime":1613386446737,"results":"229","hashOfConfig":"172"},{"size":4809,"mtime":1614056777113,"results":"230","hashOfConfig":"172"},{"size":3942,"mtime":1613734811989,"results":"231","hashOfConfig":"172"},{"size":3148,"mtime":1613386436550,"results":"232","hashOfConfig":"172"},{"size":0,"mtime":1612974691472,"results":"233","hashOfConfig":"174"},{"size":3615,"mtime":1615722291873,"results":"234","hashOfConfig":"172"},{"size":10696,"mtime":1615492263688,"results":"235","hashOfConfig":"172"},{"size":805,"mtime":1613714995486,"results":"236","hashOfConfig":"172"},{"size":1898,"mtime":1613046954368,"results":"237","hashOfConfig":"172"},{"size":2117,"mtime":1613386399868,"results":"238","hashOfConfig":"172"},{"size":1718,"mtime":1613139377905,"results":"239","hashOfConfig":"172"},{"size":1795,"mtime":1613150190611,"results":"240","hashOfConfig":"172"},{"size":5394,"mtime":1613713126685,"results":"241","hashOfConfig":"172"},{"size":488,"mtime":1613480600581,"results":"242","hashOfConfig":"172"},{"size":670,"mtime":1613480711488,"results":"243","hashOfConfig":"172"},{"size":599,"mtime":1613480586726,"results":"244","hashOfConfig":"172"},{"size":4435,"mtime":1613713409469,"results":"245","hashOfConfig":"172"},{"size":3757,"mtime":1614433011378,"results":"246","hashOfConfig":"172"},{"size":332,"mtime":1613113138461,"results":"247","hashOfConfig":"172"},{"size":3281,"mtime":1615311522936,"results":"248","hashOfConfig":"172"},{"size":8304,"mtime":1613735330770,"results":"249","hashOfConfig":"172"},{"size":3806,"mtime":1615309808457,"results":"250","hashOfConfig":"172"},{"size":4030,"mtime":1613734862337,"results":"251","hashOfConfig":"172"},{"size":2348,"mtime":1613136650677,"results":"252","hashOfConfig":"172"},{"size":4546,"mtime":1614430934379,"results":"253","hashOfConfig":"172"},{"size":7454,"mtime":1615120941324,"results":"254","hashOfConfig":"172"},{"size":2247,"mtime":1614680331582,"results":"255","hashOfConfig":"172"},{"size":291,"mtime":1613480773486,"results":"256","hashOfConfig":"172"},{"size":385,"mtime":1613480844402,"results":"257","hashOfConfig":"172"},{"size":450,"mtime":1613482423474,"results":"258","hashOfConfig":"172"},{"size":591,"mtime":1613491415945,"results":"259","hashOfConfig":"172"},{"size":1407,"mtime":1613491369980,"results":"260","hashOfConfig":"172"},{"size":131,"mtime":1613490873554,"results":"261","hashOfConfig":"172"},{"size":615,"mtime":1613475065090,"results":"262","hashOfConfig":"172"},{"size":4192,"mtime":1614055942375,"results":"263","hashOfConfig":"172"},{"size":1340,"mtime":1615639912392,"results":"264","hashOfConfig":"172"},{"size":1869,"mtime":1613887993404,"results":"265","hashOfConfig":"172"},{"size":6877,"mtime":1614432661380,"results":"266","hashOfConfig":"172"},{"size":376,"mtime":1613819188566,"results":"267","hashOfConfig":"172"},{"size":1178,"mtime":1614075232404,"results":"268","hashOfConfig":"172"},{"size":1834,"mtime":1615725942538,"results":"269","hashOfConfig":"172"},{"size":4428,"mtime":1614421010443,"results":"270","hashOfConfig":"172"},{"size":819,"mtime":1614074947538,"results":"271","hashOfConfig":"172"},{"size":1206,"mtime":1614347100892,"results":"272","hashOfConfig":"172"},{"size":1621,"mtime":1614347082271,"results":"273","hashOfConfig":"172"},{"size":4446,"mtime":1613887183819,"results":"274","hashOfConfig":"172"},{"size":4433,"mtime":1615726497767,"results":"275","hashOfConfig":"172"},{"size":4203,"mtime":1614427885545,"results":"276","hashOfConfig":"172"},{"size":3800,"mtime":1615713422662,"results":"277","hashOfConfig":"172"},{"size":2411,"mtime":1614084773035,"results":"278","hashOfConfig":"172"},{"size":657,"mtime":1614337680551,"results":"279","hashOfConfig":"172"},{"size":2041,"mtime":1614349132046,"results":"280","hashOfConfig":"172"},{"size":3674,"mtime":1614420951599,"results":"281","hashOfConfig":"172"},{"size":3335,"mtime":1614624285046,"results":"282","hashOfConfig":"172"},{"size":2518,"mtime":1615728966363,"results":"283","hashOfConfig":"172"},{"size":902,"mtime":1614946896233,"results":"284","hashOfConfig":"172"},{"size":914,"mtime":1614857364406,"results":"285","hashOfConfig":"172"},{"size":1394,"mtime":1614863689112,"results":"286","hashOfConfig":"172"},{"size":2064,"mtime":1614876790192,"results":"287","hashOfConfig":"172"},{"size":726,"mtime":1614951646186,"results":"288","hashOfConfig":"172"},{"size":732,"mtime":1614951654452,"results":"289","hashOfConfig":"172"},{"size":735,"mtime":1614951661833,"results":"290","hashOfConfig":"172"},{"size":729,"mtime":1614951667173,"results":"291","hashOfConfig":"172"},{"size":1211,"mtime":1614948602605,"results":"292","hashOfConfig":"172"},{"size":3458,"mtime":1614951596247,"results":"293","hashOfConfig":"172"},{"size":6137,"mtime":1615722373716,"results":"294","hashOfConfig":"172"},{"size":95,"mtime":1615119305030,"results":"295","hashOfConfig":"172"},{"size":1284,"mtime":1615309088618,"results":"296","hashOfConfig":"172"},{"size":382,"mtime":1615309080516,"results":"297","hashOfConfig":"172"},{"size":1939,"mtime":1615309088612,"results":"298","hashOfConfig":"172"},{"size":7242,"mtime":1615644189191,"results":"299","hashOfConfig":"172"},{"size":6743,"mtime":1615652831939,"results":"300","hashOfConfig":"172"},{"size":1149,"mtime":1615653024775,"results":"301","hashOfConfig":"172"},{"size":376,"mtime":1615308333852,"results":"302","hashOfConfig":"172"},{"size":4558,"mtime":1615726336465,"results":"303","hashOfConfig":"172"},{"size":7573,"mtime":1615713013237,"results":"304","hashOfConfig":"172"},{"size":397,"mtime":1615309213516,"results":"305","hashOfConfig":"172"},{"size":2114,"mtime":1615309221746,"results":"306","hashOfConfig":"172"},{"size":1429,"mtime":1615309221733,"results":"307","hashOfConfig":"172"},{"size":1280,"mtime":1615301489435,"results":"308","hashOfConfig":"172"},{"size":4876,"mtime":1615712694008,"results":"309","hashOfConfig":"172"},{"size":1667,"mtime":1615308103041,"results":"310","hashOfConfig":"172"},{"size":3678,"mtime":1615309116535,"results":"311","hashOfConfig":"172"},{"size":4452,"mtime":1615309116818,"results":"312","hashOfConfig":"172"},{"size":4431,"mtime":1615645772247,"results":"313","hashOfConfig":"172"},{"size":4435,"mtime":1615309116877,"results":"314","hashOfConfig":"172"},{"size":4965,"mtime":1615713527364,"results":"315","hashOfConfig":"172"},{"size":4562,"mtime":1615713379786,"results":"316","hashOfConfig":"172"},{"size":4540,"mtime":1615309203416,"results":"317","hashOfConfig":"172"},{"size":1465,"mtime":1615301545611,"results":"318","hashOfConfig":"172"},{"size":4467,"mtime":1615309203415,"results":"319","hashOfConfig":"172"},{"size":1782,"mtime":1615308143466,"results":"320","hashOfConfig":"172"},{"size":3249,"mtime":1615645978034,"results":"321","hashOfConfig":"172"},{"size":3688,"mtime":1615309380373,"results":"322","hashOfConfig":"172"},{"size":3275,"mtime":1615712878283,"results":"323","hashOfConfig":"172"},{"size":802,"mtime":1615308224978,"results":"324","hashOfConfig":"172"},{"size":938,"mtime":1615308223682,"results":"325","hashOfConfig":"172"},{"size":853,"mtime":1615308224979,"results":"326","hashOfConfig":"172"},{"size":6011,"mtime":1615728194639,"results":"327","hashOfConfig":"172"},{"size":9591,"mtime":1615727982421,"results":"328","hashOfConfig":"172"},{"size":463,"mtime":1615490394305,"results":"329","hashOfConfig":"172"},{"size":433,"mtime":1615490371715,"results":"330","hashOfConfig":"172"},{"size":557,"mtime":1615490469139,"results":"331","hashOfConfig":"172"},{"size":581,"mtime":1615490500492,"results":"332","hashOfConfig":"172"},{"size":638,"mtime":1615490862438,"results":"333","hashOfConfig":"172"},{"size":769,"mtime":1615492134182,"results":"334","hashOfConfig":"172"},{"size":1169,"mtime":1615301460876,"results":"335","hashOfConfig":"172"},{"size":3664,"mtime":1615652823906,"results":"336","hashOfConfig":"172"},{"size":4443,"mtime":1615309139153,"results":"337","hashOfConfig":"172"},{"size":3672,"mtime":1615309130301,"results":"338","hashOfConfig":"172"},{"size":1598,"mtime":1615308124022,"results":"339","hashOfConfig":"172"},{"size":3705,"mtime":1615653055015,"results":"340","hashOfConfig":"172"},{"size":3335,"mtime":1615309393445,"results":"341","hashOfConfig":"172"},{"size":4372,"mtime":1615309139153,"results":"342","hashOfConfig":"172"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},"1u8wb1x",{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14vz1v0",{"filePath":"348","messages":"349","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"345"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"345"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"345"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"402"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"446"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"345"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"345"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"455"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"459"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"345"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"345"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"345"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"459"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"345"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"345"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"345"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"345"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"459"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"345"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"345"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"345"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"345"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"345"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"345"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"345"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"345"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"345"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"345"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"345"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"345"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"345"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"345"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"345"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"345"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"345"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"345"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"345"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"345"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"345"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"345"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"345"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"345"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"641","usedDeprecatedRules":"345"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"345"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"345"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"345"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"345"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"345"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"345"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"345"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"345"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"345"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"345"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"345"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701","usedDeprecatedRules":"345"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"345"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"345"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"730","usedDeprecatedRules":"345"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"345"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"345"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"345"},"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js",[],["744","745"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js",["746","747"],"import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport UserSignUp from './containers/user/sign-up';\nimport UserSignIn from './containers/user/sign-in';\nimport UserSignOut from './containers/user/sign-out';\nimport LayoutRoute from './route-layout';\nimport * as RoutePath from './constants/route-paths';\nimport Layout from './hoc/layout';\nimport DashboardLayout from './hoc/dashboard-layout';\nimport UserAuthCheck from './hoc/auth';\nimport HomePage from './containers/home/home';\nimport SearchOrganization from './containers/search/search-organization';\nimport SearchEvent from './containers/search/search-event';\n\nimport IndividualBasicInfo from './containers/individual/individual-basic-info';\nimport IndividualInvolvement from './containers/individual/individual-involvement';\nimport IndividualPrivacy from './containers/individual/individual-privacy';\n// import IndividualList from './containers/individual/individual-list';\nimport IndividualDetails from './containers/individual/individual-details';\n\nimport OrganizationBasicInfo from './containers/organization/organization-basic-info';\nimport OrganizationServiceInfo from './containers/organization/organization-service-info';\nimport OrganizationInternalLink from './containers/organization/organization-internal-link';\n// import OrganizationList from './containers/organization/organization-list';\nimport OrganizationDetails from './containers/organization/organization-details';\nimport Messages from './containers/message/messages';\n\n// POST\nimport ManageNews from './containers/news/manage-news';\n\n// EVENTS\nimport CreateEvent from './containers/event/create-event';\nimport DisplayEvent from './containers/event/display-event';\nimport ListingEvents from './containers/event/listing-events';\nimport ManageEvents from './containers/event/manage-events';\n\n// PROJECTS\nimport CreateProject from './containers/project/create-project';\nimport DisplayProject from './containers/project/display-project';\nimport ListingProjects from './containers/project/listing-projects';\nimport ManageProjects from './containers/project/manage-projects';\n\n// POSTS\nimport CreatePost from './containers/post/create-post';\nimport DisplayPost from './containers/post/display-post';\nimport ListingPosts from './containers/post/listing-posts';\nimport ManagePosts from './containers/post/manage-posts';\n\n// VOLUNTEERING\nimport CreateVolunteering from './containers/volunteering/create-volunteering';\nimport DisplayVolunteering from './containers/volunteering/display-volunteering';\nimport ListingVolunteerings from './containers/volunteering/listing-volunteerings';\nimport ManageVolunteerings from './containers/volunteering/manage-volunteerings';\n\n//COMMUNITY\nimport CommunityFriends from './containers/community/friends';\nimport CommunityFollowers from './containers/community/followers';\nimport CommunityFollowings from './containers/community/followings';\nimport CommunityRequests from './containers/community/requests';\n\nconst allRoles = ['individual', 'organization', 'admin'];\nconst individualAndAdminRoles = ['individual', 'admin'];\nconst organizationAndAdminRoles = [, 'organization', 'admin'];\nconst adminRoles = ['admin'];\nconst Routes = () => {\n    return (\n        <Switch>\n            <LayoutRoute path={RoutePath.signUpPage} exact component={UserAuthCheck(UserSignUp, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signInPage} exact component={UserAuthCheck(UserSignIn, [], false)} layout={Layout} />\n            <LayoutRoute path={RoutePath.signOutPage} exact component={UserSignOut} layout={Layout} />\n\n            <LayoutRoute path={RoutePath.individualCompleteBasicInfoPage} exact component={UserAuthCheck(IndividualBasicInfo, individualAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompleteInvolvementPage} exact component={UserAuthCheck(IndividualInvolvement, ['individual', 'admin'], true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.individualCompletePrivacyPage} exact component={UserAuthCheck(IndividualPrivacy, ['individual', 'admin'], true)} layout={Layout} />\n\n            <LayoutRoute path={RoutePath.individualEditBasicInfoPage} exact component={UserAuthCheck(IndividualBasicInfo, ['individual', 'admin'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.individualEditInvolvementPage} exact component={UserAuthCheck(IndividualInvolvement, ['individual', 'admin'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.individualEditPrivacyPage} exact component={UserAuthCheck(IndividualPrivacy, ['individual', 'admin'], true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.individualDetailsPage} exact component={UserAuthCheck(IndividualDetails, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.organizationCompleteBasicInfoPage} exact component={UserAuthCheck(OrganizationBasicInfo, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteServiceInfoPage} exact component={UserAuthCheck(OrganizationServiceInfo, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationCompleteInternalLinkPage} exact component={UserAuthCheck(OrganizationInternalLink, organizationAndAdminRoles, true)} layout={Layout} />\n            <LayoutRoute path={RoutePath.organizationDetailsPage} exact component={UserAuthCheck(OrganizationDetails, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.organizationEditBasicInfoPage} exact component={UserAuthCheck(OrganizationBasicInfo, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationEditServiceInfoPage} exact component={UserAuthCheck(OrganizationServiceInfo, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationEditInternalLinkPage} exact component={UserAuthCheck(OrganizationInternalLink, organizationAndAdminRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path={RoutePath.homePage} exact component={UserAuthCheck(HomePage, allRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.organizationSearchPage} exact component={UserAuthCheck(SearchOrganization, allRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventSearchPage} exact component={UserAuthCheck(SearchEvent, allRoles, true)} layout={DashboardLayout} />\n\n            <LayoutRoute path=\"/messages\" exact component={Messages} layout={DashboardLayout} />\n            {/* POST */}\n            <LayoutRoute path={RoutePath.newsManagePage} exact component={UserAuthCheck(ManageNews, ['organization'], true)} layout={DashboardLayout} />\n\n            {/* EVENTS */}\n            <LayoutRoute path={RoutePath.eventCreatePage} exact component={UserAuthCheck(CreateEvent, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventEditPage + ':eventId'} exact component={UserAuthCheck(CreateEvent, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventListByOrganizationPage} exact component={UserAuthCheck(ManageEvents, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventListPage} exact component={UserAuthCheck(ListingEvents, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.eventDetailsPage + ':eventId'} exact component={UserAuthCheck(DisplayEvent, allRoles, true)} layout={DashboardLayout} />\n\n            {/* PROJECTS */}\n            <LayoutRoute path={RoutePath.projectCreatePage} exact component={UserAuthCheck(CreateProject, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectEditPage + ':projectId'} exact component={UserAuthCheck(CreateProject, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectListByOrganizationPage} exact component={UserAuthCheck(ManageProjects, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectListPage} exact component={UserAuthCheck(ListingProjects, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.projectDetailsPage + ':projectId'} exact component={UserAuthCheck(DisplayProject, allRoles, true)} layout={DashboardLayout} />\n\n            {/* POSTS */}\n            <LayoutRoute path={RoutePath.postCreatePage} exact component={UserAuthCheck(CreatePost, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postEditPage + ':postId'} exact component={UserAuthCheck(CreatePost, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postListByOrganizationPage} exact component={UserAuthCheck(ManagePosts, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postListPage} exact component={UserAuthCheck(ListingPosts, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.postDetailsPage + ':postId'} exact component={UserAuthCheck(DisplayPost, allRoles, true)} layout={DashboardLayout} />\n\n            {/* VOLUNTEERING */}\n            <LayoutRoute path={RoutePath.volunteeringCreatePage} exact component={UserAuthCheck(CreateVolunteering, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringEditPage + ':volunteeringId'} exact component={UserAuthCheck(CreateVolunteering, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringListByOrganizationPage} exact component={UserAuthCheck(ManageVolunteerings, ['organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringListPage} exact component={UserAuthCheck(ListingVolunteerings, ['individual', 'organization'], true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.volunteeringDetailsPage + ':volunteeringId'} exact component={UserAuthCheck(DisplayVolunteering, allRoles, true)} layout={DashboardLayout} />\n\n            {/* COMMUNITY */}\n            <LayoutRoute path={RoutePath.communityFriendListPage} exact component={UserAuthCheck(CommunityFriends, individualAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.communityFollowerListPage} exact component={UserAuthCheck(CommunityFollowers, individualAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.communityFollowingListPage} exact component={UserAuthCheck(CommunityFollowings, individualAndAdminRoles, true)} layout={DashboardLayout} />\n            <LayoutRoute path={RoutePath.communityRequestListPage} exact component={UserAuthCheck(CommunityRequests, individualAndAdminRoles, true)} layout={DashboardLayout} />\n        </Switch>\n    );\n};\nexport default Routes;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js",["748"],"import React, { Component } from 'react';\r\nimport Header from '../components/layout/header';\r\nimport Footer from '../components/layout/footer';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport { connect } from 'react-redux';\r\nimport SideNav, { NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { FaHome, FaSearch, FaConnectdevelop, FaCalendarAlt, FaUserCog, FaEnvelope, FaNewspaper } from 'react-icons/fa';\r\nimport { BsFilePost } from 'react-icons/bs';\r\nimport * as RoutePath from '../constants/route-paths';\r\nclass DashboardLayout extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n    individualSideNav = () => {\r\n        return (\r\n            <SideNav\r\n                onSelect={(selected) => {\r\n                    this.props.history.push(selected);\r\n                }}\r\n            >\r\n                <SideNav.Toggle />\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaHome size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Home</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/search/organization\">\r\n                        <NavIcon>\r\n                            <FaSearch size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Discover</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.communityFriendListPage}>\r\n                        <NavIcon>\r\n                            <FaConnectdevelop size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Community</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaCalendarAlt size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Calender</NavText>\r\n                    </NavItem>\r\n\r\n                    <NavItem eventKey=\"/messages\">\r\n                        <NavIcon>\r\n                            <FaEnvelope size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Mails</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.individualEditBasicInfoPage}>\r\n                        <NavIcon>\r\n                            <FaUserCog size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Profile Settings</NavText>\r\n\r\n                        <NavItem eventKey={RoutePath.individualEditBasicInfoPage}>\r\n                            <NavText>Basic Information</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.individualEditInvolvementPage}>\r\n                            <NavText>Involvement</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.individualEditPrivacyPage}>\r\n                            <NavText>Privacy</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.userCommonSettingsPage}>\r\n                            <NavText>Account Settings</NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n        );\r\n    };\r\n    organizationSideNav = () => {\r\n        return (\r\n            <SideNav\r\n                onSelect={(selected) => {\r\n                    this.props.history.push(selected);\r\n                }}\r\n            >\r\n                <SideNav.Toggle />\r\n                <SideNav.Nav defaultSelected=\"home\">\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaHome size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Home</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/search/organization\">\r\n                        <NavIcon>\r\n                            <FaSearch size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Discover</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaConnectdevelop size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Community</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/\">\r\n                        <NavIcon>\r\n                            <FaCalendarAlt size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Calender</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.newsManagePage}>\r\n                        <NavIcon>\r\n                            {/* <BsFilePost size={24} /> */}\r\n                            <FaNewspaper size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Posts</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey=\"/messages\">\r\n                        <NavIcon>\r\n                            <FaEnvelope size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Mails</NavText>\r\n                    </NavItem>\r\n                    <NavItem eventKey={RoutePath.organizationEditBasicInfoPage}>\r\n                        <NavIcon>\r\n                            <FaUserCog size={24} />\r\n                        </NavIcon>\r\n                        <NavText>Profile Settings</NavText>\r\n\r\n                        <NavItem eventKey={RoutePath.organizationEditBasicInfoPage}>\r\n                            <NavText>Basic Information</NavText>\r\n                        </NavItem>\r\n                        <NavItem eventKey={RoutePath.organizationEditServiceInfoPage}>\r\n                            <NavText>Service Information</NavText>\r\n                        </NavItem>\r\n                        {/* <NavItem eventKey={RoutePath.organizationEditInternalLinkPage}>\r\n                <NavText>Internal Link</NavText>\r\n            </NavItem> */}\r\n                        <NavItem eventKey={RoutePath.userCommonSettingsPage}>\r\n                            <NavText>Account Settings</NavText>\r\n                        </NavItem>\r\n                    </NavItem>\r\n                </SideNav.Nav>\r\n            </SideNav>\r\n        );\r\n    };\r\n    adminSideNav = () => {\r\n        return <></>;\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props.auth);\r\n        const isAuth = this.props.auth.isAuth;\r\n        const user = this.props.auth.user;\r\n\r\n        return (\r\n            <div>\r\n                <Header isAuth={isAuth || false} user={user || {}} />\r\n                <div className=\"full-page-div\">\r\n                    <div>\r\n                        {user && user.userType === 'individual' && this.individualSideNav()}\r\n                        {user && user.userType === 'organization' && this.organizationSideNav()}\r\n                        {user && user.userType === 'admin' && this.adminSideNav()}\r\n                        {/* </SideNav.Nav>\r\n                        </SideNav> */}\r\n                        <main className=\"main-div\">{this.props.children}</main>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.Auth.auth,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(withRouter(DashboardLayout));\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js",["749","750"],"import React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\n\r\nexport const InputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-4\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-8\">\r\n                <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputRenderWithLargeLabel = ({ input, label, type, placeholder, min, max, unit, step, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-6\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-6\">\r\n                {type === 'number' ? (\r\n                    <div className=\"input-group\">\r\n                        <input {...input} placeholder={placeholder} type={type} className=\"form-control\" min={min} max={max} unit={unit} step={step} />\r\n                        {unit && (\r\n                            <div className=\"input-group-append\">\r\n                                <span className=\"input-group-text\">{unit}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                )}\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const TextRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <textarea {...input} placeholder={placeholder} rows=\"5\" className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const CheckBoxRender = ({ input, label, type, placeholder, col1, col2, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <input {...input} type={type} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputNumberRender = ({ input, label, type, placeholder, step, min, max, unit, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className=\"col-sm-3 col-form-label\">{label}</label>\r\n            <div className=\"col-sm-8\">\r\n                <div className=\"input-group\">\r\n                    <input style={{ float: 'left' }} {...input} placeholder={placeholder} step={step} min={min} max={max} type={type} className=\"form-control\" />\r\n                    <span className=\"InputNumberUnitSpan\">{unit}</span>\r\n                </div>\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SaInputRender = ({ input, label, type, placeholder, meta: { asyncValidating, touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div style={{ marginBottom: '10px' }} className={className}>\r\n            <label className=\"col-sm-4 signUpLabel\">{label}</label>\r\n\r\n            <div className={asyncValidating ? 'async-validating col-sm-8' : 'col-sm-8'}>\r\n                <input {...input} placeholder={placeholder} type={type} className={'form-control ' + input.name} />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SelectRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2}>\r\n                <select {...input} className=\"form-control\">\r\n                    {children}\r\n                </select>\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const HalfInputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <>\r\n            <input {...input} placeholder={placeholder} type={type} className=\"form-control half-text-input\" />\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </>\r\n    );\r\n};\r\n\r\n// export const SwitchRender = ({ input, label, type, id, checked, placeholder, meta: { touched, error, warning } }) => {\r\n//     const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n//     return (\r\n//         <div className={className}>\r\n//             <div className=\"col-sm-9\">\r\n//                 <label className=\"form-label\">{label}</label>\r\n//             </div>\r\n\r\n//             <div className=\"col-sm-3 custom-control custom-switch\">\r\n//                 {/* <input type=\"checkbox\" className=\"custom-control-input\" id={id} checked={checked} /> */}\r\n//                 <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\"></input>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\nexport const SwitchRender = ({ input, label, type, placeholder, id, defaultChecked, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-6\" htmlFor={id}>\r\n                {label}\r\n            </label>\r\n            <div className=\"col-sm-3 custom-control custom-switch\" style={{ marginLeft: 20 }}>\r\n                <input {...input} type=\"checkbox\" className=\"custom-control-input\" id={id} defaultChecked={input.value} />\r\n                <label className=\"custom-control-label\" htmlFor={id}>\r\n                    {/* Toggle this switch element */}\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DatePickerRender = ({ input, label, minDate, selectedDate, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-4\">{label}</label>\r\n            <div className=\"col-sm-8 date-picker-div\" style={{ zIndex: zIndex }}>\r\n                <DatePicker className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CreatableMultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <CreatableSelect {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} placeholder={placeholder} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const MultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <Select {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const DateTimePickerRender = ({ input, label, minDate, selectedDate, col1, col2, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'form-label col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2} style={{ zIndex: zIndex }}>\r\n                <DatePicker showTimeSelect className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy h:mm aa\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js",["751","752","753"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport Step1 from '../../components/profile_step/step_1';\nimport Step2 from '../../components/profile_step/step_2';\nimport Step3 from '../../components/profile_step/step_3';\nimport Step4 from '../../components/profile_step/step_4';\nimport Step5 from '../../components/profile_step/step_5';\nimport Step6 from '../../components/profile_step/step_6';\nimport Step7 from '../../components/profile_step/step_7';\nimport { getUserInformation, setUserInformation, getAllAreaOfInterests } from '../../actions';\nimport { NotificationManager } from 'react-notifications';\nconst CompleteProfile = (props) => {\n    const [stepId, setStepId] = useState(2);\n    const [loading, setLoading] = useState(false);\n    const [image, setImage] = useState();\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        props.dispatch(getAllAreaOfInterests());\n        if (user && user._id) {\n            props.dispatch(getUserInformation(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setUserResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setStepId(props.setUserResponse.stepCompleted + 1);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setUserResponse]);\n    const changeStep = () => {\n        if (props.user && props.user.stepCompleted) {\n            setStepId(props.user.stepCompleted + 1);\n        }\n    };\n    const onSubmit = (values) => {\n        setLoading(true);\n        console.log('🚀 ~ file: complete-profile.js ~ line 44 ~ onSubmit ~ values', values);\n        if (stepId === 2) {\n            if (values.basicInfo) values.basicInfo.photo = image;\n            else\n                values.basicInfo = {\n                    photo: image,\n                };\n        }\n        props.dispatch(setUserInformation(props.auth.user._id, stepId, props.user, values));\n        setLoading(false);\n    };\n    useEffect(() => {\n        changeStep();\n    }, [props.user]);\n    const handleBackButton = (stepId) => {\n        if (stepId > 2) {\n            setStepId(stepId - 1);\n        }\n    };\n    const handleSkipButton = (stepId) => {\n        if (stepId < 5) {\n            setStepId(stepId + 1);\n        }\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setImage(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const steps = [\n        <Step1 />,\n        <Step1 />,\n        <Step2\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            image={image}\n            handlePictureUpload={handlePictureUpload}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step3\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            areaOfInterests={props.areaOfInterest.success ? props.areaOfInterest.areaOfInterests : []}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step4\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step5\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n        />,\n        <Step6 />,\n        <Step7 />,\n    ];\n    if (loading) return <LoadingAnim />;\n    else return steps[stepId];\n};\nconst mapStateToProps = (state) => {\n    const user = state.User.getUser.user;\n    const individual = state.User.getUser.individual;\n    const organization = state.User.getUser.organization;\n    let initialValues = {};\n    if (user && user.userType) {\n        if (user.userType === 'individual') initialValues = individual;\n        else if (user.userType === 'organization') initialValues = organization;\n    }\n    const setUserResponse = state.User.setUser;\n\n    return {\n        user,\n        individual,\n        organization,\n        initialValues,\n        setUserResponse,\n        areaOfInterest: state.AreaOfInterest.allAreaOfInterest,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CompleteProfile',\n        enableReinitialize: true,\n    })(CompleteProfile),\n);\n",["754","755"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_1.js",[],["756","757"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_3.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_4.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_2.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_5.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_6.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_7.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/area-of-interest-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js",[],["758","759"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-event.js",["760","761"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport EventListView from '../../components/event/event-card-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllEventsByFilter } from '../../actions/event-action';\nimport EventMapView from '../../components/event/event-map-view';\nimport SearchMenu from '../../components/search/search-menu';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport Select from 'react-select';\nimport Pagination from 'react-js-pagination';\nimport { defaultCurrentLocation } from '../../constants/default-user-information';\nconst SearchEvent = (props) => {\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [filter, setFilter] = useState({\n        title: '',\n        impactArea: [],\n    });\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(position);\n            if (position) {\n                const coords = position.coords;\n                setCurrentLocation({\n                    latitude: coords.latitude,\n                    longitude: coords.longitude,\n                });\n            }\n        });\n    }, []);\n    const changeFilter = (key, value) => {\n        let filter_ = filter;\n        filter[key] = value;\n        console.log(filter_);\n        setFilter(filter_);\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllEventsByFilter(filter));\n        setLoading(false);\n        setActivePage(1);\n    };\n    const gotoEventDetails = (userId) => {\n        props.history.push(`/event/details/${userId}`);\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getAllGlobalImpactAreas());\n\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    if (loading) return <LoadingAnim />;\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col lg={4}>\n                    <SearchMenu selected=\"event\" />\n                    <hr />\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Event title\"\n                        className=\"form-control\"\n                        onChange={(e) => {\n                            changeFilter('title', e.target.value);\n                        }}\n                    />\n                    <br />\n                    <label>Impact Area</label>\n                    <Select onChange={(value) => changeFilter('impactArea', value)} isMulti={true} options={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []} />\n                    <br />\n\n                    <br />\n                    <br />\n                    <Button\n                        onClick={() => {\n                            handleOnApplyFilter();\n                        }}\n                    >\n                        Search\n                    </Button>\n                    <div style={{ height: 25 }} />\n                </Col>\n                <Col lg={8}>\n                    <Nav\n                        variant=\"pills\"\n                        activeKey={viewType}\n                        onSelect={(eventKey) => {\n                            setViewType(eventKey);\n                        }}\n                        size=\"sm\"\n                    >\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"list\" title=\"list\">\n                                List\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"map\" title=\"map\">\n                                Map\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <hr />\n                    {viewType === 'list' && (\n                        <>\n                            <Pagination\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                                activePage={activePage}\n                                itemsCountPerPage={30}\n                                totalItemsCount={props.getAllEventsResponse.success ? props.getAllEventsResponse.allEvents.length : 0}\n                                pageRangeDisplayed={5}\n                                onChange={(page) => {\n                                    setActivePage(page);\n                                }}\n                            />\n                            <EventListView\n                                allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.allEvents.slice((activePage - 1) * 30, activePage * 30 - 1) : []}\n                                gotoEventDetails={gotoEventDetails}\n                            />\n                        </>\n                    )}\n                    {viewType === 'map' && (\n                        <EventMapView\n                            allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.allEvents.slice((activePage - 1) * 30, activePage * 30 - 1) : []}\n                            zoom={6}\n                            currentLocation={currentLocation}\n                        />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getAllEventsResponse = state.Event.getAllEvents;\n    return {\n        getImpactAreaResponse,\n        getAllEventsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchEvent);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js",["762","763","764"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport OrganizationListView from '../../components/organization/organization-list-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllOrganizationsByFilter } from '../../actions/organization-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport SearchMenu from '../../components/search/search-menu';\nimport FilterOrganization from '../../components/search/filter-organization';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport OrganizationMapView from '../../components/organization/organization-map-view';\nimport Pagination from 'react-js-pagination';\nimport { defaultCurrentLocation } from '../../constants/default-user-information';\n\nconst SearchOrganization = (props) => {\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [filter, setFilter] = useState({\n        name: '',\n        impactAreas: [],\n        organizationTypes: [],\n        serviceArea: '',\n        address: '',\n        keyword: '',\n        keywords: [],\n    });\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(position);\n            if (position) {\n                const coords = position.coords;\n                setCurrentLocation({\n                    latitude: coords.latitude,\n                    longitude: coords.longitude,\n                });\n            }\n        });\n    }, []);\n    const resetFilter = () => {\n        setFilter({\n            name: '',\n            impactAreas: [],\n            organizationTypes: [],\n            serviceArea: '',\n            address: '',\n            keyword: '',\n            keywords: [],\n        });\n    };\n    const changeFilter = (key, value) => {\n        console.log('🚀 ~ file: search-organization.js ~ line 53 ~ changeFilter ~ key, value', key, value);\n        let filter_ = filter;\n        filter[key] = value;\n        console.log(filter_);\n        setFilter({ ...filter_ });\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllOrganizationsByFilter(filter));\n        setLoading(false);\n        setActivePage(1);\n        console.log('FFF', filter);\n    };\n    const gotoOrganizationDetails = (userId) => {\n        props.history.push(`/organization/details/${userId}`);\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getAllGlobalImpactAreas());\n            props.dispatch(getAllOrganizationTypes());\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col lg={4}>\n                        <SearchMenu selected=\"organization\" />\n                        <hr />\n                        <FilterOrganization\n                            changeFilter={changeFilter}\n                            resetFilter={resetFilter}\n                            handleOnApplyFilter={handleOnApplyFilter}\n                            filter={filter}\n                            organizationTypes={props.getOrganizationTypeResponse?.success ? props.getOrganizationTypeResponse.organizationTypes : []}\n                            impactAreas={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []}\n                        />\n                    </Col>\n                    <Col lg={8}>\n                        <Nav\n                            variant=\"pills\"\n                            activeKey={viewType}\n                            onSelect={(eventKey) => {\n                                setViewType(eventKey);\n                            }}\n                            size=\"sm\"\n                        >\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"list\" title=\"list\">\n                                    List\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"map\" title=\"map\">\n                                    Map\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <hr />\n                        {viewType === 'list' && (\n                            <>\n                                <Pagination\n                                    itemClass=\"page-item\"\n                                    linkClass=\"page-link\"\n                                    activePage={activePage}\n                                    itemsCountPerPage={30}\n                                    totalItemsCount={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations.length : 0}\n                                    pageRangeDisplayed={5}\n                                    onChange={(page) => {\n                                        setActivePage(page);\n                                    }}\n                                />\n                                <OrganizationListView\n                                    allOrganizations={\n                                        props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations.slice((activePage - 1) * 30, activePage * 30 - 1) : []\n                                    }\n                                    gotoOrganizationDetails={gotoOrganizationDetails}\n                                />\n                            </>\n                        )}\n                        {viewType === 'map' && (\n                            <OrganizationMapView\n                                allOrganizations={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.allOrganizations : []}\n                                gotoOrganizationDetails={gotoOrganizationDetails}\n                                zoom={8}\n                                currentLocation={currentLocation}\n                            />\n                        )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getOrganizationTypeResponse = state.OrganizationType.getAllOrganizationTypes;\n    const getAllOrganizationsResponse = state.Organization.getAllOrganizations;\n    return {\n        getImpactAreaResponse,\n        getAllOrganizationsResponse,\n        getOrganizationTypeResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchOrganization);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js",[],["765","766"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js",["767"],"import React from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport { Form, FormControl } from 'react-bootstrap';\nfunction App() {\n    const movieItems = [\n        {\n            id: 0,\n            title: 'Titanic',\n            description: 'A movie about love',\n        },\n        {\n            id: 1,\n            title: 'Dead Poets Society',\n            description: 'A movie about poetry and the meaning of life',\n        },\n        {\n            id: 2,\n            title: 'Terminator 2',\n            description: 'A robot from the future is sent back in time',\n        },\n        {\n            id: 3,\n            title: 'Alien 2',\n            description: 'Ripley is back for a new adventure',\n        },\n    ];\n\n    const handleOnSearch = (string, results) => {\n        // onSearch will have as the first callback parameter\n        // the string searched and for the second the results.\n        console.log(string, results);\n    };\n\n    const handleOnSelect = (item) => {\n        // the item selected\n        console.log(item);\n    };\n\n    const handleOnFocus = () => {\n        console.log('Focused');\n    };\n\n    return (\n        <div style={{ minWidth: 100, zIndex: 5000 }}>\n            <Form inline>\n                {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" /> */}\n                {/* <Button variant=\"outline-light\">Search</Button> */}\n\n                <ReactSearchAutocomplete\n                    className=\"form-control mr-sm-2\"\n                    items={movieItems}\n                    fuseOptions={{ keys: ['title', 'description'] }} // Search on both fields\n                    resultStringKeyName=\"title\" // String to display in the results\n                    onSearch={handleOnSearch}\n                    onSelect={handleOnSelect}\n                    onFocus={handleOnFocus}\n                    showIcon={false}\n                    styling={{\n                        height: '34px',\n                        border: '1px solid darkgreen',\n                        borderRadius: '4px',\n                        backgroundColor: 'white',\n                        boxShadow: 'none',\n                        hoverBackgroundColor: 'lightgreen',\n                        color: 'darkgreen',\n                        fontSize: '12px',\n                        fontFamily: 'Courier',\n                        iconColor: 'green',\n                        lineColor: 'lightgreen',\n                        placeholderColor: 'darkgreen',\n                        zIndex: 5000,\n                    }}\n                />\n            </Form>\n        </div>\n    );\n}\n\nexport default App;\n",["768","769"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js",["770","771","772","773"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInvolvement, setInvolvement, clearInvolvement } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualInvolvementForm from '../../components/individual/individual-involvement-form';\nimport { individualCompleteBasicInfoPage, individualCompletePrivacyPage } from '../../constants/route-paths';\n\nconst Involvement = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInvolvement(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInvolvementResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompletePrivacyPage);\n                props.dispatch(clearInvolvement());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, involvement } = props.getInvolvementResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInvolvementResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInvolvementResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInvolvement(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(individualCompletePrivacyPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualInvolvementForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInvolvementResponse = state.Individual.getInvolvement;\n    const setInvolvementResponse = state.Individual.setInvolvement;\n    let initialValues = {};\n\n    if (getInvolvementResponse.success) {\n        initialValues = getInvolvementResponse.involvement;\n    }\n    console.log('initialValues', initialValues);\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInvolvementResponse,\n        setInvolvementResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Involvement',\n        enableReinitialize: true,\n    })(Involvement),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js",["774","775","776"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/individual-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualBasicInfoForm from '../../components/individual/individual-basic-info-form';\nimport { individualCompleteInvolvementPage } from '../../constants/route-paths';\n// import { getLanguagesByValues } from '../../constants/languages';\nimport { getAllLanguagesByUser } from '../../actions/language-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { getRacesByValues } from '../../constants/races';\n\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: '',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllLanguagesByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            props.dispatch(getBasicInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompleteInvolvementPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            races: values.races && values.races.length > 0 ? values.races.map((race) => race.value) : [],\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualBasicInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                allLanguages={props.getLanguageResponse.success ? props.getLanguageResponse.languages : []}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log('ST', state);\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getLanguageResponse = state.Language.getLanguagesByUser;\n    const getBasicInfoResponse = state.Individual.getBasicInfo;\n    const setBasicInfoResponse = state.Individual.setBasicInfo;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues) {\n            if (initialValues.races && initialValues.races.length > 0 && typeof initialValues.races[0] === 'string') initialValues.races = getRacesByValues(initialValues.races);\n            if (initialValues.address && !initialValues.address.country) {\n                initialValues.address.country = 'US';\n            } else if (!initialValues.address) {\n                initialValues.address = {\n                    country: 'US',\n                };\n            }\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getSkillResponse,\n        getLanguageResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js",["777","778","779","780"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPrivacy, setPrivacy, clearPrivacy } from '../../actions/individual-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualPrivacyForm from '../../components/individual/individual-privacy-form';\nimport { individualCompleteInvolvementPage, homePage } from '../../constants/route-paths';\nconst Privacy = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getPrivacy(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setPrivacyResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.dispatch(clearPrivacy());\n                props.history.push(homePage);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, privacy } = props.getPrivacyResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getPrivacyResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setPrivacyResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setPrivacy(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteInvolvementPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualPrivacyForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getPrivacyResponse = state.Individual.getPrivacy;\n    const setPrivacyResponse = state.Individual.setPrivacy;\n    let initialValues = {};\n\n    if (getPrivacyResponse.success) {\n        initialValues = getPrivacyResponse.privacy;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPrivacyResponse,\n        setPrivacyResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Privacy',\n        enableReinitialize: true,\n    })(Privacy),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js",["781","782"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/individual-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/individual/individual-details-view';\nconst IndividualDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const individualUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(individualUserId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView individual={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.individual : {}} />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Individual.getPublicInfo;\n\n    return {\n        getPublicInfoResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(IndividualDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js",["783","784","785"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/organization-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationBasicInfoForm from '../../components/organization/organization-basic-info-form';\nimport { organizationCompleteServiceInfoPage } from '../../constants/route-paths';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: 'US',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getBasicInfo(user._id));\n        }\n        props.dispatch(getAllOrganizationTypes());\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(organizationCompleteServiceInfoPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address && basicInfo.address.country) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            organizationTypes: values.organizationTypes && values.organizationTypes.length > 0 ? values.organizationTypes.map((type) => type._id) : [],\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationBasicInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n                allOrganizationTypes={props.getAllOrganizationTypesResponse.success ? props.getAllOrganizationTypesResponse.organizationTypes : []}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getBasicInfoResponse = state.Organization.getBasicInfo;\n    const setBasicInfoResponse = state.Organization.setBasicInfo;\n    const getAllOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues.address && !initialValues.address.country) {\n            initialValues.address.country = 'US';\n        } else if (!initialValues.address) {\n            initialValues.address = {\n                country: 'US',\n            };\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getAllOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js",["786","787","788","789","790"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getServiceInfo, setServiceInfo, clearServiceInfo } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationServiceInfoForm from '../../components/organization/organization-service-info-form';\nimport { homePage, organizationCompleteBasicInfoPage, organizationCompleteInternalLinkPage } from '../../constants/route-paths';\n\nconst ServiceInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllOrganizationTypes());\n            props.dispatch(getServiceInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setServiceInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(homePage);\n                props.dispatch(clearServiceInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, serviceInfo } = props.getServiceInfoResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getServiceInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setServiceInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setServiceInfo(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(homePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationServiceInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allOrganizationTypes={props.getOrganizationTypesResponse.success ? props.getOrganizationTypesResponse.organizationTypes : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getServiceInfoResponse = state.Organization.getServiceInfo;\n    const setServiceInfoResponse = state.Organization.setServiceInfo;\n    const getOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n\n    if (getServiceInfoResponse.success) {\n        initialValues = getServiceInfoResponse.serviceInfo;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getServiceInfoResponse,\n        setServiceInfoResponse,\n        getOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'ServiceInfo',\n        enableReinitialize: true,\n    })(ServiceInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js",["791","792","793","794"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInternalLink, setInternalLink, clearInternalLink } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationInternalLinkForm from '../../components/organization/organization-internal-link-form';\nimport { organizationCompleteServiceInfoPage, homePage } from '../../constants/route-paths';\nconst InternalLink = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInternalLink(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInternalLinkResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(clearInternalLink());\n            props.history.push(homePage);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, internalLink } = props.getInternalLinkResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInternalLinkResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInternalLinkResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInternalLink(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteServiceInfoPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationInternalLinkForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInternalLinkResponse = state.Organization.getInternalLink;\n    const setInternalLinkResponse = state.Organization.setInternalLink;\n    let initialValues = {};\n\n    if (getInternalLinkResponse.success) {\n        initialValues = getInternalLinkResponse.internalLink;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInternalLinkResponse,\n        setInternalLinkResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'InternalLink',\n        enableReinitialize: true,\n    })(InternalLink),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js",["795"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getPublicInfo } from '../../actions/organization-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/organization/organization-details-view';\nimport { followUser, unfollowUser, checkIfFollower } from '../../actions/follow-action';\n// import { NotificationManager } from 'react-notifications';\nconst OrganizationDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [follows, setFollows] = useState(false);\n    const getInitialInfo = () => {\n        const organizationUserId = props.match.params.userId;\n        props.dispatch(getPublicInfo(organizationUserId));\n        const user = props.auth.user;\n        props.dispatch(checkIfFollower(user._id, props.match.params.userId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n    useEffect(() => {\n        const success = props.getCheckIfFollowerResponse;\n        if (success) {\n            setFollows(props.getCheckIfFollowerResponse.follows);\n        }\n    }, [props.getCheckIfFollowerResponse]);\n    const handleFollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(followUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleUnfollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(unfollowUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getFollowResponse;\n        if (success) {\n            setFollows(true);\n            // NotificationManager.success('You are following', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getFollowResponse]);\n    useEffect(() => {\n        const { success } = props.getUnfollowResponse;\n\n        if (success) {\n            setFollows(false);\n            // NotificationManager.success('You are unfollowing', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getUnfollowResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView\n                            organization={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.organization : {}}\n                            handleFollowClick={handleFollowClick}\n                            handleUnfollowClick={handleUnfollowClick}\n                            follows={follows}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.Organization.getPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(OrganizationDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js",["796","797","798"],"import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\n\nimport { Container, Row, Col, ProgressBar, Button, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { organizationHeaders } from '../../constants/step-headers';\n\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const allOrganizationTypes = props.allOrganizationTypes;\n    const editMode = props.editMode;\n    console.log('PROPS', props);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country ? props.stateAndCountry.country : 'US');\n    const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        {editMode ? (\n                            <h4>Basic Information</h4>\n                        ) : (\n                            <div>\n                                <p>Step {organizationHeaders[2].stepNo} of 5</p>\n                                <ProgressBar now={organizationHeaders[2].percent} />\n                                <br />\n                                <h4>{organizationHeaders[2].header}</h4>\n\n                                <div style={{ height: 20 }} />\n                            </div>\n                        )}\n                        <Row>\n                            <Col>\n                                <Field name=\"name\" type=\"text\" component={InputRender} label=\"Name\" placeholder=\"Your organization name...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" placeholder=\"000-0000-000\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"ein\" type=\"text\" component={InputRender} label=\"EIN\" placeholder=\"ABCD...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"website\" type=\"text\" component={InputRender} label=\"Website URL\" placeholder=\"www.abc.xyz\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"contactEmail\" type=\"text\" component={InputRender} label=\"Contact Email\" placeholder=\"help@abc.com\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"mission\" type=\"text\" component={TextRender} label=\"Mission\" placeholder=\"Your organization mission...\" col1={2} col2={10} />\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Your organization mission...\" col1={2} col2={10} />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"organizationTypes\" component={MultiSelectRender} label=\"Organization Type\" col1={3} col2={9} options={allOrganizationTypes} zIndex={2000} />\n                            </Col>\n                        </Row>\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js",["799","800"],"import React from 'react';\nimport { Field } from 'redux-form';\nimport { SwitchRender, SelectRender, InputRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { organizationHeaders } from '../../constants/step-headers';\nconst InternalLinkForm = (props) => {\n    const submitting = props.submitting;\n\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n\n                        <div>\n                            <p>Step {organizationHeaders[4].stepNo} of 5</p>\n                            <ProgressBar now={organizationHeaders[4].percent} />\n                            <br />\n                            <h4>{organizationHeaders[4].header}</h4>\n                        </div>\n\n                        <Field name=\"events\" type=\"text\" component={InputRender} label=\"Events link\" />\n                        <Field name=\"rss\" type=\"text\" component={InputRender} label=\"RSS link\" />\n                        <Field name=\"blog\" type=\"text\" component={InputRender} label=\"Blogs link\" />\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default InternalLinkForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js",["801","802"],"import React from 'react';\nimport { Container, Image, Row, Col, Badge } from 'react-bootstrap';\nimport moment from 'moment';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { getLanguagesByValues } from '../../constants/languages';\nimport { getRacesByValues } from '../../constants/races';\nimport { getGenderByValue } from '../../constants/genders';\nimport { defaultIndividualProfilePicture } from '../../constants/default-images';\nconst DetailsView = (props) => {\n    const individual = props.individual;\n    const infoRender = (label, value) => {\n        console.log(label, value);\n        if (value)\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value\n                            .toString()\n                            .split('\\n')\n                            .map((para, i) => (\n                                <p key={i} className=\"justify-text\">\n                                    {para}\n                                </p>\n                            ))}\n                    </Col>\n                </Row>\n            );\n        else return <></>;\n    };\n\n    const tagsRender = (label, tags) => {\n        console.log('🚀 ~ file: individual-details-view.js ~ line 48 ~ tagsRender ~ tags', tags);\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {tags.map((tag, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {tag.label}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            // if (address.street1) fullAddress += address.street1 + ', ';\n            // if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.code) fullAddress += address.code + '\\n';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + '\\n';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n\n    if (individual._id) {\n        const basicInfo = individual.basicInfo;\n        console.log('🚀 ~ file: individual-details-view.js ~ line 63 ~ DetailsView ~ basicInfo', basicInfo);\n        const involvement = individual.involvement;\n        const impactAreas = involvement.impactAreas;\n\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"right-align\" sm=\"2\">\n                        <Image className=\"left-image\" src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultIndividualProfilePicture} width=\"100%\" thumbnail />\n                    </Col>\n                    <Col sm=\"9\" className=\"left-border\">\n                        <h3>{basicInfo.firstName + ' ' + basicInfo.lastName}</h3>\n                        {/* {infoRender('Phone', basicInfo.phone)} */}\n                        {infoRender('Kids', basicInfo.kids)}\n                        {infoRender('Date Of Birth', moment(basicInfo.dateOfBirth).format('LL'))}\n                        {/* {tagsRender('Race', getRacesByValues(basicInfo.races))} */}\n                        {/* {infoRender('Gender', getGenderByValue(basicInfo.gender))} */}\n                        {tagsRender('Language Fluency', getLanguagesByValues(basicInfo.languages))}\n                        <br />\n                        {infoRender('Address', addressMaker(basicInfo.address))}\n                        <div style={{ height: 25 }} />\n                        <hr />\n                        <div style={{ height: 25 }} />\n                        {infoRender('About Me', involvement.communityInvolvement)}\n                        {tagsRender('Impact Area', impactAreas)}\n\n                        <div style={{ height: 25 }} />\n                    </Col>\n                </Row>\n                <div style={{ height: 25 }} />\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js",["803","804","805"],"import React from 'react';\nimport { Container, Image, Row, Col, Badge, ListGroup, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport Collapsible from 'react-collapsible';\nimport { RiUserFollowFill, RiUserUnfollowFill } from 'react-icons/ri';\nconst DetailsView = (props) => {\n    const organization = props.organization;\n    const follows = props.follows;\n    const infoRender = (label, value) => {\n        if (value) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value.split('\\n').map((para, i) => (\n                            <p key={i} className=\"justify-text\">\n                                {para}\n                            </p>\n                        ))}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n\n    const keywordsRender = (label, keywords) => {\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {keywords.map((key, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {key}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n    const tagsRender = (label, tags) => {\n        if (tags && tags.length > 0) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {tags.map((tag, i) => {\n                            if (tag)\n                                return (\n                                    <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                        {tag.label}\n                                    </Badge>\n                                );\n                        })}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n    const RenderListButtonItem = (label) => {\n        return (\n            <ListGroup.Item\n                className=\"list-button\"\n                onClick={() => {\n                    alert('YET TO DEVELOP');\n                }}\n            >\n                {label}\n            </ListGroup.Item>\n        );\n    };\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n    if (organization._id) {\n        const basicInfo = organization.basicInfo;\n        const serviceInfo = organization.serviceInfo;\n        const impactAreas = serviceInfo.impactAreas;\n        console.log(basicInfo);\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"right-align\" sm=\"2\">\n                        <Image className=\"left-image\" src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultOrganizationProfilePicture} width=\"100%\" thumbnail />\n                        {follows ? (\n                            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to unfollow</Tooltip>}>\n                                <Button\n                                    size=\"sm\"\n                                    variant=\"outline-info\"\n                                    className=\"details-following-btn\"\n                                    onClick={() => {\n                                        props.handleUnfollowClick();\n                                    }}\n                                >\n                                    <RiUserFollowFill /> Following\n                                </Button>\n                            </OverlayTrigger>\n                        ) : (\n                            <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to follow</Tooltip>}>\n                                <Button\n                                    size=\"sm\"\n                                    variant=\"outline-info\"\n                                    className=\"details-follow-btn\"\n                                    onClick={() => {\n                                        props.handleFollowClick();\n                                    }}\n                                >\n                                    <RiUserFollowFill /> Follow\n                                </Button>\n                            </OverlayTrigger>\n                        )}\n                        <Collapsible trigger=\"MENU\" className=\"special-btn\">\n                            <ListGroup>\n                                {RenderListButtonItem('About')}\n                                {RenderListButtonItem('Message')}\n                                {RenderListButtonItem('Events')}\n                                {RenderListButtonItem('Projects')}\n                                {RenderListButtonItem('In-Kind')}\n                                {RenderListButtonItem('Volunteering')}\n                                {RenderListButtonItem('Feed')}\n                            </ListGroup>\n                        </Collapsible>\n                    </Col>\n                    <Col sm=\"9\" className=\"left-border\">\n                        <h3>{basicInfo.name}</h3>\n                        {tagsRender('Organization Type', basicInfo.organizationTypes)}\n                        {infoRender('Contact Email', basicInfo.contactEmail)}\n                        {infoRender('Website', basicInfo.website)}\n\n                        {infoRender('Phone', basicInfo.phone)}\n                        {infoRender('EIN', basicInfo.ein)}\n                        {infoRender('Address', addressMaker(basicInfo.address))}\n\n                        <hr />\n                        <div style={{ height: 25 }} />\n                        {keywordsRender('Service Areas', serviceInfo.serviceAreas)}\n                        {tagsRender('Impact Area', impactAreas)}\n                        {keywordsRender('Keywords', serviceInfo.keywords)}\n                        <div style={{ height: 25 }} />\n                        <hr />\n                        {infoRender('Mission', basicInfo.mission)}\n                        <hr />\n                        {infoRender('Description', basicInfo.description)}\n                        <div style={{ height: 25 }} />\n                    </Col>\n                </Row>\n                <div style={{ height: 25 }} />\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-type-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-type-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organization-type-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/messages.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-list.js",["806"],"import React from 'react';\n\nconst ThreadList = (props) => {\n    const list = [\n        {\n            id: 1,\n            name: 'Mst Sadia Sultana',\n            profilePicture: 'http://localhost:3001/uploaded-images/person1.jpg',\n        },\n        {\n            id: 2,\n            name: 'Abdullah al noman',\n            profilePicture: 'http://localhost:3001/uploaded-images/person2.jpg',\n        },\n        {\n            id: 3,\n            name: 'Abu moin',\n            profilePicture: 'http://localhost:3001/uploaded-images/person3.jpg',\n        },\n        {\n            id: 4,\n            name: 'Israt Sharera',\n            profilePicture: 'http://localhost:3001/uploaded-images/person4.jpg',\n        },\n        {\n            id: 5,\n            name: 'Sharmin Akter',\n            profilePicture: 'http://localhost:3001/uploaded-images/person5.jpg',\n        },\n        {\n            id: 6,\n            name: 'Krittika Singh',\n            profilePicture: 'http://localhost:3001/uploaded-images/person6.jpg',\n        },\n        {\n            id: 7,\n            name: 'Debashish Haldar',\n            profilePicture: 'http://localhost:3001/uploaded-images/person7.jpg',\n        },\n        {\n            id: 8,\n            name: 'Subrato Sarker',\n            profilePicture: 'http://localhost:3001/uploaded-images/person8.jpg',\n        },\n    ];\n    return <h4>All Messages</h4>;\n};\n\nexport default ThreadList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-details.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/genders.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/languages.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-images.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/manage-events.js",["807"],"import React, { useEffect, useState } from 'react';\nimport EventList from '../../components/event/event-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllEventsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageEvents = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllEventsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToEventEdit = (eventId) => {\n        props.history.push(RoutePaths.eventEditPage + eventId);\n    };\n    const handleGoToEventDetails = (eventId) => {\n        props.history.push(RoutePaths.eventDetailsPage + eventId);\n    };\n    const handleGoToEventCreate = () => {\n        props.history.push(RoutePaths.eventCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <EventList\n                allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.events : []}\n                handleGoToEventEdit={handleGoToEventEdit}\n                handleGoToEventDetails={handleGoToEventDetails}\n                handleGoToEventCreate={handleGoToEventCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllEventsResponse = state.Event.getAllEvents;\n    console.log('🚀 ~ file: manage-events.js ~ line 21 ~ mapStateToProps ~ getAllEventsResponse', getAllEventsResponse);\n\n    return {\n        getAllEventsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageEvents);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/create-event.js",["808","809","810","811","812"],"import React, { useEffect, useState } from 'react';\nimport EventForm from '../../components/event/event-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getEventById, createEvent, updateEventById, clearEvent } from '../../actions/event-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateEvent = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getEventResponse.success) {\n            console.log(props.getEventResponse.event);\n            setImages(props.getEventResponse.event.images);\n            if (props.getEventResponse.event.address) {\n                setLocation({\n                    latitude: props.getEventResponse.event.address.latitude,\n                    longitude: props.getEventResponse.event.address.longitude,\n                });\n            }\n        }\n    }, [props.getEventResponse]);\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageEvents = () => {\n        props.history.push(RoutePaths.eventListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let event = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n            impactAreas: values.impactAreas.map((area) => area._id),\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-event.js ~ line 36 ~ onSubmit ~ event', event);\n        if (editMode) {\n            props.dispatch(updateEventById(props.match.params.eventId, event));\n        } else {\n            props.dispatch(createEvent(event));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (eventId) => {\n            setLoading(true);\n            props.dispatch(getEventById(eventId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.eventId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearEvent());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setEventResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearEvent());\n            if (editMode) props.history.push(RoutePaths.eventDetailsPage + props.match.params.eventId);\n            else {\n                props.history.push(RoutePaths.eventDetailsPage + props.setEventResponse.event._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setEventResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <EventForm\n                handleGoToManageEvents={handleGoToManageEvents}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                location={location}\n                setLocation={setLocation}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n\n    const getEventResponse = state.Event.getEvent;\n    const setEventResponse = state.Event.setEvent;\n    let initialValues = {};\n    if (getEventResponse.success) {\n        initialValues = getEventResponse.event;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getEventResponse,\n        setEventResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateEvent',\n        enableReinitialize: true,\n    })(CreateEvent),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/listing-events.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/display-event.js",["813","814"],"import React, { useState, useEffect } from 'react';\nimport EventDetails from '../../components/event/event-details';\nimport { connect } from 'react-redux';\nimport { getEventById } from '../../actions/event-action';\nconst DisplayEvent = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getEventById(eventId));\n            setLoading(false);\n        };\n        const eventId = props.match.params.eventId;\n        if (eventId) getInitialInfo(eventId);\n        else {\n        }\n    }, [props.auth]);\n    return <EventDetails event={props.getEventResponse.success ? props.getEventResponse.event : {}} organization={props.getEventResponse.success ? props.getEventResponse.organization : {}} />;\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getEventResponse = state.Event.getEvent ? state.Event.getEvent : {};\n    console.log('🚀 ~ file: display-event.js ~ line 23 ~ mapStateToProps ~ getEventResponse', getEventResponse);\n\n    return { getEventResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayEvent);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/manage-posts.js",["815"],"import React, { useEffect, useState } from 'react';\nimport PostList from '../../components/post/post-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllPostsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManagePosts = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllPostsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToPostEdit = (postId) => {\n        props.history.push(RoutePaths.postEditPage + postId);\n    };\n    const handleGoToPostDetails = (postId) => {\n        props.history.push(RoutePaths.postDetailsPage + postId);\n    };\n    const handleGoToPostCreate = () => {\n        props.history.push(RoutePaths.postCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <PostList\n                allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.posts : []}\n                handleGoToPostEdit={handleGoToPostEdit}\n                handleGoToPostDetails={handleGoToPostDetails}\n                handleGoToPostCreate={handleGoToPostCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllPostsResponse = state.Post.getAllPosts;\n    console.log('🚀 ~ file: manage-posts.js ~ line 21 ~ mapStateToProps ~ getAllPostsResponse', getAllPostsResponse);\n\n    return {\n        getAllPostsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManagePosts);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-form.js",["816"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport EventImageList from './event-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\nimport EventGeoCoding from './event-geo-coding';\nconst EventForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Event</h4> : <h4>Create Event</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageEvents();\n                                    }}\n                                >\n                                    Manage Events\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Event Title\" placeholder=\"Your event title...\" />\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Event Description\" placeholder=\"Your event description...\" col1={4} col2={8} />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={MultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Event start time\" col1={4} col2={8} zIndex={3001} />\n\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"Event end time\" col1={4} col2={8} zIndex={2000} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <EventImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <EventGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default EventForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/event-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/event-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/event-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-image-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-list.js",["817"],"import React from 'react';\nimport { Container, Row, Col, Button, Table } from 'react-bootstrap';\nimport { FaEdit } from 'react-icons/fa';\nconst EventList = (props) => {\n    const allEvents = props.allEvents;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allEvents && allEvents.length > 0) {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>{allEvents.length} Events Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    size=\"sm\"\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToEventCreate();\n                                    }}\n                                >\n                                    Create Event\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Title</th>\n                                    <th>Description</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allEvents.map((event, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td\n                                                className=\"row-details\"\n                                                onClick={() => {\n                                                    props.handleGoToEventDetails(event._id);\n                                                }}\n                                            >\n                                                {event.title}\n                                            </td>\n                                            <td>{descriptionRender(event.description)}</td>\n                                            <td>\n                                                <Button\n                                                    size=\"sm\"\n                                                    onClick={() => {\n                                                        props.handleGoToEventEdit(event._id);\n                                                    }}\n                                                >\n                                                    Edit\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>No Events Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToEventCreate();\n                                    }}\n                                >\n                                    Create Event\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default EventList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-details.js",["818","819","820"],"import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport EventMapView from './event-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayEvent = (props) => {\n    const event = props.event;\n    const organization = props.organization;\n    if (event && event._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{event.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(event.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('', event.impactAreas)}</Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(event.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(event.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', event.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(event.images)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <EventMapView allEvents={[event]} zoom={16} />\n                            </Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Event is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayEvent;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/details-render.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/buttons-render.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/search-menu.js",["821","822","823","824","825"],"import React from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nconst SearchMenu = (props) => {\n    const selected = props.selected;\n    return (\n        <Nav variant=\"pills\" activeKey={selected}>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"organization\" href=\"/search/organization\">\n                    Organization\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"event\" href=\"/search/event\">\n                    Events\n                </Nav.Link>\n            </Nav.Item>\n        </Nav>\n    );\n};\nexport default SearchMenu;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-card-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-geo-coding.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-map-view.js",["826"],"import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllEventOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allEvents;\n    console.log('🚀 ~ file: event-map-view.js ~ line 27 ~ AllEventOnMap ~ markers', markers);\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Event</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            <Link to={RoutePath.eventDetailsPage + selected._id}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllEventOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/filter-organization.js",["827","828","829","830","831"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/follow-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/follow-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/follow-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/global-notification.js",["832","833","834","835"],"import React from 'react';\nimport NotificationBadge from 'react-notification-badge';\nimport { Effect } from 'react-notification-badge';\nimport { Button, Badge, NavDropdown, Image, Row, Container, Col } from 'react-bootstrap';\nimport * as RoutePath from '../../constants/route-paths';\nimport moment from 'moment';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst RenderBellIcon = () => {\n    const count = 99;\n\n    return (\n        <Button className=\"notification-bell\">\n            {/* <BsBellFill />  */}\n            <Image src=\"http://localhost:3001/default-images/flag-icon.png\" roundedCircle />\n            <Badge className=\"notification-count\" variant=\"dark\">\n                {count}\n            </Badge>\n        </Button>\n    );\n};\nconst NotificationRender = (index) => {\n    return (\n        <NavDropdown.Item className=\"notification-row\">\n            <Row>\n                <Col sm=\"3\">\n                    <Image src={defaultIndividualProfilePicture} width=\"40\" thumbnail className=\"notification-image\" />\n                </Col>\n                <Col sm=\"9\">\n                    <p className=\"notification-title\">Mr X is Following You.</p>\n                    <p className=\"notification-time\">{moment(new Date()).format('LLL')}</p>\n                </Col>\n            </Row>\n        </NavDropdown.Item>\n    );\n};\nconst SampleNotificationsRender = () => {\n    return (\n        <Container style={{ width: 300, padding: 0 }}>\n            <NotificationRender />\n            <NotificationRender />\n            <NotificationRender />\n            <NotificationRender />\n            <NotificationRender />\n        </Container>\n    );\n};\nconst GlobalNotification = (props) => {\n    return (\n        <NavDropdown title={<RenderBellIcon />} id=\"basic-nav-dropdown\" alignRight={true}>\n            <SampleNotificationsRender />\n            <NavDropdown.Divider />\n            <NavDropdown.Item>SEE ALL</NavDropdown.Item>\n        </NavDropdown>\n    );\n    //\n};\n\nexport default GlobalNotification;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/friends.js",["836","837","838","839","840"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityFriends = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"friend\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityFriends);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followers.js",["841","842","843","844","845"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityFollowers = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"follower\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityFollowers);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followings.js",["846","847","848","849","850"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityFollowings = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"following\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityFollowings);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/requests.js",["851","852","853","854","855"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nconst CommunityRequests = (props) => {\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col>\n                    <CommunityMenu selected=\"request\" />\n                    <hr />\n                    <SampleUsers />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {};\n};\nexport default connect(mapStateToProps, null)(CommunityRequests);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/community-menu.js",["856","857","858","859","860"],"import React from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport { communityFollowerListPage, communityFollowingListPage, communityFriendListPage, communityRequestListPage } from '../../constants/route-paths';\nconst CommunityMenu = (props) => {\n    const selected = props.selected;\n    return (\n        <Nav variant=\"pills\" activeKey={selected}>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"friend\" href={communityFriendListPage}>\n                    Friends\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"following\" href={communityFollowingListPage}>\n                    Followings\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"follower\" href={communityFollowerListPage}>\n                    Followers\n                </Nav.Link>\n            </Nav.Item>\n            <Nav.Item sz=\"sm\">\n                <Nav.Link eventKey=\"request\" href={communityRequestListPage}>\n                    Requests\n                </Nav.Link>\n            </Nav.Item>\n        </Nav>\n    );\n};\nexport default CommunityMenu;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/sample-users.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-map-view.js",["861","862","863","864"],"import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { Button, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllOrganizationOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allOrganizations;\n    console.log('🚀 ~ file: organization-map-view.js ~ line 27 ~ AllOrganizationOnMap ~ markers', markers);\n\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n    const pairsRender = (label, tags) => {\n        return (\n            <label>\n                {label}{' '}\n                {tags.map((t, i) => {\n                    return i === 0 ? tags.label : ', ' + tags.label;\n                })}\n            </label>\n        );\n    };\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.basicInfo.address && marker.basicInfo.address.latitude && marker.basicInfo.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.basicInfo.address.latitude,\n                                    lng: marker.basicInfo.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.basicInfo.address.latitude,\n                            lng: selected.basicInfo.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h6>{selected.basicInfo.name}</h6>\n                            <label>\n                                Organization Type:{' '}\n                                {selected.organizationTypes.map((type, i) => {\n                                    return (\n                                        <Badge variant=\"primary\" key={i}>\n                                            {type.label}\n                                        </Badge>\n                                    );\n                                    // return i !== 0 ? ', ' + type.label : type.label;\n                                })}\n                            </label>\n                            <br />\n                            <label>\n                                Impact Areas:{' '}\n                                {selected.impactAreas.map((area, i) => {\n                                    // return i !== 0 ? ', ' + area.label : area.label;\n                                    return (\n                                        <Badge variant=\"primary\" key={i}>\n                                            {area.label}\n                                        </Badge>\n                                    );\n                                })}\n                            </label>\n                            <label>Address: {addressMaker(selected.basicInfo.address)}</label>\n                            {/* {pairsRender('Organization Type', selected.basicInfo.organizationTypes)} */}\n                            <br />\n                            <Button\n                                size=\"sm\"\n                                variant=\"outline-primary\"\n                                onClick={() => {\n                                    props.gotoOrganizationDetails(selected.userId);\n                                }}\n                            >\n                                Go to Page\n                            </Button>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllOrganizationOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-user-information.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/display-project.js",["865","866"],"import React, { useState, useEffect } from 'react';\nimport ProjectDetails from '../../components/project/project-details';\nimport { connect } from 'react-redux';\nimport { getProjectById } from '../../actions/project-action';\nconst DisplayProject = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getProjectById(projectId));\n            setLoading(false);\n        };\n        const projectId = props.match.params.projectId;\n        if (projectId) getInitialInfo(projectId);\n        else {\n        }\n    }, [props.auth]);\n    return (\n        <ProjectDetails\n            project={props.getProjectResponse.success ? props.getProjectResponse.project : {}}\n            organization={props.getProjectResponse.success ? props.getProjectResponse.organization : {}}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getProjectResponse = state.Project.getProject ? state.Project.getProject : {};\n    console.log('🚀 ~ file: display-project.js ~ line 23 ~ mapStateToProps ~ getProjectResponse', getProjectResponse);\n\n    return { getProjectResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayProject);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/listing-projects.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/manage-projects.js",["867"],"import React, { useEffect, useState } from 'react';\nimport ProjectList from '../../components/project/project-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllProjectsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageProjects = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllProjectsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToProjectEdit = (projectId) => {\n        props.history.push(RoutePaths.projectEditPage + projectId);\n    };\n    const handleGoToProjectDetails = (projectId) => {\n        props.history.push(RoutePaths.projectDetailsPage + projectId);\n    };\n    const handleGoToProjectCreate = () => {\n        props.history.push(RoutePaths.projectCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <ProjectList\n                allProjects={props.getAllProjectsResponse.success ? props.getAllProjectsResponse.projects : []}\n                handleGoToProjectEdit={handleGoToProjectEdit}\n                handleGoToProjectDetails={handleGoToProjectDetails}\n                handleGoToProjectCreate={handleGoToProjectCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllProjectsResponse = state.Project.getAllProjects;\n    console.log('🚀 ~ file: manage-projects.js ~ line 21 ~ mapStateToProps ~ getAllProjectsResponse', getAllProjectsResponse);\n\n    return {\n        getAllProjectsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageProjects);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/create-project.js",["868","869","870","871","872"],"import React, { useEffect, useState } from 'react';\nimport ProjectForm from '../../components/project/project-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getProjectById, createProject, updateProjectById, clearProject } from '../../actions/project-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateProject = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getProjectResponse.success) {\n            console.log(props.getProjectResponse.project);\n            setImages(props.getProjectResponse.project.images);\n            if (props.getProjectResponse.project.address) {\n                setLocation({\n                    latitude: props.getProjectResponse.project.address.latitude,\n                    longitude: props.getProjectResponse.project.address.longitude,\n                });\n            }\n        }\n    }, [props.getProjectResponse]);\n    const handlePictureUpload = (project) => {\n        var file = project.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (project.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageProjects = () => {\n        props.history.push(RoutePaths.projectListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let project = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-project.js ~ line 36 ~ onSubmit ~ project', project);\n        if (editMode) {\n            props.dispatch(updateProjectById(props.match.params.projectId, project));\n        } else {\n            props.dispatch(createProject(project));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (projectId) => {\n            setLoading(true);\n            props.dispatch(getProjectById(projectId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.projectId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearProject());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setProjectResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearProject());\n            if (editMode) props.history.push(RoutePaths.projectDetailsPage + props.match.params.projectId);\n            else {\n                props.history.push(RoutePaths.projectDetailsPage + props.setProjectResponse.project._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setProjectResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <ProjectForm\n                handleGoToManageProjects={handleGoToManageProjects}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((project) => {\n                    onSubmit(project);\n                })}\n                location={location}\n                setLocation={setLocation}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getProjectResponse = state.Project.getProject;\n    const setProjectResponse = state.Project.setProject;\n    let initialValues = {};\n    if (getProjectResponse.success) {\n        initialValues = getProjectResponse.project;\n    }\n    return {\n        getImpactAreaResponse,\n        getSkillResponse,\n        initialValues,\n        getProjectResponse,\n        setProjectResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateProject',\n        enableReinitialize: true,\n    })(CreateProject),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post.js",["873","874","875","876","877"],"import React, { useEffect, useState } from 'react';\nimport PostForm from '../../components/post/post-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPostById, createPost, updatePostById, clearPost } from '../../actions/post-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreatePost = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getPostResponse.success) {\n            console.log(props.getPostResponse.post);\n            setImages(props.getPostResponse.post.images);\n            if (props.getPostResponse.post.address) {\n                setLocation({\n                    latitude: props.getPostResponse.post.address.latitude,\n                    longitude: props.getPostResponse.post.address.longitude,\n                });\n            }\n        }\n    }, [props.getPostResponse]);\n    const handlePictureUpload = (post) => {\n        var file = post.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (post.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManagePosts = () => {\n        props.history.push(RoutePaths.postListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let post = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-post.js ~ line 36 ~ onSubmit ~ post', post);\n        if (editMode) {\n            props.dispatch(updatePostById(props.match.params.postId, post));\n        } else {\n            props.dispatch(createPost(post));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (postId) => {\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.postId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearPost());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setPostResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearPost());\n            if (editMode) props.history.push(RoutePaths.postDetailsPage + props.match.params.postId);\n            else {\n                props.history.push(RoutePaths.postDetailsPage + props.setPostResponse.post._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setPostResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <PostForm\n                handleGoToManagePosts={handleGoToManagePosts}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((post) => {\n                    onSubmit(post);\n                })}\n                location={location}\n                setLocation={setLocation}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n\n    const getPostResponse = state.Post.getPost;\n    const setPostResponse = state.Post.setPost;\n    let initialValues = {};\n    if (getPostResponse.success) {\n        initialValues = getPostResponse.post;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPostResponse,\n        setPostResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreatePost',\n        enableReinitialize: true,\n    })(CreatePost),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/display-post.js",["878","879"],"import React, { useState, useEffect } from 'react';\nimport PostDetails from '../../components/post/post-details';\nimport { connect } from 'react-redux';\nimport { getPostById } from '../../actions/post-action';\nconst DisplayPost = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n            setLoading(false);\n        };\n        const postId = props.match.params.postId;\n        if (postId) getInitialInfo(postId);\n        else {\n        }\n    }, [props.auth]);\n    return <PostDetails post={props.getPostResponse.success ? props.getPostResponse.post : {}} organization={props.getPostResponse.success ? props.getPostResponse.organization : {}} />;\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getPostResponse = state.Post.getPost ? state.Post.getPost : {};\n    console.log('🚀 ~ file: display-post.js ~ line 23 ~ mapStateToProps ~ getPostResponse', getPostResponse);\n\n    return { getPostResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayPost);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/listing-posts.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/manage-news.js",["880"],"import React from 'react';\nimport { Container, Row, Col, Card, CardDeck, ListGroup, Button } from 'react-bootstrap';\nimport * as DefaultImages from '../../constants/default-images';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManagePosts = (props) => {\n    const ButtonRender = (variant, path, label) => {\n        return (\n            <Button\n                style={{ width: '100%', marginTop: 5 }}\n                variant={variant}\n                size=\"sm\"\n                onClick={() => {\n                    props.history.push(path);\n                }}\n            >\n                {label}\n            </Button>\n        );\n    };\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h1>MANAGE POSTS</h1>\n                    <CardDeck>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultEventIcon} />\n                            <Card.Body>\n                                <Card.Title>EVENTS</Card.Title>\n                            </Card.Body>\n\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.eventListByOrganizationPage, 'Manage Events')}\n                                    {ButtonRender('info', RoutePaths.eventCreatePage, 'Create Event')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultProjectIcon} />\n                            <Card.Body>\n                                <Card.Title>PROJECTS</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.projectListByOrganizationPage, 'Manage Projects')}\n                                    {ButtonRender('info', RoutePaths.projectCreatePage, 'Create Project')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultPImage} />\n                            <Card.Body>\n                                <Card.Title>GENERAL POSTS</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.postListByOrganizationPage, 'Manage General Posts')}\n                                    {ButtonRender('info', RoutePaths.postCreatePage, 'Create General Post')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultVImage} />\n                            <Card.Body>\n                                <Card.Title>VOLUNTEERING</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.volunteeringListByOrganizationPage, 'Manage Volunteerings')}\n                                    {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Create Volunteering')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultIImage} />\n                            <Card.Body>\n                                <Card.Title>In-Kind</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {/* {ButtonRender('primary', RoutePaths.volunteeringListByOrganizationPage, 'Manage Volunteerings')}\n                                    {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Create Volunteering')} */}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                    </CardDeck>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ManagePosts;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/create-volunteering.js",["881","882","883","884","885"],"import React, { useEffect, useState } from 'react';\nimport VolunteeringForm from '../../components/volunteering/volunteering-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getVolunteeringById, createVolunteering, updateVolunteeringById, clearVolunteering } from '../../actions/volunteering-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateVolunteering = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getVolunteeringResponse.success) {\n            console.log(props.getVolunteeringResponse.volunteering);\n            setImages(props.getVolunteeringResponse.volunteering.images);\n            if (props.getVolunteeringResponse.volunteering.address) {\n                setLocation({\n                    latitude: props.getVolunteeringResponse.volunteering.address.latitude,\n                    longitude: props.getVolunteeringResponse.volunteering.address.longitude,\n                });\n            }\n        }\n    }, [props.getVolunteeringResponse]);\n    const handlePictureUpload = (volunteering) => {\n        var file = volunteering.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (volunteering.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageVolunteerings = () => {\n        props.history.push(RoutePaths.volunteeringListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let volunteering = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-volunteering.js ~ line 36 ~ onSubmit ~ volunteering', volunteering);\n        if (editMode) {\n            props.dispatch(updateVolunteeringById(props.match.params.volunteeringId, volunteering));\n        } else {\n            props.dispatch(createVolunteering(volunteering));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (volunteeringId) => {\n            setLoading(true);\n            props.dispatch(getVolunteeringById(volunteeringId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.volunteeringId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearVolunteering());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setVolunteeringResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearVolunteering());\n            if (editMode) props.history.push(RoutePaths.volunteeringDetailsPage + props.match.params.volunteeringId);\n            else {\n                props.history.push(RoutePaths.volunteeringDetailsPage + props.setVolunteeringResponse.volunteering._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setVolunteeringResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <VolunteeringForm\n                handleGoToManageVolunteerings={handleGoToManageVolunteerings}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((volunteering) => {\n                    onSubmit(volunteering);\n                })}\n                location={location}\n                setLocation={setLocation}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getVolunteeringResponse = state.Volunteering.getVolunteering;\n    const setVolunteeringResponse = state.Volunteering.setVolunteering;\n    let initialValues = {};\n    if (getVolunteeringResponse.success) {\n        initialValues = getVolunteeringResponse.volunteering;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getSkillResponse,\n        getVolunteeringResponse,\n        setVolunteeringResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateVolunteering',\n        enableReinitialize: true,\n    })(CreateVolunteering),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/listing-volunteerings.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/manage-volunteerings.js",["886"],"import React, { useEffect, useState } from 'react';\nimport VolunteeringList from '../../components/volunteering/volunteering-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllVolunteeringsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageVolunteerings = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllVolunteeringsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToVolunteeringEdit = (volunteeringId) => {\n        props.history.push(RoutePaths.volunteeringEditPage + volunteeringId);\n    };\n    const handleGoToVolunteeringDetails = (volunteeringId) => {\n        props.history.push(RoutePaths.volunteeringDetailsPage + volunteeringId);\n    };\n    const handleGoToVolunteeringCreate = () => {\n        props.history.push(RoutePaths.volunteeringCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <VolunteeringList\n                allVolunteerings={props.getAllVolunteeringsResponse.success ? props.getAllVolunteeringsResponse.volunteerings : []}\n                handleGoToVolunteeringEdit={handleGoToVolunteeringEdit}\n                handleGoToVolunteeringDetails={handleGoToVolunteeringDetails}\n                handleGoToVolunteeringCreate={handleGoToVolunteeringCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllVolunteeringsResponse = state.Volunteering.getAllVolunteerings;\n    console.log('🚀 ~ file: manage-volunteerings.js ~ line 21 ~ mapStateToProps ~ getAllVolunteeringsResponse', getAllVolunteeringsResponse);\n\n    return {\n        getAllVolunteeringsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageVolunteerings);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/display-volunteering.js",["887","888"],"import React, { useState, useEffect } from 'react';\nimport VolunteeringDetails from '../../components/volunteering/volunteering-details';\nimport { connect } from 'react-redux';\nimport { getVolunteeringById } from '../../actions/volunteering-action';\nconst DisplayVolunteering = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getVolunteeringById(volunteeringId));\n            setLoading(false);\n        };\n        const volunteeringId = props.match.params.volunteeringId;\n        if (volunteeringId) getInitialInfo(volunteeringId);\n        else {\n        }\n    }, [props.auth]);\n    return (\n        <VolunteeringDetails\n            volunteering={props.getVolunteeringResponse.success ? props.getVolunteeringResponse.volunteering : {}}\n            organization={props.getVolunteeringResponse.success ? props.getVolunteeringResponse.organization : {}}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getVolunteeringResponse = state.Volunteering.getVolunteering ? state.Volunteering.getVolunteering : {};\n    console.log('🚀 ~ file: display-volunteering.js ~ line 23 ~ mapStateToProps ~ getVolunteeringResponse', getVolunteeringResponse);\n\n    return { getVolunteeringResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayVolunteering);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/project-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-form.js",["889"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport ProjectImageList from './project-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, CheckBoxRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport ProjectGeoCoding from './project-geo-coding';\nconst ProjectForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const allSkills = props.allSkills;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Project</h4> : <h4>Create Project</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageProjects();\n                                    }}\n                                >\n                                    Manage Projects\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Project Title\" placeholder=\"Your project title...\" />\n\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Project start time\" col1={4} col2={8} zIndex={6001} />\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"Project end time\" col1={4} col2={8} zIndex={6000} />\n\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Project Description\" placeholder=\"Your project description...\" col1={4} col2={8} />\n                        {/* Skill */}\n                        <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skill\" col1={4} col2={8} options={allSkills} zIndex={5000} menuPlacement=\"top\" />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        <Field name=\"topNeed\" type=\"checkbox\" component={CheckBoxRender} label=\"Top Need\" col1={4} col2={8} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <ProjectImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <ProjectGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ProjectForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/project-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-geo-coding.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-image-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-details.js",["890","891","892"],"import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport ProjectMapView from './project-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayProject = (props) => {\n    const project = props.project;\n    const organization = props.organization;\n    if (project && project._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{project.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(project.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('Impact Areas', project.impactAreas)}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{TagWithLabelRender('Skills', project.skills)}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(project.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(project.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', project.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(project.images)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <ProjectMapView allProjects={[project]} zoom={16} />\n                            </Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Project is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayProject;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-form.js",["893"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport VolunteeringImageList from './volunteering-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, CreatableMultiSelectRender, CheckBoxRender } from '../form_template/input-render';\nimport VolunteeringGeoCoding from './volunteering-geo-coding';\nconst VolunteeringForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const allSkills = props.allSkills;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Volunteering</h4> : <h4>Create Volunteering</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageVolunteerings();\n                                    }}\n                                >\n                                    Manage Volunteerings\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Volunteering Title\" placeholder=\"Your volunteering title...\" />\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Volunteering start time\" col1={4} col2={8} zIndex={6001} />\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"Volunteering end time\" col1={4} col2={8} zIndex={6000} />\n\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Volunteering Description\" placeholder=\"Your Volunteering description...\" col1={4} col2={8} />\n                        {/* Skill */}\n                        <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skill\" col1={4} col2={8} options={allSkills} zIndex={5000} menuPlacement=\"top\" />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        <Field name=\"topNeed\" type=\"checkbox\" component={CheckBoxRender} label=\"Top Need\" col1={4} col2={8} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <VolunteeringImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <VolunteeringGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default VolunteeringForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-details.js",["894","895","896"],"import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport VolunteeringMapView from './volunteering-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayVolunteering = (props) => {\n    const volunteering = props.volunteering;\n    const organization = props.organization;\n    if (volunteering && volunteering._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{volunteering.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(volunteering.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('Impact Areas', volunteering.impactAreas)}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{TagWithLabelRender('Skills', volunteering.skills)}</Col>\n                        </Row>\n                        <hr />\n                        <br />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(volunteering.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(volunteering.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', volunteering.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(volunteering.images)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <VolunteeringMapView allVolunteerings={[volunteering]} zoom={16} />\n                            </Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Volunteering is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayVolunteering;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/volunteering-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-image-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/volunteering-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-map-view.js",["897"],"import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllProjectOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allProjects;\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Project</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            <Link to={RoutePath.projectDetailsPage + selected._id}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllProjectOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-geo-coding.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-map-view.js",["898"],"import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllVolunteeringOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allVolunteerings;\n\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Volunteering</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            <Link to={RoutePath.volunteeringDetailsPage + selected._id}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllVolunteeringOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/post-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/volunteering-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/project-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-suggestions.js",["899","900","901"],"import React from 'react';\nimport moment from 'moment';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst SamplePosts = (props) => {\n    const posts = [\n        {\n            type: 'Event',\n            id: 0,\n            name: 'Moss Montoya Robertson Fleming Carolina Morgan Whitney Gallegos Avis Ryan English Hall ',\n            org: 'Patrick Espinoza Flores Anderson',\n            description:\n                'Minim aliquip esse in esse culpa ullamco duis aute ex occaecat voluptate consequat. Non est pariatur exercitation incididunt deserunt anim minim duis officia et sunt ea sunt. Exercitation et culpa excepteur aute qui irure. Labore dolore dolor sint esse cillum eiusmod pariatur. Aliqua labore nulla non esse consectetur incididunt elit dolore ea exercitation quis elit elit. Qui id laboris cupidatat amet velit ut dolor.\\r\\n',\n            latitude: 25.652657,\n            longitude: -72.434629,\n            createdAt: '2016-06-20T01:07:40-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Post',\n            id: 1,\n            name: 'Craig Buck Fitzgerald Kirkland Althea Crane Acevedo Burgess Hines Bernard Rocha Powell ',\n            org: 'Hollie Travis Darcy Conner',\n            description:\n                'Mollit ut et quis veniam eiusmod enim fugiat Lorem qui in minim. Elit id nostrud non officia nostrud ad Lorem commodo. Elit ex velit ipsum magna quis. Non adipisicing veniam id pariatur sint cupidatat enim qui veniam est ipsum velit. Mollit duis eiusmod qui incididunt. Sunt nostrud velit reprehenderit ea mollit pariatur aliqua reprehenderit non excepteur cupidatat consectetur ex incididunt. Elit proident nulla nostrud do.\\r\\n',\n            latitude: 64.109759,\n            longitude: -140.925495,\n            createdAt: '2016-10-17T07:04:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Project',\n            id: 2,\n            name: 'Santiago Chaney Tucker Finch Debbie Walker Knowles Padilla Virginia Merrill Celina Pierce ',\n            org: 'Logan Perkins Dunlap Heath',\n            description:\n                'Ex do adipisicing ullamco ad sint. Laborum in irure dolor amet pariatur Lorem est magna officia esse qui et dolore. Qui veniam consectetur commodo laborum pariatur qui consectetur ea veniam nisi pariatur nulla cillum veniam. Labore incididunt aliquip in ut consequat nulla anim nostrud ea labore pariatur.\\r\\n',\n            latitude: 67.37103,\n            longitude: 10.44369,\n            createdAt: '2014-12-04T01:23:05-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Volunteering',\n            id: 3,\n            name: 'Brittney Jefferson Whitley Mcfadden Watts Blackwell Carson Schmidt Lila Barnett Foster Mccarthy ',\n            org: 'Shelly Bryan Kenya Lopez',\n            description:\n                'In non reprehenderit aliquip sit mollit nisi duis. Eu do voluptate ut consequat qui laboris labore sunt exercitation veniam. Sit sunt dolore excepteur veniam irure laborum occaecat aliquip ad occaecat fugiat incididunt adipisicing irure.\\r\\n',\n            latitude: -34.069339,\n            longitude: -112.189468,\n            createdAt: '2018-02-26T07:14:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'In Kind',\n            id: 4,\n            name: 'Andrews Fry Riddle Weeks Lara Nelson Morton Nichols Rush Cherry Carver Reed ',\n            org: 'Waller Williams Ward Bentley',\n            description:\n                'Id sit tempor laboris irure sint in nisi laboris excepteur ad irure adipisicing. Ipsum officia occaecat consectetur sunt. Do deserunt aute esse irure non est eiusmod ad id ullamco. Aliqua id adipisicing pariatur ea incididunt reprehenderit amet commodo sit pariatur culpa. Duis sint aute exercitation elit pariatur dolor.\\r\\n',\n            latitude: 53.897686,\n            longitude: 76.513392,\n            createdAt: '2017-12-23T05:01:13-06:00',\n            ttl: 7,\n        },\n    ];\n    const mapImage = 'http://cascaid.sky4242.com/default-images/sample-g-map.png';\n    return (\n        <div>\n            <Row>\n                <Col>\n                    <h6>Suggestions for you.</h6>\n                    <small>Based on your profile</small>\n                </Col>\n            </Row>\n\n            {posts.map((post, i) => {\n                return (\n                    <div key={i} className=\"post-box\">\n                        <Row>\n                            <Col sm={3}>\n                                <Image src={defaultOrganizationProfilePicture} thumbnail style={{ height: 50, width: 50 }} />\n                            </Col>\n                            <Col sm=\"9\">\n                                <h6>{post.org}</h6>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>Organization Type: Non-profit, Political</Col>\n                        </Row>\n                        <Row>\n                            <Col>Impact Areas: ASD ZXC QWE ...</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <small>House# 99, Apt# B2, Road# 4/25, Block# A, Dhaka 1213</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <Button variant=\"outline-primary\" size=\"sm\">\n                                    Go to Description\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-info\" size=\"sm\">\n                                    Details\n                                </Button>\n                            </Col>\n                        </Row>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nexport default SamplePosts;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-posts.js",["902"],"import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Container, Row, Col, Image, Button, Modal } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FaThumbsUp, FaLocationArrow, FaHeart } from 'react-icons/fa';\nconst SamplePosts = (props) => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const posts = [\n        {\n            type: 'Event',\n            id: 0,\n            name: 'Moss Montoya Robertson Fleming Carolina Morgan Whitney Gallegos Avis Ryan English Hall ',\n            org: 'Patrick Espinoza Flores Anderson',\n            description:\n                'Minim aliquip esse in esse culpa ullamco duis aute ex occaecat voluptate consequat. Non est pariatur exercitation incididunt deserunt anim minim duis officia et sunt ea sunt. Exercitation et culpa excepteur aute qui irure. Labore dolore dolor sint esse cillum eiusmod pariatur. Aliqua labore nulla non esse consectetur incididunt elit dolore ea exercitation quis elit elit. Qui id laboris cupidatat amet velit ut dolor.\\r\\n',\n            latitude: 25.652657,\n            longitude: -72.434629,\n            createdAt: '2016-06-20T01:07:40-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Post',\n            id: 1,\n            name: 'Craig Buck Fitzgerald Kirkland Althea Crane Acevedo Burgess Hines Bernard Rocha Powell ',\n            org: 'Hollie Travis Darcy Conner',\n            description:\n                'Mollit ut et quis veniam eiusmod enim fugiat Lorem qui in minim. Elit id nostrud non officia nostrud ad Lorem commodo. Elit ex velit ipsum magna quis. Non adipisicing veniam id pariatur sint cupidatat enim qui veniam est ipsum velit. Mollit duis eiusmod qui incididunt. Sunt nostrud velit reprehenderit ea mollit pariatur aliqua reprehenderit non excepteur cupidatat consectetur ex incididunt. Elit proident nulla nostrud do.\\r\\n',\n            latitude: 64.109759,\n            longitude: -140.925495,\n            createdAt: '2016-10-17T07:04:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Project',\n            id: 2,\n            name: 'Santiago Chaney Tucker Finch Debbie Walker Knowles Padilla Virginia Merrill Celina Pierce ',\n            org: 'Logan Perkins Dunlap Heath',\n            description:\n                'Ex do adipisicing ullamco ad sint. Laborum in irure dolor amet pariatur Lorem est magna officia esse qui et dolore. Qui veniam consectetur commodo laborum pariatur qui consectetur ea veniam nisi pariatur nulla cillum veniam. Labore incididunt aliquip in ut consequat nulla anim nostrud ea labore pariatur.\\r\\n',\n            latitude: 67.37103,\n            longitude: 10.44369,\n            createdAt: '2014-12-04T01:23:05-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Volunteering',\n            id: 3,\n            name: 'Brittney Jefferson Whitley Mcfadden Watts Blackwell Carson Schmidt Lila Barnett Foster Mccarthy ',\n            org: 'Shelly Bryan Kenya Lopez',\n            description:\n                'In non reprehenderit aliquip sit mollit nisi duis. Eu do voluptate ut consequat qui laboris labore sunt exercitation veniam. Sit sunt dolore excepteur veniam irure laborum occaecat aliquip ad occaecat fugiat incididunt adipisicing irure.\\r\\n',\n            latitude: -34.069339,\n            longitude: -112.189468,\n            createdAt: '2018-02-26T07:14:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'In Kind',\n            id: 4,\n            name: 'Andrews Fry Riddle Weeks Lara Nelson Morton Nichols Rush Cherry Carver Reed ',\n            org: 'Waller Williams Ward Bentley',\n            description:\n                'Id sit tempor laboris irure sint in nisi laboris excepteur ad irure adipisicing. Ipsum officia occaecat consectetur sunt. Do deserunt aute esse irure non est eiusmod ad id ullamco. Aliqua id adipisicing pariatur ea incididunt reprehenderit amet commodo sit pariatur culpa. Duis sint aute exercitation elit pariatur dolor.\\r\\n',\n            latitude: 53.897686,\n            longitude: 76.513392,\n            createdAt: '2017-12-23T05:01:13-06:00',\n            ttl: 7,\n        },\n    ];\n    const people = [\n        {\n            id: 0,\n            name: 'Vera Knowles',\n        },\n        {\n            id: 1,\n            name: 'Jefferson Nielsen',\n        },\n        {\n            id: 2,\n            name: 'Mari Mcintyre',\n        },\n        {\n            id: 3,\n            name: 'Letha Holland',\n        },\n        {\n            id: 4,\n            name: 'Alexandra Lawrence',\n        },\n        {\n            id: 5,\n            name: 'Bryan Singleton',\n        },\n    ];\n    const mapImage = 'http://localhost:3001/default-images/sample-g-map.png';\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>10 People liked this post</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {people.map((ppl, i) => {\n                        return (\n                            <Container className=\"ppl-liked-list\" key={i}>\n                                <Row>\n                                    <Col sm={2}>\n                                        <Image src=\"https://picsum.photos/200/200\" thumbnail style={{ width: '100%', height: '100%' }} />\n                                    </Col>\n                                    <Col sm={6} className=\"v-middle\">\n                                        {ppl.name}\n                                    </Col>\n                                    <Col sm={4} className=\"v-middle\">\n                                        <Button size=\"sm\">Add Friend</Button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        );\n                    })}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {posts.map((post, i) => {\n                return (\n                    <div key={i} className=\"justify-text post-box\">\n                        <h4 style={{ color: 'cadetblue' }}>{post.type}</h4>\n                        <h5>{post.name}</h5>\n                        <Row>\n                            <Col sm={2}>\n                                <Image src={defaultOrganizationProfilePicture} thumbnail style={{ height: 50, width: 50 }} />\n                            </Col>\n                            <Col sm=\"10\">\n                                <h6>{post.org}</h6>\n                                <small>{moment(post.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"justify-text\">\n                                {post.description}\n                                <a href=\"#\">See More</a>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"6\" className=\"home-post-image\">\n                                <Image src=\"https://picsum.photos/400/300\" thumbnail style={{ width: '100%', height: '100%' }} />\n                                <div className=\"home-post-image-text\">{post.ttl} More Images</div>\n                            </Col>\n                            <Col sm=\"6\">\n                                <Image src={mapImage} thumbnail style={{ width: '100%', height: '100%' }} />\n                            </Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Button variant=\"primary\" size=\"sm\">\n                                    <FaThumbsUp /> &nbsp;Like\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"info\" size=\"sm\">\n                                    <FaHeart /> &nbsp;Interested\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"secondary\" size=\"sm\">\n                                    <FaLocationArrow />\n                                    &nbsp; Going\n                                </Button>\n                                &nbsp;\n                            </Col>\n                            <Col className=\"right-align\">\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={handleShow}>\n                                    10 Liked\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-info\" size=\"sm\" onClick={handleShow}>\n                                    100 Interested\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleShow}>\n                                    1000 Going\n                                </Button>\n                                &nbsp;\n                            </Col>\n                        </Row>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nexport default SamplePosts;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/language-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/skill-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/skill-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/language-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/skill-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/language-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/post-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-form.js",["903","904","905"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport PostImageList from './post-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport PostGeoCoding from './post-geo-coding';\nconst PostForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Post</h4> : <h4>Create Post</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManagePosts();\n                                    }}\n                                >\n                                    Manage Posts\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Post Title\" placeholder=\"Your post title...\" />\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Post Description\" placeholder=\"Your post description...\" col1={4} col2={8} />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <PostImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default PostForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-image-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-geo-coding.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/post-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-details.js",["906","907","908","909","910"],"import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport PostMapView from './post-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayPost = (props) => {\n    const post = props.post;\n    const organization = props.organization;\n    if (post && post._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{post.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('', post.impactAreas)}</Col>\n                        </Row>\n                        <br />\n\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', post.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(post.images)}</Col>\n                        </Row>\n\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Post is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayPost;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-map-view.js",["911"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-list.js",[],{"ruleId":"912","replacedBy":"913"},{"ruleId":"914","replacedBy":"915"},{"ruleId":"916","severity":1,"message":"917","line":63,"column":35,"nodeType":"918","messageId":"919","endLine":63,"endColumn":62},{"ruleId":"920","severity":1,"message":"921","line":64,"column":7,"nodeType":"922","messageId":"923","endLine":64,"endColumn":17},{"ruleId":"920","severity":1,"message":"924","line":10,"column":10,"nodeType":"922","messageId":"923","endLine":10,"endColumn":20},{"ruleId":"920","severity":1,"message":"925","line":4,"column":20,"nodeType":"922","messageId":"923","endLine":4,"endColumn":30},{"ruleId":"920","severity":1,"message":"926","line":4,"column":32,"nodeType":"922","messageId":"923","endLine":4,"endColumn":43},{"ruleId":"927","severity":1,"message":"928","line":34,"column":8,"nodeType":"918","endLine":34,"endColumn":20,"suggestions":"929"},{"ruleId":"927","severity":1,"message":"930","line":37,"column":8,"nodeType":"918","endLine":37,"endColumn":31,"suggestions":"931"},{"ruleId":"927","severity":1,"message":"932","line":58,"column":8,"nodeType":"918","endLine":58,"endColumn":20,"suggestions":"933"},{"ruleId":"912","replacedBy":"934"},{"ruleId":"914","replacedBy":"935"},{"ruleId":"912","replacedBy":"936"},{"ruleId":"914","replacedBy":"937"},{"ruleId":"912","replacedBy":"938"},{"ruleId":"914","replacedBy":"939"},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"927","severity":1,"message":"941","line":57,"column":8,"nodeType":"918","endLine":57,"endColumn":10,"suggestions":"942"},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"943","line":2,"column":43,"nodeType":"922","messageId":"923","endLine":2,"endColumn":49},{"ruleId":"927","severity":1,"message":"941","line":77,"column":8,"nodeType":"918","endLine":77,"endColumn":10,"suggestions":"944"},{"ruleId":"912","replacedBy":"945"},{"ruleId":"914","replacedBy":"946"},{"ruleId":"920","severity":1,"message":"926","line":3,"column":16,"nodeType":"922","messageId":"923","endLine":3,"endColumn":27},{"ruleId":"912","replacedBy":"947"},{"ruleId":"914","replacedBy":"948"},{"ruleId":"920","severity":1,"message":"949","line":32,"column":26,"nodeType":"922","messageId":"923","endLine":32,"endColumn":37},{"ruleId":"927","severity":1,"message":"928","line":40,"column":8,"nodeType":"918","endLine":40,"endColumn":20,"suggestions":"950"},{"ruleId":"927","severity":1,"message":"951","line":43,"column":8,"nodeType":"918","endLine":43,"endColumn":38,"suggestions":"952"},{"ruleId":"927","severity":1,"message":"930","line":46,"column":8,"nodeType":"918","endLine":46,"endColumn":38,"suggestions":"953"},{"ruleId":"927","severity":1,"message":"928","line":56,"column":8,"nodeType":"918","endLine":56,"endColumn":20,"suggestions":"954"},{"ruleId":"927","severity":1,"message":"951","line":59,"column":8,"nodeType":"918","endLine":59,"endColumn":36,"suggestions":"955"},{"ruleId":"927","severity":1,"message":"930","line":62,"column":8,"nodeType":"918","endLine":62,"endColumn":36,"suggestions":"956"},{"ruleId":"920","severity":1,"message":"957","line":32,"column":26,"nodeType":"922","messageId":"923","endLine":32,"endColumn":33},{"ruleId":"927","severity":1,"message":"928","line":40,"column":8,"nodeType":"918","endLine":40,"endColumn":20,"suggestions":"958"},{"ruleId":"927","severity":1,"message":"951","line":43,"column":8,"nodeType":"918","endLine":43,"endColumn":34,"suggestions":"959"},{"ruleId":"927","severity":1,"message":"930","line":46,"column":8,"nodeType":"918","endLine":46,"endColumn":34,"suggestions":"960"},{"ruleId":"920","severity":1,"message":"961","line":8,"column":21,"nodeType":"922","messageId":"923","endLine":8,"endColumn":31},{"ruleId":"927","severity":1,"message":"928","line":15,"column":8,"nodeType":"918","endLine":15,"endColumn":47,"suggestions":"962"},{"ruleId":"927","severity":1,"message":"928","line":51,"column":8,"nodeType":"918","endLine":51,"endColumn":20,"suggestions":"963"},{"ruleId":"927","severity":1,"message":"951","line":54,"column":8,"nodeType":"918","endLine":54,"endColumn":36,"suggestions":"964"},{"ruleId":"927","severity":1,"message":"930","line":57,"column":8,"nodeType":"918","endLine":57,"endColumn":36,"suggestions":"965"},{"ruleId":"920","severity":1,"message":"966","line":10,"column":55,"nodeType":"922","messageId":"923","endLine":10,"endColumn":91},{"ruleId":"920","severity":1,"message":"967","line":34,"column":26,"nodeType":"922","messageId":"923","endLine":34,"endColumn":37},{"ruleId":"927","severity":1,"message":"928","line":42,"column":8,"nodeType":"918","endLine":42,"endColumn":20,"suggestions":"968"},{"ruleId":"927","severity":1,"message":"951","line":45,"column":8,"nodeType":"918","endLine":45,"endColumn":38,"suggestions":"969"},{"ruleId":"927","severity":1,"message":"930","line":48,"column":8,"nodeType":"918","endLine":48,"endColumn":38,"suggestions":"970"},{"ruleId":"920","severity":1,"message":"971","line":29,"column":26,"nodeType":"922","messageId":"923","endLine":29,"endColumn":38},{"ruleId":"927","severity":1,"message":"928","line":35,"column":8,"nodeType":"918","endLine":35,"endColumn":20,"suggestions":"972"},{"ruleId":"927","severity":1,"message":"951","line":38,"column":8,"nodeType":"918","endLine":38,"endColumn":39,"suggestions":"973"},{"ruleId":"927","severity":1,"message":"930","line":41,"column":8,"nodeType":"918","endLine":41,"endColumn":39,"suggestions":"974"},{"ruleId":"927","severity":1,"message":"928","line":20,"column":8,"nodeType":"918","endLine":20,"endColumn":47,"suggestions":"975"},{"ruleId":"920","severity":1,"message":"976","line":3,"column":37,"nodeType":"922","messageId":"923","endLine":3,"endColumn":53},{"ruleId":"920","severity":1,"message":"977","line":15,"column":12,"nodeType":"922","messageId":"923","endLine":15,"endColumn":25},{"ruleId":"920","severity":1,"message":"978","line":15,"column":27,"nodeType":"922","messageId":"923","endLine":15,"endColumn":43},{"ruleId":"920","severity":1,"message":"979","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":22},{"ruleId":"920","severity":1,"message":"980","line":3,"column":24,"nodeType":"922","messageId":"923","endLine":3,"endColumn":36},{"ruleId":"920","severity":1,"message":"981","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":26},{"ruleId":"920","severity":1,"message":"982","line":7,"column":10,"nodeType":"922","messageId":"923","endLine":7,"endColumn":26},{"ruleId":"920","severity":1,"message":"983","line":3,"column":8,"nodeType":"922","messageId":"923","endLine":3,"endColumn":14},{"ruleId":"920","severity":1,"message":"984","line":7,"column":28,"nodeType":"922","messageId":"923","endLine":7,"endColumn":46},{"ruleId":"985","severity":1,"message":"986","line":56,"column":44,"nodeType":"987","messageId":"988","endLine":56,"endColumn":46},{"ruleId":"920","severity":1,"message":"989","line":4,"column":11,"nodeType":"922","messageId":"923","endLine":4,"endColumn":15},{"ruleId":"927","severity":1,"message":"941","line":18,"column":8,"nodeType":"918","endLine":18,"endColumn":20,"suggestions":"990"},{"ruleId":"920","severity":1,"message":"991","line":20,"column":12,"nodeType":"922","messageId":"923","endLine":20,"endColumn":18},{"ruleId":"920","severity":1,"message":"992","line":20,"column":20,"nodeType":"922","messageId":"923","endLine":20,"endColumn":29},{"ruleId":"927","severity":1,"message":"941","line":124,"column":8,"nodeType":"918","endLine":124,"endColumn":20,"suggestions":"993"},{"ruleId":"927","severity":1,"message":"941","line":130,"column":8,"nodeType":"918","endLine":130,"endColumn":10,"suggestions":"994"},{"ruleId":"927","severity":1,"message":"995","line":143,"column":8,"nodeType":"918","endLine":143,"endColumn":32,"suggestions":"996"},{"ruleId":"920","severity":1,"message":"997","line":6,"column":12,"nodeType":"922","messageId":"923","endLine":6,"endColumn":19},{"ruleId":"927","severity":1,"message":"941","line":17,"column":8,"nodeType":"918","endLine":17,"endColumn":20,"suggestions":"998"},{"ruleId":"927","severity":1,"message":"941","line":18,"column":8,"nodeType":"918","endLine":18,"endColumn":20,"suggestions":"999"},{"ruleId":"920","severity":1,"message":"980","line":5,"column":10,"nodeType":"922","messageId":"923","endLine":5,"endColumn":22},{"ruleId":"920","severity":1,"message":"1000","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":16},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"943","line":2,"column":38,"nodeType":"922","messageId":"923","endLine":2,"endColumn":44},{"ruleId":"920","severity":1,"message":"1001","line":10,"column":13,"nodeType":"922","messageId":"923","endLine":10,"endColumn":22},{"ruleId":"920","severity":1,"message":"1002","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":19},{"ruleId":"920","severity":1,"message":"1003","line":2,"column":21,"nodeType":"922","messageId":"923","endLine":2,"endColumn":24},{"ruleId":"920","severity":1,"message":"1004","line":2,"column":26,"nodeType":"922","messageId":"923","endLine":2,"endColumn":29},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"943","line":2,"column":43,"nodeType":"922","messageId":"923","endLine":2,"endColumn":49},{"ruleId":"985","severity":1,"message":"986","line":53,"column":42,"nodeType":"987","messageId":"988","endLine":53,"endColumn":44},{"ruleId":"920","severity":1,"message":"1002","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":19},{"ruleId":"920","severity":1,"message":"1003","line":3,"column":21,"nodeType":"922","messageId":"923","endLine":3,"endColumn":24},{"ruleId":"920","severity":1,"message":"1004","line":3,"column":26,"nodeType":"922","messageId":"923","endLine":3,"endColumn":29},{"ruleId":"920","severity":1,"message":"940","line":3,"column":31,"nodeType":"922","messageId":"923","endLine":3,"endColumn":36},{"ruleId":"920","severity":1,"message":"1005","line":3,"column":38,"nodeType":"922","messageId":"923","endLine":3,"endColumn":41},{"ruleId":"920","severity":1,"message":"1006","line":2,"column":8,"nodeType":"922","messageId":"923","endLine":2,"endColumn":25},{"ruleId":"920","severity":1,"message":"1007","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":16},{"ruleId":"920","severity":1,"message":"1001","line":5,"column":13,"nodeType":"922","messageId":"923","endLine":5,"endColumn":22},{"ruleId":"920","severity":1,"message":"1008","line":7,"column":43,"nodeType":"922","messageId":"923","endLine":7,"endColumn":76},{"ruleId":"920","severity":1,"message":"1009","line":1,"column":17,"nodeType":"922","messageId":"923","endLine":1,"endColumn":25},{"ruleId":"920","severity":1,"message":"1010","line":1,"column":27,"nodeType":"922","messageId":"923","endLine":1,"endColumn":36},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"1005","line":2,"column":38,"nodeType":"922","messageId":"923","endLine":2,"endColumn":41},{"ruleId":"920","severity":1,"message":"943","line":2,"column":43,"nodeType":"922","messageId":"923","endLine":2,"endColumn":49},{"ruleId":"920","severity":1,"message":"1009","line":1,"column":17,"nodeType":"922","messageId":"923","endLine":1,"endColumn":25},{"ruleId":"920","severity":1,"message":"1010","line":1,"column":27,"nodeType":"922","messageId":"923","endLine":1,"endColumn":36},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"1005","line":2,"column":38,"nodeType":"922","messageId":"923","endLine":2,"endColumn":41},{"ruleId":"920","severity":1,"message":"943","line":2,"column":43,"nodeType":"922","messageId":"923","endLine":2,"endColumn":49},{"ruleId":"920","severity":1,"message":"1009","line":1,"column":17,"nodeType":"922","messageId":"923","endLine":1,"endColumn":25},{"ruleId":"920","severity":1,"message":"1010","line":1,"column":27,"nodeType":"922","messageId":"923","endLine":1,"endColumn":36},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"1005","line":2,"column":38,"nodeType":"922","messageId":"923","endLine":2,"endColumn":41},{"ruleId":"920","severity":1,"message":"943","line":2,"column":43,"nodeType":"922","messageId":"923","endLine":2,"endColumn":49},{"ruleId":"920","severity":1,"message":"1009","line":1,"column":17,"nodeType":"922","messageId":"923","endLine":1,"endColumn":25},{"ruleId":"920","severity":1,"message":"1010","line":1,"column":27,"nodeType":"922","messageId":"923","endLine":1,"endColumn":36},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"1005","line":2,"column":38,"nodeType":"922","messageId":"923","endLine":2,"endColumn":41},{"ruleId":"920","severity":1,"message":"943","line":2,"column":43,"nodeType":"922","messageId":"923","endLine":2,"endColumn":49},{"ruleId":"920","severity":1,"message":"1002","line":2,"column":10,"nodeType":"922","messageId":"923","endLine":2,"endColumn":19},{"ruleId":"920","severity":1,"message":"1003","line":2,"column":21,"nodeType":"922","messageId":"923","endLine":2,"endColumn":24},{"ruleId":"920","severity":1,"message":"1004","line":2,"column":26,"nodeType":"922","messageId":"923","endLine":2,"endColumn":29},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"943","line":2,"column":43,"nodeType":"922","messageId":"923","endLine":2,"endColumn":49},{"ruleId":"920","severity":1,"message":"1001","line":3,"column":13,"nodeType":"922","messageId":"923","endLine":3,"endColumn":22},{"ruleId":"920","severity":1,"message":"1011","line":6,"column":10,"nodeType":"922","messageId":"923","endLine":6,"endColumn":14},{"ruleId":"920","severity":1,"message":"1012","line":61,"column":11,"nodeType":"922","messageId":"923","endLine":61,"endColumn":22},{"ruleId":"985","severity":1,"message":"986","line":76,"column":42,"nodeType":"987","messageId":"988","endLine":76,"endColumn":44},{"ruleId":"920","severity":1,"message":"997","line":6,"column":12,"nodeType":"922","messageId":"923","endLine":6,"endColumn":19},{"ruleId":"927","severity":1,"message":"941","line":17,"column":8,"nodeType":"918","endLine":17,"endColumn":20,"suggestions":"1013"},{"ruleId":"927","severity":1,"message":"941","line":18,"column":8,"nodeType":"918","endLine":18,"endColumn":20,"suggestions":"1014"},{"ruleId":"920","severity":1,"message":"991","line":21,"column":12,"nodeType":"922","messageId":"923","endLine":21,"endColumn":18},{"ruleId":"920","severity":1,"message":"992","line":21,"column":20,"nodeType":"922","messageId":"923","endLine":21,"endColumn":29},{"ruleId":"927","severity":1,"message":"941","line":125,"column":8,"nodeType":"918","endLine":125,"endColumn":20,"suggestions":"1015"},{"ruleId":"927","severity":1,"message":"941","line":131,"column":8,"nodeType":"918","endLine":131,"endColumn":10,"suggestions":"1016"},{"ruleId":"927","severity":1,"message":"995","line":144,"column":8,"nodeType":"918","endLine":144,"endColumn":34,"suggestions":"1017"},{"ruleId":"920","severity":1,"message":"991","line":20,"column":12,"nodeType":"922","messageId":"923","endLine":20,"endColumn":18},{"ruleId":"920","severity":1,"message":"992","line":20,"column":20,"nodeType":"922","messageId":"923","endLine":20,"endColumn":29},{"ruleId":"927","severity":1,"message":"941","line":124,"column":8,"nodeType":"918","endLine":124,"endColumn":20,"suggestions":"1018"},{"ruleId":"927","severity":1,"message":"941","line":130,"column":8,"nodeType":"918","endLine":130,"endColumn":10,"suggestions":"1019"},{"ruleId":"927","severity":1,"message":"995","line":143,"column":8,"nodeType":"918","endLine":143,"endColumn":31,"suggestions":"1020"},{"ruleId":"920","severity":1,"message":"997","line":6,"column":12,"nodeType":"922","messageId":"923","endLine":6,"endColumn":19},{"ruleId":"927","severity":1,"message":"941","line":17,"column":8,"nodeType":"918","endLine":17,"endColumn":20,"suggestions":"1021"},{"ruleId":"920","severity":1,"message":"1022","line":2,"column":47,"nodeType":"922","messageId":"923","endLine":2,"endColumn":56},{"ruleId":"920","severity":1,"message":"991","line":21,"column":12,"nodeType":"922","messageId":"923","endLine":21,"endColumn":18},{"ruleId":"920","severity":1,"message":"992","line":21,"column":20,"nodeType":"922","messageId":"923","endLine":21,"endColumn":29},{"ruleId":"927","severity":1,"message":"941","line":126,"column":8,"nodeType":"918","endLine":126,"endColumn":20,"suggestions":"1023"},{"ruleId":"927","severity":1,"message":"941","line":132,"column":8,"nodeType":"918","endLine":132,"endColumn":10,"suggestions":"1024"},{"ruleId":"927","severity":1,"message":"995","line":145,"column":8,"nodeType":"918","endLine":145,"endColumn":39,"suggestions":"1025"},{"ruleId":"927","severity":1,"message":"941","line":18,"column":8,"nodeType":"918","endLine":18,"endColumn":20,"suggestions":"1026"},{"ruleId":"920","severity":1,"message":"997","line":6,"column":12,"nodeType":"922","messageId":"923","endLine":6,"endColumn":19},{"ruleId":"927","severity":1,"message":"941","line":17,"column":8,"nodeType":"918","endLine":17,"endColumn":20,"suggestions":"1027"},{"ruleId":"920","severity":1,"message":"980","line":5,"column":10,"nodeType":"922","messageId":"923","endLine":5,"endColumn":22},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"943","line":2,"column":38,"nodeType":"922","messageId":"923","endLine":2,"endColumn":44},{"ruleId":"920","severity":1,"message":"1001","line":10,"column":13,"nodeType":"922","messageId":"923","endLine":10,"endColumn":22},{"ruleId":"920","severity":1,"message":"980","line":5,"column":10,"nodeType":"922","messageId":"923","endLine":5,"endColumn":22},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"943","line":2,"column":38,"nodeType":"922","messageId":"923","endLine":2,"endColumn":44},{"ruleId":"920","severity":1,"message":"1001","line":10,"column":13,"nodeType":"922","messageId":"923","endLine":10,"endColumn":22},{"ruleId":"985","severity":1,"message":"986","line":52,"column":42,"nodeType":"987","messageId":"988","endLine":52,"endColumn":44},{"ruleId":"985","severity":1,"message":"986","line":53,"column":42,"nodeType":"987","messageId":"988","endLine":53,"endColumn":44},{"ruleId":"920","severity":1,"message":"983","line":2,"column":8,"nodeType":"922","messageId":"923","endLine":2,"endColumn":14},{"ruleId":"920","severity":1,"message":"1002","line":3,"column":10,"nodeType":"922","messageId":"923","endLine":3,"endColumn":19},{"ruleId":"920","severity":1,"message":"1028","line":68,"column":11,"nodeType":"922","messageId":"923","endLine":68,"endColumn":19},{"ruleId":"1029","severity":1,"message":"1030","line":149,"column":33,"nodeType":"1031","endLine":149,"endColumn":45},{"ruleId":"920","severity":1,"message":"980","line":5,"column":10,"nodeType":"922","messageId":"923","endLine":5,"endColumn":22},{"ruleId":"920","severity":1,"message":"1032","line":5,"column":37,"nodeType":"922","messageId":"923","endLine":5,"endColumn":57},{"ruleId":"920","severity":1,"message":"1033","line":6,"column":8,"nodeType":"922","messageId":"923","endLine":6,"endColumn":21},{"ruleId":"920","severity":1,"message":"940","line":2,"column":31,"nodeType":"922","messageId":"923","endLine":2,"endColumn":36},{"ruleId":"920","severity":1,"message":"943","line":2,"column":38,"nodeType":"922","messageId":"923","endLine":2,"endColumn":44},{"ruleId":"920","severity":1,"message":"1034","line":7,"column":76,"nodeType":"922","messageId":"923","endLine":7,"endColumn":86},{"ruleId":"920","severity":1,"message":"1035","line":9,"column":8,"nodeType":"922","messageId":"923","endLine":9,"endColumn":19},{"ruleId":"920","severity":1,"message":"1001","line":10,"column":13,"nodeType":"922","messageId":"923","endLine":10,"endColumn":22},{"ruleId":"985","severity":1,"message":"986","line":53,"column":42,"nodeType":"987","messageId":"988","endLine":53,"endColumn":44},"no-native-reassign",["1036"],"no-negated-in-lhs",["1037"],"no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray","no-unused-vars","'adminRoles' is assigned a value but never used.","Identifier","unusedVar","'BsFilePost' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInitialInfo'. Either include it or remove the dependency array.",["1038"],"React Hook useEffect has a missing dependency: 'handleSetResponse'. Either include it or remove the dependency array.",["1039"],"React Hook useEffect has a missing dependency: 'changeStep'. Either include it or remove the dependency array.",["1040"],["1036"],["1037"],["1036"],["1037"],["1036"],["1037"],"'Image' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1041"],"'Button' is defined but never used.",["1042"],["1036"],["1037"],["1036"],["1037"],"'involvement' is assigned a value but never used.",["1043"],"React Hook useEffect has a missing dependency: 'handleGetResponse'. Either include it or remove the dependency array.",["1044"],["1045"],["1046"],["1047"],["1048"],"'privacy' is assigned a value but never used.",["1049"],["1050"],["1051"],"'setLoading' is assigned a value but never used.",["1052"],["1053"],["1054"],["1055"],"'organizationCompleteInternalLinkPage' is defined but never used.","'serviceInfo' is assigned a value but never used.",["1056"],["1057"],["1058"],"'internalLink' is assigned a value but never used.",["1059"],["1060"],["1061"],["1062"],"'DatePickerRender' is defined but never used.","'selectedState' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'SwitchRender' is defined but never used.","'SelectRender' is defined but never used.","'getRacesByValues' is defined but never used.","'getGenderByValue' is defined but never used.","'moment' is defined but never used.","'RiUserUnfollowFill' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'list' is assigned a value but never used.",["1063"],"'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.",["1064"],["1065"],"React Hook useEffect has missing dependencies: 'editMode' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1066"],"'loading' is assigned a value but never used.",["1067"],["1068"],"'FaEdit' is defined but never used.","'RoutePath' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'NotificationBadge' is defined but never used.","'Effect' is defined but never used.","'defaultOrganizationProfilePicture' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'pairsRender' is assigned a value but never used.",["1069"],["1070"],["1071"],["1072"],["1073"],["1074"],["1075"],["1076"],["1077"],"'ListGroup' is defined but never used.",["1078"],["1079"],["1080"],["1081"],["1082"],"'mapImage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DateTimePickerRender' is defined but never used.","'PostGeoCoding' is defined but never used.","'InfoRender' is defined but never used.","'PostMapView' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1083","fix":"1084"},{"desc":"1085","fix":"1086"},{"desc":"1087","fix":"1088"},{"desc":"1089","fix":"1090"},{"desc":"1089","fix":"1091"},{"desc":"1083","fix":"1092"},{"desc":"1093","fix":"1094"},{"desc":"1095","fix":"1096"},{"desc":"1083","fix":"1097"},{"desc":"1098","fix":"1099"},{"desc":"1100","fix":"1101"},{"desc":"1083","fix":"1102"},{"desc":"1103","fix":"1104"},{"desc":"1105","fix":"1106"},{"desc":"1107","fix":"1108"},{"desc":"1083","fix":"1109"},{"desc":"1098","fix":"1110"},{"desc":"1100","fix":"1111"},{"desc":"1083","fix":"1112"},{"desc":"1113","fix":"1114"},{"desc":"1115","fix":"1116"},{"desc":"1083","fix":"1117"},{"desc":"1118","fix":"1119"},{"desc":"1120","fix":"1121"},{"desc":"1107","fix":"1122"},{"desc":"1123","fix":"1124"},{"desc":"1123","fix":"1125"},{"desc":"1089","fix":"1126"},{"desc":"1127","fix":"1128"},{"desc":"1123","fix":"1129"},{"desc":"1123","fix":"1130"},{"desc":"1123","fix":"1131"},{"desc":"1123","fix":"1132"},{"desc":"1123","fix":"1133"},{"desc":"1089","fix":"1134"},{"desc":"1135","fix":"1136"},{"desc":"1123","fix":"1137"},{"desc":"1089","fix":"1138"},{"desc":"1139","fix":"1140"},{"desc":"1123","fix":"1141"},{"desc":"1123","fix":"1142"},{"desc":"1089","fix":"1143"},{"desc":"1144","fix":"1145"},{"desc":"1123","fix":"1146"},{"desc":"1123","fix":"1147"},"Update the dependencies array to be: [getInitialInfo, props.auth]",{"range":"1148","text":"1149"},"Update the dependencies array to be: [handleSetResponse, props.setUserResponse]",{"range":"1150","text":"1151"},"Update the dependencies array to be: [changeStep, props.user]",{"range":"1152","text":"1153"},"Update the dependencies array to be: [props]",{"range":"1154","text":"1155"},{"range":"1156","text":"1155"},{"range":"1157","text":"1149"},"Update the dependencies array to be: [handleGetResponse, props.getInvolvementResponse]",{"range":"1158","text":"1159"},"Update the dependencies array to be: [handleSetResponse, props.setInvolvementResponse]",{"range":"1160","text":"1161"},{"range":"1162","text":"1149"},"Update the dependencies array to be: [handleGetResponse, props.getBasicInfoResponse]",{"range":"1163","text":"1164"},"Update the dependencies array to be: [handleSetResponse, props.setBasicInfoResponse]",{"range":"1165","text":"1166"},{"range":"1167","text":"1149"},"Update the dependencies array to be: [handleGetResponse, props.getPrivacyResponse]",{"range":"1168","text":"1169"},"Update the dependencies array to be: [handleSetResponse, props.setPrivacyResponse]",{"range":"1170","text":"1171"},"Update the dependencies array to be: [getInitialInfo, props.auth, props.match.params.userId]",{"range":"1172","text":"1173"},{"range":"1174","text":"1149"},{"range":"1175","text":"1164"},{"range":"1176","text":"1166"},{"range":"1177","text":"1149"},"Update the dependencies array to be: [handleGetResponse, props.getServiceInfoResponse]",{"range":"1178","text":"1179"},"Update the dependencies array to be: [handleSetResponse, props.setServiceInfoResponse]",{"range":"1180","text":"1181"},{"range":"1182","text":"1149"},"Update the dependencies array to be: [handleGetResponse, props.getInternalLinkResponse]",{"range":"1183","text":"1184"},"Update the dependencies array to be: [handleSetResponse, props.setInternalLinkResponse]",{"range":"1185","text":"1186"},{"range":"1187","text":"1173"},"Update the dependencies array to be: [props, props.auth]",{"range":"1188","text":"1189"},{"range":"1190","text":"1189"},{"range":"1191","text":"1155"},"Update the dependencies array to be: [editMode, props, props.setEventResponse]",{"range":"1192","text":"1193"},{"range":"1194","text":"1189"},{"range":"1195","text":"1189"},{"range":"1196","text":"1189"},{"range":"1197","text":"1189"},{"range":"1198","text":"1189"},{"range":"1199","text":"1155"},"Update the dependencies array to be: [editMode, props, props.setProjectResponse]",{"range":"1200","text":"1201"},{"range":"1202","text":"1189"},{"range":"1203","text":"1155"},"Update the dependencies array to be: [editMode, props, props.setPostResponse]",{"range":"1204","text":"1205"},{"range":"1206","text":"1189"},{"range":"1207","text":"1189"},{"range":"1208","text":"1155"},"Update the dependencies array to be: [editMode, props, props.setVolunteeringResponse]",{"range":"1209","text":"1210"},{"range":"1211","text":"1189"},{"range":"1212","text":"1189"},[1558,1570],"[getInitialInfo, props.auth]",[1631,1654],"[handleSetResponse, props.setUserResponse]",[2355,2367],"[changeStep, props.user]",[2179,2181],"[props]",[2976,2978],[1774,1786],[1847,1877],"[handleGetResponse, props.getInvolvementResponse]",[1938,1968],"[handleSetResponse, props.setInvolvementResponse]",[2456,2468],[2529,2557],"[handleGetResponse, props.getBasicInfoResponse]",[2618,2646],"[handleSetResponse, props.setBasicInfoResponse]",[1690,1702],[1763,1789],"[handleGetResponse, props.getPrivacyResponse]",[1850,1876],"[handleSetResponse, props.setPrivacyResponse]",[665,704],"[getInitialInfo, props.auth, props.match.params.userId]",[2249,2261],[2322,2350],[2411,2439],[1918,1930],[1991,2021],"[handleGetResponse, props.getServiceInfoResponse]",[2082,2112],"[handleSetResponse, props.setServiceInfoResponse]",[1545,1557],[1618,1649],"[handleGetResponse, props.getInternalLinkResponse]",[1710,1741],"[handleSetResponse, props.setInternalLinkResponse]",[995,1034],[758,770],"[props, props.auth]",[4651,4663],[4798,4800],[5394,5418],"[editMode, props, props.setEventResponse]",[614,626],[752,764],[638,650],[770,782],[4783,4795],[4932,4934],[5542,5568],"[editMode, props, props.setProjectResponse]",[4544,4556],[4690,4692],[5279,5302],"[editMode, props, props.setPostResponse]",[602,614],[4979,4991],[5133,5135],[5778,5809],"[editMode, props, props.setVolunteeringResponse]",[800,812],[698,710]]