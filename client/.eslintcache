[{"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js":"1","/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js":"2","/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js":"3","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js":"4","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js":"5","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js":"6","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js":"7","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js":"8","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js":"9","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js":"10","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js":"11","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js":"12","/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js":"13","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js":"14","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js":"15","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js":"16","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js":"17","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js":"18","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js":"19","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js":"20","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js":"21","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js":"22","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js":"23","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js":"24","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js":"25","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js":"26","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js":"27","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_1.js":"28","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_3.js":"29","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_4.js":"30","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_2.js":"31","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_5.js":"32","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_6.js":"33","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_7.js":"34","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js":"35","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js":"36","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js":"37","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js":"38","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js":"39","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js":"40","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js":"41","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js":"42","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js":"43","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js":"44","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js":"45","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js":"46","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js":"47","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js":"48","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js":"49","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js":"50","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js":"51","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js":"52","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js":"53","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js":"54","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js":"55","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js":"56","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js":"57","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js":"58","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js":"59","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js":"60","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js":"61","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js":"62","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js":"63","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js":"64","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js":"65","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js":"66","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js":"67","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js":"68","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js":"69","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js":"70","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js":"71","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js":"72","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js":"73","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js":"74","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js":"75","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js":"76","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js":"77","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js":"78","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js":"79","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js":"80","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js":"81","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-type-action.js":"82","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-type-da.js":"83","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organization-type-reducer.js":"84","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/messages.js":"85","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-list.js":"86","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-details.js":"87","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/genders.js":"88","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/languages.js":"89","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-images.js":"90","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/manage-events.js":"91","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/create-event.js":"92","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/listing-events.js":"93","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/display-event.js":"94","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/manage-posts.js":"95","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-form.js":"96","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/event-reducer.js":"97","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/event-action.js":"98","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/event-da.js":"99","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-image-list.js":"100","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-list.js":"101","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-details.js":"102","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/details-render.js":"103","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/buttons-render.js":"104","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/search-menu.js":"105","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-card-view.js":"106","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-geo-coding.js":"107","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-map-view.js":"108","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/filter-organization.js":"109","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/follow-reducer.js":"110","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/follow-action.js":"111","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/follow-da.js":"112","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/global-notification.js":"113","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/friends.js":"114","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followers.js":"115","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followings.js":"116","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/requests.js":"117","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/community-menu.js":"118","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/sample-users.js":"119","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-map-view.js":"120","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-user-information.js":"121","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/display-project.js":"122","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/listing-projects.js":"123","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/manage-projects.js":"124","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/create-project.js":"125","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post.js":"126","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/display-post.js":"127","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/listing-posts.js":"128","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/manage-news.js":"129","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/create-volunteering.js":"130","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/listing-volunteerings.js":"131","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/manage-volunteerings.js":"132","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/display-volunteering.js":"133","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/project-action.js":"134","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-form.js":"135","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/project-da.js":"136","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-geo-coding.js":"137","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-image-list.js":"138","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-details.js":"139","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-list.js":"140","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-form.js":"141","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-details.js":"142","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-list.js":"143","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/volunteering-action.js":"144","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-image-list.js":"145","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/volunteering-da.js":"146","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-map-view.js":"147","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-geo-coding.js":"148","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-map-view.js":"149","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/post-reducer.js":"150","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/volunteering-reducer.js":"151","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/project-reducer.js":"152","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-suggestions.js":"153","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-posts.js":"154","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/language-action.js":"155","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/skill-action.js":"156","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/skill-reducer.js":"157","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/language-reducer.js":"158","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/skill-da.js":"159","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/language-da.js":"160","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/post-action.js":"161","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-form.js":"162","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-image-list.js":"163","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-geo-coding.js":"164","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/post-da.js":"165","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-details.js":"166","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-map-view.js":"167","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-list.js":"168","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/sample-news.js":"169","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post-old.js":"170","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/post-types.js":"171","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/icon-render.js":"172","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/filter-event.js":"173","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/required-item-list.js":"174","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-post-list.js":"175","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-sub-menu.js":"176","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-post-menu.js":"177","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/home/home-post-feeds.js":"178","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/home/home-suggestions.js":"179","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/notification-reducer.js":"180","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/notification-action.js":"181","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/notification-da.js":"182","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/notification/manage-notifications.js":"183","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/notification/notification-list.js":"184","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/notification-types.js":"185","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/sound-player.js":"186","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/auth-da.js":"187","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/password-da.js":"188","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/user-action.js":"189","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/profile-picture-changer.js":"190","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/membership-reducer.js":"191","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/membership-action.js":"192","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/membership-da.js":"193","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/membership-types.js":"194","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-membership.js":"195","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-modal.js":"196","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-list.js":"197","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-form.js":"198","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-suggestions.js":"199","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-suggestion-list.js":"200","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/committed-persons-list.js":"201","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-membership.js":"202","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/interest-types.js":"203","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/friendship-reducer.js":"204","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/friendship-action.js":"205","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/friendship-da.js":"206","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/friends-list.js":"207","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/followings-list.js":"208","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/followers-list.js":"209","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/requests-list.js":"210","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-post-filter.js":"211","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-community-activity.js":"212"},{"size":920,"mtime":1618138889744,"results":"213","hashOfConfig":"214"},{"size":305,"mtime":1612159937291,"results":"215","hashOfConfig":"214"},{"size":15488,"mtime":1620866609515,"results":"216","hashOfConfig":"214"},{"size":849,"mtime":1619854418318,"results":"217","hashOfConfig":"214"},{"size":933,"mtime":1617204321104,"results":"218","hashOfConfig":"214"},{"size":483,"mtime":1620429823366,"results":"219","hashOfConfig":"214"},{"size":3734,"mtime":1618426976631,"results":"220","hashOfConfig":"214"},{"size":3617,"mtime":1613711460041,"results":"221","hashOfConfig":"214"},{"size":1004,"mtime":1612162487807,"results":"222","hashOfConfig":"214"},{"size":2882,"mtime":1618362329915,"results":"223","hashOfConfig":"214"},{"size":2596,"mtime":1619168944240,"results":"224","hashOfConfig":"214"},{"size":1037,"mtime":1612275636573,"results":"225","hashOfConfig":"214"},{"size":384,"mtime":1612364173406,"results":"226","hashOfConfig":"214"},{"size":5131,"mtime":1620866602249,"results":"227","hashOfConfig":"214"},{"size":7862,"mtime":1620430395850,"results":"228","hashOfConfig":"214"},{"size":3342,"mtime":1618362201826,"results":"229","hashOfConfig":"214"},{"size":2555,"mtime":1618362764925,"results":"230","hashOfConfig":"214"},{"size":1448,"mtime":1612241447302,"results":"231","hashOfConfig":"214"},{"size":3995,"mtime":1613036235120,"results":"232","hashOfConfig":"214"},{"size":4379,"mtime":1620517971006,"results":"233","hashOfConfig":"214"},{"size":234,"mtime":1612161648565,"results":"234","hashOfConfig":"214"},{"size":10394,"mtime":1616268958441,"results":"235","hashOfConfig":"214"},{"size":4092,"mtime":1619804614542,"results":"236","hashOfConfig":"214"},{"size":1553,"mtime":1612878897820,"results":"237","hashOfConfig":"214"},{"size":4070,"mtime":1619168912289,"results":"238","hashOfConfig":"214"},{"size":6665,"mtime":1620609837069,"results":"239","hashOfConfig":"214"},{"size":5148,"mtime":1612878632182,"results":"240","hashOfConfig":"214"},{"size":2839,"mtime":1612275397476,"results":"241","hashOfConfig":"214"},{"size":6755,"mtime":1612878548496,"results":"242","hashOfConfig":"214"},{"size":4627,"mtime":1612855538692,"results":"243","hashOfConfig":"214"},{"size":13155,"mtime":1612878525889,"results":"244","hashOfConfig":"214"},{"size":3588,"mtime":1612367151967,"results":"245","hashOfConfig":"214"},{"size":136,"mtime":1612173566517,"results":"246","hashOfConfig":"214"},{"size":136,"mtime":1612173570845,"results":"247","hashOfConfig":"214"},{"size":334,"mtime":1612199776690,"results":"248","hashOfConfig":"214"},{"size":259,"mtime":1614335298622,"results":"249","hashOfConfig":"214"},{"size":204,"mtime":1612794906131,"results":"250","hashOfConfig":"214"},{"size":2755,"mtime":1613386570898,"results":"251","hashOfConfig":"214"},{"size":7131,"mtime":1619312836365,"results":"252","hashOfConfig":"214"},{"size":411,"mtime":1612162325570,"results":"253","hashOfConfig":"214"},{"size":296,"mtime":1613714767296,"results":"254","hashOfConfig":"214"},{"size":6923,"mtime":1614956967886,"results":"255","hashOfConfig":"214"},{"size":922,"mtime":1614335165734,"results":"256","hashOfConfig":"214"},{"size":402,"mtime":1612795080494,"results":"257","hashOfConfig":"214"},{"size":509,"mtime":1613151325217,"results":"258","hashOfConfig":"214"},{"size":503,"mtime":1612850760242,"results":"259","hashOfConfig":"214"},{"size":3233,"mtime":1612872182313,"results":"260","hashOfConfig":"214"},{"size":7140,"mtime":1619194957934,"results":"261","hashOfConfig":"214"},{"size":3233,"mtime":1612872360624,"results":"262","hashOfConfig":"214"},{"size":2527,"mtime":1613386369306,"results":"263","hashOfConfig":"214"},{"size":4579,"mtime":1619116596537,"results":"264","hashOfConfig":"214"},{"size":5549,"mtime":1619116576080,"results":"265","hashOfConfig":"214"},{"size":3496,"mtime":1620521973137,"results":"266","hashOfConfig":"214"},{"size":0,"mtime":1612974584064,"results":"267","hashOfConfig":"214"},{"size":6020,"mtime":1620521694959,"results":"268","hashOfConfig":"214"},{"size":5049,"mtime":1619116501565,"results":"269","hashOfConfig":"214"},{"size":3998,"mtime":1619195714845,"results":"270","hashOfConfig":"214"},{"size":3132,"mtime":1618398564465,"results":"271","hashOfConfig":"214"},{"size":0,"mtime":1612974691472,"results":"272","hashOfConfig":"214"},{"size":4848,"mtime":1619308252108,"results":"273","hashOfConfig":"214"},{"size":11512,"mtime":1619037168389,"results":"274","hashOfConfig":"214"},{"size":973,"mtime":1619195651828,"results":"275","hashOfConfig":"214"},{"size":0,"mtime":1618332990392,"results":"276","hashOfConfig":"214"},{"size":2117,"mtime":1613386399868,"results":"277","hashOfConfig":"214"},{"size":1718,"mtime":1613139377905,"results":"278","hashOfConfig":"214"},{"size":1943,"mtime":1617532572195,"results":"279","hashOfConfig":"214"},{"size":5436,"mtime":1618649380435,"results":"280","hashOfConfig":"214"},{"size":488,"mtime":1613480600581,"results":"281","hashOfConfig":"214"},{"size":708,"mtime":1618428052114,"results":"282","hashOfConfig":"214"},{"size":599,"mtime":1613480586726,"results":"283","hashOfConfig":"214"},{"size":4546,"mtime":1618649303022,"results":"284","hashOfConfig":"214"},{"size":3754,"mtime":1619265127971,"results":"285","hashOfConfig":"214"},{"size":332,"mtime":1613113138461,"results":"286","hashOfConfig":"214"},{"size":3951,"mtime":1618420862774,"results":"287","hashOfConfig":"214"},{"size":10072,"mtime":1618744405664,"results":"288","hashOfConfig":"214"},{"size":3841,"mtime":1618358869289,"results":"289","hashOfConfig":"214"},{"size":4145,"mtime":1618649349639,"results":"290","hashOfConfig":"214"},{"size":2455,"mtime":1618649339647,"results":"291","hashOfConfig":"214"},{"size":7963,"mtime":1619962497999,"results":"292","hashOfConfig":"214"},{"size":6489,"mtime":1619962551419,"results":"293","hashOfConfig":"214"},{"size":2225,"mtime":1618738473405,"results":"294","hashOfConfig":"214"},{"size":291,"mtime":1613480773486,"results":"295","hashOfConfig":"214"},{"size":385,"mtime":1613480844402,"results":"296","hashOfConfig":"214"},{"size":450,"mtime":1613482423474,"results":"297","hashOfConfig":"214"},{"size":2724,"mtime":1618148444671,"results":"298","hashOfConfig":"214"},{"size":2202,"mtime":1618147574477,"results":"299","hashOfConfig":"214"},{"size":131,"mtime":1613490873554,"results":"300","hashOfConfig":"214"},{"size":615,"mtime":1613475065090,"results":"301","hashOfConfig":"214"},{"size":4192,"mtime":1614055942375,"results":"302","hashOfConfig":"214"},{"size":1340,"mtime":1615639912392,"results":"303","hashOfConfig":"214"},{"size":1869,"mtime":1613887993404,"results":"304","hashOfConfig":"214"},{"size":6877,"mtime":1614432661380,"results":"305","hashOfConfig":"214"},{"size":376,"mtime":1613819188566,"results":"306","hashOfConfig":"214"},{"size":1178,"mtime":1614075232404,"results":"307","hashOfConfig":"214"},{"size":2038,"mtime":1618752483034,"results":"308","hashOfConfig":"214"},{"size":4404,"mtime":1615808372890,"results":"309","hashOfConfig":"214"},{"size":819,"mtime":1614074947538,"results":"310","hashOfConfig":"214"},{"size":1206,"mtime":1614347100892,"results":"311","hashOfConfig":"214"},{"size":1621,"mtime":1614347082271,"results":"312","hashOfConfig":"214"},{"size":4446,"mtime":1613887183819,"results":"313","hashOfConfig":"214"},{"size":4433,"mtime":1615726497767,"results":"314","hashOfConfig":"214"},{"size":4203,"mtime":1614427885545,"results":"315","hashOfConfig":"214"},{"size":8493,"mtime":1619309898166,"results":"316","hashOfConfig":"214"},{"size":9867,"mtime":1619894750116,"results":"317","hashOfConfig":"214"},{"size":784,"mtime":1620866664041,"results":"318","hashOfConfig":"214"},{"size":8219,"mtime":1620864834563,"results":"319","hashOfConfig":"214"},{"size":3674,"mtime":1614420951599,"results":"320","hashOfConfig":"214"},{"size":4230,"mtime":1620778472476,"results":"321","hashOfConfig":"214"},{"size":2518,"mtime":1615728966363,"results":"322","hashOfConfig":"214"},{"size":902,"mtime":1614946896233,"results":"323","hashOfConfig":"214"},{"size":914,"mtime":1614857364406,"results":"324","hashOfConfig":"214"},{"size":1448,"mtime":1620172755338,"results":"325","hashOfConfig":"214"},{"size":6814,"mtime":1620504593015,"results":"326","hashOfConfig":"214"},{"size":2400,"mtime":1620430842458,"results":"327","hashOfConfig":"214"},{"size":2971,"mtime":1620430672302,"results":"328","hashOfConfig":"214"},{"size":2995,"mtime":1620430708669,"results":"329","hashOfConfig":"214"},{"size":3822,"mtime":1620433741086,"results":"330","hashOfConfig":"214"},{"size":1816,"mtime":1620430912066,"results":"331","hashOfConfig":"214"},{"size":3458,"mtime":1614951596247,"results":"332","hashOfConfig":"214"},{"size":7818,"mtime":1618738646435,"results":"333","hashOfConfig":"214"},{"size":95,"mtime":1615119305030,"results":"334","hashOfConfig":"214"},{"size":1284,"mtime":1615309088618,"results":"335","hashOfConfig":"214"},{"size":382,"mtime":1615309080516,"results":"336","hashOfConfig":"214"},{"size":1939,"mtime":1615309088612,"results":"337","hashOfConfig":"214"},{"size":7242,"mtime":1615644189191,"results":"338","hashOfConfig":"214"},{"size":10941,"mtime":1618752534282,"results":"339","hashOfConfig":"214"},{"size":4388,"mtime":1619305353183,"results":"340","hashOfConfig":"214"},{"size":376,"mtime":1615308333852,"results":"341","hashOfConfig":"214"},{"size":8114,"mtime":1615982423393,"results":"342","hashOfConfig":"214"},{"size":7573,"mtime":1615713013237,"results":"343","hashOfConfig":"214"},{"size":397,"mtime":1615309213516,"results":"344","hashOfConfig":"214"},{"size":2114,"mtime":1615309221746,"results":"345","hashOfConfig":"214"},{"size":1429,"mtime":1615309221733,"results":"346","hashOfConfig":"214"},{"size":1280,"mtime":1615301489435,"results":"347","hashOfConfig":"214"},{"size":4844,"mtime":1615808403464,"results":"348","hashOfConfig":"214"},{"size":1667,"mtime":1615308103041,"results":"349","hashOfConfig":"214"},{"size":3678,"mtime":1615309116535,"results":"350","hashOfConfig":"214"},{"size":4452,"mtime":1615309116818,"results":"351","hashOfConfig":"214"},{"size":4431,"mtime":1615645772247,"results":"352","hashOfConfig":"214"},{"size":4435,"mtime":1615309116877,"results":"353","hashOfConfig":"214"},{"size":4913,"mtime":1615808459930,"results":"354","hashOfConfig":"214"},{"size":4562,"mtime":1615713379786,"results":"355","hashOfConfig":"214"},{"size":4540,"mtime":1615309203416,"results":"356","hashOfConfig":"214"},{"size":1465,"mtime":1615301545611,"results":"357","hashOfConfig":"214"},{"size":4467,"mtime":1615309203415,"results":"358","hashOfConfig":"214"},{"size":1782,"mtime":1615308143466,"results":"359","hashOfConfig":"214"},{"size":3249,"mtime":1615645978034,"results":"360","hashOfConfig":"214"},{"size":3688,"mtime":1615309380373,"results":"361","hashOfConfig":"214"},{"size":3275,"mtime":1615712878283,"results":"362","hashOfConfig":"214"},{"size":5302,"mtime":1619312916615,"results":"363","hashOfConfig":"214"},{"size":938,"mtime":1615308223682,"results":"364","hashOfConfig":"214"},{"size":853,"mtime":1615308224979,"results":"365","hashOfConfig":"214"},{"size":8506,"mtime":1616232056501,"results":"366","hashOfConfig":"214"},{"size":11298,"mtime":1617176766509,"results":"367","hashOfConfig":"214"},{"size":463,"mtime":1615490394305,"results":"368","hashOfConfig":"214"},{"size":433,"mtime":1615490371715,"results":"369","hashOfConfig":"214"},{"size":557,"mtime":1615490469139,"results":"370","hashOfConfig":"214"},{"size":581,"mtime":1615490500492,"results":"371","hashOfConfig":"214"},{"size":676,"mtime":1618428188494,"results":"372","hashOfConfig":"214"},{"size":807,"mtime":1618428069630,"results":"373","hashOfConfig":"214"},{"size":3001,"mtime":1619305301478,"results":"374","hashOfConfig":"214"},{"size":9178,"mtime":1617361397302,"results":"375","hashOfConfig":"214"},{"size":6010,"mtime":1616167436113,"results":"376","hashOfConfig":"214"},{"size":3672,"mtime":1615309130301,"results":"377","hashOfConfig":"214"},{"size":4377,"mtime":1619311707658,"results":"378","hashOfConfig":"214"},{"size":13021,"mtime":1619304308185,"results":"379","hashOfConfig":"214"},{"size":3438,"mtime":1616241189784,"results":"380","hashOfConfig":"214"},{"size":7703,"mtime":1620777554346,"results":"381","hashOfConfig":"214"},{"size":6268,"mtime":1615981096551,"results":"382","hashOfConfig":"214"},{"size":6743,"mtime":1615982460971,"results":"383","hashOfConfig":"214"},{"size":2338,"mtime":1616327540013,"results":"384","hashOfConfig":"214"},{"size":495,"mtime":1616063732423,"results":"385","hashOfConfig":"214"},{"size":2570,"mtime":1616327646868,"results":"386","hashOfConfig":"214"},{"size":4853,"mtime":1616179270911,"results":"387","hashOfConfig":"214"},{"size":8512,"mtime":1620865521002,"results":"388","hashOfConfig":"214"},{"size":3260,"mtime":1620517165575,"results":"389","hashOfConfig":"214"},{"size":1829,"mtime":1617294249718,"results":"390","hashOfConfig":"214"},{"size":12561,"mtime":1620158504303,"results":"391","hashOfConfig":"214"},{"size":6832,"mtime":1620158472149,"results":"392","hashOfConfig":"214"},{"size":1865,"mtime":1620504793379,"results":"393","hashOfConfig":"214"},{"size":2535,"mtime":1620569565411,"results":"394","hashOfConfig":"214"},{"size":1334,"mtime":1618135659601,"results":"395","hashOfConfig":"214"},{"size":3048,"mtime":1620504880848,"results":"396","hashOfConfig":"214"},{"size":5133,"mtime":1619899381510,"results":"397","hashOfConfig":"214"},{"size":495,"mtime":1618065102194,"results":"398","hashOfConfig":"214"},{"size":342,"mtime":1618138276460,"results":"399","hashOfConfig":"214"},{"size":1067,"mtime":1618426393075,"results":"400","hashOfConfig":"214"},{"size":848,"mtime":1618359313030,"results":"401","hashOfConfig":"214"},{"size":3400,"mtime":1620570061479,"results":"402","hashOfConfig":"214"},{"size":5093,"mtime":1618481830678,"results":"403","hashOfConfig":"214"},{"size":1037,"mtime":1618646976963,"results":"404","hashOfConfig":"214"},{"size":1187,"mtime":1618689920848,"results":"405","hashOfConfig":"214"},{"size":2291,"mtime":1619264556865,"results":"406","hashOfConfig":"214"},{"size":934,"mtime":1619207987161,"results":"407","hashOfConfig":"214"},{"size":6761,"mtime":1619264712290,"results":"408","hashOfConfig":"214"},{"size":7231,"mtime":1619206641850,"results":"409","hashOfConfig":"214"},{"size":4216,"mtime":1619260689095,"results":"410","hashOfConfig":"214"},{"size":4551,"mtime":1619260640202,"results":"411","hashOfConfig":"214"},{"size":2980,"mtime":1620517150412,"results":"412","hashOfConfig":"214"},{"size":8412,"mtime":1619171935318,"results":"413","hashOfConfig":"214"},{"size":2406,"mtime":1619166937386,"results":"414","hashOfConfig":"214"},{"size":6696,"mtime":1619264320737,"results":"415","hashOfConfig":"214"},{"size":291,"mtime":1619290946435,"results":"416","hashOfConfig":"214"},{"size":1162,"mtime":1619808571127,"results":"417","hashOfConfig":"214"},{"size":1182,"mtime":1620167805424,"results":"418","hashOfConfig":"214"},{"size":1894,"mtime":1620169227904,"results":"419","hashOfConfig":"214"},{"size":2519,"mtime":1620433790408,"results":"420","hashOfConfig":"214"},{"size":4430,"mtime":1620431122085,"results":"421","hashOfConfig":"214"},{"size":4082,"mtime":1620436616981,"results":"422","hashOfConfig":"214"},{"size":4954,"mtime":1620433834082,"results":"423","hashOfConfig":"214"},{"size":805,"mtime":1620864172803,"results":"424","hashOfConfig":"214"},{"size":9076,"mtime":1620866532497,"results":"425","hashOfConfig":"214"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},"14vz1v0",{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"428"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"428"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"484"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"487"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"428"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"528"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"428"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"534"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"538"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"428"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"428"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"428"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"538"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"428"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"428"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"428"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"428"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"538"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"428"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"573"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"428"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"521"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"428"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"428"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"428"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"428"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"428"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"633"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"639"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"639"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"639"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650","usedDeprecatedRules":"428"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653","usedDeprecatedRules":"639"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"656"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"659"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"659"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"639"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"639"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672","usedDeprecatedRules":"428"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"675","usedDeprecatedRules":"428"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"428"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"428"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"696","usedDeprecatedRules":"428"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"699","usedDeprecatedRules":"428"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"702","usedDeprecatedRules":"428"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"428"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"428"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"428"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"639"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"725","usedDeprecatedRules":"639"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"728","usedDeprecatedRules":"639"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"428"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"734","usedDeprecatedRules":"428"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"659"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"639"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"639"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"639"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"639"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"764","usedDeprecatedRules":"639"},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"639"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"772","usedDeprecatedRules":"639"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"783","usedDeprecatedRules":"639"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"639"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"639"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"656"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"656"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"797","usedDeprecatedRules":"798"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"801","usedDeprecatedRules":"798"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"818","usedDeprecatedRules":"428"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"821","usedDeprecatedRules":"428"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"828","usedDeprecatedRules":"428"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"831","usedDeprecatedRules":"428"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"836","usedDeprecatedRules":"659"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"839","messages":"840","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"841","usedDeprecatedRules":"428"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844","usedDeprecatedRules":"428"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"847","usedDeprecatedRules":"428"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"850","usedDeprecatedRules":"428"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"853","messages":"854","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"855","usedDeprecatedRules":"428"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"858","usedDeprecatedRules":"428"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"428"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"864","usedDeprecatedRules":"428"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"873","usedDeprecatedRules":"428"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"876","usedDeprecatedRules":"428"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"428"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"900","usedDeprecatedRules":"428"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"428"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"906","usedDeprecatedRules":"428"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"911","usedDeprecatedRules":"428"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"914","usedDeprecatedRules":"428"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"917","usedDeprecatedRules":"428"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"428"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"428"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"933","usedDeprecatedRules":"428"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"936","usedDeprecatedRules":"428"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"939","usedDeprecatedRules":"428"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"942","messages":"943","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js",[],["944","945"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js",["946"],"import React from 'react';\r\nimport { Navbar, Nav, NavDropdown, Image } from 'react-bootstrap';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nimport { Link } from 'react-router-dom';\r\n// import SearchBox from './search-box';\r\nimport ReactAutoSuggest from './react-autosuggest-lib';\r\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\r\nimport Avatar from 'react-avatar';\r\nimport GlobalNotification from './global-notification';\r\nimport { get } from '../../actions';\r\nconst GetNameAndProfilePicture = (userType, basicInfo) => {\r\n    let name = '';\r\n    let profilePicture = '';\r\n    if (userType === 'individual') {\r\n        name = basicInfo.firstName ? basicInfo.firstName + ' ' : '';\r\n        name += basicInfo.lastName ? basicInfo.lastName + ' ' : '';\r\n        profilePicture = basicInfo.profilePicture || defaultIndividualProfilePicture;\r\n    } else if (userType === 'organization') {\r\n        name = basicInfo.name ? basicInfo.name : '';\r\n        profilePicture = basicInfo.profilePicture || defaultOrganizationProfilePicture;\r\n    }\r\n\r\n    return { name, profilePicture };\r\n};\r\nconst Header = (props) => {\r\n    const isAuth = props.isAuth || false;\r\n\r\n    if (isAuth && props.user._id) {\r\n        const { name, profilePicture } = GetNameAndProfilePicture(props.user.userType, props.basicInfo);\r\n        return (\r\n            <div className=\"header\">\r\n                <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        <Image src=\"/images/logo/logo8.png\" thumbnail rounded={10} style={{ height: '50px', width: 'auto', marginLeft: '64px' }} />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <ReactAutoSuggest />\r\n                            <GlobalNotification user={props.user} />\r\n                            <NavDropdown title={<Avatar size=\"30\" src={profilePicture} round=\"5px\" />} id=\"basic-nav-dropdown\" alignRight={true}>\r\n                                <NavDropdown.Item disabled={true}>Welcome, {name}</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <Link to={RoutePath.signOutPage} className=\"dropdown-item\">\r\n                                    Sign out\r\n                                </Link>\r\n                            </NavDropdown>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"header\">\r\n                <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        <Image src=\"/images/logo/logo8.png\" thumbnail rounded={10} style={{ height: '50px', width: 'auto', marginLeft: '64px' }} />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <Link to={RoutePath.signInPage} className=\"nav-link\">\r\n                                Sign in\r\n                            </Link>\r\n                            <Link to={RoutePath.signUpPage} className=\"nav-link\">\r\n                                Sign up\r\n                            </Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default Header;\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js",["947","948"],"import React from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Row, Col, InputGroup, FormControl } from 'react-bootstrap';\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\nimport moment from 'moment';\r\n\r\nexport const InputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-4\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-8\">\r\n                <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputRenderWithLargeLabel = ({ input, label, type, placeholder, min, max, unit, step, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div className={className}>\r\n            <div className=\"col-sm-6\">\r\n                <label className=\"form-label\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"col-sm-6\">\r\n                {type === 'number' ? (\r\n                    <div className=\"input-group\">\r\n                        <input {...input} placeholder={placeholder} type={type} className=\"form-control\" min={min} max={max} unit={unit} step={step} />\r\n                        {unit && (\r\n                            <div className=\"input-group-append\">\r\n                                <span className=\"input-group-text\">{unit}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <input {...input} placeholder={placeholder} type={type} className=\"form-control\" />\r\n                )}\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const TextRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <textarea {...input} placeholder={placeholder} rows=\"5\" className=\"form-control\" />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const CheckBoxRender = ({ input, label, type, placeholder, col1, col2, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2}>\r\n                <input {...input} type={type} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const InputNumberRender = ({ input, label, type, placeholder, step, min, max, unit, meta: { touched, error, warning } }) => {\r\n    const className = `form-group row ${touched && error ? 'has-danger' : 'has-success'}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className=\"col-sm-4 col-form-label\">{label}</label>\r\n            <div className=\"col-sm-8\">\r\n                <div className=\"input-group\">\r\n                    <input style={{ float: 'left' }} {...input} placeholder={placeholder} step={step} min={min} max={max} type={type} className=\"form-control\" />\r\n                    <span className=\"InputNumberUnitSpan\">{unit}</span>\r\n                </div>\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SaInputRender = ({ input, label, type, placeholder, meta: { asyncValidating, touched, error, warning } }) => {\r\n    const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <div style={{ marginBottom: '10px' }} className={className}>\r\n            <label className=\"col-sm-4 signUpLabel\">{label}</label>\r\n\r\n            <div className={asyncValidating ? 'async-validating col-sm-8' : 'col-sm-8'}>\r\n                <input {...input} placeholder={placeholder} type={type} className={'form-control ' + input.name} />\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport const SelectRender = ({ input, label, placeholder, type, col1, col2, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2}>\r\n                <select {...input} className=\"form-control\">\r\n                    {children}\r\n                </select>\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const HalfInputRender = ({ input, label, type, placeholder, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <>\r\n            <input {...input} placeholder={placeholder} type={type} className=\"form-control half-text-input\" />\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </>\r\n    );\r\n};\r\n\r\n// export const SwitchRender = ({ input, label, type, id, checked, placeholder, meta: { touched, error, warning } }) => {\r\n//     const className = `form-group row ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n//     return (\r\n//         <div className={className}>\r\n//             <div className=\"col-sm-9\">\r\n//                 <label className=\"form-label\">{label}</label>\r\n//             </div>\r\n\r\n//             <div className=\"col-sm-3 custom-control custom-switch\">\r\n//                 {/* <input type=\"checkbox\" className=\"custom-control-input\" id={id} checked={checked} /> */}\r\n//                 <input type=\"checkbox\" className=\"custom-control-input\" id=\"customSwitch1\"></input>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\nexport const SwitchRender = ({ input, label, type, placeholder, id, defaultChecked, meta: { touched, error, warning } }) => {\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-6\" htmlFor={id}>\r\n                {label}\r\n            </label>\r\n            <div className=\"col-sm-3 custom-control custom-switch\" style={{ marginLeft: 20 }}>\r\n                <input {...input} type=\"checkbox\" className=\"custom-control-input\" id={id} defaultChecked={input.value} />\r\n                <label className=\"custom-control-label\" htmlFor={id}>\r\n                    {/* Toggle this switch element */}\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const DatePickerRender = ({ input, label, minDate, selectedDate, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-sm-4\">{label}</label>\r\n            <div className=\"col-sm-8 date-picker-div\" style={{ zIndex: zIndex }}>\r\n                <DatePicker className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const CreatableMultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <CreatableSelect {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} placeholder={placeholder} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const MultiSelectRender = ({ input, label, placeholder, options, col1, col2, zIndex, meta: { touched, error }, children }) => {\r\n    const className = `form-group ${touched ? (error ? 'has-danger' : '') : ''}`;\r\n\r\n    return (\r\n        <Row className={className}>\r\n            <label className={'col-sm-' + col1}>{label}</label>\r\n            <Col sm={col2} style={{ zIndex: zIndex }}>\r\n                <Select {...input} onChange={(value) => input.onChange(value)} onBlur={() => input.onBlur(input.value)} options={options} isMulti={true} />\r\n                {touched && error && <span>{error}</span>}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport const DateTimePickerRender = ({ input, label, minDate, selectedDate, col1, col2, setDate, zIndex, meta: { touched, error, warning } }) => {\r\n    console.log(input.value);\r\n    const date = moment(input.value).isValid();\r\n    selectedDate = date ? new Date(input.value) : '';\r\n    console.log('🚀 ~ file: input-render.js ~ line 157 ~ DatePickerRender ~ selectedDate', selectedDate);\r\n    input.value = selectedDate;\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className={'form-label col-sm-' + col1}>{label}</label>\r\n            <div className={'col-sm-' + col2} style={{ zIndex: zIndex }}>\r\n                <DatePicker showTimeSelect className=\"form-control custom-date-picker\" {...input} selected={selectedDate} minDate={minDate} dateFormat=\"MM/dd/yyyy h:mm aa\" />\r\n                {touched && error && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js",["949","950","951"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport Step1 from '../../components/profile_step/step_1';\nimport Step2 from '../../components/profile_step/step_2';\nimport Step3 from '../../components/profile_step/step_3';\nimport Step4 from '../../components/profile_step/step_4';\nimport Step5 from '../../components/profile_step/step_5';\nimport Step6 from '../../components/profile_step/step_6';\nimport Step7 from '../../components/profile_step/step_7';\nimport { getUserInformation, setUserInformation, getAllAreaOfInterests } from '../../actions';\nimport { NotificationManager } from 'react-notifications';\nconst CompleteProfile = (props) => {\n    const [stepId, setStepId] = useState(2);\n    const [loading, setLoading] = useState(false);\n    const [image, setImage] = useState();\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        props.dispatch(getAllAreaOfInterests());\n        if (user && user._id) {\n            props.dispatch(getUserInformation(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setUserResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setStepId(props.setUserResponse.stepCompleted + 1);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setUserResponse]);\n    const changeStep = () => {\n        if (props.user && props.user.stepCompleted) {\n            setStepId(props.user.stepCompleted + 1);\n        }\n    };\n    const onSubmit = (values) => {\n        setLoading(true);\n        console.log('🚀 ~ file: complete-profile.js ~ line 44 ~ onSubmit ~ values', values);\n        if (stepId === 2) {\n            if (values.basicInfo) values.basicInfo.photo = image;\n            else\n                values.basicInfo = {\n                    photo: image,\n                };\n        }\n        props.dispatch(setUserInformation(props.auth.user._id, stepId, props.user, values));\n        setLoading(false);\n    };\n    useEffect(() => {\n        changeStep();\n    }, [props.user]);\n    const handleBackButton = (stepId) => {\n        if (stepId > 2) {\n            setStepId(stepId - 1);\n        }\n    };\n    const handleSkipButton = (stepId) => {\n        if (stepId < 5) {\n            setStepId(stepId + 1);\n        }\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setImage(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const steps = [\n        <Step1 />,\n        <Step1 />,\n        <Step2\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            image={image}\n            handlePictureUpload={handlePictureUpload}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step3\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            areaOfInterests={props.areaOfInterest.success ? props.areaOfInterest.areaOfInterests : []}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step4\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step5\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n        />,\n        <Step6 />,\n        <Step7 />,\n    ];\n    if (loading) return <LoadingAnim />;\n    else return steps[stepId];\n};\nconst mapStateToProps = (state) => {\n    const user = state.User.getUser.user;\n    const individual = state.User.getUser.individual;\n    const organization = state.User.getUser.organization;\n    let initialValues = {};\n    if (user && user.userType) {\n        if (user.userType === 'individual') initialValues = individual;\n        else if (user.userType === 'organization') initialValues = organization;\n    }\n    const setUserResponse = state.User.setUser;\n\n    return {\n        user,\n        individual,\n        organization,\n        initialValues,\n        setUserResponse,\n        areaOfInterest: state.AreaOfInterest.allAreaOfInterest,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CompleteProfile',\n        enableReinitialize: true,\n    })(CompleteProfile),\n);\n",["952","953"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_1.js",[],["954","955"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_3.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_4.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_2.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_5.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_6.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/profile_step/step_7.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js",["956"],"import React, { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { followUser } from '../../actions/follow-action';\nimport {\n    cancelGoingPost,\n    cancelInterestedPost,\n    cancelLikePost,\n    changePostInterest,\n    getAllCommittedPersons,\n    getHomeFeed,\n    goingPost,\n    interestedPost,\n    likePost,\n} from '../../actions/post-action';\nimport { getAllSuggestedUsers } from '../../actions/user-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport HomePostFeeds from '../../components/home/home-post-feeds';\nimport HomeOrganizationSuggestions from '../../components/home/home-suggestions';\nimport CommittedPersonsModal from '../../components/post/committed-persons-list';\nimport { postDetailsPage, userDetailsPage } from '../../constants/route-paths';\nconst Home = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [committedModal, setCommittedModal] = useState(false);\n    const [committedLoading, setCommittedLoading] = useState(false);\n    const [committedList, setCommittedList] = useState([]);\n    const [cards, setCards] = useState({});\n    const [userId, setUserId] = useState('');\n\n    const handleFollowOrganization = (organizationId) => {\n        let cards_ = cards;\n        cards_[organizationId] = false;\n        setCards({ ...cards_ });\n        console.log({ followerId: userId, followingId: organizationId });\n        props.dispatch(followUser({ followerId: userId, followingId: organizationId }));\n    };\n    const handleClickCommittedButtons = (postId, type) => {\n        console.log('🚀 ~ file: home.js ~ line 20 ~ handleClickCommittedButtons ~ postId, type', postId, type);\n        setCommittedLoading(true);\n        getAllCommittedPersons(postId, type).then((response) => {\n            console.log('🚀 ~ file: home.js ~ line 22 ~ getAllCommittedPersons ~ response', response);\n            setCommittedModal(true);\n            setCommittedLoading(false);\n            if (response.success) {\n                setCommittedList(response.users);\n            } else {\n                alert('User List Not Found');\n            }\n        });\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            const user = props.auth.user;\n            setUserId(user._id);\n            props.dispatch(getHomeFeed());\n            props.dispatch(getAllSuggestedUsers(user._id, 'organization', 20));\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    useEffect(() => {\n        const { success } = props.OrganizationSuggestionResponse;\n        if (success) {\n            let cards = {};\n            const users = props.OrganizationSuggestionResponse.users;\n            for (let i = 0; i < users.length; i++) {\n                cards[users[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.OrganizationSuggestionResponse]);\n    const handleGotoPostDetails = (postType, postId) => {\n        props.history.push(postDetailsPage(postType, postId));\n    };\n    const handleGotoOrganizationDetails = (userId) => {\n        props.history.push(userDetailsPage('organization', userId));\n    };\n    const handleLikePost = (postId) => {\n        props.dispatch(likePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'like'));\n    };\n    const handleCancelLikePost = (postId) => {\n        props.dispatch(cancelLikePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'unlike'));\n    };\n\n    const handleInterestedPost = (postId) => {\n        props.dispatch(interestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'interested'));\n    };\n    const handleCancelInterestedPost = (postId) => {\n        console.log('🚀 ~ file: home.js ~ line 46 ~ handleCancelInterestedPost ~ postId', postId);\n        props.dispatch(cancelInterestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'uninterested'));\n    };\n\n    const handleGoingPost = (postId) => {\n        props.dispatch(goingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'going'));\n    };\n    const handleCancelGoingPost = (postId) => {\n        props.dispatch(cancelGoingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'ungoing'));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <CommittedPersonsModal\n                    committedModal={committedModal}\n                    committedLoading={committedLoading}\n                    committedList={committedList}\n                    setCommittedModal={setCommittedModal}\n                />\n                <Row>\n                    <Col className=\"parent-page-home\">\n                        <Row>\n                            <Col md=\"8\">\n                                <HomePostFeeds\n                                    handleGotoPostDetails={handleGotoPostDetails}\n                                    handleGotoOrganizationDetails={handleGotoOrganizationDetails}\n                                    allPosts={props.homeFeedResponse.success ? props.homeFeedResponse.allPosts : []}\n                                    handleLikePost={handleLikePost}\n                                    handleCancelLikePost={handleCancelLikePost}\n                                    handleInterestedPost={handleInterestedPost}\n                                    handleCancelInterestedPost={handleCancelInterestedPost}\n                                    handleGoingPost={handleGoingPost}\n                                    handleCancelGoingPost={handleCancelGoingPost}\n                                    userId={userId}\n                                    handleClickCommittedButtons={handleClickCommittedButtons}\n                                />\n                            </Col>\n                            <Col md=\"4\">\n                                <HomeOrganizationSuggestions\n                                    allOrganizations={\n                                        props.OrganizationSuggestionResponse && props.OrganizationSuggestionResponse.success\n                                            ? props.OrganizationSuggestionResponse.users\n                                            : []\n                                    }\n                                    cards={cards}\n                                    handleFollowOrganization={handleFollowOrganization}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const homeFeedResponse = state.Post.homeFeed;\n    const PostSuggestionResponse = state.Post.getAllSuggestions;\n    const OrganizationSuggestionResponse = state.User.getAllSuggestedUsers;\n    return { homeFeedResponse, PostSuggestionResponse, OrganizationSuggestionResponse };\n};\nexport default connect(mapStateToProps, null)(Home);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js",[],["957","958"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js",[],["959","960"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js",["961"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Nav } from 'react-bootstrap';\nimport OrganizationListView from '../../components/organization/organization-list-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllUsers } from '../../actions/user-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport SearchMenu from '../../components/search/search-menu';\nimport FilterOrganization from '../../components/search/filter-organization';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport OrganizationMapView from '../../components/organization/organization-map-view';\nimport Pagination from 'react-js-pagination';\nimport { defaultCurrentLocation } from '../../constants/default-user-information';\n\nconst SearchOrganization = (props) => {\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [filter, setFilter] = useState({\n        name: '',\n        impactAreas: [],\n        organizationTypes: [],\n        serviceArea: '',\n        address: '',\n        keyword: '',\n        keywords: [],\n    });\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(position);\n            if (position) {\n                const coords = position.coords;\n                setCurrentLocation({\n                    latitude: coords.latitude,\n                    longitude: coords.longitude,\n                });\n            }\n        });\n    }, []);\n    const resetFilter = () => {\n        setFilter({\n            name: '',\n            impactAreas: [],\n            organizationTypes: [],\n            serviceArea: '',\n            address: '',\n            keyword: '',\n            keywords: [],\n        });\n    };\n    const changeFilter = (key, value) => {\n        console.log('🚀 ~ file: search-organization.js ~ line 53 ~ changeFilter ~ key, value', key, value);\n        let filter_ = filter;\n        filter[key] = value;\n        console.log(filter_);\n        setFilter({ ...filter_ });\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllUsers({ ...filter, userType: 'organization' }));\n        setLoading(false);\n        setActivePage(1);\n        console.log('FFF', filter);\n    };\n    const gotoOrganizationDetails = (userId) => {\n        props.history.push(`/organization/details/${userId}`);\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getAllGlobalImpactAreas());\n            props.dispatch(getAllOrganizationTypes());\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col lg={4}>\n                        <SearchMenu selected=\"organization\" />\n                        <hr />\n                        <FilterOrganization\n                            changeFilter={changeFilter}\n                            resetFilter={resetFilter}\n                            handleOnApplyFilter={handleOnApplyFilter}\n                            filter={filter}\n                            organizationTypes={props.getOrganizationTypeResponse?.success ? props.getOrganizationTypeResponse.organizationTypes : []}\n                            impactAreas={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []}\n                        />\n                    </Col>\n                    <Col lg={8}>\n                        <Nav\n                            variant=\"pills\"\n                            activeKey={viewType}\n                            onSelect={(eventKey) => {\n                                setViewType(eventKey);\n                            }}\n                            size=\"sm\"\n                        >\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"list\" title=\"list\">\n                                    List\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"map\" title=\"map\">\n                                    Map\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <hr />\n                        {viewType === 'list' && (\n                            <>\n                                <Pagination\n                                    itemClass=\"page-item\"\n                                    linkClass=\"page-link\"\n                                    activePage={activePage}\n                                    itemsCountPerPage={30}\n                                    totalItemsCount={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.users.length : 0}\n                                    pageRangeDisplayed={5}\n                                    onChange={(page) => {\n                                        setActivePage(page);\n                                    }}\n                                />\n                                <OrganizationListView\n                                    allOrganizations={\n                                        props.getAllOrganizationsResponse.success\n                                            ? props.getAllOrganizationsResponse.users.slice((activePage - 1) * 30, activePage * 30 - 1)\n                                            : []\n                                    }\n                                    gotoOrganizationDetails={gotoOrganizationDetails}\n                                />\n                            </>\n                        )}\n                        {viewType === 'map' && (\n                            <OrganizationMapView\n                                allOrganizations={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.users : []}\n                                gotoOrganizationDetails={gotoOrganizationDetails}\n                                zoom={8}\n                                currentLocation={currentLocation}\n                            />\n                        )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getOrganizationTypeResponse = state.OrganizationType.getAllOrganizationTypes;\n    const getAllOrganizationsResponse = state.User.getAllUsers;\n    return {\n        getImpactAreaResponse,\n        getAllOrganizationsResponse,\n        getOrganizationTypeResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchOrganization);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js",[],["962","963"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js",["964"],"import React from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport { Form, FormControl } from 'react-bootstrap';\nfunction App() {\n    const movieItems = [\n        {\n            id: 0,\n            title: 'Titanic',\n            description: 'A movie about love',\n        },\n        {\n            id: 1,\n            title: 'Dead Poets Society',\n            description: 'A movie about poetry and the meaning of life',\n        },\n        {\n            id: 2,\n            title: 'Terminator 2',\n            description: 'A robot from the future is sent back in time',\n        },\n        {\n            id: 3,\n            title: 'Alien 2',\n            description: 'Ripley is back for a new adventure',\n        },\n    ];\n\n    const handleOnSearch = (string, results) => {\n        // onSearch will have as the first callback parameter\n        // the string searched and for the second the results.\n        console.log(string, results);\n    };\n\n    const handleOnSelect = (item) => {\n        // the item selected\n        console.log(item);\n    };\n\n    const handleOnFocus = () => {\n        console.log('Focused');\n    };\n\n    return (\n        <div style={{ minWidth: 100, zIndex: 5000 }}>\n            <Form inline>\n                {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" /> */}\n                {/* <Button variant=\"outline-light\">Search</Button> */}\n\n                <ReactSearchAutocomplete\n                    className=\"form-control mr-sm-2\"\n                    items={movieItems}\n                    fuseOptions={{ keys: ['title', 'description'] }} // Search on both fields\n                    resultStringKeyName=\"title\" // String to display in the results\n                    onSearch={handleOnSearch}\n                    onSelect={handleOnSelect}\n                    onFocus={handleOnFocus}\n                    showIcon={false}\n                    styling={{\n                        height: '34px',\n                        border: '1px solid darkgreen',\n                        borderRadius: '4px',\n                        backgroundColor: 'white',\n                        boxShadow: 'none',\n                        hoverBackgroundColor: 'lightgreen',\n                        color: 'darkgreen',\n                        fontSize: '12px',\n                        fontFamily: 'Courier',\n                        iconColor: 'green',\n                        lineColor: 'lightgreen',\n                        placeholderColor: 'darkgreen',\n                        zIndex: 5000,\n                    }}\n                />\n            </Form>\n        </div>\n    );\n}\n\nexport default App;\n",["965","966"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js",["967","968","969","970","971"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInvolvement, setInvolvement, clearInvolvement } from '../../actions/user-action';\nimport { getAllMemberships, setAllMemberships } from '../../actions/membership-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualInvolvementForm from '../../components/individual/individual-involvement-form';\nimport { individualCompleteBasicInfoPage, individualCompletePrivacyPage } from '../../constants/route-paths';\n\nconst Involvement = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const [memberships, setMemberships] = useState([]);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllMemberships({ individualId: user._id }));\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInvolvement(user._id));\n        }\n    };\n\n    const handleSetResponse = () => {\n        const { success, message } = props.setInvolvementResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompletePrivacyPage);\n                props.dispatch(clearInvolvement());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, involvement } = props.getInvolvementResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n        return () => {\n            props.dispatch(clearInvolvement());\n        };\n    }, [props.auth]);\n\n    // MEMBERSHIP\n    useEffect(() => {\n        if (props.getAllMembershipResponse.success) {\n            setMemberships(props.getAllMembershipResponse.memberships);\n        } else {\n            // NotificationManager.error(props.getAllMembershipResponse.message, 'Failed');\n        }\n    }, [props.getAllMembershipResponse]);\n    const addNewMembership = (membership) => {\n        let memberships_ = memberships;\n        memberships_.push(membership);\n        setMemberships([...memberships_]);\n    };\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInvolvementResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInvolvementResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInvolvement(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(individualCompletePrivacyPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualInvolvementForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n                memberships={memberships}\n                addNewMembership={addNewMembership}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInvolvementResponse = state.User.getInvolvement;\n    const setInvolvementResponse = state.User.setInvolvement;\n    const getAllMembershipResponse = state.Membership.getAllMemberships;\n    let initialValues = {};\n\n    if (getInvolvementResponse.success) {\n        initialValues = getInvolvementResponse.involvement;\n    }\n    console.log('initialValues', initialValues);\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInvolvementResponse,\n        setInvolvementResponse,\n        getAllMembershipResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Involvement',\n        enableReinitialize: true,\n    })(Involvement),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js",["972","973","974"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/user-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualBasicInfoForm from '../../components/individual/individual-basic-info-form';\nimport { individualCompleteInvolvementPage } from '../../constants/route-paths';\nimport { getAllLanguagesByUser } from '../../actions/language-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { getRacesByValues } from '../../constants/races';\n\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: '',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllLanguagesByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            props.dispatch(getBasicInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompleteInvolvementPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n        return () => {\n            props.dispatch(clearBasicInfo());\n        };\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            races: values.races && values.races.length > 0 ? values.races.map((race) => race.value) : [],\n        };\n        console.log('🚀 ~ file: individual-basic-info.js ~ line 66 ~ onSubmit ~ user', user);\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <>\n                <IndividualBasicInfoForm\n                    editMode={editMode}\n                    handleOnSubmit={props.handleSubmit((event) => {\n                        onSubmit(event);\n                    })}\n                    profilePicture={profilePicture}\n                    setProfilePicture={setProfilePicture}\n                    handlePictureUpload={handlePictureUpload}\n                    stateAndCountry={stateAndCountry}\n                    allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                    allLanguages={props.getLanguageResponse.success ? props.getLanguageResponse.languages : []}\n                />\n            </>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getLanguageResponse = state.Language.getLanguagesByUser;\n    const getBasicInfoResponse = state.User.getBasicInfo;\n    const setBasicInfoResponse = state.User.setBasicInfo;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues) {\n            if (initialValues.races && initialValues.races.length > 0 && typeof initialValues.races[0] === 'string')\n                initialValues.races = getRacesByValues(initialValues.races);\n            if (initialValues.address && !initialValues.address.country) {\n                initialValues.address.country = 'US';\n            } else if (!initialValues.address) {\n                initialValues.address = {\n                    country: 'US',\n                };\n            }\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getSkillResponse,\n        getLanguageResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js",["975","976","977","978"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPrivacy, setPrivacy, clearPrivacy } from '../../actions/user-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualPrivacyForm from '../../components/individual/individual-privacy-form';\nimport { individualCompleteInvolvementPage, individualCompleteMembershipPage } from '../../constants/route-paths';\nconst Privacy = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getPrivacy(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setPrivacyResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.dispatch(clearPrivacy());\n                props.history.push(individualCompleteMembershipPage);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, privacy } = props.getPrivacyResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n        return () => {\n            props.dispatch(clearPrivacy());\n        };\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getPrivacyResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setPrivacyResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setPrivacy(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteInvolvementPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualPrivacyForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getPrivacyResponse = state.User.getPrivacy;\n    const setPrivacyResponse = state.User.setPrivacy;\n    let initialValues = {};\n\n    if (getPrivacyResponse.success) {\n        initialValues = getPrivacyResponse.privacy;\n    }\n    if (initialValues._id) {\n    } else {\n        initialValues.isEmailSearchable = true;\n        initialValues.isUserSearchable = true;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPrivacyResponse,\n        setPrivacyResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Privacy',\n        enableReinitialize: true,\n    })(Privacy),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js",["979","980","981","982"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getUserPublicInfo } from '../../actions/user-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/individual/individual-details-view';\nimport { checkIfFriends, createFriendship, acceptFriendship, rejectFriendship, deleteFriendship } from '../../actions/friendship-action';\nimport { followUser, checkIfFollower, unfollowUser } from '../../actions/follow-action';\n\nconst IndividualDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [friendAndFollowFlag, setFriendAndFollowFlag] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        const individualUserId = props.match.params.userId;\n        if (user.userType === 'individual') {\n            setUserId(user._id);\n            if (individualUserId !== user._id) {\n                setFriendAndFollowFlag(true);\n                props.dispatch(checkIfFriends(user._id, individualUserId));\n                props.dispatch(checkIfFollower(user._id, individualUserId));\n            }\n        }\n        props.dispatch(getUserPublicInfo(individualUserId));\n    };\n    const handleCreateFriendship = () => {\n        const friendship = {\n            senderId: userId,\n            receiverId: props.match.params.userId,\n        };\n        // props.dispatch(followUser({ followerId: userId, followingId: props.match.params.userId }));\n        props.dispatch(createFriendship(friendship));\n    };\n    const handleAcceptFriendship = (friendshipId) => {\n        props.dispatch(acceptFriendship(friendshipId));\n        // props.dispatch(followUser({ followerId: userId, followingId: props.match.params.userId }));\n    };\n    const handleRejectFriendship = (friendshipId) => {\n        props.dispatch(rejectFriendship(friendshipId));\n    };\n    const handleDeleteFriendship = (friendshipId) => {\n        props.dispatch(deleteFriendship(friendshipId));\n        props.dispatch(unfollowUser({ followerId: userId, followingId: props.match.params.userId }));\n    };\n    const handleFollowUser = () => {\n        props.dispatch(followUser({ followerId: userId, followingId: props.match.params.userId }));\n    };\n    const handleUnfollowUser = () => {\n        props.dispatch(unfollowUser({ followerId: userId, followingId: props.match.params.userId }));\n    };\n    useEffect(() => {\n        getInitialInfo();\n        return () => {\n            setFriendAndFollowFlag(false);\n        };\n    }, [props.auth, props.match.params.userId]);\n    useEffect(() => {\n        const user = props.auth.user;\n        const individualUserId = props.match.params.userId;\n        if (user.userType === 'individual') {\n            setUserId(user._id);\n            if (individualUserId !== user._id) {\n                setFriendAndFollowFlag(true);\n                props.dispatch(checkIfFriends(user._id, individualUserId));\n            }\n        }\n    }, [props.setFriendshipResponse, props.acceptFriendshipResponse, props.rejectFriendshipResponse, props.deleteFriendshipResponse]);\n    useEffect(() => {\n        const user = props.auth.user;\n        const individualUserId = props.match.params.userId;\n        if (user.userType === 'individual') {\n            setUserId(user._id);\n            if (individualUserId !== user._id) {\n                setFriendAndFollowFlag(true);\n                props.dispatch(checkIfFollower(user._id, individualUserId));\n            }\n        }\n    }, [props.getFollowResponse, props.getUnfollowResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView\n                            individual={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.user : {}}\n                            friendship={props.getCheckIfFriendsResponse.success ? props.getCheckIfFriendsResponse.friendship : {}}\n                            follows={props.getCheckIfFollowerResponse.success ? props.getCheckIfFollowerResponse.follows : {}}\n                            handleCreateFriendship={handleCreateFriendship}\n                            handleAcceptFriendship={handleAcceptFriendship}\n                            handleRejectFriendship={handleRejectFriendship}\n                            handleFollowUser={handleFollowUser}\n                            handleUnfollowUser={handleUnfollowUser}\n                            friendAndFollowFlag={friendAndFollowFlag}\n                            userId={userId}\n                            individualUserId={props.match.params.userId}\n                            handleDeleteFriendship={handleDeleteFriendship}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.User.getUserPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n    const getCheckIfFriendsResponse = state.Friendship.checkIfFriends;\n    const setFriendshipResponse = state.Friendship.setFriendship;\n    const acceptFriendshipResponse = state.Friendship.acceptFriendship;\n    const rejectFriendshipResponse = state.Friendship.rejectFriendship;\n    const deleteFriendshipResponse = state.Friendship.deleteFriendship;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n        getCheckIfFriendsResponse,\n        setFriendshipResponse,\n        acceptFriendshipResponse,\n        rejectFriendshipResponse,\n        deleteFriendshipResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(IndividualDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js",["983","984","985"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/user-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationBasicInfoForm from '../../components/organization/organization-basic-info-form';\nimport { organizationCompleteServiceInfoPage } from '../../constants/route-paths';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: 'US',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getBasicInfo(user._id));\n        }\n        props.dispatch(getAllOrganizationTypes());\n    };\n    const handleSetResponse = () => {\n        console.log('RESPONSE', props.setBasicInfoResponse);\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            const url = window.location.pathname;\n            if (url.split('/')[1] !== 'edit') {\n                props.history.push(organizationCompleteServiceInfoPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address && basicInfo.address.country) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n        return () => {\n            props.dispatch(clearBasicInfo());\n        };\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            organizationTypes: values.organizationTypes && values.organizationTypes.length > 0 ? values.organizationTypes.map((type) => type._id) : [],\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationBasicInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                setProfilePicture={setProfilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n                allOrganizationTypes={props.getAllOrganizationTypesResponse.success ? props.getAllOrganizationTypesResponse.organizationTypes : []}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getBasicInfoResponse = state.User.getBasicInfo;\n    const setBasicInfoResponse = state.User.setBasicInfo;\n    const getAllOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues.address && !initialValues.address.country) {\n            initialValues.address.country = 'US';\n        } else if (!initialValues.address) {\n            initialValues.address = {\n                country: 'US',\n            };\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getAllOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js",["986","987","988","989","990"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getServiceInfo, setServiceInfo, clearServiceInfo } from '../../actions/user-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationServiceInfoForm from '../../components/organization/organization-service-info-form';\nimport { homePage, organizationCompleteBasicInfoPage, organizationCompleteMembershipPage } from '../../constants/route-paths';\n\nconst ServiceInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllOrganizationTypes());\n            props.dispatch(getServiceInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setServiceInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(organizationCompleteMembershipPage);\n                props.dispatch(clearServiceInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, serviceInfo } = props.getServiceInfoResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getServiceInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setServiceInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setServiceInfo(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(organizationCompleteMembershipPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationServiceInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allOrganizationTypes={props.getOrganizationTypesResponse.success ? props.getOrganizationTypesResponse.organizationTypes : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log('ST', state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getServiceInfoResponse = state.User.getServiceInfo;\n    const setServiceInfoResponse = state.User.setServiceInfo;\n    const getOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n\n    if (getServiceInfoResponse.success) {\n        initialValues = getServiceInfoResponse.serviceInfo;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getServiceInfoResponse,\n        setServiceInfoResponse,\n        getOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'ServiceInfo',\n        enableReinitialize: true,\n    })(ServiceInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js",["991","992","993","994"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getInternalLink, setInternalLink, clearInternalLink } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationInternalLinkForm from '../../components/organization/organization-internal-link-form';\nimport { organizationCompleteServiceInfoPage, homePage } from '../../constants/route-paths';\nconst InternalLink = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInternalLink(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInternalLinkResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(clearInternalLink());\n            props.history.push(homePage);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, internalLink } = props.getInternalLinkResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInternalLinkResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInternalLinkResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInternalLink(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteServiceInfoPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationInternalLinkForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInternalLinkResponse = state.User.getInternalLink;\n    const setInternalLinkResponse = state.User.setInternalLink;\n    let initialValues = {};\n\n    if (getInternalLinkResponse.success) {\n        initialValues = getInternalLinkResponse.internalLink;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInternalLinkResponse,\n        setInternalLinkResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'InternalLink',\n        enableReinitialize: true,\n    })(InternalLink),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js",["995"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getUserPublicInfo } from '../../actions/user-action';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport DetailsView from '../../components/organization/organization-details-view';\nimport { followUser, unfollowUser, checkIfFollower } from '../../actions/follow-action';\nimport SideSubMenu from '../../components/organization/organization-sub-menu';\n// import { NotificationManager } from 'react-notifications';\nconst OrganizationDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [follows, setFollows] = useState(false);\n    const getInitialInfo = () => {\n        const userId = props.match.params.userId;\n        props.dispatch(getUserPublicInfo(userId));\n        const user = props.auth.user;\n        props.dispatch(checkIfFollower(user._id, userId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n    useEffect(() => {\n        const success = props.getCheckIfFollowerResponse;\n        if (success) {\n            setFollows(props.getCheckIfFollowerResponse.follows);\n        }\n    }, [props.getCheckIfFollowerResponse]);\n    const handleFollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(followUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleUnfollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(unfollowUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getFollowResponse;\n        if (success) {\n            setFollows(true);\n            // NotificationManager.success('You are following', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getFollowResponse]);\n    useEffect(() => {\n        const { success } = props.getUnfollowResponse;\n\n        if (success) {\n            setFollows(false);\n            // NotificationManager.success('You are unfollowing', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getUnfollowResponse]);\n    const gotoPage = (url) => {\n        props.history.push(url);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col className=\"right-align\" sm=\"2\">\n                                <SideSubMenu\n                                    activePage=\"About\"\n                                    organization={props.getPublicInfoResponse && props.getPublicInfoResponse.success ? props.getPublicInfoResponse.user : {}}\n                                    handleFollowClick={handleFollowClick}\n                                    handleUnfollowClick={handleUnfollowClick}\n                                    follows={follows}\n                                    gotoPage={gotoPage}\n                                />\n                            </Col>\n                            <Col sm=\"9\" className=\"left-border\">\n                                <DetailsView\n                                    organization={props.getPublicInfoResponse && props.getPublicInfoResponse.success ? props.getPublicInfoResponse.user : {}}\n                                    memberships={\n                                        props.getPublicInfoResponse && props.getPublicInfoResponse.success ? props.getPublicInfoResponse.memberships : []\n                                    }\n                                    handleFollowClick={handleFollowClick}\n                                    handleUnfollowClick={handleUnfollowClick}\n                                    follows={follows}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.User.getUserPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(OrganizationDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js",[],["996","997"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js",[],["998","999"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js",["1000","1001","1002"],"import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\nimport ProfilePictureUploader from '../../components/user/profile-picture-changer';\nimport { Container, Row, Col, ProgressBar, Button, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { organizationHeaders, totalOrganizationStep } from '../../constants/step-headers';\n\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const allOrganizationTypes = props.allOrganizationTypes;\n    const editMode = props.editMode;\n    console.log('PROPS', props);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country ? props.stateAndCountry.country : 'US');\n    const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        {editMode ? (\n                            <h4>Basic Information</h4>\n                        ) : (\n                            <div>\n                                <p>\n                                    Step {organizationHeaders[2].stepNo} of {totalOrganizationStep}\n                                </p>\n                                <ProgressBar now={organizationHeaders[2].percent} />\n                                <br />\n                                <h4>{organizationHeaders[2].header}</h4>\n\n                                <div style={{ height: 20 }} />\n                            </div>\n                        )}\n                        <Row>\n                            <Col>\n                                <Field name=\"name\" type=\"text\" component={InputRender} label=\"Name\" placeholder=\"Your organization name...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" placeholder=\"000-0000-000\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"ein\" type=\"text\" component={InputRender} label=\"EIN\" placeholder=\"ABCD...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"website\" type=\"text\" component={InputRender} label=\"Website URL\" placeholder=\"www.abc.xyz\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"contactEmail\" type=\"text\" component={InputRender} label=\"Contact Email\" placeholder=\"help@abc.com\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"mission\"\n                                    type=\"text\"\n                                    component={TextRender}\n                                    label=\"Mission\"\n                                    placeholder=\"Your organization mission...\"\n                                    col1={2}\n                                    col2={10}\n                                />\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"description\"\n                                    type=\"text\"\n                                    component={TextRender}\n                                    label=\"Description\"\n                                    placeholder=\"Your organization mission...\"\n                                    col1={2}\n                                    col2={10}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"organizationTypes\"\n                                    component={MultiSelectRender}\n                                    label=\"Organization Type\"\n                                    col1={3}\n                                    col2={9}\n                                    options={allOrganizationTypes}\n                                    zIndex={2000}\n                                />\n                            </Col>\n                        </Row>\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"right-align\">\n                                {props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}\n                            </Col>\n                            <Col>\n                                <ProfilePictureUploader\n                                    profilePicture={props.profilePicture}\n                                    handlePictureUpload={props.handlePictureUpload}\n                                    setProfilePicture={props.setProfilePicture}\n                                />\n                            </Col>\n                        </Row>\n                        {/* <Row>\n\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row> */}\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js",["1003","1004"],"import React from 'react';\nimport { Field } from 'redux-form';\nimport { SwitchRender, SelectRender, InputRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { organizationHeaders, totalOrganizationStep } from '../../constants/step-headers';\nconst InternalLinkForm = (props) => {\n    const submitting = props.submitting;\n\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n\n                        <div>\n                            <p>\n                                Step {organizationHeaders[4].stepNo} of {totalOrganizationStep}\n                            </p>\n                            <ProgressBar now={organizationHeaders[4].percent} />\n                            <br />\n                            <h4>{organizationHeaders[4].header}</h4>\n                        </div>\n\n                        <Field name=\"events\" type=\"text\" component={InputRender} label=\"Events link\" />\n                        <Field name=\"rss\" type=\"text\" component={InputRender} label=\"RSS link\" />\n                        <Field name=\"blog\" type=\"text\" component={InputRender} label=\"Blogs link\" />\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default InternalLinkForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js",["1005","1006","1007"],"import React from 'react';\nimport { Badge, Col, Container, Image, Row } from 'react-bootstrap';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { defaultIndividualProfilePicture } from '../../constants/default-images';\nimport {\n    AddFriendshipButtonRender,\n    FollowUserButtonRender,\n    DeleteFriendshipButtonRender,\n    AcceptFriendshipButtonRender,\n    RejectFriendshipButtonRender,\n    UnfollowUserButtonRender,\n    FriendDropdownRender,\n} from '../form_template/buttons-render';\nconst DetailsView = (props) => {\n    const individual = props.individual;\n    const friendship = props.friendship;\n    const userId = props.userId;\n    const individualUserId = props.individualUserId;\n    const follows = props.follows;\n    console.log('🚀 ~ file: individual-details-view.js ~ line 19 ~ DetailsView ~ follows', friendship);\n    const infoRender = (label, value) => {\n        if (value)\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value\n                            .toString()\n                            .split('\\n')\n                            .map((para, i) => (\n                                <p key={i} className=\"justify-text\">\n                                    {para}\n                                </p>\n                            ))}\n                    </Col>\n                </Row>\n            );\n        else return <></>;\n    };\n\n    const tagsRender = (label, tags) => {\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {tags.map((tag, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {tag.label}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            // if (address.street1) fullAddress += address.street1 + ', ';\n            // if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.code) fullAddress += address.code + '\\n';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + '\\n';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n\n    if (individual._id && individual.userType === 'individual') {\n        console.log('🚀 ~ file: individual-details-view.js ~ line 76 ~ DetailsView ~ individual', individual);\n        const basicInfo = individual.basicInfo;\n        const involvement = individual.involvement;\n        const impactAreas = involvement.impactAreas;\n        const skills = basicInfo.skills;\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"right-align\" sm=\"2\">\n                        <Image\n                            className=\"left-image\"\n                            src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultIndividualProfilePicture}\n                            width=\"100%\"\n                            thumbnail\n                        />\n                        <hr />\n                        {props.friendAndFollowFlag && (\n                            <>\n                                {!friendship._id && (\n                                    <AddFriendshipButtonRender\n                                        onClick={() => {\n                                            props.handleCreateFriendship();\n                                        }}\n                                    />\n                                )}\n                                {friendship.status === 'pending' ? (\n                                    <>\n                                        {friendship.senderId === userId ? (\n                                            <DeleteFriendshipButtonRender\n                                                onClick={() => {\n                                                    props.handleDeleteFriendship(friendship._id);\n                                                }}\n                                            />\n                                        ) : (\n                                            <>\n                                                <AcceptFriendshipButtonRender\n                                                    onClick={() => {\n                                                        props.handleAcceptFriendship(friendship._id);\n                                                    }}\n                                                />\n                                                <RejectFriendshipButtonRender\n                                                    onClick={() => {\n                                                        props.handleRejectFriendship(friendship._id);\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                    </>\n                                ) : (\n                                    <></>\n                                )}\n                                {friendship.status === 'accepted' && (\n                                    <FriendDropdownRender\n                                        handleUnfriendButton={() => {\n                                            props.handleDeleteFriendship(friendship._id);\n                                        }}\n                                        handleUnfollowButton={() => {\n                                            props.handleUnfollowUser();\n                                        }}\n                                        handleFollowButton={() => {\n                                            props.handleFollowUser();\n                                        }}\n                                        follows={follows}\n                                    />\n                                )}\n                            </>\n                        )}\n                    </Col>\n                    <Col sm=\"9\" className=\"left-border\">\n                        <h3>{basicInfo.firstName + ' ' + basicInfo.lastName}</h3>\n                        {/* {infoRender('Phone', basicInfo.phone)} */}\n                        {infoRender('Kids', basicInfo.kids)}\n                        {/* {infoRender('Date Of Birth', moment(basicInfo.dateOfBirth).format('LL'))} */}\n                        {/* {tagsRender('Race', getRacesByValues(basicInfo.races))} */}\n                        {/* {infoRender('Gender', getGenderByValue(basicInfo.gender))} */}\n                        {/* {tagsRender('Language Fluency', getLanguagesByValues(basicInfo.languages))} */}\n                        <br />\n                        {infoRender('Address', addressMaker(basicInfo.address))}\n                        <div style={{ height: 25 }} />\n                        <hr />\n                        <div style={{ height: 25 }} />\n                        {infoRender('About Me', involvement.communityInvolvement)}\n                        {tagsRender('Impact Area', impactAreas)}\n                        {tagsRender('Skill', skills)}\n                        <div style={{ height: 25 }} />\n                    </Col>\n                </Row>\n                <div style={{ height: 25 }} />\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js",["1008","1009","1010","1011","1012","1013","1014","1015","1016"],"import React from 'react';\nimport { Container, Image, Table, Row, Col, Badge, ListGroup, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport moment from 'moment';\nimport { getMembershipStatusByValue, getMembershipByValue } from '../../constants/membership-types';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { defaultOrganizationProfilePicture, defaultIndividualProfilePicture } from '../../constants/default-images';\nconst TimeRender = (time) => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return `${months[time.month]}-${time.year}`;\n};\nconst DetailsView = (props) => {\n    const organization = props.organization;\n    const memberships = props.memberships;\n    console.log('🚀 ~ file: organization-details-view.js ~ line 9 ~ DetailsView ~ memberships', memberships);\n    const follows = props.follows;\n    const infoRender = (label, value) => {\n        if (value) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value.split('\\n').map((para, i) => (\n                            <p key={i} className=\"justify-text\">\n                                {para}\n                            </p>\n                        ))}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n\n    const keywordsRender = (label, keywords) => {\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {keywords.map((key, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {key}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n    const tagsRender = (label, tags) => {\n        if (tags && tags.length > 0) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {tags.map((tag, i) => {\n                            if (tag)\n                                return (\n                                    <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                        {tag.label}\n                                    </Badge>\n                                );\n                        })}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n    if (organization._id && organization.userType === 'organization') {\n        const basicInfo = organization.basicInfo;\n        const serviceInfo = organization.serviceInfo;\n        const impactAreas = serviceInfo.impactAreas;\n        console.log(basicInfo);\n        return (\n            <>\n                <h3>{basicInfo.name}</h3>\n                {tagsRender('Organization Type', basicInfo.organizationTypes)}\n                {infoRender('Contact Email', basicInfo.contactEmail)}\n                {infoRender('Website', basicInfo.website)}\n\n                {infoRender('Phone', basicInfo.phone)}\n                {infoRender('EIN', basicInfo.ein)}\n                {infoRender('Address', addressMaker(basicInfo.address))}\n                <b>Memberships</b>\n                <Table>\n                    <thead></thead>\n                    <tbody>\n                        {memberships.map((membership, i) => {\n                            const name = membership.individualFirstName + ' ' + membership.individualLastName;\n                            const profilePicture = membership.individualProfilePicture ? membership.individualProfilePicture : defaultIndividualProfilePicture;\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <Image src={profilePicture} style={{ height: 32, width: 32 }} thumbnail />\n                                    </td>\n                                    <td>{name}</td>\n                                    <td>{getMembershipByValue(membership.membershipType)}</td>\n                                    <td>{TimeRender(membership.startTime)}</td>\n                                    <td>{membership.isCurrent}</td>\n                                    {membership.isCurrent ? (\n                                        <td>\n                                            <Badge variant=\"primary\">Current Member</Badge>\n                                        </td>\n                                    ) : (\n                                        <td>{TimeRender(membership.endTime)}</td>\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n                <hr />\n                <div style={{ height: 25 }} />\n                {keywordsRender('Service Areas', serviceInfo.serviceAreas)}\n                {tagsRender('Impact Area', impactAreas)}\n                {keywordsRender('Keywords', serviceInfo.keywords)}\n                <div style={{ height: 25 }} />\n                <hr />\n                {infoRender('Mission', basicInfo.mission)}\n                <hr />\n                {infoRender('Description', basicInfo.description)}\n                <div style={{ height: 25 }} />\n            </>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js",["1017"],"import React from 'react';\nimport { Card, CardColumns } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst OrganizationListView = (props) => {\n    const allOrganizations = props.allOrganizations;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allOrganizations && allOrganizations.length > 0) {\n        return (\n            <CardColumns>\n                {allOrganizations.map((org, i) => {\n                    if (org && org.basicInfo && org.basicInfo.name) {\n                        return (\n                            <Card\n                                className=\"special-btn special-card\"\n                                key={i}\n                                onClick={() => {\n                                    props.gotoOrganizationDetails(org._id);\n                                }}\n                            >\n                                <Card.Img\n                                    variant=\"top\"\n                                    src={org.basicInfo.profilePicture ? org.basicInfo.profilePicture : defaultOrganizationProfilePicture}\n                                    alt=\"No Image Found\"\n                                    className=\"organization-list-image\"\n                                />\n                                <Card.Body>\n                                    <Card.Text className=\"left-text bold-text\">{org.basicInfo.name}</Card.Text>\n                                    <Card.Text className=\"justify-text\">\n                                        <small>{descriptionRender(org.basicInfo.description)}</small>\n                                    </Card.Text>\n                                </Card.Body>\n                                {/* <Card.Footer></Card.Footer> */}\n                            </Card>\n                        );\n                    }\n                })}\n            </CardColumns>\n        );\n    } else return <h4>No Organizations Found</h4>;\n};\nexport default OrganizationListView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-type-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-type-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organization-type-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/messages.js",["1018","1019"],"import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ThreadList from './sample-thread-list';\nimport ThreadDetails from './sample-thread-details';\nimport styles from '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { MainContainer, ChatContainer, MessageList, Message, MessageInput, Avatar } from '@chatscope/chat-ui-kit-react';\nconst Messages = (props) => {\n    const joeIco = 'https://picsum.photos/100/100';\n    const anotherIco = 'https://picsum.photos/50/50';\n    const chats = [\n        { src: joeIco, name: 'Joe', message: 'Hi.' },\n        { src: anotherIco, name: 'John', message: 'Hello.' },\n        { src: joeIco, name: 'Joe', message: 'How are you.' },\n        { src: anotherIco, name: 'John', message: 'Fine, You?' },\n        { src: joeIco, name: 'Joe', message: 'Good. What are you doing?' },\n        { src: anotherIco, name: 'John', message: 'Playing.You?' },\n        { src: joeIco, name: 'Joe', message: 'Writing. Ok, Bye' },\n        { src: anotherIco, name: 'John', message: 'Bye.' },\n    ];\n    return (\n        <Container className=\"parent-page\">\n            <Row>\n                <Col sm={3}>\n                    <ThreadList />\n                </Col>\n                <Col>\n                    <div style={{ position: 'relative', height: '500px' }}>\n                        <MainContainer>\n                            <ChatContainer>\n                                <MessageList>\n                                    {chats.map((chat, i) => {\n                                        return (\n                                            <div key={i}>\n                                                <Message.Header sentTime=\"just now\" />\n                                                <Avatar src={chat.src} name={chat.name} />\n                                                <Message\n                                                    model={{\n                                                        message: chat.message,\n                                                        sentTime: 'just now',\n                                                        sender: 'Joe',\n                                                    }}\n                                                />\n                                            </div>\n                                        );\n                                    })}\n                                </MessageList>\n                                <MessageInput placeholder=\"Type message here\" />\n                            </ChatContainer>\n                        </MainContainer>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default Messages;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/message/sample-thread-details.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/genders.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/languages.js",[],["1020","1021"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-images.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/manage-events.js",["1022"],"import React, { useEffect, useState } from 'react';\nimport EventList from '../../components/event/event-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllEventsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageEvents = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllEventsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToEventEdit = (eventId) => {\n        props.history.push(RoutePaths.eventEditPage + eventId);\n    };\n    const handleGoToEventDetails = (eventId) => {\n        props.history.push(RoutePaths.eventDetailsPage + eventId);\n    };\n    const handleGoToEventCreate = () => {\n        props.history.push(RoutePaths.eventCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <EventList\n                allEvents={props.getAllEventsResponse.success ? props.getAllEventsResponse.events : []}\n                handleGoToEventEdit={handleGoToEventEdit}\n                handleGoToEventDetails={handleGoToEventDetails}\n                handleGoToEventCreate={handleGoToEventCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllEventsResponse = state.Event.getAllEvents;\n    console.log('🚀 ~ file: manage-events.js ~ line 21 ~ mapStateToProps ~ getAllEventsResponse', getAllEventsResponse);\n\n    return {\n        getAllEventsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageEvents);\n",["1023","1024"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/create-event.js",["1025","1026","1027","1028","1029"],"import React, { useEffect, useState } from 'react';\nimport EventForm from '../../components/event/event-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getEventById, createEvent, updateEventById, clearEvent } from '../../actions/event-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateEvent = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getEventResponse.success) {\n            console.log(props.getEventResponse.event);\n            setImages(props.getEventResponse.event.images);\n            if (props.getEventResponse.event.address) {\n                setLocation({\n                    latitude: props.getEventResponse.event.address.latitude,\n                    longitude: props.getEventResponse.event.address.longitude,\n                });\n            }\n        }\n    }, [props.getEventResponse]);\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageEvents = () => {\n        props.history.push(RoutePaths.eventListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let event = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n            impactAreas: values.impactAreas.map((area) => area._id),\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-event.js ~ line 36 ~ onSubmit ~ event', event);\n        if (editMode) {\n            props.dispatch(updateEventById(props.match.params.eventId, event));\n        } else {\n            props.dispatch(createEvent(event));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (eventId) => {\n            setLoading(true);\n            props.dispatch(getEventById(eventId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.eventId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearEvent());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setEventResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearEvent());\n            if (editMode) props.history.push(RoutePaths.eventDetailsPage + props.match.params.eventId);\n            else {\n                props.history.push(RoutePaths.eventDetailsPage + props.setEventResponse.event._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setEventResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <EventForm\n                handleGoToManageEvents={handleGoToManageEvents}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                location={location}\n                setLocation={setLocation}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n\n    const getEventResponse = state.Event.getEvent;\n    const setEventResponse = state.Event.setEvent;\n    let initialValues = {};\n    if (getEventResponse.success) {\n        initialValues = getEventResponse.event;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getEventResponse,\n        setEventResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateEvent',\n        enableReinitialize: true,\n    })(CreateEvent),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/listing-events.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/event/display-event.js",["1030","1031"],"import React, { useState, useEffect } from 'react';\nimport EventDetails from '../../components/event/event-details';\nimport { connect } from 'react-redux';\nimport { getEventById } from '../../actions/event-action';\nconst DisplayEvent = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getEventById(eventId));\n            setLoading(false);\n        };\n        const eventId = props.match.params.eventId;\n        if (eventId) getInitialInfo(eventId);\n        else {\n        }\n    }, [props.auth]);\n    return <EventDetails event={props.getEventResponse.success ? props.getEventResponse.event : {}} organization={props.getEventResponse.success ? props.getEventResponse.organization : {}} />;\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getEventResponse = state.Event.getEvent ? state.Event.getEvent : {};\n    console.log('🚀 ~ file: display-event.js ~ line 23 ~ mapStateToProps ~ getEventResponse', getEventResponse);\n\n    return { getEventResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayEvent);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/manage-posts.js",["1032","1033"],"import React, { useEffect, useState } from 'react';\nimport PostList from '../../components/post/post-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllPostsByFilter } from '../../actions/post-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManagePosts = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [filter, setFilter] = useState({\n        postType: '',\n        title: '',\n        isActive: 'both',\n    });\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllPostsByFilter({ creatorId: userId }));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToPostEdit = (postType, postId) => {\n        props.history.push(RoutePaths.postEditPage(postType, postId));\n    };\n    const handleGoToPostDetails = (postType, postId) => {\n        props.history.push(RoutePaths.postDetailsPage(postType, postId));\n    };\n    const handleGoToPostCreate = (postType) => {\n        props.history.push(RoutePaths.postCreatePage(postType));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <PostList\n                allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.allPosts : []}\n                handleGoToPostEdit={handleGoToPostEdit}\n                handleGoToPostDetails={handleGoToPostDetails}\n                handleGoToPostCreate={handleGoToPostCreate}\n                filter={filter}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllPostsResponse = state.Post.getAllPosts;\n    console.log('🚀 ~ file: manage-posts.js ~ line 21 ~ mapStateToProps ~ getAllPostsResponse', getAllPostsResponse);\n\n    return {\n        getAllPostsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManagePosts);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-form.js",["1034"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport EventImageList from './event-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\nimport EventGeoCoding from './event-geo-coding';\nconst EventForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Event</h4> : <h4>Create Event</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageEvents();\n                                    }}\n                                >\n                                    Manage Events\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Title\" placeholder=\"Your event title...\" />\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Your event description...\" col1={4} col2={8} />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={MultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Start time\" col1={4} col2={8} zIndex={3001} />\n\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"End time\" col1={4} col2={8} zIndex={2000} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <EventImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <EventGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default EventForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/event-reducer.js",[],["1035","1036"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/event-action.js",[],["1037","1038"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/event-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-image-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-list.js",["1039"],"import React from 'react';\nimport { Container, Row, Col, Button, Table } from 'react-bootstrap';\nimport { FaEdit } from 'react-icons/fa';\nconst EventList = (props) => {\n    const allEvents = props.allEvents;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allEvents && allEvents.length > 0) {\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>{allEvents.length} Events Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    size=\"sm\"\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToEventCreate();\n                                    }}\n                                >\n                                    Create Event\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Table striped bordered hover>\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Title</th>\n                                    <th>Description</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {allEvents.map((event, i) => {\n                                    return (\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td\n                                                className=\"row-details\"\n                                                onClick={() => {\n                                                    props.handleGoToEventDetails(event._id);\n                                                }}\n                                            >\n                                                {event.title}\n                                            </td>\n                                            <td>{descriptionRender(event.description)}</td>\n                                            <td>\n                                                <Button\n                                                    size=\"sm\"\n                                                    onClick={() => {\n                                                        props.handleGoToEventEdit(event._id);\n                                                    }}\n                                                >\n                                                    Edit\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col sm=\"6\">\n                                <h4>No Events Found</h4>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button\n                                    className=\"primary\"\n                                    onClick={() => {\n                                        props.handleGoToEventCreate();\n                                    }}\n                                >\n                                    Create Event\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default EventList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-details.js",["1040","1041","1042"],"import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport EventMapView from './event-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayEvent = (props) => {\n    const event = props.event;\n    const organization = props.organization;\n    if (event && event._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{event.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(event.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('', event.impactAreas)}</Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(event.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(event.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', event.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(event.images)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <EventMapView allEvents={[event]} zoom={16} />\n                            </Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Event is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayEvent;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/details-render.js",["1043","1044"],"import React from 'react';\r\nimport { Row, Col, Badge, Image, Table } from 'react-bootstrap';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { CheckIconRender, CrossIconRender } from './icon-render';\r\nimport moment from 'moment';\r\nexport const DetailsInfoRowRender = ({ label, value }) => {\r\n    if (value) {\r\n        return (\r\n            <Row className=\"detailsRow\">\r\n                <Col sm={3} className=\"detailsLabel\">\r\n                    <label>{label}</label>\r\n                </Col>\r\n\r\n                <Col className=\"detailsValue\">\r\n                    <span>{value}</span>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <Row />;\r\n};\r\n\r\nexport const TagWithLabelRender = (label, tags) => {\r\n    if (label && tags && tags.length > 0) {\r\n        return (\r\n            <Row>\r\n                {label && (\r\n                    <Col md=\"3\">\r\n                        <b>{label}</b>\r\n                    </Col>\r\n                )}\r\n                <Col md=\"9\">\r\n                    {tags.map((tag, i) => {\r\n                        if (tag)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className={'badge-single'}>\r\n                                    {tag.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    if (tags && tags.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    {tags.map((tag, i) => {\r\n                        if (tag)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className={'badge-single'}>\r\n                                    {tag.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const ImpactAreasRender = (label, areas) => {\r\n    if (label && areas && areas.length > 0) {\r\n        return (\r\n            <Row>\r\n                {label && (\r\n                    <Col md=\"3\">\r\n                        <b>{label}</b>\r\n                    </Col>\r\n                )}\r\n                <Col md=\"9\">\r\n                    {areas.map((area, i) => {\r\n                        if (area)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className={'badge-single'}>\r\n                                    {area.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n    if (areas && areas.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    {areas.map((area, i) => {\r\n                        if (area)\r\n                            return (\r\n                                <Badge variant=\"primary\" key={i} className=\"impact-area-badge  badge-single-small\">\r\n                                    {area.label}\r\n                                </Badge>\r\n                            );\r\n                        else return <></>;\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const DescriptionRender = (label, value) => {\r\n    const valueRender = () => {\r\n        return (\r\n            <>\r\n                {value.split('\\n').map((para, i) => {\r\n                    return (\r\n                        <p className=\"justify-text\" key={i}>\r\n                            {para}\r\n                        </p>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    };\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">{label}</Col>\r\n                <Col sm=\"9\">{valueRender()}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{valueRender()}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const ImageAndDescriptionRender = (images) => {\r\n    if (images && images.length > 0) {\r\n        return (\r\n            <>\r\n                {images.map((image, i) => {\r\n                    return (\r\n                        <Row key={i} className=\"image-description-box\">\r\n                            <Col sm=\"3\">\r\n                                <Image width=\"100%\" src={image.path} thumbnail />\r\n                            </Col>\r\n                            <Col sm=\"9\">{DescriptionRender('', image.description)}</Col>\r\n                        </Row>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const InfoRender = (label, value) => {\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">{value}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{value}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const LinkRender = (label, link) => {\r\n    if (label && link) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">\r\n                    <a href={link} className=\"btn-outline-primary btn btn-sm\" target=\"_blank\">\r\n                        <FiExternalLink />\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else if (link) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <a href={link} target=\"_blank\">\r\n                        <FiExternalLink />\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const BooleanRender = (label, value) => {\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">{value ? <CheckIconRender /> : <CrossIconRender />}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{value ? <CheckIconRender /> : <CrossIconRender />}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const RequiredItemsRender = (items) => {\r\n    if (items && items.length > 0) {\r\n        return (\r\n            <>\r\n                <h6>Required Items</h6>\r\n                <Table striped bordered>\r\n                    <thead variant=\"dark\">\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Requirement</th>\r\n                            <th>Needed By</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items.map((item, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.requirement}</td>\r\n                                    <td>{moment(item.neededBy).format('LLLL')}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </>\r\n        );\r\n    } else return <label>No required items found!</label>;\r\n};\r\nexport const KeywordsRender = (label, keywords) => {\r\n    if (keywords && keywords.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col md=\"9\">\r\n                    {keywords.map((key, i) => {\r\n                        return (\r\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\r\n                                {key}\r\n                            </Badge>\r\n                        );\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/buttons-render.js",["1045","1046","1047","1048","1049"],"import React from 'react';\r\nimport { Button, Tooltip, OverlayTrigger, Dropdown } from 'react-bootstrap';\r\nimport { FaThumbsUp, FaLocationArrow } from 'react-icons/fa';\r\nimport { RiUserFollowLine } from 'react-icons/ri';\r\nimport { FaRegEdit, FaRegTrashAlt, FaArrowCircleDown, FaArrowCircleUp, FaHeart } from 'react-icons/fa';\r\nimport { BiDetail } from 'react-icons/bi';\r\nimport { IoMailUnreadOutline } from 'react-icons/io5';\r\nimport { VscMailRead } from 'react-icons/vsc';\r\nimport { FiUserCheck, FiUserMinus, FiUserX, FiUserPlus } from 'react-icons/fi';\r\nimport { AiOutlineUserAdd, AiOutlineUserDelete, AiOutlineUser } from 'react-icons/ai';\r\nimport { RiUserFollowFill, RiUserUnfollowFill } from 'react-icons/ri';\r\n\r\nconst renderTooltip = (props) => (\r\n    <Tooltip id=\"button-tooltip\" {...props}>\r\n        {props.title ? props.title : 'NA'}\r\n    </Tooltip>\r\n);\r\nexport const DetailsButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Details' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-info\" size=\"sm\" {...props}>\r\n                <BiDetail />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport const EditButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Edit' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-dark\" size=\"sm\" {...props}>\r\n                <FaRegEdit />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport const DeleteButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Delete' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-danger\" size=\"sm\" {...props}>\r\n                <FaRegTrashAlt />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport const SaveButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-success\" size=\"sm\" {...props}>\r\n            Save\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const ListButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            Go to list\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const OthersButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-secondary\" size=\"sm\" {...props}>\r\n            Save\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const CancelButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-warning\" size=\"sm\" {...props}>\r\n            Cancel\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const CreateButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-success\" size=\"sm\" {...props}>\r\n            {props.title}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const SendButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-secondary\" size=\"sm\" {...props}>\r\n            Send\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const LikeButtonRender = (props) => {\r\n    const toolTipTitle = props.complete ? 'Unlike' : 'Like';\r\n    const className = props.complete ? 'filled-like-btn' : '';\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: toolTipTitle })}>\r\n            <Button className=\"actionButton\" variant=\"outline-primary\" className={className} size=\"sm\" {...props}>\r\n                <FaThumbsUp />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\nexport const InterestedButtonRender = (props) => {\r\n    const toolTipTitle = props.complete ? 'Uninterested' : 'Interested';\r\n    const className = props.complete ? 'filled-interest-btn' : '';\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: toolTipTitle })}>\r\n            <Button className=\"actionButton\" variant=\"outline-secondary\" className={className} size=\"sm\" {...props}>\r\n                <FaHeart />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\nexport const GoingButtonRender = (props) => {\r\n    const toolTipTitle = props.complete ? 'Not going' : 'Going';\r\n    const className = props.complete ? 'filled-going-btn' : '';\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: toolTipTitle })}>\r\n            <Button className=\"actionButton\" variant=\"outline-info\" className={className} size=\"sm\" {...props}>\r\n                <FaLocationArrow />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\nexport const FollowButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <RiUserFollowLine /> Follow\r\n        </Button>\r\n    );\r\n};\r\nexport const RemoveButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <RiUserFollowLine /> Follow\r\n        </Button>\r\n    );\r\n};\r\nexport const UpArrowButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <FaArrowCircleUp />\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const DownArrowButtonRender = (props) => {\r\n    return (\r\n        <Button className=\"actionButton\" variant=\"outline-primary\" size=\"sm\" {...props}>\r\n            <FaArrowCircleDown />\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const ReadButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Mark as Read' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-info\" size=\"sm\" {...props}>\r\n                <VscMailRead />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport const UnreadButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Mark as Unread' })}>\r\n            <Button className=\"actionButton\" variant=\"outline-info\" size=\"sm\" {...props}>\r\n                <IoMailUnreadOutline />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport const AcceptButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Accept' })}>\r\n            <Button className=\"actionButton\" variant=\"success\" size=\"sm\" {...props}>\r\n                <FiUserCheck />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\nexport const RejectButtonRender = (props) => {\r\n    return (\r\n        <OverlayTrigger placement=\"top\" delay={{ show: 250, hide: 400 }} overlay={renderTooltip({ title: 'Reject' })}>\r\n            <Button className=\"actionButton\" variant=\"danger\" size=\"sm\" {...props}>\r\n                <FiUserX />\r\n            </Button>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport const AddFriendshipButtonRender = (props) => {\r\n    return (\r\n        <Button size=\"sm\" variant=\"outline-primary\" className=\"add-friend-btn\" {...props}>\r\n            <AiOutlineUserAdd /> Add Friend\r\n        </Button>\r\n    );\r\n};\r\nexport const AcceptFriendshipButtonRender = (props) => {\r\n    return (\r\n        <Button size=\"sm\" variant=\"outline-success\" className=\"add-friend-btn\" {...props}>\r\n            <AiOutlineUserAdd /> Accept Friend\r\n        </Button>\r\n    );\r\n};\r\nexport const RejectFriendshipButtonRender = (props) => {\r\n    return (\r\n        <Button size=\"sm\" variant=\"outline-danger\" className=\"add-friend-btn\" {...props}>\r\n            <AiOutlineUserDelete /> Reject Friend\r\n        </Button>\r\n    );\r\n};\r\nexport const DeleteFriendshipButtonRender = (props) => {\r\n    return (\r\n        <Button size=\"sm\" variant=\"outline-primary\" className=\"delete-friend-btn\" {...props}>\r\n            <AiOutlineUserDelete /> Cancel Request\r\n        </Button>\r\n    );\r\n};\r\nexport const FollowUserButtonRender = (props) => {\r\n    return (\r\n        <Button size=\"sm\" variant=\"outline-info\" className=\"details-follow-btn\" {...props}>\r\n            <RiUserFollowFill /> Follow\r\n        </Button>\r\n    );\r\n};\r\nexport const UnfollowUserButtonRender = (props) => {\r\n    return (\r\n        <Button size=\"sm\" variant=\"outline-info\" className=\"details-following-btn\" {...props}>\r\n            <RiUserFollowFill /> Following\r\n        </Button>\r\n    );\r\n};\r\nexport const FriendDropdownRender = (props) => {\r\n    const handleUnfriendButton = props.handleUnfriendButton;\r\n    const handleUnfollowButton = props.handleUnfollowButton;\r\n    const handleFollowButton = props.handleFollowButton;\r\n    const follows = props.follows;\r\n    return (\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\" size=\"sm\" className=\"add-friend-btn\">\r\n                <FiUserCheck />\r\n                &nbsp; Friends\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n                <Dropdown.Item onClick={handleUnfriendButton}>\r\n                    <FiUserMinus />\r\n                    &nbsp; Unfriend\r\n                </Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                {follows ? (\r\n                    <Dropdown.Item onClick={handleUnfollowButton}>\r\n                        <FiUserX />\r\n                        &nbsp; Unfollow\r\n                    </Dropdown.Item>\r\n                ) : (\r\n                    <Dropdown.Item onClick={handleFollowButton}>\r\n                        <FiUserPlus />\r\n                        &nbsp; Follow\r\n                    </Dropdown.Item>\r\n                )}\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n};\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/search-menu.js",["1050","1051","1052","1053","1054"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-card-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-geo-coding.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/event/event-map-view.js",["1055"],"import React from 'react';\nimport { Badge } from 'react-bootstrap';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\nimport { getPostTypeByValue } from '../../constants/post-types';\nimport { Link } from 'react-router-dom';\nimport { ImpactAreasRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst PostRender = ({ post }) => {\n    return (\n        <div className=\"post-map-box\">\n            <h6>\n                <Badge variant=\"primary\">{getPostTypeByValue(post.postType)[0].label}</Badge>\n            </h6>\n            <Link to={RoutePath.postDetailsPage(post.postType, post._id)}>\n                <h5 style={{ color: 'cadetblue' }}>{post.title}</h5>\n            </Link>\n            {post.organizationName && post.organizationName.length > 0 && (\n                <Link to={RoutePath.userDetailsPage('organization', post.creatorId)}>\n                    <h6 style={{ color: 'cadetblue' }}>{post.organizationName}</h6>\n                </Link>\n            )}\n            {ImpactAreasRender('', post.impactAreaNames)}\n            {InfoRender('', post.address.fullAddress)}\n            <hr />\n            <LikeButtonRender /> &nbsp;\n            <GoingButtonRender />\n        </div>\n    );\n};\nconst AllPostOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allPosts;\n    console.log('🚀 ~ file: post-map-view.js ~ line 27 ~ AllPostOnMap ~ markers', markers);\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <PostRender post={selected} />\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllPostOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/filter-organization.js",["1056","1057","1058","1059","1060"],"import React from 'react';\nimport Select from 'react-select';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nconst SearchMenu = (props) => {\n    console.log(props);\n    return (\n        <>\n            <label>Organization Name</label>\n            <input className=\"form-control\" type=\"text\" value={props.filter.name} onChange={(e) => props.changeFilter('name', e.target.value)} />\n            <br />\n            <label>Impact Area</label>\n            <Select onChange={(value) => props.changeFilter('impactAreas', value)} isMulti={true} options={props.impactAreas} value={props.filter.impactAreas} />\n            <br />\n            <label>Organization Type</label>\n            <Select onChange={(value) => props.changeFilter('organizationTypes', value)} isMulti={true} options={props.organizationTypes} value={props.filter.organizationTypes} />\n            <br />\n            <label>Service Area</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.serviceArea}\n                onChange={(e) => {\n                    props.changeFilter('serviceArea', e.target.value);\n                }}\n            />\n            <br />\n            <label>Organization Address</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.address}\n                onChange={(e) => {\n                    props.changeFilter('address', e.target.value);\n                }}\n                placeholder=\"zip code/city/state/country\"\n            />\n            <br />\n            <label>Keyword</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.keyword}\n                onChange={(e) => {\n                    props.changeFilter('keyword', e.target.value);\n                }}\n            />\n            <br />\n            <br />\n            <Button\n                variant=\"outline-danger\"\n                size=\"sm\"\n                onClick={() => {\n                    props.resetFilter();\n                }}\n            >\n                Reset\n            </Button>\n            &nbsp;\n            <Button\n                size=\"sm\"\n                onClick={() => {\n                    props.handleOnApplyFilter();\n                }}\n            >\n                Search\n            </Button>\n            <div style={{ height: 25 }} />\n        </>\n    );\n};\nexport default SearchMenu;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/follow-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/follow-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/follow-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/global-notification.js",["1061","1062","1063","1064","1065","1066","1067","1068"],"import React, { useEffect } from 'react';\nimport NotificationBadge from 'react-notification-badge';\nimport { Effect } from 'react-notification-badge';\nimport { Button, Badge, NavDropdown, Image, Row, Container, Col } from 'react-bootstrap';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { Link, withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { BsBellFill } from 'react-icons/bs';\nimport openSocket from 'socket.io-client';\nimport { serverAddress } from '../../constants/api-paths';\nimport { connect } from 'react-redux';\nimport { getNotificationsCount, getTopNotifications, getTitleByType, updateNotification, updateNotificationLocal } from '../../actions/notification-action';\n\nimport useSound from 'use-sound';\n\nconst socket = openSocket(serverAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\nconsole.log('🚀 ~ file: global-notification.js ~ line 17 ~ socket', socket);\n\nconst RenderBellIcon = (props) => {\n    const count = props.count;\n\n    return (\n        <Button size=\"lg\" className=\"notification-bell\">\n            <BsBellFill />\n            {/* <Image src=\"http://localhost:3001/default-images/flag-icon.png\" roundedCircle /> */}\n\n            <Badge className=\"notification-count\" variant=\"dark\">\n                {count}\n            </Badge>\n        </Button>\n    );\n};\nconst PostTitleRender = (title) => {\n    if (title && title.length > 50) return title.substr(0, 50) + '...';\n    else return title;\n};\n\nconst NotificationRender = (props) => {\n    const handleGoToNotificationDetails = (notification) => {\n        const type = notification.type;\n        if (['like', 'interest', 'going'].includes(type)) {\n            props.history.push(RoutePaths.postDetailsPage(notification.postId.postType, notification.postId._id));\n        } else if (type === 'friend-request') {\n            props.history.push(RoutePaths.communityRequestListPage);\n        } else if (type === 'friend-accept') {\n            props.history.push(RoutePaths.communityFriendListPage);\n        } else if (type === 'follow') {\n            props.history.push(RoutePaths.communityFollowerListPage);\n        } else if (type === 'membership-request') {\n        } else if (type === 'membership-accept') {\n        } else {\n            props.history.push(RoutePaths.userDetailsPage(notification.userType, notification.senderId));\n        }\n        const notificationId = notification._id;\n        props.dispatch(updateNotification(notificationId, { isRead: true }));\n        props.dispatch(updateNotificationLocal(notificationId, true));\n    };\n    const notification = props.notification;\n    const sender = notification.senders[0].userId;\n    const userType = sender.userType;\n    let name = '';\n    if (userType === 'individual') name = sender.basicInfo.firstName + ' ' + sender.basicInfo.lastName;\n    else if (userType === 'organization') name = sender.basicInfo.name;\n    const profilePicture = sender.basicInfo.profilePicture;\n    const more = notification.senders.length - 1;\n    const postType = notification.postId && notification.postId.postType ? notification.postId.postType : '';\n    console.log('🚀 ~ file: global-notification.js ~ line 31 ~ NotificationRender ~ notification', notification);\n    return (\n        <NavDropdown.Item\n            className=\"notification-row\"\n            onClick={() => {\n                handleGoToNotificationDetails(notification);\n            }}\n        >\n            <Row>\n                <Col sm=\"2\">\n                    <Image src={profilePicture} width=\"40\" thumbnail className=\"notification-image\" />\n                </Col>\n                <Col sm=\"10\">\n                    <p className=\"notification-title\">\n                        {notification.isRead ? (\n                            getTitleByType(notification.type, name, more, postType)\n                        ) : (\n                            <b>{getTitleByType(notification.type, name, more, postType)}</b>\n                        )}\n                    </p>\n\n                    <small className=\"notification-time\">{moment(notification.createdAt).format('LLL')}</small>\n                </Col>\n            </Row>\n        </NavDropdown.Item>\n    );\n};\nconst SampleNotificationsRender = (props) => {\n    const allNotifications = props.allNotifications;\n    return (\n        <Container style={{ width: 500, padding: 0 }}>\n            {allNotifications.map((notification, i) => {\n                return <NotificationRender key={i} notification={notification} history={props.history} dispatch={props.dispatch} />;\n            })}\n        </Container>\n    );\n};\nconst GlobalNotification = (props) => {\n    const [play] = useSound('./notification.ogg');\n    useEffect(() => {\n        const user = props.user;\n        props.dispatch(getNotificationsCount(true));\n        props.dispatch(getTopNotifications());\n        console.log('🚀 ~ file: global-notification.js ~ line 87 ~ socket.on ~ success', 'Notification_' + user._id);\n        socket.on('Notification_' + user._id.toString(), (success) => {\n            console.log('🚀 ~ file: global-notification.js ~ line 87 ~ socket.on ~ success', success);\n            if (success === 'NewNotification') {\n                const audioEl = document.getElementsByClassName('audio-element')[0];\n                audioEl.play();\n                props.dispatch(getNotificationsCount(true));\n                props.dispatch(getTopNotifications());\n            }\n        });\n    }, []);\n    return (\n        <NavDropdown\n            title={<RenderBellIcon count={props.getNotificationCountResponse.success ? props.getNotificationCountResponse.total : 0} />}\n            id=\"basic-nav-dropdown\"\n            alignRight={true}\n        >\n            <SampleNotificationsRender\n                allNotifications={props.getNotificationResponse.success ? props.getNotificationResponse.notifications : []}\n                history={props.history}\n                dispatch={props.dispatch}\n            />\n            <NavDropdown.Divider />\n            <NavDropdown.Item\n                onClick={() => {\n                    props.history.push(RoutePaths.ManageNotificationsPage);\n                }}\n            >\n                SEE ALL\n            </NavDropdown.Item>\n            {/* <Link to={}>SEE ALL</Link> */}\n        </NavDropdown>\n    );\n    //\n};\nconst mapStateToProps = (state) => {\n    const getNotificationResponse = state.Notification.getTopNotifications;\n    const getNotificationCountResponse = state.Notification.getNotificationsCount;\n\n    return {\n        getNotificationResponse,\n        getNotificationCountResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(withRouter(GlobalNotification));\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/friends.js",["1069","1070","1071","1072","1073"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nimport FriendsList from '../../components/community/friends-list';\nimport { getAllFriendships } from '../../actions/friendship-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst CommunityFriends = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [userType, setUserType] = useState('');\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            console.log('Calling API');\n            setLoading(true);\n            props.dispatch(getAllFriendships(userId, 'accepted'));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            setUserType(user.userType);\n            getInitialInfo(user._id);\n        }\n    }, []);\n    const handleGotoUserDetails = (individualUserId) => {\n        props.history.push(RoutePaths.userDetailsPage('individual', individualUserId));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col>\n                        <CommunityMenu selected=\"friend\" userType={userType} />\n                        <hr />\n                        <FriendsList\n                            friendships={props.getAllFriendshipResponse ? props.getAllFriendshipResponse.friendships : []}\n                            userId={userId}\n                            handleGotoUserDetails={handleGotoUserDetails}\n                        />\n                        {/* <SampleUsers /> */}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllFriendshipResponse = state.Friendship.getAllFriendships;\n    console.log('🚀 ~ file: friends.js ~ line 41 ~ mapStateToProps ~ getAllFriendshipResponse', getAllFriendshipResponse);\n    return { getAllFriendshipResponse };\n};\nexport default connect(mapStateToProps, null)(CommunityFriends);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followers.js",["1074","1075","1076","1077","1078","1079","1080"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nimport FollowersList from '../../components/community/followers-list';\nimport { getAllFollowers, unfollowUser } from '../../actions/follow-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst CommunityFollowers = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [userType, setUserType] = useState('');\n    const [cards, setCards] = useState({});\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            console.log('Calling API');\n            setLoading(true);\n            props.dispatch(getAllFollowers(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            setUserType(user.userType);\n            getInitialInfo(user._id);\n        }\n    }, []);\n    useEffect(() => {\n        const { success } = props.getAllFollowersResponse;\n        if (success) {\n            const followers = props.getAllFollowersResponse.followers;\n            for (let i = 0; i < followers.length; i++) {\n                cards[followers[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.getAllFollowersResponse]);\n    const handleGotoUserDetails = (userType, userId) => {\n        props.history.push(RoutePaths.userDetailsPage(userType, userId));\n    };\n    const handleUnfollowUser = (cardId, followerId) => {\n        let cards_ = cards;\n        cards_[cardId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(unfollowUser({ followerId: userId, followerId }));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col>\n                        <CommunityMenu selected=\"follower\" userType={userType} />\n                        <hr />\n                        <FollowersList\n                            followers={props.getAllFollowersResponse ? props.getAllFollowersResponse.followers : []}\n                            userId={userId}\n                            handleGotoUserDetails={handleGotoUserDetails}\n                            cards={cards}\n                            handleUnfollowUser={handleUnfollowUser}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllFollowersResponse = state.Follow.getAllFollowers;\n    return { getAllFollowersResponse };\n};\nexport default connect(mapStateToProps, null)(CommunityFollowers);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followings.js",["1081","1082","1083","1084","1085","1086"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nimport FollowingsList from '../../components/community/followings-list';\nimport { getAllFollowings, unfollowUser } from '../../actions/follow-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst CommunityFollowings = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [userType, setUserType] = useState('');\n    const [cards, setCards] = useState({});\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            console.log('Calling API');\n            setLoading(true);\n            props.dispatch(getAllFollowings(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            setUserType(user.userType);\n            getInitialInfo(user._id);\n        }\n    }, []);\n    useEffect(() => {\n        const { success } = props.getAllFollowingsResponse;\n        if (success) {\n            const followings = props.getAllFollowingsResponse.followings;\n            for (let i = 0; i < followings.length; i++) {\n                cards[followings[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.getAllFollowingsResponse]);\n    const handleGotoUserDetails = (userType, userId) => {\n        props.history.push(RoutePaths.userDetailsPage(userType, userId));\n    };\n    const handleUnfollowUser = (cardId, followingId) => {\n        let cards_ = cards;\n        cards_[cardId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(unfollowUser({ followerId: userId, followingId }));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col>\n                        <CommunityMenu selected=\"following\" userType={userType} />\n                        <hr />\n                        <FollowingsList\n                            followings={props.getAllFollowingsResponse ? props.getAllFollowingsResponse.followings : []}\n                            userId={userId}\n                            handleGotoUserDetails={handleGotoUserDetails}\n                            cards={cards}\n                            handleUnfollowUser={handleUnfollowUser}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllFollowingsResponse = state.Follow.getAllFollowings;\n    return { getAllFollowingsResponse };\n};\nexport default connect(mapStateToProps, null)(CommunityFollowings);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/requests.js",["1087","1088","1089","1090","1091"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '../../components/community/community-menu';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { acceptFriendship, rejectFriendship, deleteFriendship } from '../../actions/friendship-action';\nimport RequestList from '../../components/community/requests-list';\nimport { getAllFriendships } from '../../actions/friendship-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst CommunityRequests = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [userType, setUserType] = useState('');\n    const [cards, setCards] = useState({});\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            console.log('Calling API');\n            setLoading(true);\n            props.dispatch(getAllFriendships(userId, 'pending'));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            setUserType(user.userType);\n            getInitialInfo(user._id);\n        }\n    }, []);\n    useEffect(() => {\n        const { success } = props.getAllFriendshipResponse;\n        if (success) {\n            const friendships = props.getAllFriendshipResponse.friendships;\n            for (let i = 0; i < friendships.length; i++) {\n                cards[friendships[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.getAllFriendshipResponse]);\n    const handleGotoUserDetails = (individualUserId) => {\n        props.history.push(RoutePaths.userDetailsPage('individual', individualUserId));\n    };\n    const handleAcceptFriendship = (friendshipId) => {\n        let cards_ = cards;\n        cards_[friendshipId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(acceptFriendship(friendshipId));\n    };\n    const handleRejectFriendship = (friendshipId) => {\n        let cards_ = cards;\n        cards_[friendshipId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(rejectFriendship(friendshipId));\n    };\n    const handleDeleteFriendship = (friendshipId) => {\n        let cards_ = cards;\n        cards_[friendshipId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(deleteFriendship(friendshipId));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col>\n                        <CommunityMenu selected=\"request\" userType={userType} />\n                        <hr />\n                        <RequestList\n                            friendships={props.getAllFriendshipResponse ? props.getAllFriendshipResponse.friendships : []}\n                            userId={userId}\n                            handleGotoUserDetails={handleGotoUserDetails}\n                            handleAcceptFriendship={handleAcceptFriendship}\n                            handleRejectFriendship={handleRejectFriendship}\n                            handleDeleteFriendship={handleDeleteFriendship}\n                            cards={cards}\n                        />\n                        {/* <SampleUsers /> */}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllFriendshipResponse = state.Friendship.getAllFriendships;\n    console.log('🚀 ~ file: friends.js ~ line 41 ~ mapStateToProps ~ getAllFriendshipResponse', getAllFriendshipResponse);\n    return { getAllFriendshipResponse };\n};\nexport default connect(mapStateToProps, null)(CommunityRequests);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/community-menu.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/sample-users.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-map-view.js",["1092","1093","1094","1095","1096","1097"],"import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\nimport { getCountryByCode, getStateByCountryAndCode } from '../../constants/country-and-state';\nimport { Button, Badge, Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllOrganizationOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allOrganizations;\n    console.log('🚀 ~ file: organization-map-view.js ~ line 27 ~ AllOrganizationOnMap ~ markers', markers);\n\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n        }\n        return fullAddress;\n    };\n    const pairsRender = (label, tags) => {\n        return (\n            <label>\n                {label}{' '}\n                {tags.map((t, i) => {\n                    return i === 0 ? tags.label : ', ' + tags.label;\n                })}\n            </label>\n        );\n    };\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.basicInfo && marker.basicInfo.address && marker.basicInfo.address.latitude && marker.basicInfo.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.basicInfo.address.latitude,\n                                    lng: marker.basicInfo.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.basicInfo.address.latitude,\n                            lng: selected.basicInfo.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <Container>\n                            <Row>\n                                <Col>\n                                    <h6>{selected.basicInfo.name}</h6>\n                                </Col>\n                            </Row>\n                            {selected.organizationTypes && selected.organizationTypes.length > 0 && (\n                                <Row>\n                                    <Col>\n                                        {selected.organizationTypes.map((type, i) => {\n                                            return (\n                                                <Badge variant=\"primary\" key={i} className=\"organization-type-badge\">\n                                                    {type.label}\n                                                </Badge>\n                                            );\n                                            // return i !== 0 ? ', ' + type.label : type.label;\n                                        })}\n                                    </Col>\n                                </Row>\n                            )}\n                            {selected.impactAreas && selected.impactAreas.length > 0 && (\n                                <Row>\n                                    <Col>\n                                        {selected.impactAreas.map((type, i) => {\n                                            return (\n                                                <Badge key={i} className=\"impact-area-badge\">\n                                                    {type.label}\n                                                </Badge>\n                                            );\n                                            // return i !== 0 ? ', ' + type.label : type.label;\n                                        })}\n                                    </Col>\n                                </Row>\n                            )}\n                            <br />\n                            {selected.basicInfo.address && <AddressRender address={selected.basicInfo.address} />}\n                            {/* <Row>\n                                {/* <Col sm={3}>\n                                    <label>Address</label>\n                                </Col> */}\n                            {/*  <Col>\n                                    \n                                </Col>\n                            </Row> */}\n\n                            {/* {pairsRender('Organization Type', selected.basicInfo.organizationTypes)} */}\n                            <br />\n                            <Button\n                                size=\"sm\"\n                                variant=\"outline-primary\"\n                                onClick={() => {\n                                    props.gotoOrganizationDetails(selected._id);\n                                }}\n                            >\n                                Go to Page\n                            </Button>\n                        </Container>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nconst AddressRender = ({ address }) => {\n    if (address) {\n        let line1 = '',\n            line2 = '';\n        if (address.street1) line1 += address.street1 + ', ';\n        if (address.street2) line1 += address.street2 + ', ';\n        if (address.city) line2 += address.city + ', ';\n        if (address.code) line2 += address.code + ', ';\n        if (address.state) line2 += getStateByCountryAndCode(address.country, address.state);\n        return (\n            <>\n                <Row>\n                    <Col>{line1} </Col>\n                </Row>\n                <Row>\n                    <Col>{line2} </Col>\n                </Row>\n            </>\n        );\n    } else return <></>;\n};\nexport default AllOrganizationOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-user-information.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/display-project.js",["1098","1099"],"import React, { useState, useEffect } from 'react';\nimport ProjectDetails from '../../components/project/project-details';\nimport { connect } from 'react-redux';\nimport { getProjectById } from '../../actions/project-action';\nconst DisplayProject = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getProjectById(projectId));\n            setLoading(false);\n        };\n        const projectId = props.match.params.projectId;\n        if (projectId) getInitialInfo(projectId);\n        else {\n        }\n    }, [props.auth]);\n    return (\n        <ProjectDetails\n            project={props.getProjectResponse.success ? props.getProjectResponse.project : {}}\n            organization={props.getProjectResponse.success ? props.getProjectResponse.organization : {}}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getProjectResponse = state.Project.getProject ? state.Project.getProject : {};\n    console.log('🚀 ~ file: display-project.js ~ line 23 ~ mapStateToProps ~ getProjectResponse', getProjectResponse);\n\n    return { getProjectResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayProject);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/listing-projects.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/manage-projects.js",["1100"],"import React, { useEffect, useState } from 'react';\nimport ProjectList from '../../components/project/project-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllProjectsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageProjects = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllProjectsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToProjectEdit = (projectId) => {\n        props.history.push(RoutePaths.projectEditPage + projectId);\n    };\n    const handleGoToProjectDetails = (projectId) => {\n        props.history.push(RoutePaths.projectDetailsPage + projectId);\n    };\n    const handleGoToProjectCreate = () => {\n        props.history.push(RoutePaths.projectCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <ProjectList\n                allProjects={props.getAllProjectsResponse.success ? props.getAllProjectsResponse.projects : []}\n                handleGoToProjectEdit={handleGoToProjectEdit}\n                handleGoToProjectDetails={handleGoToProjectDetails}\n                handleGoToProjectCreate={handleGoToProjectCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllProjectsResponse = state.Project.getAllProjects;\n    console.log('🚀 ~ file: manage-projects.js ~ line 21 ~ mapStateToProps ~ getAllProjectsResponse', getAllProjectsResponse);\n\n    return {\n        getAllProjectsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageProjects);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/project/create-project.js",["1101","1102","1103","1104","1105"],"import React, { useEffect, useState } from 'react';\nimport ProjectForm from '../../components/project/project-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getProjectById, createProject, updateProjectById, clearProject } from '../../actions/project-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateProject = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getProjectResponse.success) {\n            console.log(props.getProjectResponse.project);\n            setImages(props.getProjectResponse.project.images);\n            if (props.getProjectResponse.project.address) {\n                setLocation({\n                    latitude: props.getProjectResponse.project.address.latitude,\n                    longitude: props.getProjectResponse.project.address.longitude,\n                });\n            }\n        }\n    }, [props.getProjectResponse]);\n    const handlePictureUpload = (project) => {\n        var file = project.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (project.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageProjects = () => {\n        props.history.push(RoutePaths.projectListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let project = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-project.js ~ line 36 ~ onSubmit ~ project', project);\n        if (editMode) {\n            props.dispatch(updateProjectById(props.match.params.projectId, project));\n        } else {\n            props.dispatch(createProject(project));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (projectId) => {\n            setLoading(true);\n            props.dispatch(getProjectById(projectId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.projectId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearProject());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setProjectResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearProject());\n            if (editMode) props.history.push(RoutePaths.projectDetailsPage + props.match.params.projectId);\n            else {\n                props.history.push(RoutePaths.projectDetailsPage + props.setProjectResponse.project._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setProjectResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <ProjectForm\n                handleGoToManageProjects={handleGoToManageProjects}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((project) => {\n                    onSubmit(project);\n                })}\n                location={location}\n                setLocation={setLocation}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getProjectResponse = state.Project.getProject;\n    const setProjectResponse = state.Project.setProject;\n    let initialValues = {};\n    if (getProjectResponse.success) {\n        initialValues = getProjectResponse.project;\n    }\n    return {\n        getImpactAreaResponse,\n        getSkillResponse,\n        initialValues,\n        getProjectResponse,\n        setProjectResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateProject',\n        enableReinitialize: true,\n    })(CreateProject),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post.js",["1106","1107","1108","1109","1110","1111","1112"],"import React, { useEffect, useState } from 'react';\nimport PostForm from '../../components/post/post-form';\nimport { connect } from 'react-redux';\nimport { reduxForm, formValueSelector, change } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getPostById, createPost, updatePostById, clearPost } from '../../actions/post-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { getServiceInfo } from '../../actions/user-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\n\nconst CreatePost = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [requiredItems, setRequiredItems] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [isActive, setIsActive] = useState(true);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getPostResponse.success) {\n            console.log(props.getPostResponse.post);\n            setImages(props.getPostResponse.post.images);\n            setRequiredItems(props.getPostResponse.post.requiredItems);\n            if (props.getPostResponse.post.address) {\n                setLocation({\n                    latitude: props.getPostResponse.post.address.latitude,\n                    longitude: props.getPostResponse.post.address.longitude,\n                });\n            }\n        }\n    }, [props.getPostResponse]);\n    const handlePictureUpload = (post) => {\n        var file = post.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (post.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManagePosts = () => {\n        props.history.push(RoutePaths.postManagePage);\n    };\n\n    const onSubmit = (values) => {\n        let items = [];\n        if (requiredItems && requiredItems.length > 0) {\n            items = requiredItems.filter((item) => item.name && item.name.length > 0 && item.requirement && item.requirement.length > 0);\n        }\n        let post = {\n            ...values,\n            postType: props.match.params.postType,\n            creatorId: props.auth.user._id,\n            images: images,\n            requiredItems: items,\n            address: {\n                ...values.address,\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n            isActive: isActive,\n        };\n        console.log(post);\n        setLoading(true);\n        if (editMode) {\n            props.dispatch(updatePostById(props.match.params.postId, post));\n        } else {\n            props.dispatch(createPost(post));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleItemEdit = (idx, name, value) => {\n        console.log('🚀 ~ file: create-post.js ~ line 103 ~ handleItemEdit ~ idx, name, value', idx, name, value);\n        let requiredItems_ = requiredItems;\n        let item = requiredItems_[idx];\n        item[name] = value;\n        console.log('T', item);\n        requiredItems_[idx] = item;\n        setRequiredItems([...requiredItems_]);\n    };\n    const handleItemDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this item?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        const requiredItems_ = requiredItems;\n                        requiredItems_.splice(idx, 1);\n                        setRequiredItems([...requiredItems_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleItemPosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let requiredItems_ = requiredItems;\n            [requiredItems_[idx], requiredItems_[idx - 1]] = [requiredItems_[idx - 1], requiredItems_[idx]];\n            setRequiredItems([...requiredItems_]);\n        } else if (movement === 'down' && idx < requiredItems.length - 1) {\n            let requiredItems_ = requiredItems;\n            [requiredItems_[idx], requiredItems_[idx + 1]] = [requiredItems_[idx + 1], requiredItems_[idx]];\n            setRequiredItems([...requiredItems_]);\n        }\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    const handleAddMineImpactAreas = () => {\n        console.log(props.getServiceInfoResponse);\n        if (props.getServiceInfoResponse.success && props.getServiceInfoResponse.serviceInfo.impactAreas) {\n            props.change('impactAreas', props.getServiceInfoResponse.serviceInfo.impactAreas);\n        } else props.change('impactAreas', []);\n    };\n    const handleAddItem = () => {\n        const requiredItems_ = requiredItems;\n        requiredItems_.push({\n            name: '',\n            requirement: '',\n            neededBy: new Date(),\n        });\n        setRequiredItems([...requiredItems_]);\n    };\n    useEffect(() => {\n        const getInitialInfo = (postId) => {\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            props.dispatch(getServiceInfo(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[2] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.postId);\n            } else {\n                props.dispatch(clearPost());\n                setImages([]);\n                setRequiredItems([]);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearPost());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setPostResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearPost());\n            if (editMode) props.history.push(RoutePaths.postDetailsPage(props.match.params.postType, props.match.params.postId));\n            else {\n                props.history.push(RoutePaths.postDetailsPage(props.match.params.postType, props.setPostResponse.post._id));\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setPostResponse]);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <PostForm\n                postType={props.match.params.postType}\n                handleGoToManagePosts={handleGoToManagePosts}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((post) => {\n                    onSubmit(post);\n                })}\n                location={location}\n                setLocation={setLocation}\n                handleAddMineImpactAreas={handleAddMineImpactAreas}\n                handleAddItem={handleAddItem}\n                handleItemEdit={handleItemEdit}\n                handleItemDelete={handleItemDelete}\n                handleItemPosition={handleItemPosition}\n                requiredItems={requiredItems}\n                setIsActive={setIsActive}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getPostResponse = state.Post.getPost;\n    const setPostResponse = state.Post.setPost;\n    const getServiceInfoResponse = state.User.getServiceInfo;\n    let initialValues = {};\n    if (getPostResponse.success) {\n        initialValues = getPostResponse.post;\n        if (initialValues.keywords && initialValues.keywords.length > 0 && typeof initialValues.keywords[0] === 'string') {\n            initialValues.keywords = initialValues.keywords.map((word) => {\n                console.log(word);\n                return { value: word, label: word };\n            });\n        }\n        console.log(initialValues);\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPostResponse,\n        setPostResponse,\n        getSkillResponse,\n        getServiceInfoResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreatePost',\n        enableReinitialize: true,\n    })(CreatePost),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/display-post.js",["1113","1114"],"import React, { useState, useEffect } from 'react';\nimport PostDetails from '../../components/post/post-details';\nimport { connect } from 'react-redux';\nimport { getAllCommittedPersons } from '../../actions/post-action';\nimport CommittedPersonsModal from '../../components/post/committed-persons-list';\nimport {\n    getPostById,\n    likePost,\n    cancelLikePost,\n    interestedPost,\n    cancelInterestedPost,\n    goingPost,\n    cancelGoingPost,\n    changePostInterest,\n} from '../../actions/post-action';\nimport { postManagePage } from '../../constants/route-paths';\nconst DisplayPost = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [committedModal, setCommittedModal] = useState(false);\n    const [committedLoading, setCommittedLoading] = useState(false);\n    const [committedList, setCommittedList] = useState([]);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            const user = props.auth.user;\n            if (user && user._id) {\n                setUserId(user._id);\n            }\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n            setLoading(false);\n        };\n        const postId = props.match.params.postId;\n        if (postId) getInitialInfo(postId);\n        else {\n        }\n    }, [props.auth]);\n    const handleClickCommittedButtons = (postId, type) => {\n        console.log('🚀 ~ file: home.js ~ line 20 ~ handleClickCommittedButtons ~ postId, type', postId, type);\n        setCommittedLoading(true);\n        getAllCommittedPersons(postId, type).then((response) => {\n            console.log('🚀 ~ file: home.js ~ line 22 ~ getAllCommittedPersons ~ response', response);\n            setCommittedModal(true);\n            setCommittedLoading(false);\n            if (response.success) {\n                setCommittedList(response.users);\n            } else {\n                alert('User List Not Found');\n            }\n        });\n    };\n    const handleGotoManagePosts = () => {\n        props.history.push(postManagePage);\n    };\n    const handleLikePost = (postId) => {\n        props.dispatch(likePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'like'));\n    };\n    const handleCancelLikePost = (postId) => {\n        props.dispatch(cancelLikePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'unlike'));\n    };\n\n    const handleInterestedPost = (postId) => {\n        props.dispatch(interestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'interested'));\n    };\n    const handleCancelInterestedPost = (postId) => {\n        console.log('🚀 ~ file: home.js ~ line 46 ~ handleCancelInterestedPost ~ postId', postId);\n        props.dispatch(cancelInterestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'uninterested'));\n    };\n\n    const handleGoingPost = (postId) => {\n        props.dispatch(goingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'going'));\n    };\n    const handleCancelGoingPost = (postId) => {\n        props.dispatch(cancelGoingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'ungoing'));\n    };\n    return (\n        <>\n            <CommittedPersonsModal\n                committedModal={committedModal}\n                committedLoading={committedLoading}\n                committedList={committedList}\n                setCommittedModal={setCommittedModal}\n            />\n            <PostDetails\n                post={props.getPostResponse.success ? props.getPostResponse.post : {}}\n                userId={userId}\n                handleGotoManagePosts={handleGotoManagePosts}\n                handleLikePost={handleLikePost}\n                handleCancelLikePost={handleCancelLikePost}\n                handleInterestedPost={handleInterestedPost}\n                handleCancelInterestedPost={handleCancelInterestedPost}\n                handleGoingPost={handleGoingPost}\n                handleCancelGoingPost={handleCancelGoingPost}\n                handleClickCommittedButtons={handleClickCommittedButtons}\n            />\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getPostResponse = state.Post.getPost ? state.Post.getPost : {};\n\n    return { getPostResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayPost);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/listing-posts.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/manage-news.js",["1115","1116"],"import React, { useState } from 'react';\nimport { Container, Row, Col, Card, Dropdown, Modal, Button } from 'react-bootstrap';\nimport * as DefaultImages from '../../constants/default-images';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { FaPlus } from 'react-icons/fa';\nimport SampleNews from './sample-news';\nconst ManagePosts = (props) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const ButtonRender = (variant, type, label) => {\n        return (\n            <Button\n                style={{ marginTop: 5, width: '100%' }}\n                variant={variant}\n                size=\"sm\"\n                onClick={() => {\n                    props.history.push(RoutePaths.postCreatePage(type));\n                }}\n            >\n                {label}\n            </Button>\n        );\n    };\n    const DropdownItemRender = (variant, type, label) => {\n        return <Dropdown.Item href={RoutePaths.postCreatePage(type)}>{label}</Dropdown.Item>;\n    };\n    return (\n        <Container>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Select Post Type</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Col sm=\"6\">{ButtonRender('info', 'event', 'Event')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'project', 'Project')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'general', 'General Post')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'volunteering', 'Volunteering')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'in-kind', 'In-Kind')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'advocacy', 'Advocacy')}</Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose} size=\"sm\">\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h1>MANAGE POSTS</h1>\n                    <Row>\n                        <Col>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\" size=\"sm\" drop=\"left\">\n                                    <FaPlus /> POST\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {DropdownItemRender('info', 'event', 'Event')}\n                                    {DropdownItemRender('info', 'project', 'Project')}\n                                    {DropdownItemRender('info', 'general', 'General Post')}\n                                    {DropdownItemRender('info', 'volunteering', 'Volunteering')}\n                                    {DropdownItemRender('info', 'in-kind', 'In-Kind')}\n                                    {DropdownItemRender('info', 'advocacy', 'Advocacy')}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col>\n                            <Button variant=\"primary\" onClick={handleShow} size=\"sm\">\n                                Create Post\n                            </Button>\n                        </Col>\n                    </Row>\n                    {/* <Row>\n                        <Col className=\"left-align\">\n                            {ButtonRender('info', RoutePaths.eventCreatePage, 'Event')}&nbsp;\n                            {ButtonRender('info', RoutePaths.projectCreatePage, 'Project')}&nbsp;\n                            {ButtonRender('info', RoutePaths.postCreatePage, 'General Post')}&nbsp;\n                            {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Volunteering')}&nbsp;\n                            {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'In-Kind')}&nbsp;\n                            {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Advocacy')}&nbsp;\n                        </Col>\n                    </Row> */}\n                    <hr />\n                    <Row>\n                        <Col sm=\"12\">\n                            <SampleNews />\n                        </Col>\n                    </Row>\n                    {/* <CardDeck>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultEventIcon} />\n                            <Card.Body>\n                                <Card.Title>EVENTS</Card.Title>\n                            </Card.Body>\n\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.eventListByOrganizationPage, 'Manage Events')}\n                                    {ButtonRender('info', RoutePaths.eventCreatePage, 'Create Event')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultProjectIcon} />\n                            <Card.Body>\n                                <Card.Title>PROJECTS</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.projectListByOrganizationPage, 'Manage Projects')}\n                                    {ButtonRender('info', RoutePaths.projectCreatePage, 'Create Project')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultPImage} />\n                            <Card.Body>\n                                <Card.Title>GENERAL POSTS</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.postListByOrganizationPage, 'Manage General Posts')}\n                                    {ButtonRender('info', RoutePaths.postCreatePage, 'Create General Post')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultVImage} />\n                            <Card.Body>\n                                <Card.Title>VOLUNTEERING</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.volunteeringListByOrganizationPage, 'Manage Volunteerings')}\n                                    {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Create Volunteering')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultIImage} />\n                            <Card.Body>\n                                <Card.Title>In-Kind</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    \n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                    </CardDeck> */}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ManagePosts;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/create-volunteering.js",["1117","1118","1119","1120","1121"],"import React, { useEffect, useState } from 'react';\nimport VolunteeringForm from '../../components/volunteering/volunteering-form';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { getVolunteeringById, createVolunteering, updateVolunteeringById, clearVolunteering } from '../../actions/volunteering-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\nconst CreateVolunteering = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getVolunteeringResponse.success) {\n            console.log(props.getVolunteeringResponse.volunteering);\n            setImages(props.getVolunteeringResponse.volunteering.images);\n            if (props.getVolunteeringResponse.volunteering.address) {\n                setLocation({\n                    latitude: props.getVolunteeringResponse.volunteering.address.latitude,\n                    longitude: props.getVolunteeringResponse.volunteering.address.longitude,\n                });\n            }\n        }\n    }, [props.getVolunteeringResponse]);\n    const handlePictureUpload = (volunteering) => {\n        var file = volunteering.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (volunteering.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManageVolunteerings = () => {\n        props.history.push(RoutePaths.volunteeringListByOrganizationPage);\n    };\n    const onSubmit = (values) => {\n        let volunteering = {\n            ...values,\n            creatorId: props.auth.user._id,\n            images: images,\n\n            address: {\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n        setLoading(true);\n        console.log('🚀 ~ file: create-volunteering.js ~ line 36 ~ onSubmit ~ volunteering', volunteering);\n        if (editMode) {\n            props.dispatch(updateVolunteeringById(props.match.params.volunteeringId, volunteering));\n        } else {\n            props.dispatch(createVolunteering(volunteering));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    useEffect(() => {\n        const getInitialInfo = (volunteeringId) => {\n            setLoading(true);\n            props.dispatch(getVolunteeringById(volunteeringId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.volunteeringId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearVolunteering());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setVolunteeringResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearVolunteering());\n            if (editMode) props.history.push(RoutePaths.volunteeringDetailsPage + props.match.params.volunteeringId);\n            else {\n                props.history.push(RoutePaths.volunteeringDetailsPage + props.setVolunteeringResponse.volunteering._id);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setVolunteeringResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <VolunteeringForm\n                handleGoToManageVolunteerings={handleGoToManageVolunteerings}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((volunteering) => {\n                    onSubmit(volunteering);\n                })}\n                location={location}\n                setLocation={setLocation}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getVolunteeringResponse = state.Volunteering.getVolunteering;\n    const setVolunteeringResponse = state.Volunteering.setVolunteering;\n    let initialValues = {};\n    if (getVolunteeringResponse.success) {\n        initialValues = getVolunteeringResponse.volunteering;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getSkillResponse,\n        getVolunteeringResponse,\n        setVolunteeringResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateVolunteering',\n        enableReinitialize: true,\n    })(CreateVolunteering),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/listing-volunteerings.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/manage-volunteerings.js",["1122"],"import React, { useEffect, useState } from 'react';\nimport VolunteeringList from '../../components/volunteering/volunteering-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllVolunteeringsByOrganization } from '../../actions/organization-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageVolunteerings = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllVolunteeringsByOrganization(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToVolunteeringEdit = (volunteeringId) => {\n        props.history.push(RoutePaths.volunteeringEditPage + volunteeringId);\n    };\n    const handleGoToVolunteeringDetails = (volunteeringId) => {\n        props.history.push(RoutePaths.volunteeringDetailsPage + volunteeringId);\n    };\n    const handleGoToVolunteeringCreate = () => {\n        props.history.push(RoutePaths.volunteeringCreatePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <VolunteeringList\n                allVolunteerings={props.getAllVolunteeringsResponse.success ? props.getAllVolunteeringsResponse.volunteerings : []}\n                handleGoToVolunteeringEdit={handleGoToVolunteeringEdit}\n                handleGoToVolunteeringDetails={handleGoToVolunteeringDetails}\n                handleGoToVolunteeringCreate={handleGoToVolunteeringCreate}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllVolunteeringsResponse = state.Volunteering.getAllVolunteerings;\n    console.log('🚀 ~ file: manage-volunteerings.js ~ line 21 ~ mapStateToProps ~ getAllVolunteeringsResponse', getAllVolunteeringsResponse);\n\n    return {\n        getAllVolunteeringsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageVolunteerings);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/volunteering/display-volunteering.js",["1123","1124"],"import React, { useState, useEffect } from 'react';\nimport VolunteeringDetails from '../../components/volunteering/volunteering-details';\nimport { connect } from 'react-redux';\nimport { getVolunteeringById } from '../../actions/volunteering-action';\nconst DisplayVolunteering = (props) => {\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            props.dispatch(getVolunteeringById(volunteeringId));\n            setLoading(false);\n        };\n        const volunteeringId = props.match.params.volunteeringId;\n        if (volunteeringId) getInitialInfo(volunteeringId);\n        else {\n        }\n    }, [props.auth]);\n    return (\n        <VolunteeringDetails\n            volunteering={props.getVolunteeringResponse.success ? props.getVolunteeringResponse.volunteering : {}}\n            organization={props.getVolunteeringResponse.success ? props.getVolunteeringResponse.organization : {}}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getVolunteeringResponse = state.Volunteering.getVolunteering ? state.Volunteering.getVolunteering : {};\n    console.log('🚀 ~ file: display-volunteering.js ~ line 23 ~ mapStateToProps ~ getVolunteeringResponse', getVolunteeringResponse);\n\n    return { getVolunteeringResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayVolunteering);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/project-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-form.js",["1125"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport ProjectImageList from './project-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, CheckBoxRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport ProjectGeoCoding from './project-geo-coding';\nconst ProjectForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const allSkills = props.allSkills;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Project</h4> : <h4>Create Project</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageProjects();\n                                    }}\n                                >\n                                    Manage Projects\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Title\" placeholder=\"Your project title...\" />\n\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Start time\" col1={4} col2={8} zIndex={6001} />\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"End time\" col1={4} col2={8} zIndex={6000} />\n\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Your project description...\" col1={4} col2={8} />\n                        {/* Skill */}\n                        <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skill\" col1={4} col2={8} options={allSkills} zIndex={5000} menuPlacement=\"top\" />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        <Field name=\"topNeed\" type=\"checkbox\" component={CheckBoxRender} label=\"Top Need\" col1={4} col2={8} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <ProjectImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <ProjectGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ProjectForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/project-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-geo-coding.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-image-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-details.js",["1126","1127","1128"],"import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport ProjectMapView from './project-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayProject = (props) => {\n    const project = props.project;\n    const organization = props.organization;\n    if (project && project._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{project.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(project.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('Impact Areas', project.impactAreas)}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{TagWithLabelRender('Skills', project.skills)}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(project.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(project.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', project.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(project.images)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <ProjectMapView allProjects={[project]} zoom={16} />\n                            </Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Project is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayProject;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-form.js",["1129"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport VolunteeringImageList from './volunteering-image-list';\nimport { SelectRender, InputRender, DateTimePickerRender, TextRender, CreatableMultiSelectRender, CheckBoxRender } from '../form_template/input-render';\nimport VolunteeringGeoCoding from './volunteering-geo-coding';\nconst VolunteeringForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const allSkills = props.allSkills;\n    const images = props.images;\n    const editMode = props.editMode;\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit Volunteering</h4> : <h4>Create Volunteering</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManageVolunteerings();\n                                    }}\n                                >\n                                    Manage Volunteerings\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Field name=\"title\" type=\"text\" component={InputRender} label=\"Title\" placeholder=\"Your volunteering title...\" />\n                        {/* StartDateTime */}\n                        <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Start time\" col1={4} col2={8} zIndex={6001} />\n                        {/* EndDateTime */}\n                        <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"End time\" col1={4} col2={8} zIndex={6000} />\n\n                        <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Your Volunteering description...\" col1={4} col2={8} />\n                        {/* Skill */}\n                        <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skill\" col1={4} col2={8} options={allSkills} zIndex={5000} menuPlacement=\"top\" />\n                        {/* Impact Areas */}\n                        <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact area\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                        <Field name=\"topNeed\" type=\"checkbox\" component={CheckBoxRender} label=\"Top Need\" col1={4} col2={8} />\n                        {/* Images */}\n                        <div style={{ height: 50 }} />\n                        <VolunteeringImageList\n                            images={images}\n                            handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                            handleImageDelete={props.handleImageDelete}\n                            handleImagePosition={props.handleImagePosition}\n                        />\n                        {/* Upload Image */}\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                            <Col sm=\"8\"></Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <VolunteeringGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        {/* Location */}\n\n                        <br />\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button className=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update' : 'Save'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default VolunteeringForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-details.js",["1130","1131","1132"],"import React from 'react';\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport moment from 'moment';\nimport { TagWithLabelRender, DescriptionRender, ImageAndDescriptionRender, InfoRender } from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport VolunteeringMapView from './volunteering-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nconst DisplayVolunteering = (props) => {\n    const volunteering = props.volunteering;\n    const organization = props.organization;\n    if (volunteering && volunteering._id && organization) {\n        console.log(organization.basicInfo);\n        const name = organization.basicInfo && organization.basicInfo.name ? organization.basicInfo.name : 'Organization Name Not Found';\n        const profilePicture = organization.basicInfo && organization.basicInfo.profilePicture ? organization.basicInfo.profilePicture : defaultOrganizationProfilePicture;\n        return (\n            <Container>\n                <Row>\n                    <Col></Col>\n                    <Col md=\"10\" className=\"parent-page\">\n                        <Row>\n                            <Col>\n                                <h4>{volunteering.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + organization.userId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(volunteering.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{TagWithLabelRender('Impact Areas', volunteering.impactAreas)}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{TagWithLabelRender('Skills', volunteering.skills)}</Col>\n                        </Row>\n                        <hr />\n                        <br />\n                        <Row>\n                            <Col>{InfoRender('Start Time', moment(volunteering.startDateTime).format('LLLL'))}</Col>\n                            <Col>{InfoRender('End Time', moment(volunteering.endDateTime).format('LLLL'))}</Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>{DescriptionRender('', volunteering.description)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(volunteering.images)}</Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <VolunteeringMapView allVolunteerings={[volunteering]} zoom={16} />\n                            </Col>\n                        </Row>\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                <LikeButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                                &nbsp;\n                                <GoingButtonRender\n                                    onClick={() => {\n                                        alert('YET TO DEVELOP');\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Volunteering is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayVolunteering;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/volunteering-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-image-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/volunteering-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/project/project-map-view.js",["1133"],"import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllProjectOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allProjects;\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Project</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            <Link to={RoutePath.projectDetailsPage + selected._id}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllProjectOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-geo-coding.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/volunteering/volunteering-map-view.js",["1134"],"import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllVolunteeringOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allVolunteerings;\n\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Volunteering</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            <Link to={RoutePath.volunteeringDetailsPage + selected._id}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllVolunteeringOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/post-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/volunteering-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/project-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-suggestions.js",["1135","1136","1137","1138","1139","1140"],"import React from 'react';\nimport moment from 'moment';\nimport { Container, Badge, Row, Col, Image, Button, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FollowButtonRender } from '../../components/form_template/buttons-render';\nimport { BsFillExclamationDiamondFill } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nconst SamplePosts = (props) => {\n    const posts = [\n        {\n            type: 'Event',\n            id: 0,\n            name: 'Moss Montoya Robertson Fleming Carolina Morgan Whitney Gallegos Avis Ryan English Hall ',\n            org: 'Patrick Espinoza Flores Anderson',\n            description:\n                'Minim aliquip esse in esse culpa ullamco duis aute ex occaecat voluptate consequat. Non est pariatur exercitation incididunt deserunt anim minim duis officia et sunt ea sunt. Exercitation et culpa excepteur aute qui irure. Labore dolore dolor sint esse cillum eiusmod pariatur. Aliqua labore nulla non esse consectetur incididunt elit dolore ea exercitation quis elit elit. Qui id laboris cupidatat amet velit ut dolor.\\r\\n',\n            latitude: 25.652657,\n            longitude: -72.434629,\n            createdAt: '2016-06-20T01:07:40-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Post',\n            id: 1,\n            name: 'Craig Buck Fitzgerald Kirkland Althea Crane Acevedo Burgess Hines Bernard Rocha Powell ',\n            org: 'Hollie Travis Darcy Conner',\n            description:\n                'Mollit ut et quis veniam eiusmod enim fugiat Lorem qui in minim. Elit id nostrud non officia nostrud ad Lorem commodo. Elit ex velit ipsum magna quis. Non adipisicing veniam id pariatur sint cupidatat enim qui veniam est ipsum velit. Mollit duis eiusmod qui incididunt. Sunt nostrud velit reprehenderit ea mollit pariatur aliqua reprehenderit non excepteur cupidatat consectetur ex incididunt. Elit proident nulla nostrud do.\\r\\n',\n            latitude: 64.109759,\n            longitude: -140.925495,\n            createdAt: '2016-10-17T07:04:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Project',\n            id: 2,\n            name: 'Santiago Chaney Tucker Finch Debbie Walker Knowles Padilla Virginia Merrill Celina Pierce ',\n            org: 'Logan Perkins Dunlap Heath',\n            description:\n                'Ex do adipisicing ullamco ad sint. Laborum in irure dolor amet pariatur Lorem est magna officia esse qui et dolore. Qui veniam consectetur commodo laborum pariatur qui consectetur ea veniam nisi pariatur nulla cillum veniam. Labore incididunt aliquip in ut consequat nulla anim nostrud ea labore pariatur.\\r\\n',\n            latitude: 67.37103,\n            longitude: 10.44369,\n            createdAt: '2014-12-04T01:23:05-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Volunteering',\n            id: 3,\n            name: 'Brittney Jefferson Whitley Mcfadden Watts Blackwell Carson Schmidt Lila Barnett Foster Mccarthy ',\n            org: 'Shelly Bryan Kenya Lopez',\n            description:\n                'In non reprehenderit aliquip sit mollit nisi duis. Eu do voluptate ut consequat qui laboris labore sunt exercitation veniam. Sit sunt dolore excepteur veniam irure laborum occaecat aliquip ad occaecat fugiat incididunt adipisicing irure.\\r\\n',\n            latitude: -34.069339,\n            longitude: -112.189468,\n            createdAt: '2018-02-26T07:14:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'In Kind',\n            id: 4,\n            name: 'Andrews Fry Riddle Weeks Lara Nelson Morton Nichols Rush Cherry Carver Reed ',\n            org: 'Waller Williams Ward Bentley',\n            description:\n                'Id sit tempor laboris irure sint in nisi laboris excepteur ad irure adipisicing. Ipsum officia occaecat consectetur sunt. Do deserunt aute esse irure non est eiusmod ad id ullamco. Aliqua id adipisicing pariatur ea incididunt reprehenderit amet commodo sit pariatur culpa. Duis sint aute exercitation elit pariatur dolor.\\r\\n',\n            latitude: 53.897686,\n            longitude: 76.513392,\n            createdAt: '2017-12-23T05:01:13-06:00',\n            ttl: 7,\n        },\n    ];\n    const types = ['Non-profit', 'Political'];\n    const areas = ['Santiago', 'Chaney', 'Tucker', 'Finch', 'Debbie', 'Virginia', 'Merrill Celina', 'Pierce'];\n    const popover = (\n        <Popover id=\"popover-basic\">\n            <Popover.Title as=\"h4\">Suggestions</Popover.Title>\n            <Popover.Content>The suggestions is based on your profile informations such as location, impact areas, etc.</Popover.Content>\n        </Popover>\n    );\n    const mapImage = 'http://cascaid.sky4242.com/default-images/sample-g-map.png';\n    return (\n        <div>\n            <Row>\n                <Col sm=\"10\">\n                    <h6>\n                        Suggestions for you.\n                        {/* </Col>\n                <Col> */}\n                        <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                            <a>\n                                <BsFillExclamationDiamondFill style={{ marginBottom: 5 }} />\n                            </a>\n                            {/* <Button variant=\"light\" size=\"sm\" style={{ padding: 0, margin: 0 }}>\n                        \n                            <BsFillExclamationDiamondFill />\n                        </Button> */}\n                        </OverlayTrigger>\n                    </h6>\n                    {/* <small>Based on your profile</small> */}\n                </Col>\n            </Row>\n            <br />\n            {posts.map((post, i) => {\n                return (\n                    <div key={i} className=\"post-box\">\n                        <Row>\n                            <Col>\n                                <Row>\n                                    <Col sm=\"2\">\n                                        <Avatar src={defaultOrganizationProfilePicture} round={5} size={30} />\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Link to={'/organization/details/'}>\n                                            {' '}\n                                            <h6>{post.org}</h6>\n                                        </Link>\n                                    </Col>\n                                </Row>\n                                {/* <Image src={defaultOrganizationProfilePicture} thumbnail style={{ height: 50, width: 50 }} />\n                            {/* </Col>\n                            <Col md=\"10\"> */}\n                                {/* <small>{moment(post.createdAt).format('LLLL')}</small> */}\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col>\n                                {types.map((type, i) => {\n                                    return (\n                                        <Badge variant=\"info\" className=\"badge-single-small\">\n                                            {type}\n                                        </Badge>\n                                    );\n                                })}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                {areas.map((area, i) => {\n                                    return (\n                                        <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\">\n                                            {area}\n                                        </Badge>\n                                    );\n                                })}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <small>House# 99, Apt# B2, Road# 4/25, Block# A, Dhaka 1213</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <FollowButtonRender />\n                                &nbsp;\n                            </Col>\n                        </Row>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nexport default SamplePosts;\n",["1141","1142"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-posts.js",["1143","1144"],"import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Container, Row, Col, Image, Button, Modal, Badge } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FaThumbsUp, FaLocationArrow, FaHeart } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nconst SamplePosts = (props) => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const posts = [\n        {\n            type: 'Event',\n            id: 0,\n            name: 'Moss Montoya Robertson Fleming Carolina Morgan Whitney Gallegos Avis Ryan English Hall ',\n            org: 'Patrick Espinoza Flores Anderson',\n            description:\n                'Minim aliquip esse in esse culpa ullamco duis aute ex occaecat voluptate consequat. Non est pariatur exercitation incididunt deserunt anim minim duis officia et sunt ea sunt. Exercitation et culpa excepteur aute qui irure. Labore dolore dolor sint esse cillum eiusmod pariatur. Aliqua labore nulla non esse consectetur incididunt elit dolore ea exercitation quis elit elit. Qui id laboris cupidatat amet velit ut dolor.\\r\\n',\n            latitude: 25.652657,\n            longitude: -72.434629,\n            createdAt: '2016-06-20T01:07:40-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Post',\n            id: 1,\n            name: 'Craig Buck Fitzgerald Kirkland Althea Crane Acevedo Burgess Hines Bernard Rocha Powell ',\n            org: 'Hollie Travis Darcy Conner',\n            description:\n                'Mollit ut et quis veniam eiusmod enim fugiat Lorem qui in minim. Elit id nostrud non officia nostrud ad Lorem commodo. Elit ex velit ipsum magna quis. Non adipisicing veniam id pariatur sint cupidatat enim qui veniam est ipsum velit. Mollit duis eiusmod qui incididunt. Sunt nostrud velit reprehenderit ea mollit pariatur aliqua reprehenderit non excepteur cupidatat consectetur ex incididunt. Elit proident nulla nostrud do.\\r\\n',\n            latitude: 64.109759,\n            longitude: -140.925495,\n            createdAt: '2016-10-17T07:04:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Project',\n            id: 2,\n            name: 'Santiago Chaney Tucker Finch Debbie Walker Knowles Padilla Virginia Merrill Celina Pierce ',\n            org: 'Logan Perkins Dunlap Heath',\n            description:\n                'Ex do adipisicing ullamco ad sint. Laborum in irure dolor amet pariatur Lorem est magna officia esse qui et dolore. Qui veniam consectetur commodo laborum pariatur qui consectetur ea veniam nisi pariatur nulla cillum veniam. Labore incididunt aliquip in ut consequat nulla anim nostrud ea labore pariatur.\\r\\n',\n            latitude: 67.37103,\n            longitude: 10.44369,\n            createdAt: '2014-12-04T01:23:05-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Volunteering',\n            id: 3,\n            name: 'Brittney Jefferson Whitley Mcfadden Watts Blackwell Carson Schmidt Lila Barnett Foster Mccarthy ',\n            org: 'Shelly Bryan Kenya Lopez',\n            description:\n                'In non reprehenderit aliquip sit mollit nisi duis. Eu do voluptate ut consequat qui laboris labore sunt exercitation veniam. Sit sunt dolore excepteur veniam irure laborum occaecat aliquip ad occaecat fugiat incididunt adipisicing irure.\\r\\n',\n            latitude: -34.069339,\n            longitude: -112.189468,\n            createdAt: '2018-02-26T07:14:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'In Kind',\n            id: 4,\n            name: 'Andrews Fry Riddle Weeks Lara Nelson Morton Nichols Rush Cherry Carver Reed ',\n            org: 'Waller Williams Ward Bentley',\n            description:\n                'Id sit tempor laboris irure sint in nisi laboris excepteur ad irure adipisicing. Ipsum officia occaecat consectetur sunt. Do deserunt aute esse irure non est eiusmod ad id ullamco. Aliqua id adipisicing pariatur ea incididunt reprehenderit amet commodo sit pariatur culpa. Duis sint aute exercitation elit pariatur dolor.\\r\\n',\n            latitude: 53.897686,\n            longitude: 76.513392,\n            createdAt: '2017-12-23T05:01:13-06:00',\n            ttl: 7,\n        },\n    ];\n    const people = [\n        {\n            id: 0,\n            name: 'Vera Knowles',\n        },\n        {\n            id: 1,\n            name: 'Jefferson Nielsen',\n        },\n        {\n            id: 2,\n            name: 'Mari Mcintyre',\n        },\n        {\n            id: 3,\n            name: 'Letha Holland',\n        },\n        {\n            id: 4,\n            name: 'Alexandra Lawrence',\n        },\n        {\n            id: 5,\n            name: 'Bryan Singleton',\n        },\n    ];\n    const mapImage = 'http://localhost:3001/default-images/sample-g-map.png';\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>10 People liked this post</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {people.map((ppl, i) => {\n                        return (\n                            <Container className=\"ppl-liked-list\" key={i}>\n                                <Row>\n                                    <Col sm={2}>\n                                        <Image src=\"https://picsum.photos/200/200\" thumbnail style={{ width: '100%', height: '100%' }} />\n                                    </Col>\n                                    <Col sm={6} className=\"v-middle\">\n                                        {ppl.name}\n                                    </Col>\n                                    <Col sm={4} className=\"v-middle\">\n                                        <Button size=\"sm\">Add Friend</Button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        );\n                    })}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {posts.map((post, i) => {\n                return (\n                    <div key={i} className=\"justify-text post-box\">\n                        <h4 style={{ color: 'cadetblue' }}>{post.type}</h4>\n                        <h5>{post.name}</h5>\n                        <Row>\n                            <Col>\n                                <Row>\n                                    <Col sm=\"1\">\n                                        <Avatar src={defaultOrganizationProfilePicture} round={5} size=\"50\" />\n                                    </Col>\n                                    <Col sm=\"8\">\n                                        <Link to={'/organization/details/'}>\n                                            {' '}\n                                            <h6>{post.org}</h6>\n                                        </Link>\n                                        <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                                    </Col>\n                                </Row>\n                                {/* <Image src={defaultOrganizationProfilePicture} thumbnail style={{ height: 50, width: 50 }} />\n                            {/* </Col>\n                            <Col md=\"10\"> */}\n                                {/* <small>{moment(post.createdAt).format('LLLL')}</small> */}\n                            </Col>\n                        </Row>\n                        <Row>\n                            {/* <Col sm=\"2\">Impact Areas</Col> */}\n                            <Col>\n                                {post.name.split(' ').map((nm, i) => {\n                                    return (\n                                        <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\">\n                                            {nm}\n                                        </Badge>\n                                    );\n                                })}\n                            </Col>\n                        </Row>\n                        <Row>\n                            {/* <Col sm=\"2\">Skills</Col> */}\n                            <Col>\n                                {post.org.split(' ').map((nm, i) => {\n                                    return (\n                                        <Badge variant=\"light\" className=\"badge-single-small skill-badge\">\n                                            {nm}\n                                        </Badge>\n                                    );\n                                })}\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"4\" className=\"home-post-image\">\n                                <Image src=\"https://picsum.photos/400/300\" thumbnail style={{ width: '100%', height: 'auto' }} />\n                                <div className=\"home-post-image-text\">{post.ttl} More Images</div>\n                            </Col>\n                            <Col sm=\"8\" className=\"justify-text\">\n                                {post.description}\n                                <a href=\"#\">See More</a>\n                            </Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Button variant=\"primary\" size=\"sm\">\n                                    <FaThumbsUp /> &nbsp;Like\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"info\" size=\"sm\">\n                                    <FaHeart /> &nbsp;Interested\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"secondary\" size=\"sm\">\n                                    <FaLocationArrow />\n                                    &nbsp; Going\n                                </Button>\n                                &nbsp;\n                            </Col>\n                            <Col className=\"right-align\">\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={handleShow}>\n                                    10 Liked\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-info\" size=\"sm\" onClick={handleShow}>\n                                    100 Interested\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleShow}>\n                                    1000 Going\n                                </Button>\n                                &nbsp;\n                            </Col>\n                        </Row>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nexport default SamplePosts;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/language-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/skill-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/skill-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/language-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/skill-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/language-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/post-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-form.js",["1145"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport PostImageList from './post-image-list';\nimport { SelectRender, InputRender, InputRenderWithLargeLabel, DateTimePickerRender, TextRender, CheckBoxRender, CreatableMultiSelectRender } from '../form_template/input-render';\nimport PostGeoCoding from './post-geo-coding';\nimport { getPostTypeByValue, postTypeFields } from '../../constants/post-types';\nimport RequiredItemList from './required-item-list';\nconst PostForm = (props) => {\n    console.log(props);\n    const allImpactAreas = props.allImpactAreas;\n    const allSkills = props.allSkills;\n    const images = props.images;\n    const requiredItems = props.requiredItems;\n    const editMode = props.editMode;\n    const postType = props.postType;\n    const postTypeLabel = getPostTypeByValue(postType)[0].label;\n    const fields = postTypeFields[postType];\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit {postTypeLabel}</h4> : <h4>Create {postTypeLabel}</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    size=\"sm\"\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManagePosts();\n                                    }}\n                                >\n                                    Manage Posts\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        {fields.title && <Field name=\"title\" type=\"text\" component={InputRender} label=\"Title\" placeholder=\"Title...\" />}\n                        {fields.startDateTime && <Field name=\"startDateTime\" component={DateTimePickerRender} label=\"Start time\" col1={4} col2={8} zIndex={6001} />}\n                        {fields.endDateTime && <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"End time\" col1={4} col2={8} zIndex={6000} />}\n                        {fields.description && <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Description...\" col1={4} col2={8} />}\n                        {fields.skills && <Field name=\"skills\" component={CreatableMultiSelectRender} label=\"Skill\" col1={4} col2={8} options={allSkills} zIndex={5000} menuPlacement=\"top\" />}\n                        {fields.keywords && (\n                            <Field name=\"keywords\" type=\"text\" component={CreatableMultiSelectRender} label=\"Keywords\" col1={4} col2={8} placeholder=\"Add new keywords\" zIndex={2000} />\n                        )}\n                        {fields.petitionLink && <Field name=\"petitionLink\" type=\"text\" component={InputRender} label=\"Petition Link\" placeholder=\"\" />}\n                        {fields.impactAreas && (\n                            <>\n                                <Row>\n                                    <Col sm={4}></Col>\n                                    <Col sm={8}>\n                                        <Button\n                                            variant=\"light\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleAddMineImpactAreas();\n                                            }}\n                                        >\n                                            Auto select my impact areas\n                                        </Button>\n                                    </Col>\n                                </Row>\n                                <Field name=\"impactAreas\" component={CreatableMultiSelectRender} label=\"Impact areas\" col1={4} col2={8} options={allImpactAreas} zIndex={4000} menuPlacement=\"top\" />\n                            </>\n                        )}\n                        {fields.expectedRequiredHours && (\n                            <Field name=\"expectedRequiredHours\" component={InputRenderWithLargeLabel} type=\"number\" unit=\"Hours\" label=\"Expected Required Time\" min={0} max={100} step={0.25} />\n                        )}\n                        {fields.topNeed && <Field name=\"topNeed\" type=\"checkbox\" component={CheckBoxRender} label=\"Top Need\" col1={4} col2={8} />}\n                        {fields.requiredItems && (\n                            <>\n                                <RequiredItemList\n                                    requiredItems={requiredItems}\n                                    handleItemEdit={props.handleItemEdit}\n                                    handleItemDelete={props.handleItemDelete}\n                                    handleItemPosition={props.handleItemPosition}\n                                />\n                                <Row>\n                                    <Col>\n                                        <Button\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleAddItem();\n                                            }}\n                                        >\n                                            Add New Required Item\n                                        </Button>\n                                    </Col>\n                                    <Col sm=\"8\"></Col>\n                                </Row>\n                            </>\n                        )}\n                        {fields.images && (\n                            <>\n                                <div style={{ height: 50 }} />\n                                <PostImageList\n                                    images={images}\n                                    handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                                    handleImageDelete={props.handleImageDelete}\n                                    handleImagePosition={props.handleImagePosition}\n                                />\n                                {/* Upload Image */}\n                                <Row>\n                                    <Col>\n                                        <div className=\"custom-file\">\n                                            <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                                Choose profile picture\n                                            </label>\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"8\"></Col>\n                                </Row>\n                            </>\n                        )}\n                        <br />\n                        {fields.address && (\n                            <>\n                                {/* <Field name=\"address.fullAddress\" type=\"text\" component={InputRender} label=\"Full Address\" placeholder=\"House, Road, Area, Sector, ZIP, City, State, Country...\" /> */}\n                                <Row>\n                                    <Col sm={4}>Location</Col>\n                                    <Col sm={8}>\n                                        <PostGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                                    </Col>\n                                </Row>\n                            </>\n                        )}\n                        {/* {fields.isActive && <Field name=\"isActive\" type=\"checkbox\" component={CheckBoxRender} label=\"Publish/Active\" col1={4} col2={8} />} */}\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button\n                                    variant=\"warning\"\n                                    size=\"sm\"\n                                    type=\"submit\"\n                                    onClick={() => {\n                                        props.setIsActive(false);\n                                    }}\n                                >\n                                    Save as Draft\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update and Publish' : 'Save and Publish'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default PostForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-image-list.js",["1146"],"import React from 'react';\nimport { Table, Image, Button, Row, Col, Badge } from 'react-bootstrap';\nimport { DeleteButtonRender, UpArrowButtonRender, DownArrowButtonRender } from '../form_template/buttons-render';\nconst PostImageList = (props) => {\n    const images = props.images;\n    if (images && images.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Images</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"dark\" className=\"badge-single \">\n                            Remember: First Image of the list will be your default post image\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr>\n                            <th>Image</th>\n                            <th>Description</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {images.map((image, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td style={{ width: 220 }}>\n                                        <Image src={image.path} thumbnail width=\"200\" />\n                                    </td>\n                                    <td>\n                                        <textarea\n                                            value={image.description}\n                                            placeholder=\"Add description...\"\n                                            rows=\"8\"\n                                            type=\"text\"\n                                            className=\"form-control image-description-input\"\n                                            onChange={(e) => {\n                                                props.handleImageDescriptionEdit(i, e);\n                                            }}\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <DeleteButtonRender\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        />\n                                        {i > 0 && (\n                                            <>\n                                                &nbsp;\n                                                <UpArrowButtonRender\n                                                    onClick={() => {\n                                                        props.handleItemPosition(i, 'up');\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                        &nbsp;\n                                        {i < images.length - 1 && (\n                                            <DownArrowButtonRender\n                                                onClick={() => {\n                                                    props.handleItemPosition(i, 'down');\n                                                }}\n                                            />\n                                        )}\n                                    </td>\n                                    {/* <td className=\"block\">\n                                        <Button\n                                            variant=\"outline-danger\"\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        >\n                                            DELETE\n                                        </Button>\n                                        <br />\n                                        <br />\n                                        {i > 0 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'up');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-up-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                        <br />\n                                        <br />\n                                        {i < images.length - 1 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'down');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-down-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                    </td> */}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Image Added</h5>;\n    }\n};\nexport default PostImageList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-geo-coding.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/post-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-details.js",["1147","1148"],"import React from 'react';\nimport { Container, Row, Col, Image, Button, Badge } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport { interestTypes } from '../../constants/interest-types';\nimport moment from 'moment';\nimport {\n    TagWithLabelRender,\n    ImpactAreasRender,\n    DescriptionRender,\n    ImageAndDescriptionRender,\n    RequiredItemsRender,\n    InfoRender,\n    LinkRender,\n    BooleanRender,\n    KeywordsRender,\n} from '../form_template/details-render';\nimport { LikeButtonRender, GoingButtonRender, InterestedButtonRender } from '../form_template/buttons-render';\nimport PostMapView from './post-map-view';\nimport * as RoutePath from '../../constants/route-paths';\nimport { getPostTypeByValue, postTypeFields } from '../../constants/post-types';\nconst DisplayPost = (props) => {\n    const post = props.post;\n    console.log('🚀 ~ file: post-details.js ~ line 24 ~ DisplayPost ~ post', post);\n    const userId = props.userId;\n    const fields = postTypeFields[post.postType];\n    if (post && post._id) {\n        const name = post.organizationName ? post.organizationName : 'Organization Name Not Found';\n        const profilePicture = post.organizationProfilePicture ? post.organizationProfilePicture : defaultOrganizationProfilePicture;\n        // const interests = post.interests;\n        const committed = post.interests.filter((i) => i.userId === userId)[0];\n        console.log('🚀 ~ file: post-details.js ~ line 32 ~ DisplayPost ~ committed', committed);\n        let liked = post.interests.filter((interest) => interest.liked).length;\n        let interested = post.interests.filter((interest) => interest.interested).length;\n        let going = post.interests.filter((interest) => interest.going).length;\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        {post.creatorId === userId && (\n                            <Row>\n                                <Col>\n                                    <Button\n                                        size=\"sm\"\n                                        variant=\"outline-info\"\n                                        onClick={() => {\n                                            props.handleGotoManagePosts();\n                                        }}\n                                    >\n                                        Manage Posts\n                                    </Button>\n                                    <hr />\n                                </Col>\n                            </Row>\n                        )}\n                        {post.postType !== 'general' && (\n                            <Row>\n                                <Col>\n                                    <h4>\n                                        <Badge variant=\"dark\">{getPostTypeByValue(post.postType)[0].label}</Badge>\n                                    </h4>\n                                </Col>\n                            </Row>\n                        )}\n                        <Row>\n                            <Col>\n                                <h4>{post.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + post.creatorId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{ImpactAreasRender('', post.impactAreaNames)}</Col>\n                        </Row>\n                        <hr />\n                        {fields.skills && (\n                            <>\n                                <Row>\n                                    <Col>{TagWithLabelRender('', post.skillNames)}</Col>\n                                </Row>\n                                <hr />\n                            </>\n                        )}\n                        {fields.startDateTime && fields.endDateTime && (\n                            <>\n                                <Row>\n                                    {post.startDateTime && <Col>{InfoRender('Start Time', moment(post.startDateTime).format('LLLL'))}</Col>}\n                                    {post.endDateTime && <Col>{InfoRender('End Time', moment(post.endDateTime).format('LLLL'))}</Col>}\n                                </Row>\n                                <Row>\n                                    {post.expectedRequiredHours && <Col>{InfoRender('Expected Required Time', post.expectedRequiredHours + ' Hour')}</Col>}\n                                </Row>\n                                {post.startDateTime || post.endDateTime ? <hr /> : ''}\n                            </>\n                        )}\n                        {fields.petitionLink && post.petitionLink && (\n                            <>\n                                <Row>\n                                    <Col>{LinkRender('Petition Link', post.petitionLink)}</Col>\n                                </Row>\n                                <hr />\n                            </>\n                        )}\n                        {fields.topNeed && post.topNeed && (\n                            <>\n                                <Row>\n                                    <Col>{BooleanRender('Top Need', post.topNeed)}</Col>\n                                </Row>\n                                <hr />\n                            </>\n                        )}\n\n                        <Row>\n                            {fields.address && post.address && post.address.latitude && post.address.longitude && (\n                                <Col md={4}>\n                                    <PostMapView allPosts={[post]} zoom={16} />\n                                </Col>\n                            )}\n                            <Col>\n                                {DescriptionRender('', post.description)}\n                                <hr />\n                                {KeywordsRender('Keywords', post.keywords)}\n                            </Col>\n                            <hr />\n                        </Row>\n\n                        {fields.requiredItems && (\n                            <Row>\n                                <Col>{RequiredItemsRender(post.requiredItems)}</Col>\n                            </Row>\n                        )}\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(post.images)}</Col>\n                            <hr />\n                        </Row>\n\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                {interestTypes[post.postType].like ? (\n                                    committed && committed.liked ? (\n                                        <LikeButtonRender\n                                            complete={true}\n                                            onClick={() => {\n                                                props.handleCancelLikePost(post._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <LikeButtonRender\n                                            complete={false}\n                                            onClick={() => {\n                                                props.handleLikePost(post._id);\n                                            }}\n                                        />\n                                    )\n                                ) : (\n                                    <></>\n                                )}\n                                &nbsp;\n                                {interestTypes[post.postType].interested ? (\n                                    committed && committed.interested ? (\n                                        <InterestedButtonRender\n                                            complete={true}\n                                            onClick={() => {\n                                                props.handleCancelInterestedPost(post._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <InterestedButtonRender\n                                            complete={false}\n                                            onClick={() => {\n                                                props.handleInterestedPost(post._id);\n                                            }}\n                                        />\n                                    )\n                                ) : (\n                                    <></>\n                                )}\n                                &nbsp;\n                                {interestTypes[post.postType].going ? (\n                                    committed && committed.going ? (\n                                        <GoingButtonRender\n                                            complete={true}\n                                            onClick={() => {\n                                                props.handleCancelGoingPost(post._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <GoingButtonRender\n                                            complete={false}\n                                            onClick={() => {\n                                                props.handleGoingPost(post._id);\n                                            }}\n                                        />\n                                    )\n                                ) : (\n                                    <></>\n                                )}\n                                &nbsp;\n                            </Col>\n                            <Col className=\"right-align\">\n                                {interestTypes[post.postType].like && liked > 0 && (\n                                    <Button\n                                        variant=\"outline-primary\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleClickCommittedButtons(post._id, 'liked');\n                                        }}\n                                    >\n                                        {liked} Liked\n                                    </Button>\n                                )}\n                                &nbsp;\n                                {interestTypes[post.postType].interested && interested > 0 && (\n                                    <Button\n                                        variant=\"outline-secondary\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleClickCommittedButtons(post._id, 'interested');\n                                        }}\n                                    >\n                                        {interested} Interested\n                                    </Button>\n                                )}\n                                &nbsp;\n                                {interestTypes[post.postType].going && going > 0 && (\n                                    <Button\n                                        variant=\"outline-info\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleClickCommittedButtons(post._id, 'going');\n                                        }}\n                                    >\n                                        {going} Going\n                                    </Button>\n                                )}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Post is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayPost;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-map-view.js",["1149"],"import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '../../constants/route-paths';\n\nimport { Link } from 'react-router-dom';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllPostOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allPosts;\n    console.log('🚀 ~ file: post-map-view.js ~ line 27 ~ AllPostOnMap ~ markers', markers);\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <div>\n                            <h2>Post</h2>\n                            <b>Title: </b>\n                            {selected.title}\n\n                            <br />\n                            {/* <Link to={RoutePath.postDetailsPage + selected._id}>Details</Link> */}\n                            <Link to={RoutePath.postDetailsPage('post', selected._id)}>Details</Link>\n                        </div>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllPostOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/sample-news.js",["1150"],"import React from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport { EditButtonRender, DeleteButtonRender } from '../../components/form_template/buttons-render';\nconst SampleNews = (props) => {\n    const news = [\n        {\n            id: 0,\n            isActive: false,\n            picture: 'http://placehold.it/32x32',\n            title: 'Cupidatat commodo dolore ex laborum consectetur.',\n            description:\n                'Magna magna culpa ut non exercitation. Aliqua dolor fugiat duis voluptate non Lorem. Veniam dolore tempor cillum laborum veniam est. Id et magna id nisi qui sit deserunt sunt.\\r\\n',\n            createdAt: '2015-01-16T01:56:58-06:00',\n            type: 'volunteering',\n        },\n        {\n            id: 1,\n            isActive: false,\n            picture: 'http://placehold.it/32x32',\n            title: 'Ullamco elit sunt pariatur cillum cillum amet cillum non enim laboris consequat qui in.',\n            description:\n                'Reprehenderit in nostrud ea dolor ad veniam consectetur duis veniam minim ipsum aute aliqua. Commodo sint pariatur elit eu tempor consectetur nisi non dolor. Ea ad est ullamco ea cillum nulla enim. Reprehenderit adipisicing mollit exercitation elit anim et consectetur esse voluptate. Eiusmod do voluptate do culpa pariatur pariatur culpa ipsum do aliquip laborum anim ipsum ipsum.\\r\\n',\n            createdAt: '2015-04-24T06:11:52-06:00',\n            type: 'volunteering',\n        },\n        {\n            id: 2,\n            isActive: true,\n            picture: 'http://placehold.it/32x32',\n            title: 'Aute quis excepteur mollit ullamco aliquip Lorem.',\n            description:\n                'Incididunt nisi enim incididunt nostrud officia proident occaecat. Incididunt culpa voluptate laboris irure aliquip fugiat. Ut cillum occaecat ex enim irure sit Lorem nisi aliqua aliqua non non ad. Sint officia exercitation proident nostrud officia. Veniam laborum sunt exercitation adipisicing magna sit. Ullamco veniam cupidatat voluptate veniam reprehenderit dolor anim deserunt sit dolor. Enim commodo nisi qui sunt voluptate nisi magna.\\r\\n',\n            createdAt: '2014-03-26T04:48:25-06:00',\n            type: 'advocacy',\n        },\n        {\n            id: 3,\n            isActive: true,\n            picture: 'http://placehold.it/32x32',\n            title: 'Minim irure ipsum nisi nostrud duis excepteur nisi.',\n            description:\n                'Aute tempor cupidatat laboris amet duis voluptate laborum. Et consectetur nulla elit commodo excepteur magna eiusmod cillum excepteur sint magna ex do nulla. Tempor quis officia occaecat commodo voluptate dolore commodo. Id nulla aliquip quis et laborum nisi laboris sint mollit nulla.\\r\\n',\n            createdAt: '2020-01-22T06:58:06-06:00',\n            type: 'event',\n        },\n        {\n            id: 4,\n            isActive: false,\n            picture: 'http://placehold.it/32x32',\n            title: 'Nisi consequat do labore minim fugiat elit aliqua labore magna ea.',\n            description:\n                'Enim duis deserunt nulla anim sunt. Minim ullamco eiusmod sit officia officia dolore incididunt. Incididunt magna enim ullamco nulla exercitation aliqua tempor. Veniam magna aute nostrud proident dolore consectetur mollit dolore. Voluptate ut reprehenderit labore ex excepteur velit culpa consectetur mollit do anim fugiat magna duis. Ad ipsum voluptate velit nulla cillum dolor eiusmod incididunt Lorem. Excepteur in fugiat esse aliquip dolor reprehenderit.\\r\\n',\n            createdAt: '2015-03-29T07:33:23-06:00',\n            type: 'advocacy',\n        },\n        {\n            id: 5,\n            isActive: true,\n            picture: 'http://placehold.it/32x32',\n            title: 'Commodo commodo incididunt ea culpa esse culpa non aliquip.',\n            description:\n                'Ut qui aute duis ea ad nulla pariatur nostrud labore fugiat. Laboris ea incididunt aliquip nulla enim. Fugiat ex irure laborum deserunt. Ea velit laboris esse veniam occaecat dolore do esse reprehenderit non sunt occaecat ad. Veniam adipisicing anim in non proident sunt magna nisi deserunt consequat laboris.\\r\\n',\n            createdAt: '2017-04-28T06:31:30-06:00',\n            type: 'project',\n        },\n        {\n            id: 6,\n            isActive: true,\n            picture: 'http://placehold.it/32x32',\n            title: 'Sit cupidatat deserunt deserunt id excepteur irure commodo mollit amet.',\n            description:\n                'Nisi est ex occaecat sint aliquip. Laborum ea consectetur est adipisicing id fugiat commodo labore ex tempor minim. Eiusmod laboris consequat culpa ea pariatur dolore ipsum cillum exercitation ut non exercitation aliqua.\\r\\n',\n            createdAt: '2016-01-25T12:25:37-06:00',\n            type: 'project',\n        },\n    ];\n    return (\n        <Table striped bordered hover size=\"sm\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th>\n                        <input type=\"text\" className=\"form-control\" />\n                    </th>\n                    <th>\n                        <input type=\"text\" className=\"form-control\" />\n                    </th>\n                    <th colSpan={2}></th>\n                </tr>\n            </thead>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Type</th>\n                    <th>Title</th>\n                    <th>Created At</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {news.map((ns, i) => {\n                    return (\n                        <tr key={i}>\n                            <td>{i + 1}</td>\n                            <td>{ns.type}</td>\n                            <td>{ns.title}</td>\n\n                            <td>{moment(ns.createdAt).format('LLL')}</td>\n                            <td>\n                                <EditButtonRender /> &nbsp;\n                                <DeleteButtonRender />\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    );\n};\nexport default SampleNews;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post-old.js",["1151","1152","1153","1154","1155"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/post-types.js",["1156"],"export const allPostTypes = [\n    { id: 1, value: 'event', label: 'Event' },\n    { id: 2, value: 'project', label: 'Project' },\n    { id: 3, value: 'general', label: 'General Post' },\n    { id: 4, value: 'volunteering', label: 'Volunteering' },\n    { id: 5, value: 'in-kind', label: 'In-Kind' },\n    { id: 6, value: 'advocacy', label: 'Advocacy' },\n    { id: 7, value: '', label: '' },\n];\nexport const allSearchablePostTypes = [\n    { id: 1, value: 'event', label: 'Event' },\n    { id: 2, value: 'project', label: 'Project' },\n    { id: 3, value: 'volunteering', label: 'Volunteering' },\n    { id: 4, value: 'advocacy', label: 'Advocacy' },\n];\nexport const getPostTypeByValue = (value) => {\n    return allPostTypes.filter((type) => type.value === value);\n};\nconst fields = {\n    title: 'title',\n    description: 'description',\n    images: 'images',\n    impactAreas: 'impactAreas',\n    skills: 'skills',\n    startDateTime: 'startDateTime',\n    endDateTime: 'endDateTime',\n    address: 'address',\n    expectedRequiredHours: 'expectedRequiredHours',\n    topNeed: 'topNeed',\n    petitionLink: 'petitionLink',\n    isActive: 'isActive',\n    requiredItems: 'requiredItems',\n    keywords: 'keywords',\n};\nexport const postTypeFields = {\n    event: { title: 1, description: 1, images: 1, impactAreas: 1, startDateTime: 1, endDateTime: 1, address: 1, isActive: 1, keywords: 1 },\n    project: { title: 1, description: 1, images: 1, impactAreas: 1, skills: 1, expectedRequiredHours: 1, startDateTime: 1, endDateTime: 1, address: 1, isActive: 1, topNeed: 1, keywords: 1 },\n    general: { title: 1, description: 1, images: 1, impactAreas: 1, isActive: 1, keywords: 1 },\n    volunteering: { title: 1, description: 1, images: 1, impactAreas: 1, skills: 1, startDateTime: 1, endDateTime: 1, address: 1, isActive: 1, topNeed: 1, keywords: 1 },\n    'in-kind': { title: 1, description: 1, images: 1, impactAreas: 1, requiredItems: 1, isActive: 1, topNeed: 1, keywords: 1 },\n    advocacy: { title: 1, description: 1, images: 1, petitionLink: 1, impactAreas: 1, topNeed: 1, startDateTime: 1, endDateTime: 1, address: 1, isActive: 1, keywords: 1 },\n};\nexport const allPostTypeValues = ['event', 'project', 'general', 'volunteering', 'in-kind', 'advocacy'];\nexport const allPostTypeLabels = ['Event', 'Project', 'General', 'Volunteering', 'In-Kind', 'Advocacy'];\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/icon-render.js",["1157","1158","1159"],"import React from 'react';\nimport { Row, Col, Badge, Image } from 'react-bootstrap';\nimport { ImCheckmark, ImCross } from 'react-icons/im';\nexport const CheckIconRender = () => {\n    return (\n        <h4>\n            <Badge variant=\"success\">\n                <ImCheckmark />\n            </Badge>\n        </h4>\n    );\n};\nexport const CrossIconRender = () => {\n    return (\n        <h4>\n            <Badge variant=\"danger\">\n                <ImCross />\n            </Badge>\n        </h4>\n    );\n};\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/filter-event.js",["1160","1161","1162","1163","1164"],"import React from 'react';\nimport Select from 'react-select';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport { allSearchablePostTypes } from '../../constants/post-types';\nimport DatePicker from 'react-datepicker';\nconst EventFilter = (props) => {\n    console.log(props);\n    return (\n        <>\n            <label>Title</label>\n            <input className=\"form-control\" type=\"text\" value={props.filter.title} onChange={(e) => props.changeFilter('title', e.target.value)} />\n            <br />\n            <label>Post Type</label>\n            <Select onChange={(value) => props.changeFilter('postTypes', value)} isMulti={true} options={allSearchablePostTypes} value={props.filter.postTypes} />\n            <br />\n            <label>Impact Area</label>\n            <Select onChange={(value) => props.changeFilter('impactAreas', value)} isMulti={true} options={props.impactAreas} value={props.filter.impactAreas} />\n            <br />\n            <label>Start Date</label>\n            <DatePicker className=\"form-control custom-date-picker\" onChange={(date) => props.changeFilter('startDate', date)} selected={props.filter.startDate} dateFormat=\"MM/dd/yyyy\" />\n            <label>End Date</label>\n            <DatePicker className=\"form-control custom-date-picker\" onChange={(date) => props.changeFilter('endDate', date)} selected={props.filter.endDate} dateFormat=\"MM/dd/yyyy\" />\n            <br />\n            <br />\n            <label>Address</label>\n            <input className=\"form-control\" type=\"text\" value={props.filter.fullAddress} onChange={(e) => props.changeFilter('fullAddress', e.target.value)} />\n            <br />\n            <label>Keyword</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.keyword}\n                onChange={(e) => {\n                    props.changeFilter('keyword', e.target.value);\n                }}\n            />\n            <div style={{ height: 50 }} />\n            <Button\n                variant=\"outline-danger\"\n                size=\"sm\"\n                onClick={() => {\n                    props.resetFilter();\n                }}\n            >\n                Reset\n            </Button>\n            &nbsp;\n            <Button\n                size=\"sm\"\n                onClick={() => {\n                    props.handleOnApplyFilter();\n                }}\n            >\n                Search\n            </Button>\n            <div style={{ height: 25 }} />\n        </>\n    );\n};\nexport default EventFilter;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/required-item-list.js",["1165","1166"],"import React from 'react';\nimport { Table, Image, Button, Row, Col, Badge } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport { DeleteButtonRender, UpArrowButtonRender, DownArrowButtonRender } from '../form_template/buttons-render';\nconst RequiredItemList = (props) => {\n    const requiredItems = props.requiredItems;\n    if (requiredItems && requiredItems.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Required Items</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"light\" className=\"badge-single \">\n                            Remember: Item without name, requirement and needed by valid date shall not be saved.\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive>\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Requirement</th>\n                            <th>Needed By</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {requiredItems.map((item, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <input\n                                            className=\"form-control image-description-input\"\n                                            type=\"text\"\n                                            onChange={(e) => {\n                                                props.handleItemEdit(i, 'name', e.target.value);\n                                            }}\n                                            value={item.name}\n                                        />\n                                    </td>\n                                    <td>\n                                        <input\n                                            className=\"form-control image-description-input\"\n                                            type=\"text\"\n                                            onChange={(e) => {\n                                                props.handleItemEdit(i, 'requirement', e.target.value);\n                                            }}\n                                            value={item.requirement}\n                                        />\n                                    </td>\n                                    <td>\n                                        <DatePicker\n                                            className=\"form-control custom-date-picker\"\n                                            onChange={(date) => props.handleItemEdit(i, 'neededBy', date)}\n                                            selected={new Date(item.neededBy)}\n                                            dateFormat=\"MM/dd/yyyy\"\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <DeleteButtonRender\n                                            onClick={() => {\n                                                props.handleItemDelete(i);\n                                            }}\n                                        />\n                                        {i > 0 && (\n                                            <>\n                                                &nbsp;\n                                                <UpArrowButtonRender\n                                                    onClick={() => {\n                                                        props.handleItemPosition(i, 'up');\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                        &nbsp;\n                                        {i < requiredItems.length - 1 && (\n                                            <DownArrowButtonRender\n                                                onClick={() => {\n                                                    props.handleItemPosition(i, 'down');\n                                                }}\n                                            />\n                                        )}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Required Item Added</h5>;\n    }\n};\nexport default RequiredItemList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-post-list.js",["1167","1168","1169"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-sub-menu.js",["1170","1171","1172","1173","1174","1175","1176"],"import React from 'react';\nimport { Container, Image, Row, Col, Badge, ListGroup, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport Collapsible from 'react-collapsible';\nimport { RiUserFollowFill, RiUserUnfollowFill } from 'react-icons/ri';\nimport * as RoutePath from '../../constants/route-paths';\nconst SideMenu = (props) => {\n    const organization = props.organization;\n    const activePage = props.activePage;\n    console.log(organization);\n    const follows = props.follows;\n    const RenderListButtonItem = (label, path) => {\n        return (\n            <Button\n                variant={label === activePage ? 'primary' : 'outline-primary'}\n                size=\"sm\"\n                className=\"list-button\"\n                onClick={() => {\n                    props.gotoPage(path);\n                }}\n            >\n                {label}\n            </Button>\n        );\n    };\n    if (organization._id) {\n        const basicInfo = organization.basicInfo;\n        return (\n            <>\n                <Image\n                    className=\"left-image\"\n                    src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultOrganizationProfilePicture}\n                    width=\"100%\"\n                    thumbnail\n                />\n                {follows ? (\n                    <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to unfollow</Tooltip>}>\n                        <Button\n                            size=\"sm\"\n                            variant=\"outline-info\"\n                            className=\"details-following-btn\"\n                            onClick={() => {\n                                props.handleUnfollowClick();\n                            }}\n                        >\n                            <RiUserFollowFill /> Following\n                        </Button>\n                    </OverlayTrigger>\n                ) : (\n                    <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to follow</Tooltip>}>\n                        <Button\n                            size=\"sm\"\n                            variant=\"outline-info\"\n                            className=\"details-follow-btn\"\n                            onClick={() => {\n                                props.handleFollowClick();\n                            }}\n                        >\n                            <RiUserFollowFill /> Follow\n                        </Button>\n                    </OverlayTrigger>\n                )}\n                <hr />\n                {/* <Collapsible trigger=\"MENU\" className=\"special-btn\"> */}\n                {RenderListButtonItem('About', RoutePath.userDetailsPage('organization', organization._id))}\n                {RenderListButtonItem('Impact', RoutePath.postListPageByOrganizationAndPostType(organization._id, 'event'))}\n                {RenderListButtonItem('Message', '')}\n                {RenderListButtonItem('Followers', RoutePath.postListPageByOrganizationAndPostType(organization._id, 'event'))}\n                {RenderListButtonItem('Feed')}\n                {/* </Collapsible> */}\n            </>\n        );\n    } else return <></>;\n};\nexport default SideMenu;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-post-menu.js",["1177","1178","1179","1180","1181"],"import React from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport * as RoutePath from '../../constants/route-paths';\nconst PostTypeMenu = (props) => {\n    const selected = props.selected;\n    const userId = props.userId;\n    //\n    const RenderNavItem = (key, value) => {\n        return (\n            <Nav.Item>\n                <Nav.Link eventKey={key} href={RoutePath.postListPageByOrganizationAndPostType(userId, key)}>\n                    {value}\n                </Nav.Link>\n            </Nav.Item>\n        );\n    };\n    return (\n        <Nav variant=\"pills\" activeKey={selected}>\n            {RenderNavItem('event', 'Event')}\n            {RenderNavItem('general', 'General')}\n            {RenderNavItem('project', 'Project')}\n            {RenderNavItem('in-kind', 'In Kind')}\n            {RenderNavItem('volunteering', 'Volunteering')}\n            {RenderNavItem('advocacy', 'Advocacy')}\n            {/* {RenderListButtonItem('Events', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'event'))}\n                        {RenderListButtonItem('Projects', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'project'))}\n                        {RenderListButtonItem('In-Kind', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'in-kind'))}\n                        {RenderListButtonItem('Volunteering', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'volunteering'))}\n                        {RenderListButtonItem('general', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'general'))}\n                        {RenderListButtonItem('Advocacy', RoutePath.postListPageByOrganizationAndPostType(organization.userId, 'advocacy'))} */}\n        </Nav>\n    );\n};\nexport default PostTypeMenu;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/home/home-post-feeds.js",["1182","1183","1184","1185","1186","1187"],"import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Container, Row, Col, Image, Button, Modal, Badge } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { interestTypes } from '../../constants/interest-types';\nimport { LikeButtonRender, InterestedButtonRender, GoingButtonRender } from '../form_template/buttons-render';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\n\nconst HomePostFeed = (props) => {\n    const userId = props.userId;\n    const [show, setShow] = useState(false);\n\n    const posts = props.allPosts;\n    let interest = {};\n\n    if (posts && posts.length > 0) {\n        return (\n            <>\n                {posts.map((post, i) => {\n                    interest = {};\n                    let filter = post.interests.filter((interest) => interest.userId === userId);\n                    if (filter && filter.length > 0) interest = filter[0];\n                    let liked = post.interests.filter((interest) => interest.liked).length;\n                    let interested = post.interests.filter((interest) => interest.interested).length;\n                    let going = post.interests.filter((interest) => interest.going).length;\n\n                    return (\n                        <div key={i} className=\"justify-text post-box\">\n                            <h6 style={{ color: 'cadetblue' }}>{post.postType === 'general' ? '' : post.postType.toUpperCase()}</h6>\n                            <h5\n                                className=\"link-name\"\n                                onClick={() => {\n                                    props.handleGotoPostDetails(post.postType, post._id);\n                                }}\n                            >\n                                {post.title.toUpperCase()}\n                            </h5>\n\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col sm=\"1\">\n                                            <Avatar\n                                                src={post.organizationProfilePicture ? post.organizationProfilePicture[0] : defaultOrganizationProfilePicture}\n                                                round=\"5px\"\n                                                size=\"50\"\n                                            />\n                                        </Col>\n                                        <Col sm=\"8\">\n                                            <h6\n                                                className=\"link-name\"\n                                                onClick={() => {\n                                                    props.handleGotoOrganizationDetails(post.creatorId);\n                                                }}\n                                            >\n                                                {post.organizationName[0]}\n                                            </h6>\n\n                                            <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {post.impactAreaNames.map((area, i) => {\n                                        return (\n                                            <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\" key={i}>\n                                                {area.label}\n                                            </Badge>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col>\n                                    {post.skillNames.map((skill, i) => {\n                                        return (\n                                            <Badge variant=\"light\" className=\"badge-single-small skill-badge\" key={i}>\n                                                {skill.label}\n                                            </Badge>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                {post.startDateTime && (\n                                    <Col sm={6}>\n                                        From <b>{moment(post.startDateTime).format('LLLL')}</b>\n                                    </Col>\n                                )}\n                                {post.endDateTime && (\n                                    <Col sm={6} className=\"right-align\">\n                                        To <b>{moment(post.endDateTime).format('LLLL')}</b>\n                                    </Col>\n                                )}\n                            </Row>\n                            <br />\n                            <Row\n                                onClick={() => {\n                                    props.handleGotoPostDetails(post.postType, post._id);\n                                }}\n                            >\n                                {post.images && post.images.length > 0 && (\n                                    <Col sm=\"4\" className=\"home-post-image\">\n                                        <Image src={post.images[0].path} thumbnail style={{ width: '100%', height: 'auto' }} />\n                                        {post.images.length > 1 && <div className=\"home-post-image-text\">{post.images.length - 1} More Images</div>}\n                                    </Col>\n                                )}\n                                <Col className=\"justify-text\">\n                                    {post.description && post.description.length > 250 ? (\n                                        <>\n                                            {post.description.substr(0, 250) + '...'} <a href=\"#\">See More</a>{' '}\n                                        </>\n                                    ) : (\n                                        post.description\n                                    )}\n                                    {/*  */}\n                                </Col>\n                            </Row>\n                            <hr />\n\n                            <Row>\n                                <Col>\n                                    {interestTypes[post.postType].like ? (\n                                        interest.liked ? (\n                                            <LikeButtonRender\n                                                complete={true}\n                                                onClick={() => {\n                                                    props.handleCancelLikePost(post._id);\n                                                }}\n                                            />\n                                        ) : (\n                                            <LikeButtonRender\n                                                complete={false}\n                                                onClick={() => {\n                                                    props.handleLikePost(post._id);\n                                                }}\n                                            />\n                                        )\n                                    ) : (\n                                        <></>\n                                    )}\n                                    &nbsp;\n                                    {interestTypes[post.postType].interested ? (\n                                        interest.interested ? (\n                                            <InterestedButtonRender\n                                                complete={true}\n                                                onClick={() => {\n                                                    props.handleCancelInterestedPost(post._id);\n                                                }}\n                                            />\n                                        ) : (\n                                            <InterestedButtonRender\n                                                complete={false}\n                                                onClick={() => {\n                                                    props.handleInterestedPost(post._id);\n                                                }}\n                                            />\n                                        )\n                                    ) : (\n                                        <></>\n                                    )}\n                                    &nbsp;\n                                    {interestTypes[post.postType].going ? (\n                                        interest.going ? (\n                                            <GoingButtonRender\n                                                complete={true}\n                                                onClick={() => {\n                                                    props.handleCancelGoingPost(post._id);\n                                                }}\n                                            />\n                                        ) : (\n                                            <GoingButtonRender\n                                                complete={false}\n                                                onClick={() => {\n                                                    props.handleGoingPost(post._id);\n                                                }}\n                                            />\n                                        )\n                                    ) : (\n                                        <></>\n                                    )}\n                                    &nbsp;\n                                </Col>\n                                <Col className=\"right-align\">\n                                    {interestTypes[post.postType].like && liked > 0 && (\n                                        <Button\n                                            variant=\"outline-primary\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleClickCommittedButtons(post._id, 'liked');\n                                            }}\n                                        >\n                                            {liked} Liked\n                                        </Button>\n                                    )}\n                                    &nbsp;\n                                    {interestTypes[post.postType].interested && interested > 0 && (\n                                        <Button\n                                            variant=\"outline-secondary\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleClickCommittedButtons(post._id, 'interested');\n                                            }}\n                                        >\n                                            {interested} Interested\n                                        </Button>\n                                    )}\n                                    &nbsp;\n                                    {interestTypes[post.postType].going && going > 0 && (\n                                        <Button\n                                            variant=\"outline-info\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleClickCommittedButtons(post._id, 'going');\n                                            }}\n                                        >\n                                            {going} Going\n                                        </Button>\n                                    )}\n                                </Col>\n                            </Row>\n                        </div>\n                    );\n                })}\n            </>\n        );\n    } else return <h4>No Posts Found</h4>;\n};\nexport default HomePostFeed;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/home/home-suggestions.js",["1188","1189","1190","1191","1192"],"import React from 'react';\nimport moment from 'moment';\nimport { Container, Badge, Row, Col, Image, Button, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FollowButtonRender } from '../../components/form_template/buttons-render';\nimport { BsFillExclamationDiamondFill } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport { CSSTransition } from 'react-transition-group';\nimport { RiUserFollowFill, RiUserUnfollowFill } from 'react-icons/ri';\nconst HomeSuggestions = (props) => {\n    const organizations = props.allOrganizations;\n    console.log('🚀 ~ file: home-suggestions.js ~ line 11 ~ HomeSuggestions ~ organizations', organizations);\n    const cards = props.cards;\n    const popover = (\n        <Popover id=\"popover-basic\">\n            <Popover.Title as=\"h4\">Suggestions</Popover.Title>\n            <Popover.Content>The suggestions is based on your profile informations such as location, impact areas, etc.</Popover.Content>\n        </Popover>\n    );\n\n    return (\n        <div>\n            <Row>\n                <Col sm=\"10\">\n                    <h6>\n                        Suggestions for you.\n                        {/* </Col>\n                <Col> */}\n                        <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                            <a>\n                                <BsFillExclamationDiamondFill style={{ marginBottom: 5 }} />\n                            </a>\n                            {/* <Button variant=\"light\" size=\"sm\" style={{ padding: 0, margin: 0 }}>\n                        \n                            <BsFillExclamationDiamondFill />\n                        </Button> */}\n                        </OverlayTrigger>\n                    </h6>\n                    {/* <small>Based on your profile</small> */}\n                </Col>\n            </Row>\n            <br />\n            {organizations.map((org, i) => {\n                return (\n                    <CSSTransition\n                        in={cards[org._id]}\n                        timeout={{\n                            enter: 0,\n                            exit: 2000,\n                        }}\n                        unmountOnExit\n                        classNames=\"my-node\"\n                        key={i}\n                    >\n                        <div className=\"post-box\">\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col sm=\"2\">\n                                            <Avatar src={org.profilePicture ? org.profilePicture : defaultOrganizationProfilePicture} round=\"5px\" size={30} />\n                                        </Col>\n                                        <Col sm=\"10\">\n                                            <Link to={`/organization/details/${org._id}`}>\n                                                {' '}\n                                                <h6>{org.name}</h6>\n                                            </Link>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {org.organizationTypes &&\n                                        org.organizationTypes.length > 0 &&\n                                        org.organizationTypes.map((type, i) => {\n                                            return (\n                                                <Badge variant=\"info\" className=\"badge-single-small\" key={i}>\n                                                    {type.label}\n                                                </Badge>\n                                            );\n                                        })}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {org.impactAreas &&\n                                        org.impactAreas.length > 0 &&\n                                        org.impactAreas.map((area, i) => {\n                                            return (\n                                                <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\" key={i}>\n                                                    {area.label}\n                                                </Badge>\n                                            );\n                                        })}\n                                </Col>\n                            </Row>\n                            {org.address ? (\n                                <Row>\n                                    <Col>\n                                        <small>{org.address.street1 + ', ' + org.address.street2 + ', ' + org.address.city + ', ' + org.address.code}</small>\n                                    </Col>\n                                </Row>\n                            ) : (\n                                <></>\n                            )}\n                            <br />\n                            <Row>\n                                <Col>\n                                    {/* <FollowButtonRender />\n                                    &nbsp; */}\n                                    {cards[org._id] ? (\n                                        <FollowButtonRender\n                                            className=\"details-follow-btn\"\n                                            onClick={() => {\n                                                props.handleFollowOrganization(org._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <Button\n                                            size=\"sm\"\n                                            variant=\"outline-info\"\n                                            className=\"details-following-btn\"\n                                            onClick={() => {\n                                                props.handleUnfollowClick();\n                                            }}\n                                        >\n                                            <RiUserFollowFill /> Following\n                                        </Button>\n                                    )}\n                                </Col>\n                            </Row>\n                        </div>\n                    </CSSTransition>\n                );\n            })}\n        </div>\n    );\n};\nexport default HomeSuggestions;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/notification-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/notification-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/notification-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/notification/manage-notifications.js",["1193"],"import React, { useEffect, useState } from 'react';\nimport NotificationList from '../../components/notification/notification-list';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllNotifications, updateNotification, updateNotificationLocal } from '../../actions/notification-action';\nimport * as RoutePaths from '../../constants/route-paths';\nconst ManageNotifications = (props) => {\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllNotifications(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n\n    const handleGoToNotificationDetails = (notification) => {\n        const type = notification.type;\n        if (['like', 'interest', 'going'].includes(type)) {\n            props.history.push(RoutePaths.postDetailsPage(notification.postId.postType, notification.postId._id));\n        } else if (type === 'friend-request') {\n            props.history.push(RoutePaths.communityRequestListPage);\n        } else if (type === 'friend-accept') {\n            props.history.push(RoutePaths.communityFriendListPage);\n        } else if (type === 'follow') {\n            props.history.push(RoutePaths.communityFollowerListPage);\n        } else if (type === 'membership-request') {\n        } else if (type === 'membership-accept') {\n        } else {\n            props.history.push(RoutePaths.userDetailsPage(notification.userType, notification.senderId));\n        }\n        const notificationId = notification._id;\n        props.dispatch(updateNotification(notificationId, { isRead: true }));\n        props.dispatch(updateNotificationLocal(notificationId, true));\n    };\n\n    const handleNotificationRead = (notificationId) => {\n        props.dispatch(updateNotification(notificationId, { isRead: true }));\n        props.dispatch(updateNotificationLocal(notificationId, true));\n    };\n    const handleNotificationUnread = (notificationId) => {\n        props.dispatch(updateNotification(notificationId, { isRead: false }));\n        props.dispatch(updateNotificationLocal(notificationId, false));\n    };\n\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <NotificationList\n                allNotifications={props.getAllNotificationsResponse.success ? props.getAllNotificationsResponse.notifications : []}\n                handleGoToNotificationDetails={handleGoToNotificationDetails}\n                handleNotificationRead={handleNotificationRead}\n                handleNotificationUnread={handleNotificationUnread}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllNotificationsResponse = state.Notification.getAllNotifications;\n\n    return {\n        getAllNotificationsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageNotifications);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/notification/notification-list.js",["1194","1195","1196"],"import React, { useState } from 'react';\nimport { Container, Row, Col, ListGroup, Image, Button, Modal } from 'react-bootstrap';\nimport { getTitleByType } from '../../actions/notification-action';\nimport { ReadButtonRender, UnreadButtonRender, DeleteButtonRender } from '../form_template/buttons-render';\nimport moment from 'moment';\nconst NotificationList = (props) => {\n    const allNotifications = props.allNotifications;\n    console.log('🚀 ~ file: notification-list.js ~ line 8 ~ NotificationList ~ allNotifications', allNotifications);\n\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <Row>\n                        <Col sm=\"6\">\n                            {allNotifications && allNotifications.length > 0 ? (\n                                <h4>{allNotifications.length} Notifications Found</h4>\n                            ) : (\n                                <h4>No Notification Found</h4>\n                            )}\n                        </Col>\n                    </Row>\n                    <br />\n                    {allNotifications &&\n                        allNotifications.length > 0 &&\n                        allNotifications.map((notification, i) => {\n                            const sender = notification.senders[0].userId;\n                            const userType = sender.userType;\n                            let name = '';\n                            if (userType === 'individual') name = sender.basicInfo.firstName + ' ' + sender.basicInfo.lastName;\n                            else if (userType === 'organization') name = sender.basicInfo.name;\n                            const profilePicture = sender.basicInfo.profilePicture;\n                            const more = notification.senders.length - 1;\n                            const postType = notification.postId && notification.postId.postType ? notification.postId.postType : '';\n                            return (\n                                <ListGroup horizontal=\"xl\" className=\"my-1\" key={i} style={{ width: '100%' }}>\n                                    {/* <ListGroup.Item className=\"col-sm-2\"></ListGroup.Item> */}\n                                    <ListGroup.Item\n                                        className=\"col-sm-8\"\n                                        action\n                                        onClick={() => {\n                                            props.handleGoToNotificationDetails(notification);\n                                        }}\n                                    >\n                                        <Row>\n                                            <Col sm=\"2\">\n                                                <Image src={profilePicture} width=\"40\" thumbnail className=\"notification-image\" />\n                                            </Col>\n                                            <Col sm=\"10\">\n                                                <h6>\n                                                    {notification.isRead ? (\n                                                        getTitleByType(notification.type, name, more, postType)\n                                                    ) : (\n                                                        <b>{getTitleByType(notification.type, name, more, postType)}</b>\n                                                    )}\n                                                </h6>\n                                                {notification.postId && notification.postId.title}\n                                                <br />\n                                                <small>{moment(notification.createdAt).format('LLLL')}</small>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item className=\"col-sm-2\">\n                                        {notification.isRead ? (\n                                            <UnreadButtonRender\n                                                onClick={() => {\n                                                    props.handleNotificationUnread(notification._id);\n                                                }}\n                                            />\n                                        ) : (\n                                            <ReadButtonRender\n                                                onClick={() => {\n                                                    props.handleNotificationRead(notification._id);\n                                                }}\n                                            />\n                                        )}\n                                        &nbsp;\n                                        <DeleteButtonRender />\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            );\n                        })}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default NotificationList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/notification-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/sound-player.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/auth-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/password-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/user-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/profile-picture-changer.js",["1197","1198","1199"],"import React, { useState, useEffect } from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport Dropzone from 'react-dropzone';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\nimport { Button, Modal, Row, Col, Container } from 'react-bootstrap';\nconst ProfilePictureUploader = (props) => {\n    const [image, setImage] = useState(props.profilePicture);\n    const [scaleValue, setScaleValue] = useState(1);\n    const [sliderValue, setSliderValue] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [editor, setEditor] = useState({});\n    const fileChangeHandler = (event) => {\n        const file = event.target.files[0];\n        setImage(file);\n    };\n    const handleDrop = (dropped) => {\n        setImage(dropped[0]);\n    };\n    const handleSliderChange = (value) => {\n        setScaleValue(3 * (value / 300) + 1);\n        setSliderValue(value);\n    };\n    const onClickSave = () => {\n        console.log(image);\n        if (editor) {\n            console.log('🚀 ~ file: profile-picture-changer.js ~ line 27 ~ onClickSave ~ editor', editor);\n            const canvasScaled = editor.getImageScaledToCanvas();\n            const imageFile = canvasScaled.toDataURL();\n            console.log('🚀 ~ file: profile-picture-changer.js ~ line 30 ~ onClickSave ~ imageFile', imageFile);\n            props.setProfilePicture(imageFile);\n        }\n    };\n    const setEditorRef = (editor) => {\n        setEditor(editor);\n    };\n    return (\n        <div className=\"right-align\">\n            <Button\n                type=\"button\"\n                variant=\"outline-primary\"\n                size=\"sm\"\n                onClick={() => {\n                    setModal(true);\n                }}\n            >\n                Upload Profile Picture\n            </Button>\n            <Modal\n                className=\"\"\n                style={{ zIndex: 10000 }}\n                show={modal}\n                onHide={() => {\n                    setModal(false);\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Select Profile Picture</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={fileChangeHandler} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        {image && (\n                            <Row>\n                                <Col>\n                                    <AvatarEditor\n                                        crossOrigin=\"anonymous\"\n                                        ref={setEditorRef}\n                                        image={image}\n                                        width={400}\n                                        height={400}\n                                        border={0}\n                                        color={[255, 255, 255, 0.6]} // RGBA\n                                        scale={scaleValue}\n                                        rotate={0}\n                                    />\n                                </Col>\n                            </Row>\n                        )}\n                        {image && (\n                            <Row>\n                                <Col>\n                                    <Slider value={sliderValue} min={0} max={300} orientation=\"horizontal\" onChange={handleSliderChange} />\n                                </Col>\n                            </Row>\n                        )}\n                        <Modal.Footer>\n                            {image && (\n                                <Row>\n                                    <Col>\n                                        <Button\n                                            type=\"button\"\n                                            size=\"sm\"\n                                            variant=\"outline-success\"\n                                            onClick={() => {\n                                                setModal(false);\n                                                onClickSave(props);\n                                            }}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            )}\n                        </Modal.Footer>\n                    </Container>\n                </Modal.Body>\n            </Modal>\n        </div>\n    );\n};\nexport default ProfilePictureUploader;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/membership-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/membership-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/membership-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/membership-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-membership.js",["1200","1201","1202","1203","1204"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { NotificationManager } from 'react-notifications';\nimport { individualCompletePrivacyPage, individualCompleteSuggestionsPage } from '../../constants/route-paths';\nimport { getAllMemberships, createMembership, updateMembership, deleteMembership, acceptMembership, rejectMembership } from '../../actions/membership-action';\nimport MembershipForm from '../../components/membership/membership-form';\nimport { searchUsersByName } from '../../actions';\nimport AsyncSelect from 'react-select/async';\nconst Membership = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [userSearchText, setUserSearchText] = useState('');\n    const [membership, setMembership] = useState({\n        organizationId: '',\n        membershipType: '',\n        startTime: {\n            month: 1,\n            year: 2021,\n        },\n        endTime: {\n            month: 1,\n            year: 2021,\n        },\n        isCurrent: false,\n    });\n    const getUsers = async (searchText) => {\n        if (searchText.length > 2) {\n            const users = await searchUsersByName(searchText).then((response) => {\n                if (response.success) {\n                    return response.users;\n                } else return [];\n            });\n            if (users && users.length > 0) {\n                let organizations = [];\n                if (users[0].userType === 'organization') {\n                    organizations = users[0].users.slice(0, 20);\n                } else {\n                    organizations = users[1].users.slice(0, 20);\n                }\n                organizations = organizations.map((org) => {\n                    return {\n                        value: org._id,\n                        label: org.name,\n                    };\n                });\n                console.log('🚀 ~ file: individual-membership.js ~ line 43 ~ newPromise ~ organizations', organizations);\n                return organizations;\n            } else return [{ value: 1, label: 'Not found' }];\n        } else return [];\n    };\n    const handleAcceptMembership = (membershipId) => {\n        props.dispatch(acceptMembership(membershipId));\n    };\n    const handleRejectMembership = (membershipId) => {\n        props.dispatch(rejectMembership(membershipId));\n    };\n    const handleDeleteMembership = (membershipId) => {\n        props.dispatch(deleteMembership(membershipId));\n    };\n    const handleChangeSearchText = async (text) => {\n        console.log(text);\n        setUserSearchText(text);\n    };\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log('Calling list');\n            props.dispatch(getAllMemberships({ individualId: user._id }));\n        }\n    };\n\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth, props.setMembershipResponse, props.acceptMembershipResponse, props.rejectMembershipResponse, props.deleteMembershipResponse]);\n\n    const handleMembershipInfoChange = (name, value) => {\n        console.log('🚀 ~ file: individual-membership.js ~ line 73 ~ handleMembershipInfoChange ~ name, value', name, value);\n        let membership_ = membership;\n        if (name === 'userId') {\n            membership_['organizationId'] = value;\n        } else if (name === 'membershipType') {\n            membership_['membershipType'] = value;\n        } else if (name === 'startTime') {\n            const month = new Date(value).getMonth();\n            const year = new Date(value).getFullYear();\n            membership_['startTime'] = {\n                month,\n                year,\n            };\n        } else if (name === 'endTime') {\n            const month = new Date(value).getMonth();\n            const year = new Date(value).getFullYear();\n            membership_['endTime'] = {\n                month,\n                year,\n            };\n        } else if (name === 'isCurrent') {\n            membership_['isCurrent'] = value;\n        }\n        setMembership({ ...membership_ });\n    };\n\n    const submitMembership = (mode) => {\n        const membership_ = membership;\n        membership_['individualId'] = props.auth.user._id;\n        membership_['requestedBy'] = 'individual';\n        if (mode === 'create') {\n            props.dispatch(createMembership(membership_));\n        } else {\n            props.dispatch(updateMembership(membership._id, membership_));\n        }\n    };\n\n    const handleBackButton = () => {\n        props.history.push(individualCompletePrivacyPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(individualCompleteSuggestionsPage);\n    };\n    const promiseOptions = (inputValue) =>\n        new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(getUsers(inputValue));\n            }, 1000);\n        });\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <MembershipForm\n                editMode={editMode}\n                membership={membership}\n                handleMembershipInfoChange={handleMembershipInfoChange}\n                userSearchText={userSearchText}\n                handleChangeSearchText={handleChangeSearchText}\n                users={users}\n                promiseOptions={promiseOptions}\n                submitMembership={submitMembership}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n                memberships={props.getAllMembershipResponse.success ? props.getAllMembershipResponse.memberships : []}\n                userType=\"individual\"\n                handleAcceptMembership={handleAcceptMembership}\n                handleRejectMembership={handleRejectMembership}\n                handleDeleteMembership={handleDeleteMembership}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    console.log('State', state);\n    const getAllMembershipResponse = state.Membership.getAllMemberships;\n    const setMembershipResponse = state.Membership.setMembership;\n    const acceptMembershipResponse = state.Membership.acceptMembership;\n    const rejectMembershipResponse = state.Membership.rejectMembership;\n    const deleteMembershipResponse = state.Membership.deleteMembership;\n    return { getAllMembershipResponse, setMembershipResponse, acceptMembershipResponse, rejectMembershipResponse, deleteMembershipResponse };\n};\nexport default connect(mapStateToProps, null)(Membership);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-modal.js",["1205","1206","1207","1208","1209","1210","1211"],"import React, { useState } from 'react';\nimport { Button, Row, Col, Image, Container, Table, Modal } from 'react-bootstrap';\nimport { DeleteButtonRender, EditButtonRender } from '../form_template/buttons-render';\nimport { allMembershipTypes, getMembershipByValue } from '../../constants/membership-types';\nimport Select from 'react-select';\nimport DatePicker from 'react-datepicker';\nimport AsyncSelect from 'react-select/async';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst MembershipModal = (props) => {\n    const [startTime, setStartTime] = useState(new Date());\n    const [endTime, setEndTime] = useState(new Date());\n    const membership = props.membership;\n    const membershipModal = props.membershipModal;\n    const setMembershipModal = props.setMembershipModal;\n    const mode = props.mode;\n    const options = props.users.map((user) => {\n        return {\n            value: user._id,\n            label: (\n                <Row>\n                    <Col sm={1}>\n                        <img src={user.profilePicture ? user.profilePicture : defaultOrganizationProfilePicture} height=\"30px\" width=\"30px\" />\n                    </Col>\n                    <Col>{user.name}</Col>\n                </Row>\n            ),\n        };\n    });\n\n    return (\n        <Modal\n            style={{ zIndex: 10000 }}\n            show={membershipModal}\n            onHide={() => {\n                setMembershipModal(false);\n            }}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Add New Membership Information</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Container>\n                    <Row>\n                        <Col>\n                            <label>Organization Name</label>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col style={{ zIndex: 400 }}>\n                            <AsyncSelect\n                                placeholder=\"Type at least 3 letter\"\n                                cacheOptions\n                                loadOptions={props.promiseOptions}\n                                onChange={(value) => {\n                                    props.handleMembershipInfoChange('userId', value.value);\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col>\n                            <label>Membership type</label>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col style={{ zIndex: 300 }}>\n                            <Select\n                                options={allMembershipTypes}\n                                onChange={(value) => {\n                                    props.handleMembershipInfoChange('membershipType', value.value);\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col>\n                            <label>Start Time</label>\n                            <br />\n                            <br />\n                        </Col>\n\n                        <Col style={{ zIndex: 200 }}>\n                            <DatePicker\n                                className=\"form-control\"\n                                selected={startTime}\n                                onChange={(date) => {\n                                    setStartTime(date);\n                                    props.handleMembershipInfoChange('startTime', date);\n                                }}\n                                dateFormat=\"MM/yyyy\"\n                                showMonthYearPicker\n                                showFullMonthYearPicker\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row class=\"form-group\">\n                        <Col sm={6}>Is Current Member?</Col>\n                        <Col>\n                            <div class=\"custom-control custom-switch\" style={{ zIndex: 100 }}>\n                                <input\n                                    type=\"checkbox\"\n                                    class=\"custom-control-input\"\n                                    id=\"customSwitch1\"\n                                    checked={membership.isCurrent}\n                                    onChange={() => {\n                                        props.handleMembershipInfoChange('isCurrent', !membership.isCurrent);\n                                    }}\n                                />\n                                <label class=\"custom-control-label\" for=\"customSwitch1\"></label>\n                            </div>\n                        </Col>\n                    </Row>\n                    <br />\n                    {!membership.isCurrent && (\n                        <Row>\n                            <Col>\n                                <label>End Time</label>\n                            </Col>\n\n                            <Col>\n                                <DatePicker\n                                    className=\"form-control\"\n                                    selected={endTime}\n                                    onChange={(date) => {\n                                        setEndTime(date);\n                                        props.handleMembershipInfoChange('endTime', date);\n                                    }}\n                                    dateFormat=\"MM/yyyy\"\n                                    showMonthYearPicker\n                                    showFullMonthYearPicker\n                                />\n                            </Col>\n                        </Row>\n                    )}\n                    <br />\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button\n                    variant=\"outline-danger\"\n                    size=\"sm\"\n                    onClick={() => {\n                        setMembershipModal(false);\n                    }}\n                >\n                    Cancel\n                </Button>\n                {mode === 'create' ? (\n                    <Button\n                        variant=\"outline-success\"\n                        size=\"sm\"\n                        onClick={() => {\n                            props.submitMembership('create');\n                            setMembershipModal(false);\n                        }}\n                    >\n                        Create\n                    </Button>\n                ) : (\n                    <Button\n                        variant=\"outline-success\"\n                        size=\"sm\"\n                        onClick={() => {\n                            props.submitMembership('edit');\n                            setMembershipModal(false);\n                        }}\n                    >\n                        Update\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n};\nexport default MembershipModal;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-list.js",["1212"],"import React from 'react';\nimport { DeleteButtonRender, EditButtonRender, AcceptButtonRender, RejectButtonRender } from '../form_template/buttons-render';\nimport { getMembershipByValue } from '../../constants/membership-types';\nimport { defaultOrganizationProfilePicture, defaultIndividualProfilePicture } from '../../constants/default-images';\nimport { getMembershipStatusByValue } from '../../constants/membership-types';\nimport { Table, Image, Badge } from 'react-bootstrap';\nconst TimeRender = (time) => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return `${months[time.month]}-${time.year}`;\n};\nconst MembershipList = (props) => {\n    const memberships = props.memberships;\n    const userType = props.userType;\n    console.log('🚀 ~ file: membership-list.js ~ line 12 ~ MembershipList ~ memberships', memberships);\n    return (\n        <Table>\n            <thead></thead>\n            <tbody>\n                {memberships.map((member, i) => {\n                    let name = '';\n                    let profilePicture = '';\n                    if (userType === 'individual') {\n                        name = member.organizationName;\n                        profilePicture = member.organizationProfilePicture ? member.organizationProfilePicture : defaultOrganizationProfilePicture;\n                    } else if (userType === 'organization') {\n                        name = member.individualFirstName + ' ' + member.individualLastName;\n                        profilePicture = member.individualProfilePicture ? member.individualProfilePicture : defaultIndividualProfilePicture;\n                    }\n                    return (\n                        <tr key={i}>\n                            <td>\n                                <Image src={profilePicture} style={{ height: 32, width: 32 }} thumbnail />\n                            </td>\n                            <td>{name}</td>\n                            <td>{getMembershipStatusByValue(member.status)}</td>\n                            <td>{getMembershipByValue(member.membershipType)}</td>\n                            <td>{TimeRender(member.startTime)}</td>\n                            <td>{member.isCurrent}</td>\n                            {member.isCurrent ? (\n                                <td>\n                                    <Badge variant=\"primary\">Current Member</Badge>\n                                </td>\n                            ) : (\n                                <td>{TimeRender(member.endTime)}</td>\n                            )}\n                            <td>\n                                {member.status === 'pending' && member.requestedBy !== userType ? (\n                                    <>\n                                        <AcceptButtonRender\n                                            onClick={() => {\n                                                props.handleAcceptMembership(member._id);\n                                            }}\n                                        />\n                                        &nbsp;\n                                        <RejectButtonRender\n                                            onClick={() => {\n                                                props.handleRejectMembership(member._id);\n                                            }}\n                                        />\n                                    </>\n                                ) : (\n                                    <></>\n                                )}\n                            </td>\n                            <td>\n                                {/* <EditButtonRender />\n                                &nbsp; */}\n                                <DeleteButtonRender\n                                    onClick={() => {\n                                        props.handleDeleteMembership(member._id);\n                                    }}\n                                />\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    );\n};\nexport default MembershipList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-suggestions.js",["1213","1214","1215"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { NotificationManager } from 'react-notifications';\nimport { individualCompleteMembership, homePage, userDetailsPage } from '../../constants/route-paths';\nimport { getAllSuggestedUsers } from '../../actions/user-action';\nimport SuggestionList from '../../components/individual/individual-suggestion-list';\nimport { followUser } from '../../actions/follow-action';\nconst Suggestions = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [cards, setCards] = useState({});\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            const user = props.auth.user;\n            setUserId(user._id);\n            props.dispatch(getAllSuggestedUsers(user._id, 'organization', 20));\n            setLoading(false);\n        };\n\n        getInitialInfo(props.match.params.postId);\n    }, []);\n    useEffect(() => {\n        const { success } = props.OrganizationSuggestionResponse;\n        if (success) {\n            let cards = {};\n            const users = props.OrganizationSuggestionResponse.users;\n            for (let i = 0; i < users.length; i++) {\n                cards[users[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.OrganizationSuggestionResponse]);\n    const gotoOrganizationDetails = (userId) => {\n        props.history.push(userDetailsPage('organization', userId));\n    };\n    const handleFollowOrganization = (organizationId) => {\n        let cards_ = cards;\n        cards_[organizationId] = false;\n        setCards({ ...cards_ });\n        console.log({ followerId: userId, followingId: organizationId });\n        props.dispatch(followUser({ followerId: userId, followingId: organizationId }));\n    };\n    const handleFinishButton = () => {\n        props.history.push(homePage);\n        window.scrollTo(0, 0);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <SuggestionList\n                gotoOrganizationDetails={gotoOrganizationDetails}\n                handleFinishButton={handleFinishButton}\n                allOrganizations={\n                    props.OrganizationSuggestionResponse && props.OrganizationSuggestionResponse.success ? props.OrganizationSuggestionResponse.users : []\n                }\n                cards={cards}\n                handleFollowOrganization={handleFollowOrganization}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const OrganizationSuggestionResponse = state.User.getAllSuggestedUsers;\n    console.log('🚀 ~ file: individual-suggestions.js ~ line 37 ~ mapStateToProps ~ OrganizationSuggestionResponse', OrganizationSuggestionResponse);\n    return { OrganizationSuggestionResponse };\n};\nexport default connect(mapStateToProps, null)(Suggestions);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-suggestion-list.js",["1216"],"import React from 'react';\nimport { Container, Row, Col, ProgressBar, Button, Card, CardColumns, Badge } from 'react-bootstrap';\nimport { individualHeaders, totalIndividualStep } from '../../constants/step-headers';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FollowButtonRender } from '../../components/form_template/buttons-render';\nimport { RiUserFollowFill, RiUserUnfollowFill } from 'react-icons/ri';\nimport { CSSTransition } from 'react-transition-group';\nconst DescriptionRender = (description) => {\n    if (description) {\n        if (description.length < 101) return description;\n        else return description.substr(0, 100) + '...';\n    } else return 'No description available';\n};\nconst RenderFinishButton = ({ handleFinishButton }) => {\n    return (\n        <Row>\n            <Col className=\"center-align\">\n                <Button\n                    className=\"btn signUpBtn\"\n                    onClick={() => {\n                        handleFinishButton();\n                    }}\n                >\n                    Finish\n                </Button>\n            </Col>\n        </Row>\n    );\n};\nconst SuggestionList = (props) => {\n    const organizations = props.allOrganizations.slice(0, 20);\n    const cards = props.cards;\n    console.log('🚀 ~ file: individual-suggestion-list.js ~ line 31 ~ SuggestionList ~ cards', cards);\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <br />\n                    <p>\n                        Step {individualHeaders[6].stepNo} of {totalIndividualStep}\n                    </p>\n                    <ProgressBar now={individualHeaders[6].percent} />\n                    <br />\n                    <h4>{individualHeaders[6].header}</h4>\n\n                    <br />\n                    <RenderFinishButton handleFinishButton={props.handleFinishButton} />\n                    <br />\n                    <CardColumns>\n                        {organizations &&\n                            organizations.length > 0 &&\n                            organizations.map((org, i) => {\n                                return (\n                                    <CSSTransition\n                                        in={cards[org._id]}\n                                        timeout={{\n                                            enter: 0,\n                                            exit: 2000,\n                                        }}\n                                        unmountOnExit\n                                        classNames=\"my-node\"\n                                        key={i}\n                                    >\n                                        <Card className=\"special-btn special-card\">\n                                            <Card.Img\n                                                variant=\"top\"\n                                                src={org.profilePicture ? org.profilePicture : defaultOrganizationProfilePicture}\n                                                alt=\"No Image Found\"\n                                                className=\"organization-list-image\"\n                                                onClick={() => {\n                                                    props.gotoOrganizationDetails(org._id);\n                                                }}\n                                            />\n                                            <Card.Body\n                                                onClick={() => {\n                                                    props.gotoOrganizationDetails(org._id);\n                                                }}\n                                            >\n                                                <Card.Text className=\"left-text bold-text\">{org.name}</Card.Text>\n\n                                                {org.organizationTypes &&\n                                                    org.organizationTypes.length > 0 &&\n                                                    org.organizationTypes.map((type, i) => {\n                                                        return (\n                                                            <Badge variant=\"info\" className=\"badge-single-small\" key={i}>\n                                                                {type.label}\n                                                            </Badge>\n                                                        );\n                                                    })}\n\n                                                <Card.Text className=\"justify-text\">\n                                                    <small>{DescriptionRender(org.description)}</small>\n                                                </Card.Text>\n\n                                                <Card.Text>\n                                                    {org.impactAreas &&\n                                                        org.impactAreas.length > 0 &&\n                                                        org.impactAreas.map((area, i) => {\n                                                            return (\n                                                                <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\" key={i}>\n                                                                    {area.label}\n                                                                </Badge>\n                                                            );\n                                                        })}\n                                                </Card.Text>\n                                                <Card.Text>\n                                                    {org.address ? (\n                                                        <small>\n                                                            {org.address.street1 + ' ' + org.address.street2 + ' ' + org.address.city + ' ' + org.address.code}\n                                                        </small>\n                                                    ) : (\n                                                        <></>\n                                                    )}\n                                                </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                {cards[org._id] ? (\n                                                    <FollowButtonRender\n                                                        className=\"details-follow-btn\"\n                                                        onClick={() => {\n                                                            props.handleFollowOrganization(org._id);\n                                                        }}\n                                                    />\n                                                ) : (\n                                                    <Button\n                                                        size=\"sm\"\n                                                        variant=\"outline-info\"\n                                                        className=\"details-following-btn\"\n                                                        onClick={() => {\n                                                            props.handleUnfollowClick();\n                                                        }}\n                                                    >\n                                                        <RiUserFollowFill /> Following\n                                                    </Button>\n                                                )}\n                                            </Card.Footer>\n                                        </Card>\n                                    </CSSTransition>\n                                );\n                            })}\n                    </CardColumns>\n\n                    <div style={{ height: 100 }} />\n                    <RenderFinishButton handleFinishButton={props.handleFinishButton} />\n                    <br />\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default SuggestionList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/committed-persons-list.js",["1217"],"import React, { useState } from 'react';\nimport { Container, Row, Col, Modal, Image } from 'react-bootstrap';\nimport LoadingAnim from '../form_template/loading-anim';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst CommittedPersonsList = (props) => {\n    const committedList = props.committedList;\n    const committedLoading = props.committedLoading;\n    return (\n        <Modal\n            style={{ zIndex: 10000 }}\n            show={props.committedModal}\n            onHide={() => {\n                props.setCommittedModal(false);\n            }}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{committedList.length} Persons Liked this post</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {committedLoading && <LoadingAnim />}\n                {committedList &&\n                    committedList.length > 0 &&\n                    committedList.map((person, i) => {\n                        let name = '';\n                        let profilePicture = '';\n                        if (person.userType === 'individual') {\n                            name = person.userFirstName + ' ' + person.userLastName;\n                            profilePicture = person.userProfilePicture ? person.userProfilePicture : defaultIndividualProfilePicture;\n                        } else if (person.userType === 'organization') {\n                            name = person.userName;\n                            profilePicture = person.userProfilePicture ? person.userProfilePicture : defaultOrganizationProfilePicture;\n                        }\n                        return (\n                            <Container className=\"ppl-liked-list\" key={i}>\n                                <Row>\n                                    <Col sm={2}>\n                                        <Image src={profilePicture} thumbnail style={{ width: '100%', height: '100%' }} />\n                                    </Col>\n                                    <Col sm={6} className=\"v-middle\">\n                                        {name}\n                                    </Col>\n                                </Row>\n                            </Container>\n                        );\n                    })}\n            </Modal.Body>\n        </Modal>\n    );\n};\nexport default CommittedPersonsList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-membership.js",["1218","1219","1220","1221"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport { NotificationManager } from 'react-notifications';\nimport { organizationCompleteServiceInfoPage, homePage } from '../../constants/route-paths';\nimport { getAllMemberships, createMembership, updateMembership, deleteMembership, acceptMembership, rejectMembership } from '../../actions/membership-action';\nimport MembershipForm from '../../components/membership/membership-form';\nimport { searchUsersByName } from '../../actions';\n\nconst Membership = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [userSearchText, setUserSearchText] = useState('');\n    const [membership, setMembership] = useState({\n        individualId: '',\n        membershipType: '',\n        startTime: {\n            month: 1,\n            year: 2021,\n        },\n        endTime: {\n            month: 1,\n            year: 2021,\n        },\n        isCurrent: false,\n    });\n    const getUsers = async (searchText) => {\n        if (searchText.length > 2) {\n            const users = await searchUsersByName(searchText).then((response) => {\n                if (response.success) {\n                    return response.users;\n                } else return [];\n            });\n            if (users && users.length > 0) {\n                let individuals = [];\n                if (users[0].userType === 'individual') {\n                    individuals = users[0].users.slice(0, 20);\n                } else {\n                    individuals = users[1].users.slice(0, 20);\n                }\n                individuals = individuals.map((ind) => {\n                    return {\n                        value: ind._id,\n                        label: ind.firstName + ' ' + ind.lastName,\n                    };\n                });\n                console.log('🚀 ~ file: individual-membership.js ~ line 43 ~ newPromise ~ organizations', individuals);\n                return individuals;\n            } else return [{ value: 1, label: 'Not found' }];\n        } else return [];\n    };\n    const handleAcceptMembership = (membershipId) => {\n        props.dispatch(acceptMembership(membershipId));\n    };\n    const handleRejectMembership = (membershipId) => {\n        props.dispatch(rejectMembership(membershipId));\n    };\n    const handleDeleteMembership = (membershipId) => {\n        props.dispatch(deleteMembership(membershipId));\n    };\n\n    const handleChangeSearchText = async (text) => {\n        console.log(text);\n        setUserSearchText(text);\n    };\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log('Calling list');\n            props.dispatch(getAllMemberships({ organizationId: user._id }));\n        }\n    };\n\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth, props.setMembershipResponse, props.acceptMembershipResponse, props.rejectMembershipResponse, props.deleteMembershipResponse]);\n\n    const handleMembershipInfoChange = (name, value) => {\n        // console.log('🚀 ~ file: individual-membership.js ~ line 73 ~ handleMembershipInfoChange ~ name, value', name, value);\n        let membership_ = membership;\n        if (name === 'userId') {\n            membership_['individualId'] = value;\n        } else if (name === 'membershipType') {\n            membership_['membershipType'] = value;\n        } else if (name === 'startTime') {\n            const month = new Date(value).getMonth();\n            const year = new Date(value).getFullYear();\n            membership_['startTime'] = {\n                month,\n                year,\n            };\n        } else if (name === 'endTime') {\n            const month = new Date(value).getMonth();\n            const year = new Date(value).getFullYear();\n            membership_['endTime'] = {\n                month,\n                year,\n            };\n        } else if (name === 'isCurrent') {\n            membership_['isCurrent'] = value;\n        }\n        setMembership({ ...membership_ });\n    };\n\n    const submitMembership = (mode) => {\n        const membership_ = membership;\n        membership_['organizationId'] = props.auth.user._id;\n        membership_['requestedBy'] = 'organization';\n        if (mode === 'create') {\n            props.dispatch(createMembership(membership_));\n        } else {\n            props.dispatch(updateMembership(membership._id, membership_));\n        }\n    };\n\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteServiceInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(homePage);\n    };\n    const promiseOptions = (inputValue) =>\n        new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(getUsers(inputValue));\n            }, 1000);\n        });\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <MembershipForm\n                editMode={editMode}\n                membership={membership}\n                handleMembershipInfoChange={handleMembershipInfoChange}\n                userSearchText={userSearchText}\n                handleChangeSearchText={handleChangeSearchText}\n                users={users}\n                promiseOptions={promiseOptions}\n                submitMembership={submitMembership}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n                memberships={props.getAllMembershipResponse.success ? props.getAllMembershipResponse.memberships : []}\n                userType=\"organization\"\n                handleAcceptMembership={handleAcceptMembership}\n                handleRejectMembership={handleRejectMembership}\n                handleDeleteMembership={handleDeleteMembership}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    console.log('State', state);\n    const getAllMembershipResponse = state.Membership.getAllMemberships;\n    const setMembershipResponse = state.Membership.setMembership;\n    const acceptMembershipResponse = state.Membership.acceptMembership;\n    const rejectMembershipResponse = state.Membership.rejectMembership;\n    const deleteMembershipResponse = state.Membership.deleteMembership;\n    return { getAllMembershipResponse, setMembershipResponse, acceptMembershipResponse, rejectMembershipResponse, deleteMembershipResponse };\n};\nexport default connect(mapStateToProps, null)(Membership);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/interest-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/friendship-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/friendship-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/friendship-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/friends-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/followings-list.js",["1222","1223"],"import React from 'react';\nimport { Card, CardColumns, Badge } from 'react-bootstrap';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { UnfollowUserButtonRender } from '../form_template/buttons-render';\nimport { CSSTransition } from 'react-transition-group';\nconst FollowingList = (props) => {\n    const followings = props.followings;\n    const cards = props.cards;\n    const userId = props.userId;\n    const handleGotoUserDetails = props.handleGotoUserDetails;\n    const getUserTypeName = {\n        individual: 'INDIVIDUAL',\n        organization: 'ORGANIZATION',\n    };\n    console.log('🚀 ~ file: friends-list.js ~ line 5 ~ SampleOrgList ~ friendships', followings);\n    if (followings && followings.length > 0) {\n        return (\n            <>\n                {/* <h4>Total {followings.length} Following Found</h4> */}\n                <br />\n                <CardColumns className=\"five-columns\">\n                    {followings.map((following, i) => {\n                        let name = '';\n                        let profilePicture = '';\n                        if (following.followingUserType === 'individual') {\n                            name = following.followingFirstName + ' ' + following.followingLastName;\n                            profilePicture = following.followingProfilePicture ? following.followingProfilePicture : defaultIndividualProfilePicture;\n                        } else if (following.followingUserType === 'organization') {\n                            name = following.followingName;\n                            profilePicture = following.followingProfilePicture ? following.followingProfilePicture : defaultOrganizationProfilePicture;\n                        }\n                        return (\n                            <CSSTransition\n                                in={cards[following._id]}\n                                timeout={{\n                                    enter: 0,\n                                    exit: 2000,\n                                }}\n                                unmountOnExit\n                                classNames=\"my-node\"\n                                key={i}\n                            >\n                                <Card>\n                                    <div className=\"home-post-image-dark\">\n                                        <Card.Img\n                                            className=\"special-btn\"\n                                            variant=\"top\"\n                                            src={profilePicture}\n                                            alt=\"Following\"\n                                            onClick={() => {\n                                                props.handleGotoUserDetails(following.followingUserType, following.followingId);\n                                            }}\n                                        />\n                                        <Badge variant=\"primary\" className=\"image-text-top-left-small\">\n                                            {getUserTypeName[following.followingUserType]}\n                                        </Badge>\n                                    </div>\n                                    <Card.Body\n                                        className=\"special-btn\"\n                                        onClick={() => {\n                                            props.handleGotoUserDetails(following.followingUserType, following.followingId);\n                                        }}\n                                    >\n                                        <Card.Title>{name}</Card.Title>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        <UnfollowUserButtonRender\n                                            onClick={() => {\n                                                props.handleUnfollowUser(following._id, following.followingId);\n                                            }}\n                                        />\n                                    </Card.Footer>\n                                </Card>\n                            </CSSTransition>\n                        );\n                    })}\n                </CardColumns>\n            </>\n        );\n    } else return <h4>No Following Found</h4>;\n};\nexport default FollowingList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/followers-list.js",["1224","1225","1226"],"import React from 'react';\nimport { Card, CardColumns, Badge } from 'react-bootstrap';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { UnfollowUserButtonRender } from '../form_template/buttons-render';\nimport { CSSTransition } from 'react-transition-group';\nconst FollowerList = (props) => {\n    const followers = props.followers;\n    const cards = props.cards;\n    const userId = props.userId;\n    const handleGotoUserDetails = props.handleGotoUserDetails;\n    const getUserTypeName = {\n        individual: 'INDIVIDUAL',\n        organization: 'ORGANIZATION',\n    };\n    console.log('🚀 ~ file: friends-list.js ~ line 5 ~ SampleOrgList ~ friendships', followers);\n    if (followers && followers.length > 0) {\n        return (\n            <>\n                {/* <h4>Total {followers.length} Follower Found</h4> */}\n                <br />\n                <CardColumns className=\"five-columns\">\n                    {followers.map((follower, i) => {\n                        let name = '';\n                        let profilePicture = '';\n                        if (follower.followerUserType === 'individual') {\n                            name = follower.followerFirstName + ' ' + follower.followerLastName;\n                            profilePicture = follower.followerProfilePicture ? follower.followerProfilePicture : defaultIndividualProfilePicture;\n                        } else if (follower.followerUserType === 'organization') {\n                            name = follower.followerName;\n                            profilePicture = follower.followerProfilePicture ? follower.followerProfilePicture : defaultOrganizationProfilePicture;\n                        }\n                        return (\n                            <CSSTransition\n                                in={cards[follower._id]}\n                                timeout={{\n                                    enter: 0,\n                                    exit: 2000,\n                                }}\n                                unmountOnExit\n                                classNames=\"my-node\"\n                                key={i}\n                            >\n                                <Card>\n                                    <div className=\"home-post-image-dark\">\n                                        <Card.Img\n                                            className=\"special-btn\"\n                                            variant=\"top\"\n                                            src={profilePicture}\n                                            alt=\"Follower\"\n                                            onClick={() => {\n                                                props.handleGotoUserDetails(follower.followerUserType, follower.followerId);\n                                            }}\n                                        />\n                                        <Badge variant=\"primary\" className=\"image-text-top-left-small\">\n                                            {getUserTypeName[follower.followerUserType]}\n                                        </Badge>\n                                    </div>\n                                    <Card.Body\n                                        className=\"special-btn\"\n                                        onClick={() => {\n                                            props.handleGotoUserDetails(follower.followerUserType, follower.followerId);\n                                        }}\n                                    >\n                                        <Card.Title>{name}</Card.Title>\n                                    </Card.Body>\n                                    <Card.Footer>{/* <small className=\"text-muted\">YET TO DISCUSS</small> */}</Card.Footer>\n                                </Card>\n                            </CSSTransition>\n                        );\n                    })}\n                </CardColumns>\n            </>\n        );\n    } else return <h4>No Follower Found</h4>;\n};\nexport default FollowerList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/requests-list.js",["1227"],"import React from 'react';\nimport { Card, CardColumns, Button } from 'react-bootstrap';\nimport { defaultIndividualProfilePicture } from '../../constants/default-images';\nimport { AcceptButtonRender, RejectButtonRender, DeleteFriendshipButtonRender } from '../form_template/buttons-render';\nimport { CSSTransition } from 'react-transition-group';\nconst FriendRequestList = (props) => {\n    const friendships = props.friendships;\n    const userId = props.userId;\n    const cards = props.cards;\n    const handleGotoUserDetails = props.handleGotoUserDetails;\n    const handleAcceptFriendship = props.handleAcceptFriendship;\n    const handleRejectFriendship = props.handleRejectFriendship;\n    const handleDeleteFriendship = props.handleDeleteFriendship;\n    if (friendships && friendships.length > 0) {\n        return (\n            <>\n                {/* <h4>Total {friendships.length} Request Found</h4> */}\n                <br />\n                <CardColumns className=\"five-columns\">\n                    {friendships.map((friendship, i) => {\n                        let name = '';\n                        let profilePicture = defaultIndividualProfilePicture;\n                        let friendId = '';\n                        if (friendship.senderId === userId) {\n                            name = friendship.receiverFirstName + ' ' + friendship.receiverLastName;\n                            profilePicture = friendship.receiverProfilePicture;\n                            friendId = friendship.receiverId;\n                        } else if (friendship.receiverId === userId) {\n                            name = friendship.senderFirstName + ' ' + friendship.senderLastName;\n                            profilePicture = friendship.senderProfilePicture;\n                            friendId = friendship.senderId;\n                        }\n                        return (\n                            <CSSTransition\n                                in={cards[friendship._id]}\n                                timeout={{\n                                    enter: 0,\n                                    exit: 2000,\n                                }}\n                                unmountOnExit\n                                classNames=\"my-node\"\n                                key={i}\n                            >\n                                <Card>\n                                    <Card.Img\n                                        variant=\"top\"\n                                        src={profilePicture}\n                                        onClick={() => {\n                                            handleGotoUserDetails(friendId);\n                                        }}\n                                    />\n                                    <Card.Body\n                                        className=\"justify-text\"\n                                        onClick={() => {\n                                            handleGotoUserDetails(friendId);\n                                        }}\n                                    >\n                                        <Card.Title>{name}</Card.Title>\n                                    </Card.Body>\n                                    <Card.Footer>\n                                        {friendship.senderId === userId && (\n                                            <DeleteFriendshipButtonRender\n                                                onClick={() => {\n                                                    handleDeleteFriendship(friendship._id);\n                                                }}\n                                            />\n                                        )}\n                                        {friendship.receiverId === userId && (\n                                            <>\n                                                <AcceptButtonRender\n                                                    onClick={() => {\n                                                        handleAcceptFriendship(friendship._id);\n                                                    }}\n                                                />\n                                                &nbsp;\n                                                <RejectButtonRender\n                                                    onClick={() => {\n                                                        handleRejectFriendship(friendship._id);\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                    </Card.Footer>\n                                </Card>\n                            </CSSTransition>\n                        );\n                    })}\n                </CardColumns>\n            </>\n        );\n    } else return <h4>No Request Found</h4>;\n};\nexport default FriendRequestList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-post-filter.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-community-activity.js",["1228","1229","1230","1231"],{"ruleId":"1232","replacedBy":"1233"},{"ruleId":"1234","replacedBy":"1235"},{"ruleId":"1236","severity":1,"message":"1237","line":10,"column":10,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":13},{"ruleId":"1236","severity":1,"message":"1240","line":4,"column":20,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":30},{"ruleId":"1236","severity":1,"message":"1241","line":4,"column":32,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":43},{"ruleId":"1242","severity":1,"message":"1243","line":34,"column":8,"nodeType":"1244","endLine":34,"endColumn":20,"suggestions":"1245"},{"ruleId":"1242","severity":1,"message":"1246","line":37,"column":8,"nodeType":"1244","endLine":37,"endColumn":31,"suggestions":"1247"},{"ruleId":"1242","severity":1,"message":"1248","line":58,"column":8,"nodeType":"1244","endLine":58,"endColumn":20,"suggestions":"1249"},{"ruleId":"1232","replacedBy":"1250"},{"ruleId":"1234","replacedBy":"1251"},{"ruleId":"1232","replacedBy":"1252"},{"ruleId":"1234","replacedBy":"1253"},{"ruleId":"1242","severity":1,"message":"1254","line":61,"column":8,"nodeType":"1244","endLine":61,"endColumn":10,"suggestions":"1255"},{"ruleId":"1232","replacedBy":"1256"},{"ruleId":"1234","replacedBy":"1257"},{"ruleId":"1232","replacedBy":"1258"},{"ruleId":"1234","replacedBy":"1259"},{"ruleId":"1242","severity":1,"message":"1254","line":77,"column":8,"nodeType":"1244","endLine":77,"endColumn":10,"suggestions":"1260"},{"ruleId":"1232","replacedBy":"1261"},{"ruleId":"1234","replacedBy":"1262"},{"ruleId":"1236","severity":1,"message":"1241","line":3,"column":16,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":27},{"ruleId":"1232","replacedBy":"1263"},{"ruleId":"1234","replacedBy":"1264"},{"ruleId":"1236","severity":1,"message":"1265","line":6,"column":29,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":46},{"ruleId":"1236","severity":1,"message":"1266","line":36,"column":26,"nodeType":"1238","messageId":"1239","endLine":36,"endColumn":37},{"ruleId":"1242","severity":1,"message":"1267","line":47,"column":8,"nodeType":"1244","endLine":47,"endColumn":20,"suggestions":"1268"},{"ruleId":"1242","severity":1,"message":"1269","line":64,"column":8,"nodeType":"1244","endLine":64,"endColumn":38,"suggestions":"1270"},{"ruleId":"1242","severity":1,"message":"1246","line":67,"column":8,"nodeType":"1244","endLine":67,"endColumn":38,"suggestions":"1271"},{"ruleId":"1242","severity":1,"message":"1267","line":58,"column":8,"nodeType":"1244","endLine":58,"endColumn":20,"suggestions":"1272"},{"ruleId":"1242","severity":1,"message":"1269","line":61,"column":8,"nodeType":"1244","endLine":61,"endColumn":36,"suggestions":"1273"},{"ruleId":"1242","severity":1,"message":"1246","line":64,"column":8,"nodeType":"1244","endLine":64,"endColumn":36,"suggestions":"1274"},{"ruleId":"1236","severity":1,"message":"1275","line":32,"column":26,"nodeType":"1238","messageId":"1239","endLine":32,"endColumn":33},{"ruleId":"1242","severity":1,"message":"1267","line":43,"column":8,"nodeType":"1244","endLine":43,"endColumn":20,"suggestions":"1276"},{"ruleId":"1242","severity":1,"message":"1269","line":46,"column":8,"nodeType":"1244","endLine":46,"endColumn":34,"suggestions":"1277"},{"ruleId":"1242","severity":1,"message":"1246","line":49,"column":8,"nodeType":"1244","endLine":49,"endColumn":34,"suggestions":"1278"},{"ruleId":"1236","severity":1,"message":"1279","line":11,"column":21,"nodeType":"1238","messageId":"1239","endLine":11,"endColumn":31},{"ruleId":"1242","severity":1,"message":"1243","line":57,"column":8,"nodeType":"1244","endLine":57,"endColumn":47,"suggestions":"1280"},{"ruleId":"1242","severity":1,"message":"1254","line":68,"column":8,"nodeType":"1244","endLine":68,"endColumn":133,"suggestions":"1281"},{"ruleId":"1242","severity":1,"message":"1254","line":79,"column":8,"nodeType":"1244","endLine":79,"endColumn":60,"suggestions":"1282"},{"ruleId":"1242","severity":1,"message":"1267","line":56,"column":8,"nodeType":"1244","endLine":56,"endColumn":20,"suggestions":"1283"},{"ruleId":"1242","severity":1,"message":"1269","line":59,"column":8,"nodeType":"1244","endLine":59,"endColumn":36,"suggestions":"1284"},{"ruleId":"1242","severity":1,"message":"1246","line":62,"column":8,"nodeType":"1244","endLine":62,"endColumn":36,"suggestions":"1285"},{"ruleId":"1236","severity":1,"message":"1286","line":10,"column":10,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":18},{"ruleId":"1236","severity":1,"message":"1287","line":34,"column":26,"nodeType":"1238","messageId":"1239","endLine":34,"endColumn":37},{"ruleId":"1242","severity":1,"message":"1243","line":42,"column":8,"nodeType":"1244","endLine":42,"endColumn":20,"suggestions":"1288"},{"ruleId":"1242","severity":1,"message":"1269","line":45,"column":8,"nodeType":"1244","endLine":45,"endColumn":38,"suggestions":"1289"},{"ruleId":"1242","severity":1,"message":"1246","line":48,"column":8,"nodeType":"1244","endLine":48,"endColumn":38,"suggestions":"1290"},{"ruleId":"1236","severity":1,"message":"1291","line":29,"column":26,"nodeType":"1238","messageId":"1239","endLine":29,"endColumn":38},{"ruleId":"1242","severity":1,"message":"1243","line":35,"column":8,"nodeType":"1244","endLine":35,"endColumn":20,"suggestions":"1292"},{"ruleId":"1242","severity":1,"message":"1269","line":38,"column":8,"nodeType":"1244","endLine":38,"endColumn":39,"suggestions":"1293"},{"ruleId":"1242","severity":1,"message":"1246","line":41,"column":8,"nodeType":"1244","endLine":41,"endColumn":39,"suggestions":"1294"},{"ruleId":"1242","severity":1,"message":"1243","line":21,"column":8,"nodeType":"1244","endLine":21,"endColumn":47,"suggestions":"1295"},{"ruleId":"1232","replacedBy":"1296"},{"ruleId":"1234","replacedBy":"1297"},{"ruleId":"1232","replacedBy":"1298"},{"ruleId":"1234","replacedBy":"1299"},{"ruleId":"1236","severity":1,"message":"1300","line":3,"column":37,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":53},{"ruleId":"1236","severity":1,"message":"1301","line":15,"column":12,"nodeType":"1238","messageId":"1239","endLine":15,"endColumn":25},{"ruleId":"1236","severity":1,"message":"1302","line":15,"column":27,"nodeType":"1238","messageId":"1239","endLine":15,"endColumn":43},{"ruleId":"1236","severity":1,"message":"1303","line":3,"column":10,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":22},{"ruleId":"1236","severity":1,"message":"1304","line":3,"column":24,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1305","line":7,"column":5,"nodeType":"1238","messageId":"1239","endLine":7,"endColumn":27},{"ruleId":"1236","severity":1,"message":"1306","line":11,"column":5,"nodeType":"1238","messageId":"1239","endLine":11,"endColumn":29},{"ruleId":"1236","severity":1,"message":"1307","line":18,"column":11,"nodeType":"1238","messageId":"1239","endLine":18,"endColumn":27},{"ruleId":"1236","severity":1,"message":"1308","line":2,"column":52,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":61},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":63,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":69},{"ruleId":"1236","severity":1,"message":"1310","line":2,"column":71,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":85},{"ruleId":"1236","severity":1,"message":"1311","line":2,"column":87,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":94},{"ruleId":"1236","severity":1,"message":"1312","line":3,"column":8,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":14},{"ruleId":"1236","severity":1,"message":"1313","line":4,"column":10,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1314","line":6,"column":10,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":43},{"ruleId":"1236","severity":1,"message":"1315","line":15,"column":11,"nodeType":"1238","messageId":"1239","endLine":15,"endColumn":18},{"ruleId":"1316","severity":1,"message":"1317","line":61,"column":44,"nodeType":"1318","messageId":"1319","endLine":61,"endColumn":46},{"ruleId":"1316","severity":1,"message":"1317","line":15,"column":48,"nodeType":"1318","messageId":"1319","endLine":15,"endColumn":50},{"ruleId":"1236","severity":1,"message":"1320","line":4,"column":8,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":21},{"ruleId":"1236","severity":1,"message":"1321","line":5,"column":8,"nodeType":"1238","messageId":"1239","endLine":5,"endColumn":14},{"ruleId":"1232","replacedBy":"1322"},{"ruleId":"1234","replacedBy":"1323"},{"ruleId":"1242","severity":1,"message":"1254","line":18,"column":8,"nodeType":"1244","endLine":18,"endColumn":20,"suggestions":"1324"},{"ruleId":"1232","replacedBy":"1325"},{"ruleId":"1234","replacedBy":"1326"},{"ruleId":"1236","severity":1,"message":"1327","line":20,"column":12,"nodeType":"1238","messageId":"1239","endLine":20,"endColumn":18},{"ruleId":"1236","severity":1,"message":"1328","line":20,"column":20,"nodeType":"1238","messageId":"1239","endLine":20,"endColumn":29},{"ruleId":"1242","severity":1,"message":"1254","line":124,"column":8,"nodeType":"1244","endLine":124,"endColumn":20,"suggestions":"1329"},{"ruleId":"1242","severity":1,"message":"1254","line":130,"column":8,"nodeType":"1244","endLine":130,"endColumn":10,"suggestions":"1330"},{"ruleId":"1242","severity":1,"message":"1331","line":143,"column":8,"nodeType":"1244","endLine":143,"endColumn":32,"suggestions":"1332"},{"ruleId":"1236","severity":1,"message":"1333","line":6,"column":12,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1254","line":17,"column":8,"nodeType":"1244","endLine":17,"endColumn":20,"suggestions":"1334"},{"ruleId":"1236","severity":1,"message":"1335","line":9,"column":20,"nodeType":"1238","messageId":"1239","endLine":9,"endColumn":29},{"ruleId":"1242","severity":1,"message":"1254","line":23,"column":8,"nodeType":"1244","endLine":23,"endColumn":20,"suggestions":"1336"},{"ruleId":"1236","severity":1,"message":"1304","line":5,"column":10,"nodeType":"1238","messageId":"1239","endLine":5,"endColumn":22},{"ruleId":"1232","replacedBy":"1337"},{"ruleId":"1234","replacedBy":"1338"},{"ruleId":"1232","replacedBy":"1339"},{"ruleId":"1234","replacedBy":"1340"},{"ruleId":"1236","severity":1,"message":"1341","line":3,"column":10,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":16},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":38,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":44},{"ruleId":"1236","severity":1,"message":"1343","line":10,"column":13,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":22},{"ruleId":"1344","severity":1,"message":"1345","line":179,"column":21,"nodeType":"1346","endLine":179,"endColumn":95},{"ruleId":"1344","severity":1,"message":"1345","line":189,"column":21,"nodeType":"1346","endLine":189,"endColumn":52},{"ruleId":"1236","severity":1,"message":"1347","line":10,"column":49,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":62},{"ruleId":"1236","severity":1,"message":"1348","line":11,"column":28,"nodeType":"1238","messageId":"1239","endLine":11,"endColumn":46},{"ruleId":"1349","severity":1,"message":"1350","line":101,"column":72,"nodeType":"1351","endLine":101,"endColumn":93},{"ruleId":"1349","severity":1,"message":"1350","line":112,"column":74,"nodeType":"1351","endLine":112,"endColumn":95},{"ruleId":"1349","severity":1,"message":"1350","line":123,"column":69,"nodeType":"1351","endLine":123,"endColumn":90},{"ruleId":"1236","severity":1,"message":"1352","line":2,"column":10,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1353","line":2,"column":21,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":24},{"ruleId":"1236","severity":1,"message":"1354","line":2,"column":26,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":29},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":43,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":49},{"ruleId":"1316","severity":1,"message":"1317","line":78,"column":42,"nodeType":"1318","messageId":"1319","endLine":78,"endColumn":44},{"ruleId":"1236","severity":1,"message":"1352","line":3,"column":10,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1353","line":3,"column":21,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":24},{"ruleId":"1236","severity":1,"message":"1354","line":3,"column":26,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":29},{"ruleId":"1236","severity":1,"message":"1342","line":3,"column":31,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1355","line":3,"column":38,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":41},{"ruleId":"1236","severity":1,"message":"1356","line":2,"column":8,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":25},{"ruleId":"1236","severity":1,"message":"1357","line":3,"column":10,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":16},{"ruleId":"1236","severity":1,"message":"1358","line":6,"column":10,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":14},{"ruleId":"1236","severity":1,"message":"1359","line":8,"column":10,"nodeType":"1238","messageId":"1239","endLine":8,"endColumn":41},{"ruleId":"1236","severity":1,"message":"1314","line":8,"column":43,"nodeType":"1238","messageId":"1239","endLine":8,"endColumn":76},{"ruleId":"1236","severity":1,"message":"1360","line":34,"column":7,"nodeType":"1238","messageId":"1239","endLine":34,"endColumn":22},{"ruleId":"1236","severity":1,"message":"1361","line":106,"column":12,"nodeType":"1238","messageId":"1239","endLine":106,"endColumn":16},{"ruleId":"1242","severity":1,"message":"1254","line":121,"column":8,"nodeType":"1244","endLine":121,"endColumn":10,"suggestions":"1362"},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1355","line":2,"column":38,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":41},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":43,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":49},{"ruleId":"1236","severity":1,"message":"1363","line":6,"column":8,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1254","line":27,"column":8,"nodeType":"1244","endLine":27,"endColumn":10,"suggestions":"1364"},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1355","line":2,"column":38,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":41},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":43,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":49},{"ruleId":"1236","severity":1,"message":"1363","line":6,"column":8,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1254","line":28,"column":8,"nodeType":"1244","endLine":28,"endColumn":10,"suggestions":"1365"},{"ruleId":"1242","severity":1,"message":"1366","line":38,"column":8,"nodeType":"1244","endLine":38,"endColumn":39,"suggestions":"1367"},{"ruleId":"1368","severity":1,"message":"1369","line":46,"column":59,"nodeType":"1370","messageId":"1371","endLine":46,"endColumn":69},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1355","line":2,"column":38,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":41},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":43,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":49},{"ruleId":"1236","severity":1,"message":"1363","line":6,"column":8,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1254","line":28,"column":8,"nodeType":"1244","endLine":28,"endColumn":10,"suggestions":"1372"},{"ruleId":"1242","severity":1,"message":"1366","line":38,"column":8,"nodeType":"1244","endLine":38,"endColumn":40,"suggestions":"1373"},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1355","line":2,"column":38,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":41},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":43,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":49},{"ruleId":"1242","severity":1,"message":"1254","line":28,"column":8,"nodeType":"1244","endLine":28,"endColumn":10,"suggestions":"1374"},{"ruleId":"1242","severity":1,"message":"1366","line":38,"column":8,"nodeType":"1244","endLine":38,"endColumn":40,"suggestions":"1375"},{"ruleId":"1236","severity":1,"message":"1343","line":3,"column":13,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":22},{"ruleId":"1236","severity":1,"message":"1376","line":4,"column":10,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":26},{"ruleId":"1236","severity":1,"message":"1358","line":6,"column":10,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":14},{"ruleId":"1236","severity":1,"message":"1377","line":49,"column":11,"nodeType":"1238","messageId":"1239","endLine":49,"endColumn":23},{"ruleId":"1236","severity":1,"message":"1378","line":60,"column":11,"nodeType":"1238","messageId":"1239","endLine":60,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1317","line":75,"column":42,"nodeType":"1318","messageId":"1319","endLine":75,"endColumn":44},{"ruleId":"1236","severity":1,"message":"1333","line":6,"column":12,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1254","line":17,"column":8,"nodeType":"1244","endLine":17,"endColumn":20,"suggestions":"1379"},{"ruleId":"1242","severity":1,"message":"1254","line":18,"column":8,"nodeType":"1244","endLine":18,"endColumn":20,"suggestions":"1380"},{"ruleId":"1236","severity":1,"message":"1327","line":21,"column":12,"nodeType":"1238","messageId":"1239","endLine":21,"endColumn":18},{"ruleId":"1236","severity":1,"message":"1328","line":21,"column":20,"nodeType":"1238","messageId":"1239","endLine":21,"endColumn":29},{"ruleId":"1242","severity":1,"message":"1254","line":125,"column":8,"nodeType":"1244","endLine":125,"endColumn":20,"suggestions":"1381"},{"ruleId":"1242","severity":1,"message":"1254","line":131,"column":8,"nodeType":"1244","endLine":131,"endColumn":10,"suggestions":"1382"},{"ruleId":"1242","severity":1,"message":"1331","line":144,"column":8,"nodeType":"1244","endLine":144,"endColumn":34,"suggestions":"1383"},{"ruleId":"1236","severity":1,"message":"1384","line":4,"column":21,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":38},{"ruleId":"1236","severity":1,"message":"1385","line":4,"column":40,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":46},{"ruleId":"1236","severity":1,"message":"1327","line":25,"column":12,"nodeType":"1238","messageId":"1239","endLine":25,"endColumn":18},{"ruleId":"1236","severity":1,"message":"1328","line":25,"column":20,"nodeType":"1238","messageId":"1239","endLine":25,"endColumn":29},{"ruleId":"1242","severity":1,"message":"1254","line":198,"column":8,"nodeType":"1244","endLine":198,"endColumn":20,"suggestions":"1386"},{"ruleId":"1242","severity":1,"message":"1254","line":204,"column":8,"nodeType":"1244","endLine":204,"endColumn":10,"suggestions":"1387"},{"ruleId":"1242","severity":1,"message":"1331","line":217,"column":8,"nodeType":"1244","endLine":217,"endColumn":31,"suggestions":"1388"},{"ruleId":"1236","severity":1,"message":"1333","line":18,"column":12,"nodeType":"1238","messageId":"1239","endLine":18,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1254","line":37,"column":8,"nodeType":"1244","endLine":37,"endColumn":20,"suggestions":"1389"},{"ruleId":"1236","severity":1,"message":"1390","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":35},{"ruleId":"1236","severity":1,"message":"1391","line":3,"column":13,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":26},{"ruleId":"1236","severity":1,"message":"1327","line":21,"column":12,"nodeType":"1238","messageId":"1239","endLine":21,"endColumn":18},{"ruleId":"1236","severity":1,"message":"1328","line":21,"column":20,"nodeType":"1238","messageId":"1239","endLine":21,"endColumn":29},{"ruleId":"1242","severity":1,"message":"1254","line":126,"column":8,"nodeType":"1244","endLine":126,"endColumn":20,"suggestions":"1392"},{"ruleId":"1242","severity":1,"message":"1254","line":132,"column":8,"nodeType":"1244","endLine":132,"endColumn":10,"suggestions":"1393"},{"ruleId":"1242","severity":1,"message":"1331","line":145,"column":8,"nodeType":"1244","endLine":145,"endColumn":39,"suggestions":"1394"},{"ruleId":"1242","severity":1,"message":"1254","line":18,"column":8,"nodeType":"1244","endLine":18,"endColumn":20,"suggestions":"1395"},{"ruleId":"1236","severity":1,"message":"1333","line":6,"column":12,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1254","line":17,"column":8,"nodeType":"1244","endLine":17,"endColumn":20,"suggestions":"1396"},{"ruleId":"1236","severity":1,"message":"1304","line":5,"column":10,"nodeType":"1238","messageId":"1239","endLine":5,"endColumn":22},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":38,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":44},{"ruleId":"1236","severity":1,"message":"1343","line":10,"column":13,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":22},{"ruleId":"1236","severity":1,"message":"1304","line":5,"column":10,"nodeType":"1238","messageId":"1239","endLine":5,"endColumn":22},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":38,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":44},{"ruleId":"1236","severity":1,"message":"1343","line":10,"column":13,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1317","line":52,"column":42,"nodeType":"1318","messageId":"1319","endLine":52,"endColumn":44},{"ruleId":"1316","severity":1,"message":"1317","line":53,"column":42,"nodeType":"1318","messageId":"1319","endLine":53,"endColumn":44},{"ruleId":"1236","severity":1,"message":"1312","line":2,"column":8,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":14},{"ruleId":"1236","severity":1,"message":"1352","line":3,"column":10,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1342","line":3,"column":38,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":43},{"ruleId":"1236","severity":1,"message":"1309","line":3,"column":45,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":51},{"ruleId":"1236","severity":1,"message":"1397","line":80,"column":11,"nodeType":"1238","messageId":"1239","endLine":80,"endColumn":19},{"ruleId":"1398","severity":1,"message":"1399","line":90,"column":29,"nodeType":"1346","endLine":90,"endColumn":32},{"ruleId":"1232","replacedBy":"1400"},{"ruleId":"1234","replacedBy":"1401"},{"ruleId":"1236","severity":1,"message":"1397","line":102,"column":11,"nodeType":"1238","messageId":"1239","endLine":102,"endColumn":19},{"ruleId":"1398","severity":1,"message":"1402","line":191,"column":33,"nodeType":"1346","endLine":191,"endColumn":45},{"ruleId":"1236","severity":1,"message":"1304","line":5,"column":10,"nodeType":"1238","messageId":"1239","endLine":5,"endColumn":22},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":24,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":30},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1343","line":21,"column":13,"nodeType":"1238","messageId":"1239","endLine":21,"endColumn":22},{"ruleId":"1316","severity":1,"message":"1317","line":53,"column":42,"nodeType":"1318","messageId":"1319","endLine":53,"endColumn":44},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":17,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":23},{"ruleId":"1236","severity":1,"message":"1327","line":20,"column":12,"nodeType":"1238","messageId":"1239","endLine":20,"endColumn":18},{"ruleId":"1236","severity":1,"message":"1328","line":20,"column":20,"nodeType":"1238","messageId":"1239","endLine":20,"endColumn":29},{"ruleId":"1242","severity":1,"message":"1254","line":124,"column":8,"nodeType":"1244","endLine":124,"endColumn":20,"suggestions":"1403"},{"ruleId":"1242","severity":1,"message":"1254","line":130,"column":8,"nodeType":"1244","endLine":130,"endColumn":10,"suggestions":"1404"},{"ruleId":"1242","severity":1,"message":"1331","line":143,"column":8,"nodeType":"1244","endLine":143,"endColumn":31,"suggestions":"1405"},{"ruleId":"1236","severity":1,"message":"1406","line":19,"column":7,"nodeType":"1238","messageId":"1239","endLine":19,"endColumn":13},{"ruleId":"1236","severity":1,"message":"1353","line":2,"column":10,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":13},{"ruleId":"1236","severity":1,"message":"1354","line":2,"column":15,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":18},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":27,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":32},{"ruleId":"1236","severity":1,"message":"1352","line":3,"column":10,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1353","line":3,"column":21,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":24},{"ruleId":"1236","severity":1,"message":"1354","line":3,"column":26,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":29},{"ruleId":"1236","severity":1,"message":"1342","line":3,"column":31,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1355","line":3,"column":38,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":41},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":17,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":22},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":24,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":30},{"ruleId":"1236","severity":1,"message":"1407","line":34,"column":19,"nodeType":"1238","messageId":"1239","endLine":34,"endColumn":27},{"ruleId":"1242","severity":1,"message":"1254","line":39,"column":8,"nodeType":"1244","endLine":39,"endColumn":10,"suggestions":"1408"},{"ruleId":"1242","severity":1,"message":"1254","line":46,"column":8,"nodeType":"1244","endLine":46,"endColumn":37,"suggestions":"1409"},{"ruleId":"1236","severity":1,"message":"1352","line":2,"column":10,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1353","line":2,"column":28,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":31},{"ruleId":"1236","severity":1,"message":"1354","line":2,"column":33,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1410","line":2,"column":38,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":43},{"ruleId":"1236","severity":1,"message":"1308","line":2,"column":45,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":54},{"ruleId":"1236","severity":1,"message":"1411","line":4,"column":8,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1348","line":5,"column":28,"nodeType":"1238","messageId":"1239","endLine":5,"endColumn":46},{"ruleId":"1236","severity":1,"message":"1352","line":2,"column":10,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1353","line":2,"column":21,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":24},{"ruleId":"1236","severity":1,"message":"1354","line":2,"column":26,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":29},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":43,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":49},{"ruleId":"1236","severity":1,"message":"1352","line":3,"column":10,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1412","line":3,"column":46,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":51},{"ruleId":"1236","severity":1,"message":"1358","line":7,"column":10,"nodeType":"1238","messageId":"1239","endLine":7,"endColumn":14},{"ruleId":"1236","severity":1,"message":"1413","line":12,"column":12,"nodeType":"1238","messageId":"1239","endLine":12,"endColumn":16},{"ruleId":"1236","severity":1,"message":"1414","line":12,"column":18,"nodeType":"1238","messageId":"1239","endLine":12,"endColumn":25},{"ruleId":"1398","severity":1,"message":"1402","line":116,"column":87,"nodeType":"1346","endLine":116,"endColumn":99},{"ruleId":"1236","severity":1,"message":"1312","line":2,"column":8,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":14},{"ruleId":"1236","severity":1,"message":"1352","line":3,"column":10,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1342","line":3,"column":38,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":43},{"ruleId":"1236","severity":1,"message":"1348","line":10,"column":28,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":46},{"ruleId":"1398","severity":1,"message":"1399","line":31,"column":29,"nodeType":"1346","endLine":31,"endColumn":32},{"ruleId":"1242","severity":1,"message":"1254","line":19,"column":8,"nodeType":"1244","endLine":19,"endColumn":20,"suggestions":"1415"},{"ruleId":"1236","severity":1,"message":"1416","line":1,"column":17,"nodeType":"1238","messageId":"1239","endLine":1,"endColumn":25},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":49,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":55},{"ruleId":"1236","severity":1,"message":"1412","line":2,"column":57,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":62},{"ruleId":"1236","severity":1,"message":"1417","line":1,"column":27,"nodeType":"1238","messageId":"1239","endLine":1,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1418","line":3,"column":8,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":16},{"ruleId":"1236","severity":1,"message":"1419","line":17,"column":11,"nodeType":"1238","messageId":"1239","endLine":17,"endColumn":21},{"ruleId":"1236","severity":1,"message":"1420","line":4,"column":10,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":29},{"ruleId":"1236","severity":1,"message":"1421","line":9,"column":8,"nodeType":"1238","messageId":"1239","endLine":9,"endColumn":19},{"ruleId":"1236","severity":1,"message":"1422","line":12,"column":19,"nodeType":"1238","messageId":"1239","endLine":12,"endColumn":27},{"ruleId":"1236","severity":1,"message":"1279","line":13,"column":21,"nodeType":"1238","messageId":"1239","endLine":13,"endColumn":31},{"ruleId":"1242","severity":1,"message":"1243","line":78,"column":8,"nodeType":"1244","endLine":78,"endColumn":145,"suggestions":"1423"},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":28,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":33},{"ruleId":"1236","severity":1,"message":"1424","line":2,"column":46,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":51},{"ruleId":"1236","severity":1,"message":"1425","line":3,"column":10,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":28},{"ruleId":"1236","severity":1,"message":"1426","line":3,"column":30,"nodeType":"1238","messageId":"1239","endLine":3,"endColumn":46},{"ruleId":"1236","severity":1,"message":"1427","line":4,"column":30,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":50},{"ruleId":"1236","severity":1,"message":"1428","line":16,"column":11,"nodeType":"1238","messageId":"1239","endLine":16,"endColumn":18},{"ruleId":"1429","severity":1,"message":"1430","line":22,"column":25,"nodeType":"1346","endLine":22,"endColumn":143},{"ruleId":"1236","severity":1,"message":"1426","line":2,"column":30,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":46},{"ruleId":"1236","severity":1,"message":"1420","line":4,"column":10,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":29},{"ruleId":"1236","severity":1,"message":"1431","line":5,"column":10,"nodeType":"1238","messageId":"1239","endLine":5,"endColumn":38},{"ruleId":"1242","severity":1,"message":"1254","line":23,"column":8,"nodeType":"1244","endLine":23,"endColumn":10,"suggestions":"1432"},{"ruleId":"1236","severity":1,"message":"1348","line":6,"column":28,"nodeType":"1238","messageId":"1239","endLine":6,"endColumn":46},{"ruleId":"1236","severity":1,"message":"1416","line":1,"column":17,"nodeType":"1238","messageId":"1239","endLine":1,"endColumn":25},{"ruleId":"1236","severity":1,"message":"1420","line":4,"column":10,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":29},{"ruleId":"1236","severity":1,"message":"1422","line":12,"column":19,"nodeType":"1238","messageId":"1239","endLine":12,"endColumn":27},{"ruleId":"1236","severity":1,"message":"1279","line":13,"column":21,"nodeType":"1238","messageId":"1239","endLine":13,"endColumn":31},{"ruleId":"1242","severity":1,"message":"1243","line":79,"column":8,"nodeType":"1244","endLine":79,"endColumn":145,"suggestions":"1433"},{"ruleId":"1236","severity":1,"message":"1327","line":9,"column":11,"nodeType":"1238","messageId":"1239","endLine":9,"endColumn":17},{"ruleId":"1236","severity":1,"message":"1434","line":10,"column":11,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":32},{"ruleId":"1236","severity":1,"message":"1306","line":4,"column":10,"nodeType":"1238","messageId":"1239","endLine":4,"endColumn":34},{"ruleId":"1236","severity":1,"message":"1327","line":9,"column":11,"nodeType":"1238","messageId":"1239","endLine":9,"endColumn":17},{"ruleId":"1236","severity":1,"message":"1434","line":10,"column":11,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":32},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":29,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":35},{"ruleId":"1236","severity":1,"message":"1342","line":2,"column":31,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":36},{"ruleId":"1236","severity":1,"message":"1309","line":2,"column":43,"nodeType":"1238","messageId":"1239","endLine":2,"endColumn":49},{"ruleId":"1236","severity":1,"message":"1435","line":10,"column":8,"nodeType":"1238","messageId":"1239","endLine":10,"endColumn":14},{"ruleId":"1242","severity":1,"message":"1254","line":80,"column":8,"nodeType":"1244","endLine":80,"endColumn":10,"suggestions":"1436"},"no-native-reassign",["1437"],"no-negated-in-lhs",["1438"],"no-unused-vars","'get' is defined but never used.","Identifier","unusedVar","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInitialInfo'. Either include it or remove the dependency array.","ArrayExpression",["1439"],"React Hook useEffect has a missing dependency: 'handleSetResponse'. Either include it or remove the dependency array.",["1440"],"React Hook useEffect has a missing dependency: 'changeStep'. Either include it or remove the dependency array.",["1441"],["1437"],["1438"],["1437"],["1438"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1442"],["1437"],["1438"],["1437"],["1438"],["1443"],["1437"],["1438"],["1437"],["1438"],"'setAllMemberships' is defined but never used.","'involvement' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getInitialInfo' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1444"],"React Hook useEffect has a missing dependency: 'handleGetResponse'. Either include it or remove the dependency array.",["1445"],["1446"],["1447"],["1448"],["1449"],"'privacy' is assigned a value but never used.",["1450"],["1451"],["1452"],"'setLoading' is assigned a value but never used.",["1453"],["1454"],["1455"],["1456"],["1457"],["1458"],"'homePage' is defined but never used.","'serviceInfo' is assigned a value but never used.",["1459"],["1460"],["1461"],"'internalLink' is assigned a value but never used.",["1462"],["1463"],["1464"],["1465"],["1437"],["1438"],["1437"],["1438"],"'DatePickerRender' is defined but never used.","'selectedState' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'SwitchRender' is defined but never used.","'SelectRender' is defined but never used.","'FollowUserButtonRender' is defined but never used.","'UnfollowUserButtonRender' is defined but never used.","'individualUserId' is assigned a value but never used.","'ListGroup' is defined but never used.","'Button' is defined but never used.","'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'moment' is defined but never used.","'getMembershipStatusByValue' is defined but never used.","'defaultOrganizationProfilePicture' is defined but never used.","'follows' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ThreadDetails' is defined but never used.","'styles' is defined but never used.",["1437"],["1438"],["1466"],["1437"],["1438"],"'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.",["1467"],["1468"],"React Hook useEffect has missing dependencies: 'editMode' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1469"],"'loading' is assigned a value but never used.",["1470"],"'setFilter' is assigned a value but never used.",["1471"],["1437"],["1438"],["1437"],["1438"],"'FaEdit' is defined but never used.","'Image' is defined but never used.","'RoutePath' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'AiOutlineUser' is defined but never used.","'RiUserUnfollowFill' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Nav' is defined but never used.","'NotificationBadge' is defined but never used.","'Effect' is defined but never used.","'Link' is defined but never used.","'defaultIndividualProfilePicture' is defined but never used.","'PostTitleRender' is assigned a value but never used.","'play' is assigned a value but never used.",["1472"],"'SampleUsers' is defined but never used.",["1473"],["1474"],"React Hook useEffect has a missing dependency: 'cards'. Either include it or remove the dependency array. You can also do a functional update 'setCards(c => ...)' if you only need 'cards' in the 'setCards' call.",["1475"],"no-dupe-keys","Duplicate key 'followerId'.","ObjectExpression","unexpected",["1476"],["1477"],["1478"],["1479"],"'getCountryByCode' is defined but never used.","'addressMaker' is assigned a value but never used.","'pairsRender' is assigned a value but never used.",["1480"],["1481"],["1482"],["1483"],["1484"],"'formValueSelector' is defined but never used.","'change' is defined but never used.",["1485"],["1486"],["1487"],["1488"],"'Card' is defined but never used.","'DefaultImages' is defined but never used.",["1489"],["1490"],["1491"],["1492"],["1493"],"'mapImage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["1437"],["1438"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["1494"],["1495"],["1496"],"'fields' is assigned a value but never used.","'postType' is assigned a value but never used.",["1497"],["1498"],"'Badge' is defined but never used.","'Collapsible' is defined but never used.","'Modal' is defined but never used.","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.",["1499"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Dropzone' is defined but never used.","'handleDrop' is assigned a value but never used.","'NotificationManager' is defined but never used.","'AsyncSelect' is defined but never used.","'setUsers' is assigned a value but never used.",["1500"],"'Table' is defined but never used.","'DeleteButtonRender' is defined but never used.","'EditButtonRender' is defined but never used.","'getMembershipByValue' is defined but never used.","'options' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'individualCompleteMembership' is defined but never used.",["1501"],["1502"],"'handleGotoUserDetails' is assigned a value but never used.","'Select' is defined but never used.",["1503"],"no-global-assign","no-unsafe-negation",{"desc":"1504","fix":"1505"},{"desc":"1506","fix":"1507"},{"desc":"1508","fix":"1509"},{"desc":"1510","fix":"1511"},{"desc":"1510","fix":"1512"},{"desc":"1513","fix":"1514"},{"desc":"1515","fix":"1516"},{"desc":"1517","fix":"1518"},{"desc":"1513","fix":"1519"},{"desc":"1520","fix":"1521"},{"desc":"1522","fix":"1523"},{"desc":"1513","fix":"1524"},{"desc":"1525","fix":"1526"},{"desc":"1527","fix":"1528"},{"desc":"1529","fix":"1530"},{"desc":"1531","fix":"1532"},{"desc":"1533","fix":"1534"},{"desc":"1513","fix":"1535"},{"desc":"1520","fix":"1536"},{"desc":"1522","fix":"1537"},{"desc":"1504","fix":"1538"},{"desc":"1539","fix":"1540"},{"desc":"1541","fix":"1542"},{"desc":"1504","fix":"1543"},{"desc":"1544","fix":"1545"},{"desc":"1546","fix":"1547"},{"desc":"1529","fix":"1548"},{"desc":"1549","fix":"1550"},{"desc":"1549","fix":"1551"},{"desc":"1510","fix":"1552"},{"desc":"1553","fix":"1554"},{"desc":"1549","fix":"1555"},{"desc":"1549","fix":"1556"},{"desc":"1510","fix":"1557"},{"desc":"1510","fix":"1558"},{"desc":"1510","fix":"1559"},{"desc":"1560","fix":"1561"},{"desc":"1510","fix":"1562"},{"desc":"1563","fix":"1564"},{"desc":"1510","fix":"1565"},{"desc":"1566","fix":"1567"},{"desc":"1549","fix":"1568"},{"desc":"1549","fix":"1569"},{"desc":"1549","fix":"1570"},{"desc":"1510","fix":"1571"},{"desc":"1572","fix":"1573"},{"desc":"1549","fix":"1574"},{"desc":"1510","fix":"1575"},{"desc":"1576","fix":"1577"},{"desc":"1549","fix":"1578"},{"desc":"1549","fix":"1579"},{"desc":"1510","fix":"1580"},{"desc":"1581","fix":"1582"},{"desc":"1549","fix":"1583"},{"desc":"1549","fix":"1584"},{"desc":"1549","fix":"1585"},{"desc":"1510","fix":"1586"},{"desc":"1576","fix":"1587"},{"desc":"1510","fix":"1588"},{"desc":"1589","fix":"1590"},{"desc":"1549","fix":"1591"},{"desc":"1592","fix":"1593"},{"desc":"1510","fix":"1594"},{"desc":"1592","fix":"1595"},{"desc":"1510","fix":"1596"},"Update the dependencies array to be: [getInitialInfo, props.auth]",{"range":"1597","text":"1598"},"Update the dependencies array to be: [handleSetResponse, props.setUserResponse]",{"range":"1599","text":"1600"},"Update the dependencies array to be: [changeStep, props.user]",{"range":"1601","text":"1602"},"Update the dependencies array to be: [props]",{"range":"1603","text":"1604"},{"range":"1605","text":"1604"},"Update the dependencies array to be: [getInitialInfo, props, props.auth]",{"range":"1606","text":"1607"},"Update the dependencies array to be: [handleGetResponse, props.getInvolvementResponse]",{"range":"1608","text":"1609"},"Update the dependencies array to be: [handleSetResponse, props.setInvolvementResponse]",{"range":"1610","text":"1611"},{"range":"1612","text":"1607"},"Update the dependencies array to be: [handleGetResponse, props.getBasicInfoResponse]",{"range":"1613","text":"1614"},"Update the dependencies array to be: [handleSetResponse, props.setBasicInfoResponse]",{"range":"1615","text":"1616"},{"range":"1617","text":"1607"},"Update the dependencies array to be: [handleGetResponse, props.getPrivacyResponse]",{"range":"1618","text":"1619"},"Update the dependencies array to be: [handleSetResponse, props.setPrivacyResponse]",{"range":"1620","text":"1621"},"Update the dependencies array to be: [getInitialInfo, props.auth, props.match.params.userId]",{"range":"1622","text":"1623"},"Update the dependencies array to be: [props.setFriendshipResponse, props.acceptFriendshipResponse, props.rejectFriendshipResponse, props.deleteFriendshipResponse, props]",{"range":"1624","text":"1625"},"Update the dependencies array to be: [props, props.getFollowResponse, props.getUnfollowResponse]",{"range":"1626","text":"1627"},{"range":"1628","text":"1607"},{"range":"1629","text":"1614"},{"range":"1630","text":"1616"},{"range":"1631","text":"1598"},"Update the dependencies array to be: [handleGetResponse, props.getServiceInfoResponse]",{"range":"1632","text":"1633"},"Update the dependencies array to be: [handleSetResponse, props.setServiceInfoResponse]",{"range":"1634","text":"1635"},{"range":"1636","text":"1598"},"Update the dependencies array to be: [handleGetResponse, props.getInternalLinkResponse]",{"range":"1637","text":"1638"},"Update the dependencies array to be: [handleSetResponse, props.setInternalLinkResponse]",{"range":"1639","text":"1640"},{"range":"1641","text":"1623"},"Update the dependencies array to be: [props, props.auth]",{"range":"1642","text":"1643"},{"range":"1644","text":"1643"},{"range":"1645","text":"1604"},"Update the dependencies array to be: [editMode, props, props.setEventResponse]",{"range":"1646","text":"1647"},{"range":"1648","text":"1643"},{"range":"1649","text":"1643"},{"range":"1650","text":"1604"},{"range":"1651","text":"1604"},{"range":"1652","text":"1604"},"Update the dependencies array to be: [cards, props.getAllFollowersResponse]",{"range":"1653","text":"1654"},{"range":"1655","text":"1604"},"Update the dependencies array to be: [cards, props.getAllFollowingsResponse]",{"range":"1656","text":"1657"},{"range":"1658","text":"1604"},"Update the dependencies array to be: [cards, props.getAllFriendshipResponse]",{"range":"1659","text":"1660"},{"range":"1661","text":"1643"},{"range":"1662","text":"1643"},{"range":"1663","text":"1643"},{"range":"1664","text":"1604"},"Update the dependencies array to be: [editMode, props, props.setProjectResponse]",{"range":"1665","text":"1666"},{"range":"1667","text":"1643"},{"range":"1668","text":"1604"},"Update the dependencies array to be: [editMode, props, props.setPostResponse]",{"range":"1669","text":"1670"},{"range":"1671","text":"1643"},{"range":"1672","text":"1643"},{"range":"1673","text":"1604"},"Update the dependencies array to be: [editMode, props, props.setVolunteeringResponse]",{"range":"1674","text":"1675"},{"range":"1676","text":"1643"},{"range":"1677","text":"1643"},{"range":"1678","text":"1643"},{"range":"1679","text":"1604"},{"range":"1680","text":"1670"},{"range":"1681","text":"1604"},"Update the dependencies array to be: [props, props.match.params.postType]",{"range":"1682","text":"1683"},{"range":"1684","text":"1643"},"Update the dependencies array to be: [props.auth, props.setMembershipResponse, props.acceptMembershipResponse, props.rejectMembershipResponse, props.deleteMembershipResponse, getInitialInfo]",{"range":"1685","text":"1686"},{"range":"1687","text":"1604"},{"range":"1688","text":"1686"},{"range":"1689","text":"1604"},[1558,1570],"[getInitialInfo, props.auth]",[1631,1654],"[handleSetResponse, props.setUserResponse]",[2355,2367],"[changeStep, props.user]",[2577,2579],"[props]",[2954,2956],[2070,2082],"[getInitialInfo, props, props.auth]",[2647,2677],"[handleGetResponse, props.getInvolvementResponse]",[2738,2768],"[handleSetResponse, props.setInvolvementResponse]",[2461,2473],[2534,2562],"[handleGetResponse, props.getBasicInfoResponse]",[2623,2651],"[handleSetResponse, props.setBasicInfoResponse]",[1810,1822],[1883,1909],"[handleGetResponse, props.getPrivacyResponse]",[1970,1996],"[handleSetResponse, props.setPrivacyResponse]",[2661,2700],"[getInitialInfo, props.auth, props.match.params.userId]",[3104,3229],"[props.setFriendshipResponse, props.acceptFriendshipResponse, props.rejectFriendshipResponse, props.deleteFriendshipResponse, props]",[3634,3686],"[props, props.getFollowResponse, props.getUnfollowResponse]",[2451,2463],[2524,2552],[2613,2641],[1934,1946],[2007,2037],"[handleGetResponse, props.getServiceInfoResponse]",[2098,2128],"[handleSetResponse, props.setServiceInfoResponse]",[1545,1557],[1618,1649],"[handleGetResponse, props.getInternalLinkResponse]",[1710,1741],"[handleSetResponse, props.setInternalLinkResponse]",[1031,1070],[758,770],"[props, props.auth]",[4651,4663],[4798,4800],[5394,5418],"[editMode, props, props.setEventResponse]",[614,626],[865,877],[5573,5575],[1174,1176],[1218,1220],[1570,1601],"[cards, props.getAllFollowersResponse]",[1223,1225],[1581,1613],"[cards, props.getAllFollowingsResponse]",[1281,1283],[1643,1675],"[cards, props.getAllFriendshipResponse]",[638,650],[770,782],[4783,4795],[4932,4934],[5542,5568],"[editMode, props, props.setProjectResponse]",[7649,7661],[7795,7797],[8440,8463],"[editMode, props, props.setPostResponse]",[1328,1340],[4979,4991],[5133,5135],[5778,5809],"[editMode, props, props.setVolunteeringResponse]",[800,812],[698,710],[4544,4556],[4690,4692],[5279,5302],[1937,1939],[2230,2259],"[props, props.match.params.postType]",[818,830],[3160,3297],"[props.auth, props.setMembershipResponse, props.acceptMembershipResponse, props.rejectMembershipResponse, props.deleteMembershipResponse, getInitialInfo]",[1054,1056],[3107,3244],[3185,3187]]