[{"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js":"1","/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js":"2","/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js":"3","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js":"4","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js":"5","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js":"6","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js":"7","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js":"8","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js":"9","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js":"10","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js":"11","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js":"12","/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js":"13","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js":"14","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js":"15","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js":"16","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js":"17","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js":"18","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js":"19","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js":"20","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js":"21","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js":"22","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js":"23","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js":"24","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js":"25","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js":"26","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js":"27","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js":"28","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js":"29","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js":"30","/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js":"31","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js":"32","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js":"33","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js":"34","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js":"35","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js":"36","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js":"37","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js":"38","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js":"39","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js":"40","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js":"41","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js":"42","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js":"43","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js":"44","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js":"45","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js":"46","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js":"47","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js":"48","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js":"49","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js":"50","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js":"51","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js":"52","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js":"53","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js":"54","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js":"55","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js":"56","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js":"57","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js":"58","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js":"59","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js":"60","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js":"61","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js":"62","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js":"63","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js":"64","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js":"65","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js":"66","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js":"67","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js":"68","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js":"69","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js":"70","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js":"71","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js":"72","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js":"73","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js":"74","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-type-action.js":"75","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-type-da.js":"76","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organization-type-reducer.js":"77","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/genders.js":"78","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/languages.js":"79","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-images.js":"80","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/manage-posts.js":"81","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/details-render.js":"82","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/buttons-render.js":"83","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/search-menu.js":"84","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/follow-reducer.js":"85","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/follow-action.js":"86","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/follow-da.js":"87","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/global-notification.js":"88","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/friends.js":"89","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followers.js":"90","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followings.js":"91","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/requests.js":"92","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/community-menu.js":"93","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/sample-users.js":"94","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-map-view.js":"95","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-user-information.js":"96","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post.js":"97","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/display-post.js":"98","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/listing-posts.js":"99","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/manage-news.js":"100","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/post-reducer.js":"101","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-suggestions.js":"102","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-posts.js":"103","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/language-action.js":"104","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/skill-action.js":"105","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/skill-reducer.js":"106","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/language-reducer.js":"107","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/skill-da.js":"108","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/language-da.js":"109","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/post-action.js":"110","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-form.js":"111","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-image-list.js":"112","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-geo-coding.js":"113","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/post-da.js":"114","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-details.js":"115","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-map-view.js":"116","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-list.js":"117","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/sample-news.js":"118","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post-old.js":"119","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/post-types.js":"120","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/icon-render.js":"121","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/required-item-list.js":"122","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-post-list.js":"123","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-sub-menu.js":"124","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-post-menu.js":"125","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/home/home-post-feeds.js":"126","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/home/home-suggestions.js":"127","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/notification-reducer.js":"128","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/notification-action.js":"129","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/notification-da.js":"130","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/notification/manage-notifications.js":"131","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/notification/notification-list.js":"132","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/notification-types.js":"133","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/sound-player.js":"134","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/auth-da.js":"135","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/password-da.js":"136","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/user-action.js":"137","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/profile-picture-changer.js":"138","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/membership-reducer.js":"139","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/membership-action.js":"140","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/membership-da.js":"141","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/membership-types.js":"142","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-membership.js":"143","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-modal.js":"144","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-list.js":"145","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-form.js":"146","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-suggestions.js":"147","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-suggestion-list.js":"148","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/committed-persons-list.js":"149","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-membership.js":"150","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/interest-types.js":"151","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/friendship-reducer.js":"152","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/friendship-action.js":"153","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/friendship-da.js":"154","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/friends-list.js":"155","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/followings-list.js":"156","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/followers-list.js":"157","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/requests-list.js":"158","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-post-filter.js":"159","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-community-activity.js":"160","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/notification/user-list-modal.js":"161","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/endorsement-reducer.js":"162","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/endorsement-action.js":"163","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/endorsement-da.js":"164","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/conversation-reducer.js":"165","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/conversation-action.js":"166","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/conversation-da.js":"167","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/message-modal.js":"168","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/calender/post-calender-view.js":"169","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/calender/posts.js":"170","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/conversation/manage-conversations.js":"171","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/conversation/sample-thread-list.js":"172","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/conversation-details.js":"173","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/message-form.js":"174","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/conversation-list.js":"175","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/global-conversation.js":"176","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-user.js":"177","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/user-list.js":"178","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/endorsers.js":"179","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/endorsers-list.js":"180","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/about-us.js":"181","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/contact-us.js":"182","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/privacy-policy.js":"183","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/dashboard/dashboard.js":"184","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-individual.js":"185","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-list-view.js":"186","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-gallery.js":"187","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/image-modal-render.js":"188","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-side-menu.js":"189","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/gallery-view.js":"190","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/conversation-warnings.js":"191","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-card-view.js":"192","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/individual-filters.js":"193","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/organization-filters.js":"194","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/post-filters.js":"195","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/cultivation-reducer.js":"196","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/cultivation/manage-cultivation.js":"197","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/cultivation/create-cultivation.js":"198","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/cultivation/display-cultivation.js":"199","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/cultivation/cultivation-list.js":"200","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/cultivation/cultivation-form.js":"201","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/cultivation-action.js":"202","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/cultivation-da.js":"203","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/cultivation/cultivation-list-modal.js":"204","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/cultivation/cultivation-details.js":"205","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/calendar/calendar-filter.js":"206","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/calendar/calendar-info-modal.js":"207","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/calendar/calendar-post-modal.js":"208","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/calendar/calendar-view.js":"209","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/scheduler-reducer.js":"210","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/scheduler-action.js":"211","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/scheduler-da.js":"212","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/section-menu.js":"213","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/summary-view.js":"214","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/top-notifications.js":"215","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/statistics-view.js":"216","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/upcoming-activity-list.js":"217","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/line-chart.js":"218","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/interaction-chart.js":"219","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/rough/facebook-login.js":"220"},{"size":1154,"mtime":1625044799296,"results":"221","hashOfConfig":"222"},{"size":305,"mtime":1612159937291,"results":"223","hashOfConfig":"224"},{"size":15771,"mtime":1625145256032,"results":"225","hashOfConfig":"222"},{"size":1116,"mtime":1624789705000,"results":"226","hashOfConfig":"222"},{"size":929,"mtime":1625044316652,"results":"227","hashOfConfig":"222"},{"size":607,"mtime":1622983722950,"results":"228","hashOfConfig":"222"},{"size":4596,"mtime":1625044542342,"results":"229","hashOfConfig":"222"},{"size":3617,"mtime":1613711460041,"results":"230","hashOfConfig":"222"},{"size":1195,"mtime":1625044614550,"results":"231","hashOfConfig":"222"},{"size":2841,"mtime":1625044644560,"results":"232","hashOfConfig":"222"},{"size":2865,"mtime":1625044614547,"results":"233","hashOfConfig":"222"},{"size":1035,"mtime":1625044612746,"results":"234","hashOfConfig":"222"},{"size":384,"mtime":1612364173406,"results":"235","hashOfConfig":"222"},{"size":5318,"mtime":1625145202034,"results":"236","hashOfConfig":"222"},{"size":8595,"mtime":1625044607506,"results":"237","hashOfConfig":"222"},{"size":3307,"mtime":1625044535277,"results":"238","hashOfConfig":"222"},{"size":2621,"mtime":1625044531672,"results":"239","hashOfConfig":"222"},{"size":1448,"mtime":1612241447302,"results":"240","hashOfConfig":"222"},{"size":4448,"mtime":1625044542342,"results":"241","hashOfConfig":"222"},{"size":4369,"mtime":1625044542342,"results":"242","hashOfConfig":"222"},{"size":234,"mtime":1612161648565,"results":"243","hashOfConfig":"222"},{"size":12378,"mtime":1625141147111,"results":"244","hashOfConfig":"222"},{"size":6141,"mtime":1625051917813,"results":"245","hashOfConfig":"222"},{"size":1553,"mtime":1612878897820,"results":"246","hashOfConfig":"224"},{"size":5016,"mtime":1625044614550,"results":"247","hashOfConfig":"222"},{"size":9667,"mtime":1625205128520,"results":"248","hashOfConfig":"222"},{"size":5148,"mtime":1612878632182,"results":"249","hashOfConfig":"224"},{"size":334,"mtime":1612199776690,"results":"250","hashOfConfig":"222"},{"size":259,"mtime":1614335298622,"results":"251","hashOfConfig":"222"},{"size":204,"mtime":1612794906131,"results":"252","hashOfConfig":"222"},{"size":2749,"mtime":1625044700465,"results":"253","hashOfConfig":"222"},{"size":7091,"mtime":1625044534988,"results":"254","hashOfConfig":"222"},{"size":431,"mtime":1625044534988,"results":"255","hashOfConfig":"222"},{"size":296,"mtime":1613714767296,"results":"256","hashOfConfig":"222"},{"size":6923,"mtime":1614956967886,"results":"257","hashOfConfig":"222"},{"size":922,"mtime":1614335165734,"results":"258","hashOfConfig":"222"},{"size":402,"mtime":1612795080494,"results":"259","hashOfConfig":"224"},{"size":509,"mtime":1613151325217,"results":"260","hashOfConfig":"224"},{"size":503,"mtime":1612850760242,"results":"261","hashOfConfig":"222"},{"size":3233,"mtime":1612872182313,"results":"262","hashOfConfig":"224"},{"size":10930,"mtime":1625044531648,"results":"263","hashOfConfig":"222"},{"size":3233,"mtime":1612872360624,"results":"264","hashOfConfig":"224"},{"size":2527,"mtime":1613386369306,"results":"265","hashOfConfig":"224"},{"size":3634,"mtime":1625044531672,"results":"266","hashOfConfig":"222"},{"size":5514,"mtime":1625044524239,"results":"267","hashOfConfig":"222"},{"size":3471,"mtime":1625044522916,"results":"268","hashOfConfig":"222"},{"size":0,"mtime":1612974584064,"results":"269","hashOfConfig":"224"},{"size":5995,"mtime":1625044428350,"results":"270","hashOfConfig":"222"},{"size":5543,"mtime":1625044537871,"results":"271","hashOfConfig":"222"},{"size":3968,"mtime":1625044539709,"results":"272","hashOfConfig":"222"},{"size":3107,"mtime":1625044539829,"results":"273","hashOfConfig":"222"},{"size":0,"mtime":1612974691472,"results":"274","hashOfConfig":"224"},{"size":6571,"mtime":1625044432441,"results":"275","hashOfConfig":"222"},{"size":11477,"mtime":1625044540206,"results":"276","hashOfConfig":"222"},{"size":973,"mtime":1619195651828,"results":"277","hashOfConfig":"222"},{"size":0,"mtime":1618332990392,"results":"278","hashOfConfig":"224"},{"size":2117,"mtime":1613386399868,"results":"279","hashOfConfig":"224"},{"size":1718,"mtime":1613139377905,"results":"280","hashOfConfig":"224"},{"size":1943,"mtime":1617532572195,"results":"281","hashOfConfig":"224"},{"size":6993,"mtime":1625044542164,"results":"282","hashOfConfig":"222"},{"size":473,"mtime":1625044644541,"results":"283","hashOfConfig":"222"},{"size":706,"mtime":1625044614551,"results":"284","hashOfConfig":"222"},{"size":597,"mtime":1625044612746,"results":"285","hashOfConfig":"222"},{"size":5413,"mtime":1625044542342,"results":"286","hashOfConfig":"222"},{"size":4195,"mtime":1625141265373,"results":"287","hashOfConfig":"222"},{"size":330,"mtime":1625044614551,"results":"288","hashOfConfig":"222"},{"size":3936,"mtime":1625044644541,"results":"289","hashOfConfig":"222"},{"size":10440,"mtime":1625141299192,"results":"290","hashOfConfig":"222"},{"size":3841,"mtime":1618358869289,"results":"291","hashOfConfig":"224"},{"size":5071,"mtime":1625044548098,"results":"292","hashOfConfig":"222"},{"size":2450,"mtime":1625044548098,"results":"293","hashOfConfig":"222"},{"size":7895,"mtime":1625054546350,"results":"294","hashOfConfig":"222"},{"size":6459,"mtime":1625141106439,"results":"295","hashOfConfig":"222"},{"size":7157,"mtime":1625044548098,"results":"296","hashOfConfig":"222"},{"size":276,"mtime":1625044644463,"results":"297","hashOfConfig":"222"},{"size":383,"mtime":1625044614859,"results":"298","hashOfConfig":"222"},{"size":448,"mtime":1625044614548,"results":"299","hashOfConfig":"222"},{"size":615,"mtime":1613475065090,"results":"300","hashOfConfig":"222"},{"size":4192,"mtime":1614055942375,"results":"301","hashOfConfig":"224"},{"size":1351,"mtime":1623835890971,"results":"302","hashOfConfig":"222"},{"size":2663,"mtime":1625044534991,"results":"303","hashOfConfig":"222"},{"size":8111,"mtime":1624965432767,"results":"304","hashOfConfig":"222"},{"size":15528,"mtime":1625137015963,"results":"305","hashOfConfig":"222"},{"size":756,"mtime":1625136816074,"results":"306","hashOfConfig":"222"},{"size":1038,"mtime":1625044611924,"results":"307","hashOfConfig":"222"},{"size":1068,"mtime":1625045061901,"results":"308","hashOfConfig":"222"},{"size":1686,"mtime":1625044611050,"results":"309","hashOfConfig":"222"},{"size":6706,"mtime":1625137075934,"results":"310","hashOfConfig":"222"},{"size":3769,"mtime":1625044517011,"results":"311","hashOfConfig":"222"},{"size":4359,"mtime":1625044517988,"results":"312","hashOfConfig":"222"},{"size":4383,"mtime":1625044531038,"results":"313","hashOfConfig":"222"},{"size":6053,"mtime":1625044531672,"results":"314","hashOfConfig":"222"},{"size":2177,"mtime":1625044550781,"results":"315","hashOfConfig":"222"},{"size":3458,"mtime":1614951596247,"results":"316","hashOfConfig":"222"},{"size":10307,"mtime":1625044549370,"results":"317","hashOfConfig":"222"},{"size":95,"mtime":1615119305030,"results":"318","hashOfConfig":"222"},{"size":12209,"mtime":1625044534988,"results":"319","hashOfConfig":"222"},{"size":6378,"mtime":1625044531672,"results":"320","hashOfConfig":"222"},{"size":376,"mtime":1615308333852,"results":"321","hashOfConfig":"222"},{"size":8114,"mtime":1615982423393,"results":"322","hashOfConfig":"224"},{"size":5965,"mtime":1625051840777,"results":"323","hashOfConfig":"222"},{"size":8506,"mtime":1616232056501,"results":"324","hashOfConfig":"224"},{"size":11298,"mtime":1617176766509,"results":"325","hashOfConfig":"224"},{"size":448,"mtime":1625044644463,"results":"326","hashOfConfig":"222"},{"size":418,"mtime":1625044644542,"results":"327","hashOfConfig":"222"},{"size":555,"mtime":1625044614548,"results":"328","hashOfConfig":"222"},{"size":579,"mtime":1625044614548,"results":"329","hashOfConfig":"222"},{"size":674,"mtime":1625044614860,"results":"330","hashOfConfig":"222"},{"size":805,"mtime":1625044614551,"results":"331","hashOfConfig":"222"},{"size":4217,"mtime":1625051930298,"results":"332","hashOfConfig":"222"},{"size":13034,"mtime":1625054590040,"results":"333","hashOfConfig":"222"},{"size":6015,"mtime":1625054179361,"results":"334","hashOfConfig":"222"},{"size":3710,"mtime":1622364650117,"results":"335","hashOfConfig":"222"},{"size":5922,"mtime":1625051885320,"results":"336","hashOfConfig":"222"},{"size":15220,"mtime":1625044546833,"results":"337","hashOfConfig":"222"},{"size":7725,"mtime":1625044549514,"results":"338","hashOfConfig":"222"},{"size":10799,"mtime":1625044542451,"results":"339","hashOfConfig":"222"},{"size":6268,"mtime":1615981096551,"results":"340","hashOfConfig":"224"},{"size":6743,"mtime":1615982460971,"results":"341","hashOfConfig":"224"},{"size":3896,"mtime":1624795078516,"results":"342","hashOfConfig":"222"},{"size":478,"mtime":1625054483473,"results":"343","hashOfConfig":"222"},{"size":4863,"mtime":1624965540327,"results":"344","hashOfConfig":"222"},{"size":8540,"mtime":1625044539829,"results":"345","hashOfConfig":"222"},{"size":4076,"mtime":1625044548098,"results":"346","hashOfConfig":"222"},{"size":1788,"mtime":1625054453816,"results":"347","hashOfConfig":"222"},{"size":12566,"mtime":1625141221333,"results":"348","hashOfConfig":"222"},{"size":6755,"mtime":1625141072941,"results":"349","hashOfConfig":"222"},{"size":1863,"mtime":1625044614547,"results":"350","hashOfConfig":"222"},{"size":2077,"mtime":1625044644541,"results":"351","hashOfConfig":"222"},{"size":1332,"mtime":1625044614860,"results":"352","hashOfConfig":"222"},{"size":3156,"mtime":1625044542465,"results":"353","hashOfConfig":"222"},{"size":5710,"mtime":1625141265372,"results":"354","hashOfConfig":"222"},{"size":495,"mtime":1618065102194,"results":"355","hashOfConfig":"224"},{"size":342,"mtime":1618138276460,"results":"356","hashOfConfig":"224"},{"size":1065,"mtime":1625044614859,"results":"357","hashOfConfig":"222"},{"size":846,"mtime":1625044614859,"results":"358","hashOfConfig":"222"},{"size":4119,"mtime":1625044644464,"results":"359","hashOfConfig":"222"},{"size":5093,"mtime":1618481830678,"results":"360","hashOfConfig":"222"},{"size":1035,"mtime":1625044612746,"results":"361","hashOfConfig":"222"},{"size":1172,"mtime":1625044644573,"results":"362","hashOfConfig":"222"},{"size":2289,"mtime":1625044614861,"results":"363","hashOfConfig":"222"},{"size":934,"mtime":1619207987161,"results":"364","hashOfConfig":"222"},{"size":6736,"mtime":1625044523020,"results":"365","hashOfConfig":"222"},{"size":7097,"mtime":1625141113140,"results":"366","hashOfConfig":"222"},{"size":4181,"mtime":1625141265401,"results":"367","hashOfConfig":"222"},{"size":4546,"mtime":1625044549514,"results":"368","hashOfConfig":"222"},{"size":2955,"mtime":1625044534988,"results":"369","hashOfConfig":"222"},{"size":8397,"mtime":1625044540207,"results":"370","hashOfConfig":"222"},{"size":2401,"mtime":1625044546819,"results":"371","hashOfConfig":"222"},{"size":6671,"mtime":1625044537894,"results":"372","hashOfConfig":"222"},{"size":291,"mtime":1619290946435,"results":"373","hashOfConfig":"222"},{"size":1160,"mtime":1625044612746,"results":"374","hashOfConfig":"222"},{"size":1167,"mtime":1625044644463,"results":"375","hashOfConfig":"222"},{"size":1892,"mtime":1625044614861,"results":"376","hashOfConfig":"222"},{"size":3000,"mtime":1625044550781,"results":"377","hashOfConfig":"222"},{"size":4768,"mtime":1625137245743,"results":"378","hashOfConfig":"222"},{"size":4429,"mtime":1625137230177,"results":"379","hashOfConfig":"222"},{"size":5722,"mtime":1625136933987,"results":"380","hashOfConfig":"222"},{"size":805,"mtime":1620864172803,"results":"381","hashOfConfig":"222"},{"size":11014,"mtime":1625054179389,"results":"382","hashOfConfig":"222"},{"size":2296,"mtime":1625141265422,"results":"383","hashOfConfig":"222"},{"size":1038,"mtime":1625044611924,"results":"384","hashOfConfig":"222"},{"size":1123,"mtime":1625045090099,"results":"385","hashOfConfig":"222"},{"size":1652,"mtime":1625044611050,"results":"386","hashOfConfig":"222"},{"size":1806,"mtime":1625044614548,"results":"387","hashOfConfig":"222"},{"size":2137,"mtime":1625044644463,"results":"388","hashOfConfig":"222"},{"size":2197,"mtime":1625134340518,"results":"389","hashOfConfig":"222"},{"size":1722,"mtime":1625054433229,"results":"390","hashOfConfig":"222"},{"size":7399,"mtime":1625136817351,"results":"391","hashOfConfig":"222"},{"size":3121,"mtime":1622926593195,"results":"392","hashOfConfig":"224"},{"size":6997,"mtime":1625141860636,"results":"393","hashOfConfig":"222"},{"size":0,"mtime":1622114881162,"results":"394","hashOfConfig":"224"},{"size":5129,"mtime":1625137282436,"results":"395","hashOfConfig":"222"},{"size":7467,"mtime":1625054424700,"results":"396","hashOfConfig":"222"},{"size":3279,"mtime":1625136919543,"results":"397","hashOfConfig":"222"},{"size":2175,"mtime":1625142443249,"results":"398","hashOfConfig":"222"},{"size":2237,"mtime":1625054560859,"results":"399","hashOfConfig":"222"},{"size":3555,"mtime":1625044551548,"results":"400","hashOfConfig":"222"},{"size":4057,"mtime":1625044517988,"results":"401","hashOfConfig":"222"},{"size":4429,"mtime":1625137212091,"results":"402","hashOfConfig":"222"},{"size":3110,"mtime":1624457012389,"results":"403","hashOfConfig":"222"},{"size":3417,"mtime":1622962956619,"results":"404","hashOfConfig":"222"},{"size":18191,"mtime":1625136346924,"results":"405","hashOfConfig":"222"},{"size":3800,"mtime":1625052887736,"results":"406","hashOfConfig":"222"},{"size":9394,"mtime":1625137202150,"results":"407","hashOfConfig":"222"},{"size":9314,"mtime":1625141203673,"results":"408","hashOfConfig":"222"},{"size":2687,"mtime":1625137136731,"results":"409","hashOfConfig":"222"},{"size":3301,"mtime":1625054600455,"results":"410","hashOfConfig":"222"},{"size":4941,"mtime":1625141095282,"results":"411","hashOfConfig":"222"},{"size":1026,"mtime":1623576067265,"results":"412","hashOfConfig":"222"},{"size":694,"mtime":1625054414743,"results":"413","hashOfConfig":"222"},{"size":10202,"mtime":1625044546765,"results":"414","hashOfConfig":"222"},{"size":2721,"mtime":1625141299177,"results":"415","hashOfConfig":"222"},{"size":3032,"mtime":1625137104259,"results":"416","hashOfConfig":"222"},{"size":3379,"mtime":1625141492021,"results":"417","hashOfConfig":"222"},{"size":1448,"mtime":1625044614548,"results":"418","hashOfConfig":"222"},{"size":3398,"mtime":1625044537639,"results":"419","hashOfConfig":"222"},{"size":5308,"mtime":1625044531672,"results":"420","hashOfConfig":"222"},{"size":2646,"mtime":1625044524238,"results":"421","hashOfConfig":"222"},{"size":4786,"mtime":1624965421908,"results":"422","hashOfConfig":"222"},{"size":6349,"mtime":1625136373128,"results":"423","hashOfConfig":"222"},{"size":2049,"mtime":1625044644580,"results":"424","hashOfConfig":"222"},{"size":3205,"mtime":1625044614859,"results":"425","hashOfConfig":"222"},{"size":4822,"mtime":1625136449769,"results":"426","hashOfConfig":"222"},{"size":4994,"mtime":1625136370512,"results":"427","hashOfConfig":"222"},{"size":3202,"mtime":1625054136079,"results":"428","hashOfConfig":"222"},{"size":1533,"mtime":1625044546763,"results":"429","hashOfConfig":"222"},{"size":2855,"mtime":1625054150197,"results":"430","hashOfConfig":"222"},{"size":2495,"mtime":1625054368838,"results":"431","hashOfConfig":"222"},{"size":836,"mtime":1625044614548,"results":"432","hashOfConfig":"222"},{"size":838,"mtime":1625044644540,"results":"433","hashOfConfig":"222"},{"size":1191,"mtime":1625044614859,"results":"434","hashOfConfig":"222"},{"size":2412,"mtime":1625137035166,"results":"435","hashOfConfig":"222"},{"size":5779,"mtime":1625137051745,"results":"436","hashOfConfig":"222"},{"size":3075,"mtime":1625136939546,"results":"437","hashOfConfig":"222"},{"size":1111,"mtime":1625137045791,"results":"438","hashOfConfig":"222"},{"size":4702,"mtime":1625136465824,"results":"439","hashOfConfig":"222"},{"size":1276,"mtime":1625053317693,"results":"440","hashOfConfig":"222"},{"size":1828,"mtime":1625053883822,"results":"441","hashOfConfig":"222"},{"size":855,"mtime":1625209828708,"results":"442","hashOfConfig":"222"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},"19oxshh",{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14vz1v0",{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"445"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"497","messages":"498","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"500"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"445"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"522"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"529"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"445"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"535"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"539"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"445"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"545","usedDeprecatedRules":"445"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"445"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"539"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"445"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"445"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"445"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"445"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"539"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"445"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"574"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"577"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"522"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"522"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"445"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"445"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"522"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"445"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"445"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"445"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"445"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"628"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"445"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"445"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"445"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"445"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"445"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"445"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"661","usedDeprecatedRules":"445"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"445"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"445"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"445"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"681","usedDeprecatedRules":"682"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"687","usedDeprecatedRules":"688"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"688"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"445"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711","usedDeprecatedRules":"445"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"445"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"445"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"682"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"729","messages":"730","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"445"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"445"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"445"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"445"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"747","usedDeprecatedRules":"445"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"750","usedDeprecatedRules":"445"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759","usedDeprecatedRules":"445"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"445"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"785","usedDeprecatedRules":"445"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"788","usedDeprecatedRules":"445"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791","usedDeprecatedRules":"445"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"796","usedDeprecatedRules":"445"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"799","usedDeprecatedRules":"445"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"802","usedDeprecatedRules":"445"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805","usedDeprecatedRules":"445"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"826","usedDeprecatedRules":"445"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"829","usedDeprecatedRules":"445"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"846","usedDeprecatedRules":"445"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849","usedDeprecatedRules":"850"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"853","usedDeprecatedRules":"445"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"856","usedDeprecatedRules":"857"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"866","usedDeprecatedRules":"445"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"869","usedDeprecatedRules":"445"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"872","usedDeprecatedRules":"445"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"875","usedDeprecatedRules":"445"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"880","usedDeprecatedRules":"445"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"887","usedDeprecatedRules":"445"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"890","usedDeprecatedRules":"445"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"893","usedDeprecatedRules":"445"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"896","usedDeprecatedRules":"445"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"901","usedDeprecatedRules":"445"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"904","usedDeprecatedRules":"445"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913","usedDeprecatedRules":"445"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"445"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923","usedDeprecatedRules":"445"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"926","usedDeprecatedRules":"445"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"445"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/superstorm/Desktop/Projects/CascAid/client/src/index.js",[],["969","970"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/App.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/footer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/header.js",["971"],"import React from 'react';\r\nimport { Navbar, Nav, NavDropdown, Image } from 'react-bootstrap';\r\nimport * as RoutePath from '../../constants/route-paths';\r\nimport { Link } from 'react-router-dom';\r\n// import SearchBox from './search-box';\r\nimport ReactAutoSuggest from './react-autosuggest-lib';\r\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\r\nimport Avatar from 'react-avatar';\r\nimport GlobalNotification from './global-notification';\r\nimport GlobalConversation from './global-conversation';\r\nimport { get } from '@Actions';\r\nconst GetNameAndProfilePicture = (userType, basicInfo) => {\r\n    let name = '';\r\n    let profilePicture = '';\r\n    if (userType === 'individual') {\r\n        name = basicInfo.firstName ? basicInfo.firstName + ' ' : '';\r\n        name += basicInfo.lastName ? basicInfo.lastName + ' ' : '';\r\n        profilePicture = basicInfo.profilePicture || defaultIndividualProfilePicture;\r\n    } else if (userType === 'organization') {\r\n        name = basicInfo.name ? basicInfo.name : '';\r\n        profilePicture = basicInfo.profilePicture || defaultOrganizationProfilePicture;\r\n    }\r\n\r\n    return { name, profilePicture };\r\n};\r\nconst StaticPagesListRender = (props) => {\r\n    return (\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href={RoutePath.aboutUsPage}>About Us</Nav.Link>\r\n                <Nav.Link href={RoutePath.privacyPolicyPage}>Privacy Policy</Nav.Link>\r\n                <Nav.Link href={RoutePath.contactUsPage}>Contact Us</Nav.Link>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n    );\r\n};\r\nconst Header = (props) => {\r\n    const isAuth = props.isAuth || false;\r\n\r\n    if (isAuth && props.user._id) {\r\n        const { name, profilePicture } = GetNameAndProfilePicture(props.user.userType, props.basicInfo);\r\n        return (\r\n            <div className=\"header\">\r\n                <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        <Image src=\"/images/logo/logo8.png\" thumbnail rounded={10} style={{ height: '50px', width: 'auto', marginLeft: '64px' }} />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <StaticPagesListRender />\r\n                    {/* <Navbar.Toggle aria-controls=\"basic-navbar-nav\" /> */}\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <ReactAutoSuggest />\r\n                            <div style={{ width: 25 }}></div>\r\n                            <GlobalConversation user={props.user} />\r\n                            <GlobalNotification user={props.user} />\r\n                            <NavDropdown title={<Avatar size=\"30\" src={profilePicture} round=\"5px\" />} id=\"basic-nav-dropdown\" alignRight={true}>\r\n                                <NavDropdown.Item disabled={true}>Welcome, {name}</NavDropdown.Item>\r\n                                <NavDropdown.Divider />\r\n                                <Link to={RoutePath.signOutPage} className=\"dropdown-item\">\r\n                                    Sign out\r\n                                </Link>\r\n                            </NavDropdown>\r\n                            <div style={{ width: 25 }}></div>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"header\">\r\n                <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n                    <Navbar.Brand href=\"/\">\r\n                        <Image src=\"/images/logo/logo8.png\" thumbnail rounded={10} style={{ height: '50px', width: 'auto', marginLeft: '64px' }} />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <StaticPagesListRender />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Nav>\r\n                            <Link to={RoutePath.signInPage} className=\"nav-link\">\r\n                                Sign in\r\n                            </Link>\r\n                            <Link to={RoutePath.signUpPage} className=\"nav-link\">\r\n                                Sign up\r\n                            </Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default Header;\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/validate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/asyncValidate.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/index.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/userReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/authReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/route-layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/route-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/dashboard-layout.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-up.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-in.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/user-type-data.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-up-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/sign-in-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/loading-anim.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/input-render.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/reducer-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/side-nav.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/user-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/api-paths.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/complete-profile.js",["972","973","974"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '../../components/form_template/loading-anim';\nimport Step1 from '../../components/profile_step/step_1';\nimport Step2 from '../../components/profile_step/step_2';\nimport Step3 from '../../components/profile_step/step_3';\nimport Step4 from '../../components/profile_step/step_4';\nimport Step5 from '../../components/profile_step/step_5';\nimport Step6 from '../../components/profile_step/step_6';\nimport Step7 from '../../components/profile_step/step_7';\nimport { getUserInformation, setUserInformation, getAllAreaOfInterests } from '../../actions';\nimport { NotificationManager } from 'react-notifications';\nconst CompleteProfile = (props) => {\n    const [stepId, setStepId] = useState(2);\n    const [loading, setLoading] = useState(false);\n    const [image, setImage] = useState();\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        props.dispatch(getAllAreaOfInterests());\n        if (user && user._id) {\n            props.dispatch(getUserInformation(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setUserResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setStepId(props.setUserResponse.stepCompleted + 1);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setUserResponse]);\n    const changeStep = () => {\n        if (props.user && props.user.stepCompleted) {\n            setStepId(props.user.stepCompleted + 1);\n        }\n    };\n    const onSubmit = (values) => {\n        setLoading(true);\n        console.log('🚀 ~ file: complete-profile.js ~ line 44 ~ onSubmit ~ values', values);\n        if (stepId === 2) {\n            if (values.basicInfo) values.basicInfo.photo = image;\n            else\n                values.basicInfo = {\n                    photo: image,\n                };\n        }\n        props.dispatch(setUserInformation(props.auth.user._id, stepId, props.user, values));\n        setLoading(false);\n    };\n    useEffect(() => {\n        changeStep();\n    }, [props.user]);\n    const handleBackButton = (stepId) => {\n        if (stepId > 2) {\n            setStepId(stepId - 1);\n        }\n    };\n    const handleSkipButton = (stepId) => {\n        if (stepId < 5) {\n            setStepId(stepId + 1);\n        }\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setImage(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const steps = [\n        <Step1 />,\n        <Step1 />,\n        <Step2\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            image={image}\n            handlePictureUpload={handlePictureUpload}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step3\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            areaOfInterests={props.areaOfInterest.success ? props.areaOfInterest.areaOfInterests : []}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step4\n            userType={props.user.userType}\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n            handleSkipButton={handleSkipButton}\n        />,\n        <Step5\n            handleOnSubmit={props.handleSubmit((event) => {\n                onSubmit(event);\n            })}\n            handleBackButton={handleBackButton}\n        />,\n        <Step6 />,\n        <Step7 />,\n    ];\n    if (loading) return <LoadingAnim />;\n    else return steps[stepId];\n};\nconst mapStateToProps = (state) => {\n    const user = state.User.getUser.user;\n    const individual = state.User.getUser.individual;\n    const organization = state.User.getUser.organization;\n    let initialValues = {};\n    if (user && user.userType) {\n        if (user.userType === 'individual') initialValues = individual;\n        else if (user.userType === 'organization') initialValues = organization;\n    }\n    const setUserResponse = state.User.setUser;\n\n    return {\n        user,\n        individual,\n        organization,\n        initialValues,\n        setUserResponse,\n        areaOfInterest: state.AreaOfInterest.allAreaOfInterest,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CompleteProfile',\n        enableReinitialize: true,\n    })(CompleteProfile),\n);\n",["975","976"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/involvement-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-activity-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/privacy-search-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/hoc/auth.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/home.js",["977"],"import React, { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { followUser } from '../../actions/follow-action';\nimport {\n    cancelGoingPost,\n    cancelInterestedPost,\n    cancelLikePost,\n    changePostInterest,\n    getAllCommittedPersons,\n    getHomeFeed,\n    goingPost,\n    interestedPost,\n    likePost,\n} from '../../actions/post-action';\nimport { getAllSuggestedUsers } from '../../actions/user-action';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport HomePostFeeds from '@Components/home/home-post-feeds';\nimport HomeOrganizationSuggestions from '@Components/home/home-suggestions';\nimport CommittedPersonsModal from '@Components/post/committed-persons-list';\nimport { postDetailsPage, userDetailsPage } from '../../constants/route-paths';\nconst Home = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [committedModal, setCommittedModal] = useState(false);\n    const [committedLoading, setCommittedLoading] = useState(false);\n    const [committedList, setCommittedList] = useState([]);\n    const [cards, setCards] = useState({});\n\n    const handleFollowOrganization = (organizationId) => {\n        let cards_ = cards;\n        cards_[organizationId] = false;\n        setCards({ ...cards_ });\n        console.log({ followerId: userId, followingId: organizationId });\n        props.dispatch(followUser({ followerId: userId, followingId: organizationId }));\n    };\n    const handleClickCommittedButtons = (postId, type) => {\n        console.log('🚀 ~ file: home.js ~ line 20 ~ handleClickCommittedButtons ~ postId, type', postId, type);\n        setCommittedLoading(true);\n        getAllCommittedPersons(postId, type).then((response) => {\n            console.log('🚀 ~ file: home.js ~ line 22 ~ getAllCommittedPersons ~ response', response);\n            setCommittedModal(true);\n            setCommittedLoading(false);\n            if (response.success) {\n                setCommittedList(response.users);\n            } else {\n                alert('User List Not Found');\n            }\n        });\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            const user = props.auth.user;\n            setUserId(user._id);\n            props.dispatch(getHomeFeed());\n            props.dispatch(getAllSuggestedUsers(user._id, 'organization', 20));\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    useEffect(() => {\n        const { success } = props.OrganizationSuggestionResponse;\n        if (success) {\n            let cards = {};\n            const users = props.OrganizationSuggestionResponse.users;\n            for (let i = 0; i < users.length; i++) {\n                cards[users[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.OrganizationSuggestionResponse]);\n    const handleGotoPostDetails = (postType, postId) => {\n        props.history.push(postDetailsPage(postType, postId));\n    };\n    const handleGotoOrganizationDetails = (userId) => {\n        props.history.push(userDetailsPage('organization', userId));\n    };\n    const handleLikePost = (postId) => {\n        props.dispatch(likePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'like'));\n    };\n    const handleCancelLikePost = (postId) => {\n        props.dispatch(cancelLikePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'unlike'));\n    };\n\n    const handleInterestedPost = (postId) => {\n        props.dispatch(interestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'interested'));\n    };\n    const handleCancelInterestedPost = (postId) => {\n        console.log('🚀 ~ file: home.js ~ line 46 ~ handleCancelInterestedPost ~ postId', postId);\n        props.dispatch(cancelInterestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'uninterested'));\n    };\n\n    const handleGoingPost = (postId) => {\n        props.dispatch(goingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'going'));\n    };\n    const handleCancelGoingPost = (postId) => {\n        props.dispatch(cancelGoingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'ungoing'));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <CommittedPersonsModal\n                    committedModal={committedModal}\n                    committedLoading={committedLoading}\n                    committedList={committedList}\n                    setCommittedModal={setCommittedModal}\n                />\n                <Row>\n                    <Col className=\"parent-page-home\">\n                        <Row>\n                            <Col md=\"8\">\n                                <HomePostFeeds\n                                    handleGotoPostDetails={handleGotoPostDetails}\n                                    handleGotoOrganizationDetails={handleGotoOrganizationDetails}\n                                    allPosts={props.homeFeedResponse.success ? props.homeFeedResponse.allPosts : []}\n                                    handleLikePost={handleLikePost}\n                                    handleCancelLikePost={handleCancelLikePost}\n                                    handleInterestedPost={handleInterestedPost}\n                                    handleCancelInterestedPost={handleCancelInterestedPost}\n                                    handleGoingPost={handleGoingPost}\n                                    handleCancelGoingPost={handleCancelGoingPost}\n                                    userId={userId}\n                                    handleClickCommittedButtons={handleClickCommittedButtons}\n                                />\n                            </Col>\n                            <Col md=\"4\">\n                                <HomeOrganizationSuggestions\n                                    allOrganizations={\n                                        props.OrganizationSuggestionResponse && props.OrganizationSuggestionResponse.success\n                                            ? props.OrganizationSuggestionResponse.users\n                                            : []\n                                    }\n                                    cards={cards}\n                                    handleFollowOrganization={handleFollowOrganization}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const homeFeedResponse = state.Post.homeFeed;\n    const PostSuggestionResponse = state.Post.getAllSuggestions;\n    const OrganizationSuggestionResponse = state.User.getAllSuggestedUsers;\n    return { homeFeedResponse, PostSuggestionResponse, OrganizationSuggestionResponse };\n};\nexport default connect(mapStateToProps, null)(Home);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/user/sign-out.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/misc.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/country-and-state.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/races.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/area-of-interest-reducer.js",[],["978","979"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/organization-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/service-area-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-org-list.js",[],["980","981"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-organization.js",["982"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Nav } from 'react-bootstrap';\nimport OrganizationListView from '@Components/organization/organization-list-view';\nimport { getAllGlobalImpactAreas } from '../../actions/impact-area-action';\nimport { getAllFollowings, followUser, unfollowUser } from '../../actions/follow-action';\nimport { getAllEndorsees, endorseUser, cancelEndorseUser } from '../../actions/endorsement-action';\nimport { getAllUsers } from '../../actions/user-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport SearchMenu from '@Components/search/search-menu';\nimport OrganizationFilter from '@Components/search/organization-filters';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport OrganizationMapView from '@Components/organization/organization-map-view';\nimport Pagination from 'react-js-pagination';\nimport { defaultCurrentLocation } from '../../constants/default-user-information';\n\nconst SearchOrganization = (props) => {\n    const [userId, setUserId] = useState();\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [followObject, setFollowObject] = useState({});\n    const [endorseObject, setEndorseObject] = useState({});\n    const [filter, setFilter] = useState({\n        name: '',\n        impactAreas: [],\n        organizationTypes: [],\n        serviceArea: '',\n        address: '',\n        keyword: '',\n        keywords: [],\n    });\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(position);\n            if (position) {\n                const coords = position.coords;\n                setCurrentLocation({\n                    latitude: coords.latitude,\n                    longitude: coords.longitude,\n                });\n            }\n        });\n    }, []);\n    useEffect(() => {\n        const { success } = props.getAllFollowingsResponse;\n        if (success) {\n            let followObject_ = {};\n            const followings = props.getAllFollowingsResponse.followings;\n            for (let i = 0; i < followings.length; i++) {\n                followObject_[followings[i].followingId] = true;\n            }\n            setFollowObject({ ...followObject_ });\n        }\n    }, [props.getAllFollowingsResponse]);\n    useEffect(() => {\n        const { success } = props.getAllEndorseesResponse;\n        if (success) {\n            let endorseObject_ = {};\n            const endorsees = props.getAllEndorseesResponse.endorsees;\n            for (let i = 0; i < endorsees.length; i++) {\n                endorseObject_[endorsees[i].endorseeId] = true;\n            }\n            console.log('🚀 ~ file: search-organization.js ~ line 64 ~ useEffect ~ endorseObject_', endorseObject_);\n            setEndorseObject({ ...endorseObject_ });\n        }\n    }, [props.getAllEndorseesResponse]);\n    const resetFilter = () => {\n        setFilter({\n            name: '',\n            impactAreas: [],\n            organizationTypes: [],\n            serviceArea: '',\n            address: '',\n            keyword: '',\n            keywords: [],\n        });\n    };\n    const changeFilter = (key, value) => {\n        let filter_ = filter;\n        filter[key] = value;\n        console.log(filter_);\n        setFilter({ ...filter_ });\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllUsers({ ...filter, userType: 'organization' }));\n        if (userId) {\n            // props.dispatch(getAllFollowings(userId));\n            // props.dispatch(getAllEndorsees(userId));\n        }\n        setLoading(false);\n        setActivePage(1);\n        console.log('FFF', filter);\n    };\n    const gotoOrganizationDetails = (userId) => {\n        props.history.push(`/organization/details/${userId}`);\n    };\n    const handleFollowUser = (followingId) => {\n        props.dispatch(followUser({ followerId: userId, followingId }));\n        let followObject_ = followObject;\n        followObject_[followingId] = true;\n        setFollowObject({ ...followObject_ });\n    };\n    const handleUnfollowUser = (followingId) => {\n        props.dispatch(unfollowUser({ followerId: userId, followingId }));\n        let followObject_ = followObject;\n        followObject_[followingId] = false;\n        setFollowObject({ ...followObject_ });\n    };\n    const handleEndorseUser = (endorseeId) => {\n        props.dispatch(endorseUser({ endorserId: userId, endorseeId }));\n        let endorseObject_ = endorseObject;\n        endorseObject_[endorseeId] = true;\n        setEndorseObject({ ...endorseObject_ });\n    };\n    const handleCancelEndorseUser = (endorseeId) => {\n        props.dispatch(cancelEndorseUser({ endorserId: userId, endorseeId }));\n        let endorseObject_ = endorseObject;\n        endorseObject_[endorseeId] = false;\n        setEndorseObject({ ...endorseObject_ });\n    };\n\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            const user = props.auth.user;\n            if (user && user._id) {\n                setUserId(user._id);\n                props.dispatch(getAllFollowings(user._id));\n                props.dispatch(getAllEndorsees(user._id));\n            }\n            props.dispatch(getAllGlobalImpactAreas());\n            props.dispatch(getAllOrganizationTypes());\n\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row className=\"parent-page\">\n                    <Col lg={4}>\n                        <SearchMenu selected=\"organization\" />\n                        <hr />\n                        <OrganizationFilter\n                            changeFilter={changeFilter}\n                            resetFilter={resetFilter}\n                            handleOnApplyFilter={handleOnApplyFilter}\n                            filter={filter}\n                            organizationTypes={props.getOrganizationTypeResponse?.success ? props.getOrganizationTypeResponse.organizationTypes : []}\n                            impactAreas={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []}\n                            submitting={props.submitting}\n                        />\n                    </Col>\n                    <Col lg={8}>\n                        <Nav\n                            variant=\"pills\"\n                            activeKey={viewType}\n                            onSelect={(eventKey) => {\n                                setViewType(eventKey);\n                            }}\n                            size=\"sm\"\n                        >\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"list\" title=\"list\">\n                                    List\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"map\" title=\"map\">\n                                    Map\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <hr />\n                        {viewType === 'list' && (\n                            <>\n                                <Pagination\n                                    itemClass=\"page-item\"\n                                    linkClass=\"page-link\"\n                                    activePage={activePage}\n                                    itemsCountPerPage={30}\n                                    totalItemsCount={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.users.length : 0}\n                                    pageRangeDisplayed={5}\n                                    onChange={(page) => {\n                                        setActivePage(page);\n                                    }}\n                                />\n                                <OrganizationListView\n                                    allOrganizations={\n                                        props.getAllOrganizationsResponse.success\n                                            ? props.getAllOrganizationsResponse.users.slice((activePage - 1) * 30, activePage * 30 - 1)\n                                            : []\n                                    }\n                                    gotoOrganizationDetails={gotoOrganizationDetails}\n                                    followObject={followObject}\n                                    handleFollowUser={handleFollowUser}\n                                    handleUnfollowUser={handleUnfollowUser}\n                                    endorseObject={endorseObject}\n                                    handleEndorseUser={handleEndorseUser}\n                                    handleCancelEndorseUser={handleCancelEndorseUser}\n                                />\n                            </>\n                        )}\n                        {viewType === 'map' && (\n                            <OrganizationMapView\n                                allOrganizations={props.getAllOrganizationsResponse.success ? props.getAllOrganizationsResponse.users : []}\n                                gotoOrganizationDetails={gotoOrganizationDetails}\n                                zoom={8}\n                                currentLocation={currentLocation}\n                                followObject={followObject}\n                                handleFollowUser={handleFollowUser}\n                                handleUnfollowUser={handleUnfollowUser}\n                                endorseObject={endorseObject}\n                                handleEndorseUser={handleEndorseUser}\n                                handleCancelEndorseUser={handleCancelEndorseUser}\n                            />\n                        )}\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getOrganizationTypeResponse = state.OrganizationType.getAllOrganizationTypes;\n    const getAllOrganizationsResponse = state.User.getAllUsers;\n    const getAllFollowingsResponse = state.Follow.getAllFollowings;\n    const getAllEndorseesResponse = state.Endorsement.getAllEndorsees;\n    return {\n        getImpactAreaResponse,\n        getAllOrganizationsResponse,\n        getOrganizationTypeResponse,\n        getAllFollowingsResponse,\n        getAllEndorseesResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchOrganization);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/sample-org-list.js",[],["983","984"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/search-box.js",["985"],"import React from 'react';\nimport { ReactSearchAutocomplete } from 'react-search-autocomplete';\nimport { Form, FormControl } from 'react-bootstrap';\nfunction App() {\n    const movieItems = [\n        {\n            id: 0,\n            title: 'Titanic',\n            description: 'A movie about love',\n        },\n        {\n            id: 1,\n            title: 'Dead Poets Society',\n            description: 'A movie about poetry and the meaning of life',\n        },\n        {\n            id: 2,\n            title: 'Terminator 2',\n            description: 'A robot from the future is sent back in time',\n        },\n        {\n            id: 3,\n            title: 'Alien 2',\n            description: 'Ripley is back for a new adventure',\n        },\n    ];\n\n    const handleOnSearch = (string, results) => {\n        // onSearch will have as the first callback parameter\n        // the string searched and for the second the results.\n        console.log(string, results);\n    };\n\n    const handleOnSelect = (item) => {\n        // the item selected\n        console.log(item);\n    };\n\n    const handleOnFocus = () => {\n        console.log('Focused');\n    };\n\n    return (\n        <div style={{ minWidth: 100, zIndex: 5000 }}>\n            <Form inline>\n                {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" /> */}\n                {/* <Button variant=\"outline-light\">Search</Button> */}\n\n                <ReactSearchAutocomplete\n                    className=\"form-control mr-sm-2\"\n                    items={movieItems}\n                    fuseOptions={{ keys: ['title', 'description'] }} // Search on both fields\n                    resultStringKeyName=\"title\" // String to display in the results\n                    onSearch={handleOnSearch}\n                    onSelect={handleOnSelect}\n                    onFocus={handleOnFocus}\n                    showIcon={false}\n                    styling={{\n                        height: '34px',\n                        border: '1px solid darkgreen',\n                        borderRadius: '4px',\n                        backgroundColor: 'white',\n                        boxShadow: 'none',\n                        hoverBackgroundColor: 'lightgreen',\n                        color: 'darkgreen',\n                        fontSize: '12px',\n                        fontFamily: 'Courier',\n                        iconColor: 'green',\n                        lineColor: 'lightgreen',\n                        placeholderColor: 'darkgreen',\n                        zIndex: 5000,\n                    }}\n                />\n            </Form>\n        </div>\n    );\n}\n\nexport default App;\n",["986","987"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-involvement.js",["988","989","990","991"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { getInvolvement, setInvolvement, clearInvolvement } from '../../actions/user-action';\n\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualInvolvementForm from '@Components/individual/individual-involvement-form';\nimport { individualCompleteBasicInfoPage, individualCompletePrivacyPage } from '../../constants/route-paths';\n\nconst Involvement = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInvolvement(user._id));\n        }\n    };\n\n    const handleSetResponse = () => {\n        const { success, message } = props.setInvolvementResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompletePrivacyPage);\n                props.dispatch(clearInvolvement());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, involvement } = props.getInvolvementResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n        return () => {\n            props.dispatch(clearInvolvement());\n        };\n    }, [props.auth]);\n\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInvolvementResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInvolvementResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInvolvement(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(individualCompletePrivacyPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualInvolvementForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInvolvementResponse = state.User.getInvolvement;\n    const setInvolvementResponse = state.User.setInvolvement;\n\n    let initialValues = {};\n\n    if (getInvolvementResponse.success) {\n        initialValues = getInvolvementResponse.involvement;\n    }\n    console.log('initialValues', initialValues);\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInvolvementResponse,\n        setInvolvementResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Involvement',\n        enableReinitialize: true,\n    })(Involvement),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-basic-info.js",["992","993","994"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/user-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualBasicInfoForm from '@Components/individual/individual-basic-info-form';\nimport { individualCompleteInvolvementPage } from '../../constants/route-paths';\nimport { getAllLanguagesByUser } from '../../actions/language-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { getRacesByValues } from '../../constants/races';\n\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: '',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllLanguagesByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            props.dispatch(getBasicInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(individualCompleteInvolvementPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n        return () => {\n            props.dispatch(clearBasicInfo());\n        };\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            races: values.races && values.races.length > 0 ? values.races.map((race) => race.value) : [],\n        };\n        console.log('🚀 ~ file: individual-basic-info.js ~ line 66 ~ onSubmit ~ user', user);\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <>\n                <IndividualBasicInfoForm\n                    editMode={editMode}\n                    handleOnSubmit={props.handleSubmit((event) => {\n                        onSubmit(event);\n                    })}\n                    profilePicture={profilePicture}\n                    setProfilePicture={setProfilePicture}\n                    handlePictureUpload={handlePictureUpload}\n                    stateAndCountry={stateAndCountry}\n                    allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                    allLanguages={props.getLanguageResponse.success ? props.getLanguageResponse.languages : []}\n                />\n            </>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getLanguageResponse = state.Language.getLanguagesByUser;\n    const getBasicInfoResponse = state.User.getBasicInfo;\n    const setBasicInfoResponse = state.User.setBasicInfo;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues) {\n            if (initialValues.races && initialValues.races.length > 0 && typeof initialValues.races[0] === 'string')\n                initialValues.races = getRacesByValues(initialValues.races);\n            if (initialValues.address && !initialValues.address.country) {\n                initialValues.address.country = 'US';\n            } else if (!initialValues.address) {\n                initialValues.address = {\n                    country: 'US',\n                };\n            }\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getSkillResponse,\n        getLanguageResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-privacy.js",["995","996","997","998"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { getPrivacy, setPrivacy, clearPrivacy } from '@Actions/user-action';\nimport { getAllImpactAreasByUser } from '@Actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport IndividualPrivacyForm from '@Components/individual/individual-privacy-form';\nimport { individualCompleteInvolvementPage, individualCompleteMembershipPage } from '../../constants/route-paths';\nconst Privacy = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getPrivacy(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setPrivacyResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.dispatch(clearPrivacy());\n                props.history.push(individualCompleteMembershipPage);\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, privacy } = props.getPrivacyResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n        return () => {\n            props.dispatch(clearPrivacy());\n        };\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getPrivacyResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setPrivacyResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setPrivacy(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(individualCompleteInvolvementPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <IndividualPrivacyForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getPrivacyResponse = state.User.getPrivacy;\n    const setPrivacyResponse = state.User.setPrivacy;\n    let initialValues = {};\n\n    if (getPrivacyResponse.success) {\n        initialValues = getPrivacyResponse.privacy;\n    }\n    if (initialValues._id) {\n    } else {\n        initialValues.isEmailSearchable = true;\n        initialValues.isUserSearchable = true;\n    }\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPrivacyResponse,\n        setPrivacyResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'Privacy',\n        enableReinitialize: true,\n    })(Privacy),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-details.js",["999","1000","1001","1002"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getUserPublicInfo } from '../../actions/user-action';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport DetailsView from '@Components/individual/individual-details-view';\nimport { checkIfFriends, createFriendship, acceptFriendship, rejectFriendship, deleteFriendship } from '../../actions/friendship-action';\nimport { followUser, checkIfFollower, unfollowUser } from '../../actions/follow-action';\n\nconst IndividualDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [friendAndFollowFlag, setFriendAndFollowFlag] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        const individualUserId = props.match.params.userId;\n        if (user.userType === 'individual') {\n            setUserId(user._id);\n            if (individualUserId !== user._id) {\n                setFriendAndFollowFlag(true);\n                props.dispatch(checkIfFriends(user._id, individualUserId));\n                props.dispatch(checkIfFollower(user._id, individualUserId));\n            }\n        }\n        props.dispatch(getUserPublicInfo(individualUserId));\n    };\n    const handleCreateFriendship = () => {\n        const friendship = {\n            senderId: userId,\n            receiverId: props.match.params.userId,\n        };\n        // props.dispatch(followUser({ followerId: userId, followingId: props.match.params.userId }));\n        props.dispatch(createFriendship(friendship));\n    };\n    const handleAcceptFriendship = (friendshipId) => {\n        props.dispatch(acceptFriendship(friendshipId));\n        // props.dispatch(followUser({ followerId: userId, followingId: props.match.params.userId }));\n    };\n    const handleRejectFriendship = (friendshipId) => {\n        props.dispatch(rejectFriendship(friendshipId));\n    };\n    const handleDeleteFriendship = (friendshipId) => {\n        props.dispatch(deleteFriendship(friendshipId));\n        props.dispatch(unfollowUser({ followerId: userId, followingId: props.match.params.userId }));\n    };\n    const handleFollowUser = () => {\n        props.dispatch(followUser({ followerId: userId, followingId: props.match.params.userId }));\n    };\n    const handleUnfollowUser = () => {\n        props.dispatch(unfollowUser({ followerId: userId, followingId: props.match.params.userId }));\n    };\n    useEffect(() => {\n        getInitialInfo();\n        return () => {\n            setFriendAndFollowFlag(false);\n        };\n    }, [props.auth, props.match.params.userId]);\n    useEffect(() => {\n        const user = props.auth.user;\n        const individualUserId = props.match.params.userId;\n        if (user.userType === 'individual') {\n            setUserId(user._id);\n            if (individualUserId !== user._id) {\n                setFriendAndFollowFlag(true);\n                props.dispatch(checkIfFriends(user._id, individualUserId));\n            }\n        }\n    }, [props.setFriendshipResponse, props.acceptFriendshipResponse, props.rejectFriendshipResponse, props.deleteFriendshipResponse]);\n    useEffect(() => {\n        const user = props.auth.user;\n        const individualUserId = props.match.params.userId;\n        if (user.userType === 'individual') {\n            setUserId(user._id);\n            if (individualUserId !== user._id) {\n                setFriendAndFollowFlag(true);\n                props.dispatch(checkIfFollower(user._id, individualUserId));\n            }\n        }\n    }, [props.getFollowResponse, props.getUnfollowResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <DetailsView\n                            individual={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.user : {}}\n                            friendship={props.getCheckIfFriendsResponse.success ? props.getCheckIfFriendsResponse.friendship : {}}\n                            follows={props.getCheckIfFollowerResponse.success ? props.getCheckIfFollowerResponse.follows : {}}\n                            handleCreateFriendship={handleCreateFriendship}\n                            handleAcceptFriendship={handleAcceptFriendship}\n                            handleRejectFriendship={handleRejectFriendship}\n                            handleFollowUser={handleFollowUser}\n                            handleUnfollowUser={handleUnfollowUser}\n                            friendAndFollowFlag={friendAndFollowFlag}\n                            userId={userId}\n                            individualUserId={props.match.params.userId}\n                            handleDeleteFriendship={handleDeleteFriendship}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.User.getUserPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n    const getCheckIfFriendsResponse = state.Friendship.checkIfFriends;\n    const setFriendshipResponse = state.Friendship.setFriendship;\n    const acceptFriendshipResponse = state.Friendship.acceptFriendship;\n    const rejectFriendshipResponse = state.Friendship.rejectFriendship;\n    const deleteFriendshipResponse = state.Friendship.deleteFriendship;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n        getCheckIfFriendsResponse,\n        setFriendshipResponse,\n        acceptFriendshipResponse,\n        rejectFriendshipResponse,\n        deleteFriendshipResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(IndividualDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-basic-info.js",["1003","1004","1005"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { getBasicInfo, setBasicInfo, clearBasicInfo } from '../../actions/user-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationBasicInfoForm from '@Components/organization/organization-basic-info-form';\nimport { organizationCompleteServiceInfoPage } from '../../constants/route-paths';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nconst BasicInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [profilePicture, setProfilePicture] = useState();\n    const [editMode, setEditMode] = useState(false);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [stateAndCountry, setStateAndCountry] = useState({\n        state: '',\n        country: 'UnitedStates',\n    });\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getBasicInfo(user._id));\n        }\n        props.dispatch(getAllOrganizationTypes());\n    };\n    const handleSetResponse = () => {\n        console.log('RESPONSE', props.setBasicInfoResponse);\n        const { success, message } = props.setBasicInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            const url = window.location.pathname;\n            if (url.split('/')[1] !== 'edit') {\n                props.history.push(organizationCompleteServiceInfoPage);\n                props.dispatch(clearBasicInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, basicInfo } = props.getBasicInfoResponse;\n        if (success && basicInfo) {\n            if (basicInfo.profilePicture) setProfilePicture(basicInfo.profilePicture);\n            if (basicInfo.address && basicInfo.address.country) {\n                setStateAndCountry({\n                    state: basicInfo.address.state,\n                    country: basicInfo.address.country,\n                });\n                setLocation({\n                    latitude: basicInfo.address.latitude,\n                    longitude: basicInfo.address.longitude,\n                });\n            }\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n        return () => {\n            props.dispatch(clearBasicInfo());\n        };\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getBasicInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setBasicInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        let user = {\n            ...values,\n            profilePicture: profilePicture,\n            organizationTypes: values.organizationTypes && values.organizationTypes.length > 0 ? values.organizationTypes.map((type) => type._id) : [],\n            address: {\n                ...values.address,\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n        };\n\n        props.dispatch(setBasicInfo(props.auth.user._id, user));\n        setLoading(false);\n    };\n    const handlePictureUpload = (event) => {\n        var file = event.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (event.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                setProfilePicture(reader.result);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationBasicInfoForm\n                location={location}\n                setLocation={setLocation}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                profilePicture={profilePicture}\n                setProfilePicture={setProfilePicture}\n                handlePictureUpload={handlePictureUpload}\n                stateAndCountry={stateAndCountry}\n                allOrganizationTypes={props.getAllOrganizationTypesResponse.success ? props.getAllOrganizationTypesResponse.organizationTypes : []}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getBasicInfoResponse = state.User.getBasicInfo;\n    const setBasicInfoResponse = state.User.setBasicInfo;\n    const getAllOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n    if (getBasicInfoResponse.success) {\n        initialValues = getBasicInfoResponse.basicInfo;\n        if (initialValues.address && !initialValues.address.country) {\n            initialValues.address.country = 'US';\n        } else if (!initialValues.address) {\n            initialValues.address = {\n                country: 'US',\n            };\n        }\n    }\n\n    return {\n        initialValues,\n        getBasicInfoResponse,\n        setBasicInfoResponse,\n        getAllOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'BasicInfo',\n        enableReinitialize: true,\n    })(BasicInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-service-info.js",["1006","1007","1008","1009","1010"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { getServiceInfo, setServiceInfo, clearServiceInfo } from '../../actions/user-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllOrganizationTypes } from '../../actions/organization-type-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationServiceInfoForm from '@Components/organization/organization-service-info-form';\nimport { homePage, organizationCompleteBasicInfoPage, organizationCompleteMembershipPage } from '../../constants/route-paths';\n\nconst ServiceInfo = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllOrganizationTypes());\n            props.dispatch(getServiceInfo(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setServiceInfoResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            if (!editMode) {\n                props.history.push(organizationCompleteMembershipPage);\n                props.dispatch(clearServiceInfo());\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, serviceInfo } = props.getServiceInfoResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getServiceInfoResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setServiceInfoResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setServiceInfo(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteBasicInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(organizationCompleteMembershipPage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationServiceInfoForm\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allOrganizationTypes={props.getOrganizationTypesResponse.success ? props.getOrganizationTypesResponse.organizationTypes : []}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log('ST', state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getServiceInfoResponse = state.User.getServiceInfo;\n    const setServiceInfoResponse = state.User.setServiceInfo;\n    const getOrganizationTypesResponse = state.OrganizationType.getAllOrganizationTypes;\n    let initialValues = {};\n\n    if (getServiceInfoResponse.success) {\n        initialValues = getServiceInfoResponse.serviceInfo;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getServiceInfoResponse,\n        setServiceInfoResponse,\n        getOrganizationTypesResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'ServiceInfo',\n        enableReinitialize: true,\n    })(ServiceInfo),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-internal-link.js",["1011","1012","1013","1014"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { getInternalLink, setInternalLink, clearInternalLink } from '../../actions/organization-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { NotificationManager } from 'react-notifications';\nimport OrganizationInternalLinkForm from '@Components/organization/organization-internal-link-form';\nimport { organizationCompleteServiceInfoPage, homePage } from '../../constants/route-paths';\nconst InternalLink = (props) => {\n    const [loading, setLoading] = useState(false);\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n\n        if (user && user._id) {\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getInternalLink(user._id));\n        }\n    };\n    const handleSetResponse = () => {\n        const { success, message } = props.setInternalLinkResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(clearInternalLink());\n            props.history.push(homePage);\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    };\n    const handleGetResponse = () => {\n        const { success, internalLink } = props.getInternalLinkResponse;\n        if (success) {\n        }\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth]);\n    useEffect(() => {\n        handleGetResponse();\n    }, [props.getInternalLinkResponse]);\n    useEffect(() => {\n        handleSetResponse();\n    }, [props.setInternalLinkResponse]);\n\n    const onSubmit = (values) => {\n        setLoading(true);\n        props.dispatch(setInternalLink(props.auth.user._id, values));\n        setLoading(false);\n    };\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteServiceInfoPage);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <OrganizationInternalLinkForm\n                handleOnSubmit={props.handleSubmit((event) => {\n                    onSubmit(event);\n                })}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                handleBackButton={handleBackButton}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getInternalLinkResponse = state.User.getInternalLink;\n    const setInternalLinkResponse = state.User.setInternalLink;\n    let initialValues = {};\n\n    if (getInternalLinkResponse.success) {\n        initialValues = getInternalLinkResponse.internalLink;\n    }\n\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getInternalLinkResponse,\n        setInternalLinkResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'InternalLink',\n        enableReinitialize: true,\n    })(InternalLink),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-details.js",["1015"],"import React, { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getUserPublicInfo } from '../../actions/user-action';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport DetailsView from '@Components/organization/organization-details-view';\nimport { followUser, unfollowUser, checkIfFollower } from '../../actions/follow-action';\nimport { endorseUser, cancelEndorseUser, checkIfEndorses } from '../../actions/endorsement-action';\nimport SideSubMenu from '@Components/organization/organization-sub-menu';\n\nconst OrganizationDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [follows, setFollows] = useState(false);\n    const [endorses, setEndorses] = useState(false);\n    const getInitialInfo = () => {\n        const userId = props.match.params.userId;\n        props.dispatch(getUserPublicInfo(userId));\n        const user = props.auth.user;\n        props.dispatch(checkIfFollower(user._id, userId));\n        props.dispatch(checkIfEndorses(user._id, userId));\n    };\n    useEffect(() => {\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n    useEffect(() => {\n        const { success } = props.getCheckIfFollowerResponse;\n        if (success) {\n            setFollows(props.getCheckIfFollowerResponse.follows);\n        }\n    }, [props.getCheckIfFollowerResponse]);\n    useEffect(() => {\n        const { success } = props.getCheckIfEndorsesResponse;\n        if (success) {\n            setEndorses(props.getCheckIfEndorsesResponse.endorses);\n        }\n    }, [props.getCheckIfEndorsesResponse]);\n\n    const handleFollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(followUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleUnfollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(unfollowUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getFollowResponse;\n        if (success) {\n            setFollows(true);\n        } else if (success === false) {\n        }\n    }, [props.getFollowResponse]);\n    useEffect(() => {\n        const { success } = props.getUnfollowResponse;\n        if (success) {\n            setFollows(false);\n        } else if (success === false) {\n        }\n    }, [props.getUnfollowResponse]);\n\n    const handleEndorseClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(endorseUser({ endorserId: user._id, endorseeId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleCancelEndorseClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(cancelEndorseUser({ endorserId: user._id, endorseeId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getEndorseResponse;\n        if (success) {\n            setEndorses(true);\n        } else if (success === false) {\n        }\n    }, [props.getEndorseResponse]);\n    useEffect(() => {\n        const { success } = props.getCancelEndorseResponse;\n        if (success) {\n            setEndorses(false);\n        } else if (success === false) {\n        }\n    }, [props.getCancelEndorseResponse]);\n    const gotoPage = (url) => {\n        props.history.push(url);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <Row>\n                            <Col className=\"right-align\" sm=\"2\">\n                                <SideSubMenu\n                                    activePage=\"About\"\n                                    organization={props.getPublicInfoResponse && props.getPublicInfoResponse.success ? props.getPublicInfoResponse.user : {}}\n                                    handleFollowClick={handleFollowClick}\n                                    handleUnfollowClick={handleUnfollowClick}\n                                    follows={follows}\n                                    handleEndorseClick={handleEndorseClick}\n                                    handleCancelEndorseClick={handleCancelEndorseClick}\n                                    endorses={endorses}\n                                    gotoPage={gotoPage}\n                                />\n                            </Col>\n                            <Col sm=\"9\" className=\"left-border\">\n                                <DetailsView\n                                    organization={props.getPublicInfoResponse && props.getPublicInfoResponse.success ? props.getPublicInfoResponse.user : {}}\n                                    memberships={\n                                        props.getPublicInfoResponse && props.getPublicInfoResponse.success ? props.getPublicInfoResponse.memberships : []\n                                    }\n                                    handleFollowClick={handleFollowClick}\n                                    handleUnfollowClick={handleUnfollowClick}\n                                    follows={follows}\n                                    handleEndorseClick={handleEndorseClick}\n                                    handleCancelEndorseClick={handleCancelEndorseClick}\n                                    endorses={endorses}\n                                />\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.User.getUserPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n\n    const getCheckIfEndorsesResponse = state.Endorsement.checkIfEndorses;\n    const getEndorseResponse = state.Endorsement.endorseUser;\n    const getCancelEndorseResponse = state.Endorsement.cancelEndorseUser;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n        getCheckIfEndorsesResponse,\n        getEndorseResponse,\n        getCancelEndorseResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(OrganizationDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-basic-info-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/step-headers.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/individual-action.js",[],["1016","1017"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/individual-da.js",[],["1018","1019"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/individualReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organizationReducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-involvement-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/impact-area-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/impact-area-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/impact-area-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-privacy-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/react-autosuggest-lib.js",["1020"],"import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport { withRouter } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\nimport { searchUsersByName } from '@Actions';\nimport * as RoutePaths from '../../constants/route-paths';\nconst individualNameRender = (individual) => {\n    let name = individual.firstName ? individual.firstName + ' ' : '';\n    name += individual.lastName ? individual.lastName : '';\n    return name;\n};\nfunction escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction getSuggestionValue(suggestion) {\n    if (suggestion.userType === 'organization') return suggestion.name;\n    else if (suggestion.userType === 'individual') return individualNameRender(suggestion);\n}\n\nfunction renderSectionTitle(section) {\n    return <strong>{section.userType}</strong>;\n}\n\nfunction getSectionSuggestions(section) {\n    return section.users;\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: '',\n            suggestions: [],\n        };\n    }\n    individualNameRender = (individual) => {\n        let name = individual.firstName ? individual.firstName + ' ' : '';\n        name += individual.lastName ? individual.lastName : '';\n        return name;\n    };\n    cutOffName = (name) => {\n        if (name && name.length <= 25) return name;\n        else return name.substr(0, 24) + ' ...';\n    };\n    renderSuggestion = (suggestion) => {\n        return (\n            <div\n                style={{ width: '100%' }}\n                onClick={() => {\n                    this.props.history.push(`/${suggestion.userType}/details/${suggestion._id}`);\n                }}\n            >\n                {suggestion.userType === 'individual' && <small className=\"suggestion-text\">{this.cutOffName(this.individualNameRender(suggestion))}</small>}\n                {suggestion.userType === 'organization' && <small className=\"suggestion-text\">{this.cutOffName(suggestion.name)}</small>}\n            </div>\n        );\n    };\n    getSuggestions = async (value) => {\n        const escapedValue = escapeRegexCharacters(value.trim());\n\n        if (escapedValue === '') {\n            return [];\n        }\n        const users = await searchUsersByName(escapedValue).then((response) => {\n            if (response.success) {\n                return response.users;\n            } else return [];\n        });\n\n        return users;\n    };\n    onChange = (event, { newValue, method }) => {\n        this.setState({\n            value: newValue,\n        });\n    };\n\n    onSuggestionsFetchRequested = async ({ value }) => {\n        const users = await this.getSuggestions(value);\n\n        this.setState({\n            suggestions: users,\n        });\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: [],\n        });\n    };\n    handleOnSubmit = () => {\n        // alert('SEARCH:' + this.state.value);\n        if (this.state.value && this.state.value.length > 0) {\n            this.props.history.push(RoutePaths.userSearchByNamePage(this.state.value));\n        }\n    };\n    render() {\n        const { value, suggestions } = this.state;\n        const inputProps = {\n            placeholder: 'Type name...',\n            value,\n            onChange: this.onChange,\n        };\n\n        return (\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    this.handleOnSubmit();\n                }}\n                style={{ marginTop: '8px' }}\n            >\n                <Autosuggest\n                    multiSection={true}\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={this.renderSuggestion}\n                    renderSectionTitle={renderSectionTitle}\n                    getSectionSuggestions={getSectionSuggestions}\n                    inputProps={inputProps}\n                />\n            </form>\n        );\n    }\n}\n\nexport default withRouter(App);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/search-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-basic-info-form.js",["1021","1022","1023"],"import React, { useState, useEffect } from 'react';\nimport { Field } from 'redux-form';\nimport { SelectRender, InputRender, DatePickerRender, TextRender, MultiSelectRender } from '../form_template/input-render';\nimport ProfilePictureUploader from '@Components/user/profile-picture-changer';\nimport { Container, Row, Col, ProgressBar, Button, Image } from 'react-bootstrap';\nimport { countries, states } from '../../constants/country-and-state';\nimport { organizationHeaders, totalOrganizationStep } from '../../constants/step-headers';\nimport PostGeoCoding from '../post/post-geo-coding';\nconst BasicInfoForm = (props) => {\n    const submitting = props.submitting;\n    const allOrganizationTypes = props.allOrganizationTypes;\n    const editMode = props.editMode;\n    console.log('PROPS', props);\n    const [selectedCountry, setSelectedCountry] = useState(props.stateAndCountry.country ? props.stateAndCountry.country : 'US');\n    const [selectedState, setSelectedState] = useState(props.stateAndCountry.state);\n    useEffect(() => {\n        setSelectedCountry(props.stateAndCountry.country);\n    }, [props.stateAndCountry.country]);\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"9\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        {editMode ? (\n                            <h4>Basic Information</h4>\n                        ) : (\n                            <div>\n                                <p>\n                                    Step {organizationHeaders[2].stepNo} of {totalOrganizationStep}\n                                </p>\n                                <ProgressBar now={organizationHeaders[2].percent} />\n                                <br />\n                                <h4>{organizationHeaders[2].header}</h4>\n\n                                <div style={{ height: 20 }} />\n                            </div>\n                        )}\n                        <Row>\n                            <Col>\n                                <Field name=\"name\" type=\"text\" component={InputRender} label=\"Name\" placeholder=\"Your organization name...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"phone\" type=\"text\" component={InputRender} label=\"Phone\" placeholder=\"000-0000-000\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"ein\" type=\"text\" component={InputRender} label=\"EIN\" placeholder=\"ABCD...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"website\" type=\"text\" component={InputRender} label=\"Website URL\" placeholder=\"www.abc.xyz\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"contactEmail\" type=\"text\" component={InputRender} label=\"Contact Email\" placeholder=\"help@abc.com\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"mission\"\n                                    type=\"text\"\n                                    component={TextRender}\n                                    label=\"Mission\"\n                                    placeholder=\"Your organization mission...\"\n                                    col1={2}\n                                    col2={10}\n                                />\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"description\"\n                                    type=\"text\"\n                                    component={TextRender}\n                                    label=\"Description\"\n                                    placeholder=\"Your organization mission...\"\n                                    col1={2}\n                                    col2={10}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"organizationTypes\"\n                                    component={MultiSelectRender}\n                                    label=\"Organization Type\"\n                                    col1={3}\n                                    col2={9}\n                                    options={allOrganizationTypes}\n                                    zIndex={2000}\n                                />\n                            </Col>\n                        </Row>\n\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street1\" type=\"text\" component={InputRender} label=\"Street 1\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.street2\" type=\"text\" component={InputRender} label=\"Street 2\" placeholder=\"\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field name=\"address.city\" type=\"text\" component={InputRender} label=\"City\" placeholder=\"\" />\n                            </Col>\n                            <Col>\n                                <Field name=\"address.code\" type=\"text\" component={InputRender} label=\"ZIP Code\" placeholder=\"1234...\" />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <Field\n                                    name=\"address.country\"\n                                    type=\"text\"\n                                    component={SelectRender}\n                                    label=\"Country\"\n                                    onChange={(e, value) => {\n                                        setSelectedCountry(value);\n                                    }}\n                                    col1={4}\n                                    col2={8}\n                                >\n                                    {countries.map((country, i) => {\n                                        return (\n                                            <option key={i} value={country.code}>\n                                                {country.name}\n                                            </option>\n                                        );\n                                    })}\n                                </Field>\n                            </Col>\n                            <Col>\n                                <Field name=\"address.state\" type=\"text\" component={SelectRender} label=\"State\" col1={4} col2={8}>\n                                    {selectedCountry &&\n                                        states[selectedCountry] &&\n                                        states[selectedCountry].map((state, i) => {\n                                            return (\n                                                <option key={i} value={state.code}>\n                                                    {state.name}\n                                                </option>\n                                            );\n                                        })}\n                                </Field>\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col sm={4}>Location</Col>\n                            <Col sm={8}>\n                                <PostGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                            </Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col className=\"right-align\">\n                                {props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}\n                            </Col>\n                            <Col>\n                                <ProfilePictureUploader\n                                    profilePicture={props.profilePicture}\n                                    handlePictureUpload={props.handlePictureUpload}\n                                    setProfilePicture={props.setProfilePicture}\n                                />\n                            </Col>\n                        </Row>\n                        {/* <Row>\n\n                            <Col className=\"right-align\">{props.profilePicture && <Image height=\"100\" width=\"auto\" src={props.profilePicture} rounded className=\"profile-picture\" />}</Col>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row> */}\n                        <br />\n                        <Row>\n                            <Col sm=\"6\"></Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn next-btn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    {editMode ? 'Save' : 'Next'}\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BasicInfoForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-service-info-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-internal-link-form.js",["1024","1025"],"import React from 'react';\nimport { Field } from 'redux-form';\nimport { SwitchRender, SelectRender, InputRender } from '../form_template/input-render';\nimport { Container, Row, Col, ProgressBar, Button } from 'react-bootstrap';\nimport { organizationHeaders, totalOrganizationStep } from '@Constants/step-headers';\nconst InternalLinkForm = (props) => {\n    const submitting = props.submitting;\n\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <br />\n\n                        <div>\n                            <p>\n                                Step {organizationHeaders[4].stepNo} of {totalOrganizationStep}\n                            </p>\n                            <ProgressBar now={organizationHeaders[4].percent} />\n                            <br />\n                            <h4>{organizationHeaders[4].header}</h4>\n                        </div>\n\n                        <Field name=\"events\" type=\"text\" component={InputRender} label=\"Events link\" />\n                        <Field name=\"rss\" type=\"text\" component={InputRender} label=\"RSS link\" />\n                        <Field name=\"blog\" type=\"text\" component={InputRender} label=\"Blogs link\" />\n                        <br />\n                        <Row>\n                            <Col sm=\"6\">\n                                <Button\n                                    className=\"btn signUpBtn\"\n                                    size=\"sm\"\n                                    onClick={() => {\n                                        props.handleBackButton();\n                                    }}\n                                >\n                                    Back\n                                </Button>\n                            </Col>\n                            <Col sm=\"6\" className=\"right-align\">\n                                <Button className=\"btn signUpBtn margin-on-left\" size=\"sm\" disabled={submitting} type=\"submit\">\n                                    Next\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                    </form>\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default InternalLinkForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-details-view.js",["1026"],"import { getCountryByCode, getStateByCountryAndCode } from '@Constants/country-and-state';\nimport { defaultIndividualProfilePicture } from '@Constants/default-images';\nimport React from 'react';\nimport { Badge, Col, Container, Image, Row } from 'react-bootstrap';\nimport {\n    AcceptFriendshipButtonRender,\n    AddFriendshipButtonRender,\n    DeleteFriendshipButtonRender,\n    FriendDropdownRender,\n    RejectFriendshipButtonRender,\n} from '../form_template/buttons-render';\nconst DetailsView = (props) => {\n    const individual = props.individual;\n    const friendship = props.friendship;\n    const userId = props.userId;\n    const individualUserId = props.individualUserId;\n    const follows = props.follows;\n    console.log('🚀 ~ file: individual-details-view.js ~ line 19 ~ DetailsView ~ follows', friendship);\n    const infoRender = (label, value) => {\n        if (value)\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value\n                            .toString()\n                            .split('\\n')\n                            .map((para, i) => (\n                                <p key={i} className=\"justify-text\">\n                                    {para}\n                                </p>\n                            ))}\n                    </Col>\n                </Row>\n            );\n        else return <></>;\n    };\n\n    const tagsRender = (label, tags) => {\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {tags.map((tag, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {tag.label}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            // if (address.street1) fullAddress += address.street1 + ', ';\n            // if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.code) fullAddress += address.code + '\\n';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + '\\n';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n\n    if (individual._id && individual.userType === 'individual') {\n        console.log('🚀 ~ file: individual-details-view.js ~ line 76 ~ DetailsView ~ individual', individual);\n        const basicInfo = individual.basicInfo;\n        const involvement = individual.involvement;\n        const impactAreas = involvement.impactAreas;\n        const skills = basicInfo.skills;\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"right-align\" sm=\"2\">\n                        <Image\n                            className=\"left-image\"\n                            src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultIndividualProfilePicture}\n                            width=\"100%\"\n                            thumbnail\n                        />\n                        <hr />\n                        {props.friendAndFollowFlag && (\n                            <>\n                                {!friendship._id && (\n                                    <AddFriendshipButtonRender\n                                        onClick={() => {\n                                            props.handleCreateFriendship();\n                                        }}\n                                    />\n                                )}\n                                {friendship.status === 'pending' ? (\n                                    <>\n                                        {friendship.senderId === userId ? (\n                                            <DeleteFriendshipButtonRender\n                                                onClick={() => {\n                                                    props.handleDeleteFriendship(friendship._id);\n                                                }}\n                                            />\n                                        ) : (\n                                            <>\n                                                <AcceptFriendshipButtonRender\n                                                    onClick={() => {\n                                                        props.handleAcceptFriendship(friendship._id);\n                                                    }}\n                                                />\n                                                <RejectFriendshipButtonRender\n                                                    onClick={() => {\n                                                        props.handleRejectFriendship(friendship._id);\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                    </>\n                                ) : (\n                                    <></>\n                                )}\n                                {friendship.status === 'accepted' && (\n                                    <FriendDropdownRender\n                                        handleUnfriendButton={() => {\n                                            props.handleDeleteFriendship(friendship._id);\n                                        }}\n                                        handleUnfollowButton={() => {\n                                            props.handleUnfollowUser();\n                                        }}\n                                        handleFollowButton={() => {\n                                            props.handleFollowUser();\n                                        }}\n                                        follows={follows}\n                                    />\n                                )}\n                            </>\n                        )}\n                    </Col>\n                    <Col sm=\"9\" className=\"left-border\">\n                        <h3>{basicInfo.firstName + ' ' + basicInfo.lastName}</h3>\n                        {/* {infoRender('Phone', basicInfo.phone)} */}\n                        {infoRender('Kids', basicInfo.kids)}\n                        {/* {infoRender('Date Of Birth', moment(basicInfo.dateOfBirth).format('LL'))} */}\n                        {/* {tagsRender('Race', getRacesByValues(basicInfo.races))} */}\n                        {/* {infoRender('Gender', getGenderByValue(basicInfo.gender))} */}\n                        {/* {tagsRender('Language Fluency', getLanguagesByValues(basicInfo.languages))} */}\n                        <br />\n                        {infoRender('Address', addressMaker(basicInfo.address))}\n                        <div style={{ height: 25 }} />\n                        <hr />\n                        <div style={{ height: 25 }} />\n                        {infoRender('About Me', involvement.communityInvolvement)}\n                        {tagsRender('Impact Area', impactAreas)}\n                        {tagsRender('Skill', skills)}\n                        <div style={{ height: 25 }} />\n                    </Col>\n                </Row>\n                <div style={{ height: 25 }} />\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-details-view.js",["1027","1028"],"import { getCountryByCode, getStateByCountryAndCode } from '@Constants/country-and-state';\nimport { defaultIndividualProfilePicture } from '@Constants/default-images';\nimport { getMembershipByValue } from '@Constants/membership-types';\nimport React from 'react';\nimport { Badge, Col, Container, Image, Row, Table } from 'react-bootstrap';\nimport { ImpactAreasRender } from '../form_template/details-render';\nconst TimeRender = (time) => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return `${months[time.month]}-${time.year}`;\n};\n\nconst DetailsView = (props) => {\n    const organization = props.organization;\n    const memberships = props.memberships;\n    console.log('🚀 ~ file: organization-details-view.js ~ line 9 ~ DetailsView ~ memberships', memberships);\n    const follows = props.follows;\n    const infoRender = (label, value) => {\n        if (value) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {value.split('\\n').map((para, i) => (\n                            <p key={i} className=\"justify-text\">\n                                {para}\n                            </p>\n                        ))}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n\n    const keywordsRender = (label, keywords) => {\n        return (\n            <Row>\n                <Col md=\"3\">\n                    <b>{label}</b>\n                </Col>\n                <Col md=\"9\">\n                    {keywords.map((key, i) => {\n                        return (\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                {key}\n                            </Badge>\n                        );\n                    })}\n                </Col>\n            </Row>\n        );\n    };\n    const tagsRender = (label, tags) => {\n        if (tags && tags.length > 0) {\n            return (\n                <Row>\n                    <Col md=\"3\">\n                        <b>{label}</b>\n                    </Col>\n                    <Col md=\"9\">\n                        {tags.map((tag, i) => {\n                            if (tag)\n                                return (\n                                    <Badge variant=\"primary\" key={i} className=\"badge-single\">\n                                        {tag.label}\n                                    </Badge>\n                                );\n                        })}\n                    </Col>\n                </Row>\n            );\n        } else return <></>;\n    };\n\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n            if (address.country) fullAddress += getCountryByCode(address.country);\n        }\n        return fullAddress;\n    };\n    if (organization._id && organization.userType === 'organization') {\n        const basicInfo = organization.basicInfo;\n        const serviceInfo = organization.serviceInfo;\n        const impactAreas = serviceInfo.impactAreas;\n        console.log(basicInfo);\n        return (\n            <>\n                <h3>{basicInfo.name}</h3>\n                {tagsRender('Organization Type', basicInfo.organizationTypes)}\n                {infoRender('Contact Email', basicInfo.contactEmail)}\n                {infoRender('Website', basicInfo.website)}\n\n                {infoRender('Phone', basicInfo.phone)}\n                {infoRender('EIN', basicInfo.ein)}\n                {infoRender('Address', addressMaker(basicInfo.address))}\n                <b>Memberships</b>\n                <Table striped bordered hover responsive size=\"sm\">\n                    <thead></thead>\n                    <tbody>\n                        {memberships.map((membership, i) => {\n                            const name = membership.individualFirstName + ' ' + membership.individualLastName;\n                            const profilePicture = membership.individualProfilePicture ? membership.individualProfilePicture : defaultIndividualProfilePicture;\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <Image src={profilePicture} style={{ height: 32, width: 32 }} thumbnail />\n                                    </td>\n                                    <td>{name}</td>\n                                    <td>{getMembershipByValue(membership.membershipType)}</td>\n                                    <td>{TimeRender(membership.startTime)}</td>\n                                    <td>{membership.isCurrent}</td>\n                                    {membership.isCurrent ? (\n                                        <td>\n                                            <Badge variant=\"primary\">Current Member</Badge>\n                                        </td>\n                                    ) : (\n                                        <td>{TimeRender(membership.endTime)}</td>\n                                    )}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n                <hr />\n                <div style={{ height: 25 }} />\n                {keywordsRender('Service Areas', serviceInfo.serviceAreas)}\n                {ImpactAreasRender('Impact Area', impactAreas)}\n                {keywordsRender('Keywords', serviceInfo.keywords)}\n                <div style={{ height: 25 }} />\n                <hr />\n                {infoRender('Mission', basicInfo.mission)}\n                <hr />\n                {infoRender('Description', basicInfo.description)}\n                <div style={{ height: 25 }} />\n            </>\n        );\n    } else\n        return (\n            <Container>\n                <h3>No User Found</h3>\n            </Container>\n        );\n};\n\nexport default DetailsView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-list-view.js",["1029","1030"],"import React from 'react';\nimport { Card, CardColumns, Badge, Row, Col } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '@Constants/default-images';\nimport { FollowUserButtonRender, UnfollowUserButtonRender, EndorseUserButtonRender, CancelEndorseUserButtonRender } from '../form_template/buttons-render';\nconst OrganizationListView = (props) => {\n    const allOrganizations = props.allOrganizations;\n    console.log('🚀 ~ file: organization-list-view.js ~ line 7 ~ OrganizationListView ~ allOrganizations', allOrganizations);\n    const followObject = props.followObject;\n    const endorseObject = props.endorseObject;\n    console.log('🚀 ~ file: organization-list-view.js ~ line 9 ~ OrganizationListView ~ endorseObject', allOrganizations);\n    const submitting = props.submitting;\n\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    if (allOrganizations && allOrganizations.length > 0) {\n        return (\n            <CardColumns>\n                {allOrganizations.map((org, i) => {\n                    if (org && org.basicInfo && org.basicInfo.name) {\n                        return (\n                            <Card className=\"special-btn special-card\" key={i}>\n                                <Card.Img\n                                    variant=\"top\"\n                                    src={org.basicInfo.profilePicture ? org.basicInfo.profilePicture : defaultOrganizationProfilePicture}\n                                    alt=\"No Image Found\"\n                                    className=\"organization-list-image\"\n                                    onClick={() => {\n                                        props.gotoOrganizationDetails(org._id);\n                                    }}\n                                />\n                                <Card.Body\n                                    onClick={() => {\n                                        props.gotoOrganizationDetails(org._id);\n                                    }}\n                                >\n                                    <Card.Text className=\"left-text bold-text\">{org.basicInfo.name}</Card.Text>\n                                    {org.organizationTypes &&\n                                        org.organizationTypes.length > 0 &&\n                                        org.organizationTypes.map((type, i) => {\n                                            return (\n                                                <Badge variant=\"info\" className=\"badge-single-small\" key={i}>\n                                                    {type.label}\n                                                </Badge>\n                                            );\n                                        })}\n                                    {org.impactAreas &&\n                                        org.impactAreas.length > 0 &&\n                                        org.impactAreas.map((area, i) => {\n                                            return (\n                                                <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\" key={i}>\n                                                    {area.label}\n                                                </Badge>\n                                            );\n                                        })}\n                                    {org.basicInfo.address ? (\n                                        <Row>\n                                            <Col>\n                                                <small className=\"gray-text\">\n                                                    {org.basicInfo.address.street1 +\n                                                        ', ' +\n                                                        org.basicInfo.address.street2 +\n                                                        ', ' +\n                                                        org.basicInfo.address.city +\n                                                        ', ' +\n                                                        org.basicInfo.address.code}\n                                                </small>\n                                            </Col>\n                                        </Row>\n                                    ) : (\n                                        <></>\n                                    )}\n                                    <Card.Text className=\"justify-text\">\n                                        <small>{descriptionRender(org.basicInfo.description)}</small>\n                                    </Card.Text>\n                                </Card.Body>\n                                <Card.Footer>\n                                    <Row>\n                                        <Col sm={6}>\n                                            {followObject[org._id] ? (\n                                                <UnfollowUserButtonRender\n                                                    onClick={() => {\n                                                        props.handleUnfollowUser(org._id);\n                                                    }}\n                                                />\n                                            ) : (\n                                                <FollowUserButtonRender\n                                                    onClick={() => {\n                                                        props.handleFollowUser(org._id);\n                                                    }}\n                                                />\n                                            )}\n                                        </Col>\n\n                                        <Col sm={6}>\n                                            {endorseObject[org._id] ? (\n                                                <CancelEndorseUserButtonRender\n                                                    onClick={() => {\n                                                        props.handleCancelEndorseUser(org._id);\n                                                    }}\n                                                />\n                                            ) : (\n                                                <EndorseUserButtonRender\n                                                    onClick={() => {\n                                                        props.handleEndorseUser(org._id);\n                                                    }}\n                                                />\n                                            )}\n                                        </Col>\n                                    </Row>\n                                </Card.Footer>\n                            </Card>\n                        );\n                    }\n                })}\n            </CardColumns>\n        );\n    } else return <h4>No Organizations Found</h4>;\n};\nexport default OrganizationListView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/organization-type-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/organization-type-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/organization-type-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/genders.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/languages.js",[],["1031","1032"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-images.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/manage-posts.js",["1033","1034"],"import React, { useEffect, useState } from 'react';\nimport PostList from '@Components/post/post-list';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllPostsByFilter, getAllViewersByPost } from '../../actions/post-action';\nimport * as RoutePaths from '../../constants/route-paths';\n\nconst ManagePosts = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [filter, setFilter] = useState({\n        postType: '',\n        title: '',\n        isActive: 'both',\n    });\n    const [viewerModal, setViewerModal] = useState(false);\n    useEffect(() => {\n        document.title = 'Manage Posts';\n    }, []);\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllPostsByFilter({ creatorId: userId }));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n    const handleGoToPostEdit = (postType, postId) => {\n        props.history.push(RoutePaths.postEditPage(postType, postId));\n    };\n    const handleGoToPostDetails = (postType, postId) => {\n        props.history.push(RoutePaths.postDetailsPage(postType, postId));\n    };\n    const handleGoToPostCreate = (postType) => {\n        props.history.push(RoutePaths.postCreatePage(postType));\n    };\n    const handleViewerListShow = (postId) => {\n        setViewerModal(true);\n        props.dispatch(getAllViewersByPost(postId));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <PostList\n                allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.allPosts : []}\n                handleGoToPostEdit={handleGoToPostEdit}\n                handleGoToPostDetails={handleGoToPostDetails}\n                handleGoToPostCreate={handleGoToPostCreate}\n                filter={filter}\n                viewerModal={viewerModal}\n                setViewerModal={setViewerModal}\n                handleViewerListShow={handleViewerListShow}\n                viewers={props.getAllViewersResponse.success ? props.getAllViewersResponse.viewers : []}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllPostsResponse = state.Post.getAllPosts;\n    const getAllViewersResponse = state.Post.getAllViewersByPost;\n    console.log('🚀 ~ file: manage-posts.js ~ line 21 ~ mapStateToProps ~ getAllPostsResponse', getAllPostsResponse);\n\n    return {\n        getAllPostsResponse,\n        getAllViewersResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManagePosts);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/details-render.js",["1035","1036"],"import React from 'react';\r\nimport { Row, Col, Badge, Image, Table } from 'react-bootstrap';\r\nimport { FiExternalLink } from 'react-icons/fi';\r\nimport { CheckIconRender, CrossIconRender } from './icon-render';\r\nimport moment from 'moment';\r\nexport const DetailsInfoRowRender = ({ label, value }) => {\r\n    if (value) {\r\n        return (\r\n            <Row className=\"detailsRow\">\r\n                <Col sm={3} className=\"detailsLabel\">\r\n                    <label>{label}</label>\r\n                </Col>\r\n\r\n                <Col className=\"detailsValue\">\r\n                    <span>{value}</span>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <Row />;\r\n};\r\n\r\nconst BadgeRender = (badgeArray, variant, className) => {\r\n    return badgeArray.map((badge, i) => {\r\n        if (badge)\r\n            return (\r\n                <Badge variant={variant} key={i} className={'badge-single ' + className}>\r\n                    {badge.label}\r\n                </Badge>\r\n            );\r\n        else return <></>;\r\n    });\r\n};\r\n\r\nexport const TagWithLabelRender = (label, tags) => {\r\n    if (label && tags && tags.length > 0) {\r\n        return (\r\n            <Row>\r\n                {label && (\r\n                    <Col md=\"3\">\r\n                        <b>{label}</b>\r\n                    </Col>\r\n                )}\r\n                <Col md=\"9\">{BadgeRender(tags, 'primary', '')}</Col>\r\n            </Row>\r\n        );\r\n    }\r\n    if (tags && tags.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"12\">{BadgeRender(tags, 'primary', '')}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const ImpactAreasRender = (label, areas) => {\r\n    if (label && areas && areas.length > 0) {\r\n        return (\r\n            <Row>\r\n                {label && (\r\n                    <Col md=\"3\">\r\n                        <b>{label}</b>\r\n                    </Col>\r\n                )}\r\n                <Col md=\"9\">{BadgeRender(areas, 'primary', 'impact-area-badge  badge-single-small')}</Col>\r\n            </Row>\r\n        );\r\n    }\r\n    if (areas && areas.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"12\">{BadgeRender(areas, 'primary', 'impact-area-badge  badge-single-small')}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const DescriptionRender = (label, value) => {\r\n    const valueRender = () => {\r\n        return (\r\n            <>\r\n                {value.split('\\n').map((para, i) => {\r\n                    return (\r\n                        <p className=\"justify-text\" key={i}>\r\n                            {para}\r\n                        </p>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    };\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">{label}</Col>\r\n                <Col sm=\"9\">{valueRender()}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{valueRender()}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const ImageAndDescriptionRender = (images) => {\r\n    if (images && images.length > 0) {\r\n        return (\r\n            <>\r\n                {images.map((image, i) => {\r\n                    return (\r\n                        <Row key={i} className=\"image-description-box\">\r\n                            <Col sm=\"3\">\r\n                                <Image width=\"100%\" src={image.path} thumbnail />\r\n                            </Col>\r\n                            <Col sm=\"9\">{DescriptionRender('', image.description)}</Col>\r\n                        </Row>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const InfoRender = (label, value) => {\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">{value}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{value}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const LinkRender = (label, link) => {\r\n    if (label && link) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">\r\n                    <a href={link} className=\"btn-outline-primary btn btn-sm\" target=\"_blank\">\r\n                        <FiExternalLink />\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else if (link) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">\r\n                    <a href={link} target=\"_blank\">\r\n                        <FiExternalLink />\r\n                    </a>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const BooleanRender = (label, value) => {\r\n    if (label && value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"3\">\r\n                    <b>{label}</b>\r\n                </Col>\r\n                <Col sm=\"9\">{value ? <CheckIconRender /> : <CrossIconRender />}</Col>\r\n            </Row>\r\n        );\r\n    } else if (value) {\r\n        return (\r\n            <Row>\r\n                <Col sm=\"12\">{value ? <CheckIconRender /> : <CrossIconRender />}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\nexport const RequiredItemsRender = (items) => {\r\n    if (items && items.length > 0) {\r\n        return (\r\n            <>\r\n                <h6>Required Items</h6>\r\n                <Table striped bordered hover responsive size=\"sm\">\r\n                    <thead variant=\"dark\">\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Requirement</th>\r\n                            <th>Needed By</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {items.map((item, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.requirement}</td>\r\n                                    <td>{moment(item.neededBy).format('LLLL')}</td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n            </>\r\n        );\r\n    } else return <label>No required items found!</label>;\r\n};\r\nexport const KeywordsRender = (label, keywords) => {\r\n    if (keywords && keywords.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"3\">\r\n                    <b>\r\n                        {label}({keywords.length})\r\n                    </b>\r\n                </Col>\r\n                <Col md=\"9\">\r\n                    {keywords.map((key, i) => {\r\n                        return (\r\n                            <Badge variant=\"primary\" key={i} className=\"badge-single\">\r\n                                {key}\r\n                            </Badge>\r\n                        );\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n\r\nexport const SkillsRender = (label, skills) => {\r\n    if (label && skills && skills.length > 0) {\r\n        return (\r\n            <Row>\r\n                {label && (\r\n                    <Col md=\"3\">\r\n                        <b>{label}</b>\r\n                    </Col>\r\n                )}\r\n                <Col md=\"9\">{BadgeRender(skills, 'primary', 'skill-badge  badge-single-small')}</Col>\r\n            </Row>\r\n        );\r\n    }\r\n    if (skills && skills.length > 0) {\r\n        return (\r\n            <Row>\r\n                <Col md=\"12\">{BadgeRender(skills, 'light', 'skill-badge  badge-single-small')}</Col>\r\n            </Row>\r\n        );\r\n    } else return <></>;\r\n};\r\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/buttons-render.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/search-menu.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/follow-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/follow-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/follow-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/global-notification.js",["1037","1038","1039"],"import { getNotificationsCount, getTitleByType, getTopNotifications, updateNotification, updateNotificationLocal } from '@Actions/notification-action';\nimport { serverAddress } from '@Constants/api-paths';\nimport * as RoutePaths from '@Constants/route-paths';\nimport moment from 'moment';\nimport React, { useEffect } from 'react';\nimport { Badge, Button, Col, Container, Image, NavDropdown, Row } from 'react-bootstrap';\nimport { BsBellFill } from 'react-icons/bs';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport openSocket from 'socket.io-client';\nimport useSound from 'use-sound';\n\nconst socket = openSocket(serverAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\nconsole.log('🚀 ~ file: global-notification.js ~ line 17 ~ socket', socket);\n\nconst RenderBellIcon = (props) => {\n    const count = props.count;\n\n    return (\n        <Button size=\"lg\" className=\"notification-bell\">\n            <BsBellFill />\n            {/* <Image src=\"http://localhost:3001/default-images/flag-icon.png\" roundedCircle /> */}\n\n            <Badge className=\"notification-count\" variant=\"dark\">\n                {count}\n            </Badge>\n        </Button>\n    );\n};\nconst PostTitleRender = (title) => {\n    if (title && title.length > 50) return title.substr(0, 50) + '...';\n    else return title;\n};\n\nconst NotificationRender = (props) => {\n    const handleGoToNotificationDetails = (notification) => {\n        const type = notification.type;\n        if (['like', 'interest', 'going'].includes(type)) {\n            props.history.push(RoutePaths.postDetailsPage(notification.postId.postType, notification.postId._id));\n        } else if (type === 'friend-request') {\n            props.history.push(RoutePaths.communityRequestListPage('received'));\n        } else if (type === 'friend-accept') {\n            props.history.push(RoutePaths.communityFriendListPage);\n        } else if (type === 'follow') {\n            props.history.push(RoutePaths.communityFollowerListPage);\n        } else if (type === 'endorsement') {\n            props.history.push(RoutePaths.communityEndorserListPage);\n        } else if (type === 'membership-request') {\n        } else if (type === 'membership-accept') {\n        } else {\n            props.history.push(RoutePaths.userDetailsPage(notification.userType, notification.senderId));\n        }\n        const notificationId = notification._id;\n        props.dispatch(updateNotification(notificationId, { isRead: true }));\n        props.dispatch(updateNotificationLocal(notificationId, true));\n    };\n    const notification = props.notification;\n    const sender = notification.senders[0].userId;\n    const userType = sender.userType;\n    let name = '';\n    if (userType === 'individual') name = sender.basicInfo.firstName + ' ' + sender.basicInfo.lastName;\n    else if (userType === 'organization') name = sender.basicInfo.name;\n    const profilePicture = sender.basicInfo.profilePicture;\n    const more = notification.senders.length - 1;\n    const postType = notification.postId && notification.postId.postType ? notification.postId.postType : '';\n    console.log('🚀 ~ file: global-notification.js ~ line 31 ~ NotificationRender ~ notification', notification);\n    return (\n        <NavDropdown.Item\n            className=\"notification-row\"\n            onClick={() => {\n                handleGoToNotificationDetails(notification);\n            }}\n        >\n            <Row>\n                <Col sm=\"2\">\n                    <Image src={profilePicture} width=\"40\" thumbnail className=\"notification-image\" />\n                </Col>\n                <Col sm=\"10\">\n                    <p className=\"notification-title\">\n                        {notification.isRead ? (\n                            getTitleByType(notification.type, name, more, postType)\n                        ) : (\n                            <b>{getTitleByType(notification.type, name, more, postType)}</b>\n                        )}\n                    </p>\n\n                    <small className=\"notification-time\">{moment(notification.createdAt).format('LLL')}</small>\n                </Col>\n            </Row>\n        </NavDropdown.Item>\n    );\n};\nconst SampleNotificationsRender = (props) => {\n    const allNotifications = props.allNotifications;\n    return (\n        <Container style={{ width: 500, padding: 0 }}>\n            {allNotifications.map((notification, i) => {\n                return <NotificationRender key={i} notification={notification} history={props.history} dispatch={props.dispatch} />;\n            })}\n        </Container>\n    );\n};\nconst GlobalNotification = (props) => {\n    const [play] = useSound('./notification.ogg');\n    useEffect(() => {\n        const user = props.user;\n        props.dispatch(getNotificationsCount(true));\n        props.dispatch(getTopNotifications());\n        console.log('🚀 ~ file: global-notification.js ~ line 87 ~ socket.on ~ success', 'Notification_' + user._id);\n        socket.on('Notification_' + user._id.toString(), (success) => {\n            console.log('🚀 ~ file: global-notification.js ~ line 87 ~ socket.on ~ success', success);\n            if (success === 'NewNotification') {\n                const audioEl = document.getElementsByClassName('audio-element-notification')[0];\n                audioEl.play();\n                props.dispatch(getNotificationsCount(true));\n                props.dispatch(getTopNotifications());\n            }\n        });\n    }, []);\n    return (\n        <NavDropdown\n            title={<RenderBellIcon count={props.getNotificationCountResponse.success ? props.getNotificationCountResponse.total : 0} />}\n            id=\"basic-nav-dropdown\"\n            alignRight={true}\n        >\n            <SampleNotificationsRender\n                allNotifications={props.getNotificationResponse.success ? props.getNotificationResponse.notifications : []}\n                history={props.history}\n                dispatch={props.dispatch}\n            />\n            <NavDropdown.Divider />\n            <NavDropdown.Item\n                onClick={() => {\n                    props.history.push(RoutePaths.ManageNotificationsPage);\n                }}\n            >\n                SEE ALL\n            </NavDropdown.Item>\n            {/* <Link to={}>SEE ALL</Link> */}\n        </NavDropdown>\n    );\n    //\n};\nconst mapStateToProps = (state) => {\n    const getNotificationResponse = state.Notification.getTopNotifications;\n    const getNotificationCountResponse = state.Notification.getNotificationsCount;\n\n    return {\n        getNotificationResponse,\n        getNotificationCountResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(withRouter(GlobalNotification));\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/friends.js",["1040","1041","1042","1043","1044"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '@Components/community/community-menu';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nimport FriendsList from '@Components/community/friends-list';\nimport { getAllFriendships } from '@Actions/friendship-action';\nimport * as RoutePaths from '@Constants/route-paths';\nimport { setMessage } from '@Actions/conversation-action';\nimport MessageModal from '@Components/conversation/message-modal';\nimport { NotificationManager } from 'react-notifications';\nconst CommunityFriends = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [userType, setUserType] = useState('');\n    const [messageModal, setMessageModal] = useState(false);\n    const [messageReceiver, setMessageReceiver] = useState('');\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            console.log('Calling API');\n            setLoading(true);\n            props.dispatch(getAllFriendships(userId, 'accepted'));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            setUserType(user.userType);\n            getInitialInfo(user._id);\n        }\n    }, []);\n    useEffect(() => {\n        const { success } = props.setMessageResponse;\n        if (success) {\n            NotificationManager.success('Message sent', 'success');\n        } else if (success === false) NotificationManager.error('Message is not sent', 'Failed');\n    }, [props.setMessageResponse]);\n    const handleGotoUserDetails = (individualUserId) => {\n        props.history.push(RoutePaths.userDetailsPage('individual', individualUserId));\n    };\n    const handleOpenMessageModal = (user) => {\n        setMessageModal(true);\n        setMessageReceiver(user);\n    };\n    const handleSendNewMessage = (receiverId, text) => {\n        props.dispatch(\n            setMessage({\n                senderId: userId,\n                receiverId,\n                text,\n            }),\n        );\n        setMessageModal(false);\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <MessageModal\n                    messageModal={messageModal}\n                    setMessageModal={setMessageModal}\n                    messageReceiver={messageReceiver}\n                    handleSendNewMessage={handleSendNewMessage}\n                />\n                <Row className=\"parent-page\">\n                    <Col>\n                        <CommunityMenu selected=\"friend\" userType={userType} />\n                        <hr />\n                        <FriendsList\n                            friendships={props.getAllFriendshipResponse ? props.getAllFriendshipResponse.friendships : []}\n                            userId={userId}\n                            handleGotoUserDetails={handleGotoUserDetails}\n                            handleOpenMessageModal={handleOpenMessageModal}\n                        />\n                        {/* <SampleUsers /> */}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllFriendshipResponse = state.Friendship.getAllFriendships;\n    const setMessageResponse = state.Conversation.setMessage;\n    console.log('🚀 ~ file: friends.js ~ line 41 ~ mapStateToProps ~ getAllFriendshipResponse', state);\n    return { getAllFriendshipResponse, setMessageResponse };\n};\nexport default connect(mapStateToProps, null)(CommunityFriends);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followers.js",["1045","1046","1047","1048","1049","1050","1051"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '@Components/community/community-menu';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nimport FollowersList from '@Components/community/followers-list';\nimport { getAllFollowers, unfollowUser } from '../../actions/follow-action';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { setMessage } from '../../actions/conversation-action';\nimport MessageModal from '@Components/conversation/message-modal';\nimport { NotificationManager } from 'react-notifications';\nconst CommunityFollowers = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [userType, setUserType] = useState('');\n    const [cards, setCards] = useState({});\n    const [messageModal, setMessageModal] = useState(false);\n    const [messageReceiver, setMessageReceiver] = useState('');\n    useEffect(() => {\n        const { success } = props.setMessageResponse;\n        if (success) {\n            NotificationManager.success('Message sent', 'success');\n        } else if (success === false) NotificationManager.error('Message is not sent', 'Failed');\n    }, [props.setMessageResponse]);\n    const handleOpenMessageModal = (user) => {\n        setMessageModal(true);\n        setMessageReceiver(user);\n    };\n    const handleSendNewMessage = (receiverId, text) => {\n        props.dispatch(\n            setMessage({\n                senderId: userId,\n                receiverId,\n                text,\n            }),\n        );\n        setMessageModal(false);\n    };\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            console.log('Calling API');\n            setLoading(true);\n            props.dispatch(getAllFollowers(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            setUserType(user.userType);\n            getInitialInfo(user._id);\n        }\n    }, []);\n    useEffect(() => {\n        const { success } = props.getAllFollowersResponse;\n        if (success) {\n            const followers = props.getAllFollowersResponse.followers;\n            for (let i = 0; i < followers.length; i++) {\n                cards[followers[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.getAllFollowersResponse]);\n    const handleGotoUserDetails = (userType, userId) => {\n        props.history.push(RoutePaths.userDetailsPage(userType, userId));\n    };\n    const handleUnfollowUser = (cardId, followerId) => {\n        let cards_ = cards;\n        cards_[cardId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(unfollowUser({ followerId: userId, followerId }));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <MessageModal\n                    messageModal={messageModal}\n                    setMessageModal={setMessageModal}\n                    messageReceiver={messageReceiver}\n                    handleSendNewMessage={handleSendNewMessage}\n                />\n                <Row className=\"parent-page\">\n                    <Col>\n                        <CommunityMenu selected=\"follower\" userType={userType} />\n                        <hr />\n                        <FollowersList\n                            followers={props.getAllFollowersResponse ? props.getAllFollowersResponse.followers : []}\n                            userId={userId}\n                            handleGotoUserDetails={handleGotoUserDetails}\n                            cards={cards}\n                            handleUnfollowUser={handleUnfollowUser}\n                            handleOpenMessageModal={handleOpenMessageModal}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllFollowersResponse = state.Follow.getAllFollowers;\n    const setMessageResponse = state.Conversation.setMessage;\n    return { getAllFollowersResponse, setMessageResponse };\n};\nexport default connect(mapStateToProps, null)(CommunityFollowers);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/followings.js",["1052","1053","1054","1055","1056","1057"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '@Components/community/community-menu';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nimport FollowingsList from '@Components/community/followings-list';\nimport { getAllFollowings, unfollowUser } from '../../actions/follow-action';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { setMessage } from '../../actions/conversation-action';\nimport MessageModal from '@Components/conversation/message-modal';\nimport { NotificationManager } from 'react-notifications';\nconst CommunityFollowings = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [userType, setUserType] = useState('');\n    const [cards, setCards] = useState({});\n    const [messageModal, setMessageModal] = useState(false);\n    const [messageReceiver, setMessageReceiver] = useState('');\n    useEffect(() => {\n        const { success } = props.setMessageResponse;\n        if (success) {\n            NotificationManager.success('Message sent', 'success');\n        } else if (success === false) NotificationManager.error('Message is not sent', 'Failed');\n    }, [props.setMessageResponse]);\n    const handleOpenMessageModal = (user) => {\n        setMessageModal(true);\n        setMessageReceiver(user);\n    };\n    const handleSendNewMessage = (receiverId, text) => {\n        props.dispatch(\n            setMessage({\n                senderId: userId,\n                receiverId,\n                text,\n            }),\n        );\n        setMessageModal(false);\n    };\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            console.log('Calling API');\n            setLoading(true);\n            props.dispatch(getAllFollowings(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            setUserType(user.userType);\n            getInitialInfo(user._id);\n        }\n    }, []);\n    useEffect(() => {\n        const { success } = props.getAllFollowingsResponse;\n        if (success) {\n            const followings = props.getAllFollowingsResponse.followings;\n            for (let i = 0; i < followings.length; i++) {\n                cards[followings[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.getAllFollowingsResponse]);\n    const handleGotoUserDetails = (userType, userId) => {\n        props.history.push(RoutePaths.userDetailsPage(userType, userId));\n    };\n    const handleUnfollowUser = (cardId, followingId) => {\n        let cards_ = cards;\n        cards_[cardId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(unfollowUser({ followerId: userId, followingId }));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <MessageModal\n                    messageModal={messageModal}\n                    setMessageModal={setMessageModal}\n                    messageReceiver={messageReceiver}\n                    handleSendNewMessage={handleSendNewMessage}\n                />\n                <Row className=\"parent-page\">\n                    <Col>\n                        <CommunityMenu selected=\"following\" userType={userType} />\n                        <hr />\n                        <FollowingsList\n                            followings={props.getAllFollowingsResponse ? props.getAllFollowingsResponse.followings : []}\n                            userId={userId}\n                            handleGotoUserDetails={handleGotoUserDetails}\n                            cards={cards}\n                            handleUnfollowUser={handleUnfollowUser}\n                            handleOpenMessageModal={handleOpenMessageModal}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllFollowingsResponse = state.Follow.getAllFollowings;\n    const setMessageResponse = state.Conversation.setMessage;\n    return { getAllFollowingsResponse, setMessageResponse };\n};\nexport default connect(mapStateToProps, null)(CommunityFollowings);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/requests.js",["1058","1059","1060","1061"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '@Components/community/community-menu';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { acceptFriendship, rejectFriendship, deleteFriendship } from '../../actions/friendship-action';\nimport RequestList from '@Components/community/requests-list';\nimport { getAllFriendships } from '../../actions/friendship-action';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { communityRequestListPage } from '../../constants/route-paths';\nimport { setMessage } from '../../actions/conversation-action';\nimport MessageModal from '@Components/conversation/message-modal';\nimport { NotificationManager } from 'react-notifications';\nconst CommunityRequests = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [userType, setUserType] = useState('');\n    const [cards, setCards] = useState({});\n    const [messageModal, setMessageModal] = useState(false);\n    const [messageReceiver, setMessageReceiver] = useState('');\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            console.log('Calling API');\n            setLoading(true);\n            props.dispatch(getAllFriendships(userId, 'pending'));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            setUserType(user.userType);\n            getInitialInfo(user._id);\n        }\n    }, []);\n    useEffect(() => {\n        const { success } = props.setMessageResponse;\n        if (success) {\n            NotificationManager.success('Message sent', 'success');\n        } else if (success === false) NotificationManager.error('Message is not sent', 'Failed');\n    }, [props.setMessageResponse]);\n    const handleOpenMessageModal = (user) => {\n        setMessageModal(true);\n        setMessageReceiver(user);\n    };\n    const handleSendNewMessage = (receiverId, text) => {\n        props.dispatch(\n            setMessage({\n                senderId: userId,\n                receiverId,\n                text,\n            }),\n        );\n        setMessageModal(false);\n    };\n    useEffect(() => {\n        const { success } = props.getAllFriendshipResponse;\n        if (success) {\n            const friendships = props.getAllFriendshipResponse.friendships;\n            for (let i = 0; i < friendships.length; i++) {\n                cards[friendships[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.getAllFriendshipResponse]);\n    const handleGotoUserDetails = (individualUserId) => {\n        props.history.push(RoutePaths.userDetailsPage('individual', individualUserId));\n    };\n    const handleAcceptFriendship = (friendshipId) => {\n        let cards_ = cards;\n        cards_[friendshipId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(acceptFriendship(friendshipId));\n    };\n    const handleRejectFriendship = (friendshipId) => {\n        let cards_ = cards;\n        cards_[friendshipId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(rejectFriendship(friendshipId));\n    };\n    const handleDeleteFriendship = (friendshipId) => {\n        let cards_ = cards;\n        cards_[friendshipId] = false;\n        setCards({ ...cards_ });\n        props.dispatch(deleteFriendship(friendshipId));\n    };\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <MessageModal\n                    messageModal={messageModal}\n                    setMessageModal={setMessageModal}\n                    messageReceiver={messageReceiver}\n                    handleSendNewMessage={handleSendNewMessage}\n                />\n                <Row className=\"parent-page\">\n                    <Col>\n                        <CommunityMenu selected=\"request\" userType={userType} />\n                        <hr />\n                        <Nav variant=\"pills\" activeKey={props.match.params.requestType}>\n                            <Nav.Item size=\"sm\">\n                                <Nav.Link eventKey=\"received\" href={communityRequestListPage('received')}>\n                                    RECEIVED\n                                </Nav.Link>\n                            </Nav.Item>\n\n                            <Nav.Item sz=\"sm\">\n                                <Nav.Link eventKey=\"sent\" href={communityRequestListPage('sent')}>\n                                    SENT\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <hr />\n                        <RequestList\n                            friendships={props.getAllFriendshipResponse ? props.getAllFriendshipResponse.friendships : []}\n                            userId={userId}\n                            handleGotoUserDetails={handleGotoUserDetails}\n                            handleAcceptFriendship={handleAcceptFriendship}\n                            handleRejectFriendship={handleRejectFriendship}\n                            handleDeleteFriendship={handleDeleteFriendship}\n                            cards={cards}\n                            requestType={props.match.params.requestType}\n                            handleOpenMessageModal={handleOpenMessageModal}\n                        />\n                        {/* <SampleUsers /> */}\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllFriendshipResponse = state.Friendship.getAllFriendships;\n    const setMessageResponse = state.Conversation.setMessage;\n    console.log('🚀 ~ file: friends.js ~ line 41 ~ mapStateToProps ~ getAllFriendshipResponse', getAllFriendshipResponse);\n    return { getAllFriendshipResponse, setMessageResponse };\n};\nexport default connect(mapStateToProps, null)(CommunityRequests);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/community-menu.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/sample-users.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-map-view.js",["1062","1063","1064","1065","1066","1067"],"import React from 'react';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '@Constants/route-paths';\nimport { getCountryByCode, getStateByCountryAndCode } from '@Constants/country-and-state';\nimport { Button, Badge, Container, Row, Col } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { FollowUserButtonRender, UnfollowUserButtonRender, EndorseUserButtonRender, CancelEndorseUserButtonRender } from '../form_template/buttons-render';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst AllOrganizationOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allOrganizations;\n    console.log('🚀 ~ file: organization-map-view.js ~ line 27 ~ AllOrganizationOnMap ~ markers', markers);\n\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n    const followObject = props.followObject;\n    const endorseObject = props.endorseObject;\n    const addressMaker = (address) => {\n        let fullAddress = '';\n        if (address) {\n            if (address.street1) fullAddress += address.street1 + ', ';\n            if (address.street2) fullAddress += address.street2 + ', ';\n            if (address.city) fullAddress += address.city + ', ';\n            if (address.code) fullAddress += address.code + ', ';\n            if (address.state) fullAddress += getStateByCountryAndCode(address.country, address.state) + ', ';\n        }\n        return fullAddress;\n    };\n    const pairsRender = (label, tags) => {\n        return (\n            <label>\n                {label}{' '}\n                {tags.map((t, i) => {\n                    return i === 0 ? tags.label : ', ' + tags.label;\n                })}\n            </label>\n        );\n    };\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.basicInfo && marker.basicInfo.address && marker.basicInfo.address.latitude && marker.basicInfo.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.basicInfo.address.latitude,\n                                    lng: marker.basicInfo.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.basicInfo.address.latitude,\n                            lng: selected.basicInfo.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <Container>\n                            <Row\n                                className=\"special-btn \"\n                                onClick={() => {\n                                    props.gotoOrganizationDetails(selected._id);\n                                }}\n                            >\n                                <Col>\n                                    <h6>{selected.basicInfo.name}</h6>\n                                </Col>\n                            </Row>\n                            {selected.organizationTypes && selected.organizationTypes.length > 0 && (\n                                <Row>\n                                    <Col>\n                                        {selected.organizationTypes.map((type, i) => {\n                                            return (\n                                                <Badge variant=\"primary\" key={i} className=\"organization-type-badge\">\n                                                    {type.label}\n                                                </Badge>\n                                            );\n                                            // return i !== 0 ? ', ' + type.label : type.label;\n                                        })}\n                                    </Col>\n                                </Row>\n                            )}\n                            {selected.impactAreas && selected.impactAreas.length > 0 && (\n                                <Row>\n                                    <Col>\n                                        {selected.impactAreas.map((type, i) => {\n                                            return (\n                                                <Badge key={i} className=\"impact-area-badge\">\n                                                    {type.label}\n                                                </Badge>\n                                            );\n                                            // return i !== 0 ? ', ' + type.label : type.label;\n                                        })}\n                                    </Col>\n                                </Row>\n                            )}\n                            <br />\n                            {selected.basicInfo.address && <AddressRender address={selected.basicInfo.address} />}\n                            {/* <Row>\n                                {/* <Col sm={3}>\n                                    <label>Address</label>\n                                </Col> */}\n                            {/*  <Col>\n                                    \n                                </Col>\n                            </Row> */}\n\n                            {/* {pairsRender('Organization Type', selected.basicInfo.organizationTypes)} */}\n                            <br />\n\n                            <Row>\n                                <Col>\n                                    <Button\n                                        size=\"sm\"\n                                        variant=\"outline-primary\"\n                                        onClick={() => {\n                                            props.gotoOrganizationDetails(selected._id);\n                                        }}\n                                    >\n                                        Go to Page\n                                    </Button>\n                                </Col>\n                            </Row>\n                            <br />\n                            <Row>\n                                <Col>\n                                    {followObject[selected._id] ? (\n                                        <UnfollowUserButtonRender\n                                            onClick={() => {\n                                                props.handleUnfollowUser(selected._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <FollowUserButtonRender\n                                            onClick={() => {\n                                                props.handleFollowUser(selected._id);\n                                            }}\n                                        />\n                                    )}\n                                </Col>\n                                <Col>\n                                    {endorseObject[selected._id] ? (\n                                        <CancelEndorseUserButtonRender\n                                            onClick={() => {\n                                                props.handleCancelEndorseUser(selected._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <EndorseUserButtonRender\n                                            onClick={() => {\n                                                props.handleEndorseUser(selected._id);\n                                            }}\n                                        />\n                                    )}\n                                </Col>\n                            </Row>\n                        </Container>\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nconst AddressRender = ({ address }) => {\n    if (address) {\n        let line1 = '',\n            line2 = '';\n        if (address.street1) line1 += address.street1 + ', ';\n        if (address.street2) line1 += address.street2 + ', ';\n        if (address.city) line2 += address.city + ', ';\n        if (address.code) line2 += address.code + ', ';\n        if (address.state) line2 += getStateByCountryAndCode(address.country, address.state);\n        return (\n            <>\n                <Row>\n                    <Col>{line1} </Col>\n                </Row>\n                <Row>\n                    <Col>{line2} </Col>\n                </Row>\n            </>\n        );\n    } else return <></>;\n};\nexport default AllOrganizationOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/default-user-information.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post.js",["1068","1069","1070","1071","1072","1073","1074"],"import React, { useEffect, useState } from 'react';\nimport PostForm from '@Components/post/post-form';\nimport { connect } from 'react-redux';\nimport { reduxForm, formValueSelector, change } from 'redux-form';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { getPostById, createPost, updatePostById, clearPost } from '../../actions/post-action';\nimport { getAllImpactAreasByUser } from '../../actions/impact-area-action';\nimport { getAllSkillsByUser } from '../../actions/skill-action';\nimport { getServiceInfo, getAllUsersNames } from '../../actions/user-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport * as RoutePaths from '../../constants/route-paths';\n\nconst CreatePost = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [images, setImages] = useState([]);\n    const [requiredItems, setRequiredItems] = useState([]);\n    const [editMode, setEditMode] = useState(false);\n    const [isActive, setIsActive] = useState(true);\n    const [description, setDescription] = useState('');\n    const [usersName, setUsersName] = useState([]);\n    const [location, setLocation] = useState({\n        latitude: 0,\n        longitude: 0,\n    });\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        if (props.getPostResponse.success) {\n            console.log(props.getPostResponse.post);\n            setDescription(props.getPostResponse.post.description);\n            setImages(props.getPostResponse.post.images);\n            setRequiredItems(props.getPostResponse.post.requiredItems);\n            if (props.getPostResponse.post.address) {\n                setLocation({\n                    latitude: props.getPostResponse.post.address.latitude,\n                    longitude: props.getPostResponse.post.address.longitude,\n                });\n            }\n        }\n    }, [props.getPostResponse]);\n    const handlePictureUpload = (post) => {\n        var file = post.target.files[0];\n        if (file) {\n        }\n        let reader = new FileReader();\n        if (post.target.files[0]) {\n            reader.readAsDataURL(file);\n            reader.onload = () => {\n                let images_ = images;\n                images_.push({\n                    path: reader.result,\n                    description: '',\n                });\n                setImages([...images_]);\n            };\n            reader.onerror = function (error) {};\n        }\n    };\n    const handleGoToManagePosts = () => {\n        props.history.push(RoutePaths.postManagePage);\n    };\n\n    const onSubmit = (values) => {\n        let items = [];\n        if (requiredItems && requiredItems.length > 0) {\n            items = requiredItems.filter((item) => item.name && item.name.length > 0 && item.requirement && item.requirement.length > 0);\n        }\n        let post = {\n            ...values,\n\n            postType: props.match.params.postType,\n            creatorId: props.auth.user._id,\n            images: images,\n            requiredItems: items,\n            address: {\n                ...values.address,\n                latitude: location.latitude,\n                longitude: location.longitude,\n            },\n            isActive: isActive,\n        };\n        console.log(post);\n        setLoading(true);\n        if (editMode) {\n            props.dispatch(updatePostById(props.match.params.postId, post));\n        } else {\n            props.dispatch(createPost(post));\n        }\n    };\n    const handleImageDescriptionEdit = (idx, e) => {\n        let images_ = images;\n        images[idx].description = e.target.value;\n        setImages([...images_]);\n    };\n    const handleImageDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this image?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        let images_ = images;\n                        images_.splice(idx, 1);\n                        setImages([...images_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleItemEdit = (idx, name, value) => {\n        console.log('🚀 ~ file: create-post.js ~ line 103 ~ handleItemEdit ~ idx, name, value', idx, name, value);\n        let requiredItems_ = requiredItems;\n        let item = requiredItems_[idx];\n        item[name] = value;\n        console.log('T', item);\n        requiredItems_[idx] = item;\n        setRequiredItems([...requiredItems_]);\n    };\n    const handleItemDelete = (idx) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this item?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        const requiredItems_ = requiredItems;\n                        requiredItems_.splice(idx, 1);\n                        setRequiredItems([...requiredItems_]);\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    const handleItemPosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let requiredItems_ = requiredItems;\n            [requiredItems_[idx], requiredItems_[idx - 1]] = [requiredItems_[idx - 1], requiredItems_[idx]];\n            setRequiredItems([...requiredItems_]);\n        } else if (movement === 'down' && idx < requiredItems.length - 1) {\n            let requiredItems_ = requiredItems;\n            [requiredItems_[idx], requiredItems_[idx + 1]] = [requiredItems_[idx + 1], requiredItems_[idx]];\n            setRequiredItems([...requiredItems_]);\n        }\n    };\n    const handleImagePosition = (idx, movement) => {\n        if (movement === 'up' && idx > 0) {\n            let images_ = images;\n            [images_[idx], images_[idx - 1]] = [images_[idx - 1], images_[idx]];\n            setImages([...images_]);\n        } else if (movement === 'down' && idx < images.length - 1) {\n            let images_ = images;\n            [images_[idx], images_[idx + 1]] = [images_[idx + 1], images_[idx]];\n            setImages([...images_]);\n        }\n    };\n    const handleAddMineImpactAreas = () => {\n        console.log(props.getServiceInfoResponse);\n        if (props.getServiceInfoResponse.success && props.getServiceInfoResponse.serviceInfo.impactAreas) {\n            props.change('impactAreas', props.getServiceInfoResponse.serviceInfo.impactAreas);\n        } else props.change('impactAreas', []);\n    };\n    const handleAddItem = () => {\n        const requiredItems_ = requiredItems;\n        requiredItems_.push({\n            name: '',\n            requirement: '',\n            neededBy: new Date(),\n        });\n        setRequiredItems([...requiredItems_]);\n    };\n    useEffect(() => {\n        const getInitialInfo = (postId) => {\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n            setLoading(false);\n            props.dispatch(getAllUsersNames());\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            props.dispatch(getAllImpactAreasByUser(user._id));\n            props.dispatch(getAllSkillsByUser(user._id));\n            props.dispatch(getServiceInfo(user._id));\n            const url = window.location.pathname;\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                getInitialInfo(props.match.params.postId);\n            } else {\n                props.dispatch(clearPost());\n                setImages([]);\n                setRequiredItems([]);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            setImages({});\n            props.dispatch(clearPost());\n        };\n    }, []);\n    useEffect(() => {\n        setLoading(false);\n        const { success, message } = props.setPostResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            setImages({});\n            props.dispatch(clearPost());\n            if (editMode) props.history.push(RoutePaths.postDetailsPage(props.match.params.postType, props.match.params.postId));\n            else {\n                props.history.push(RoutePaths.postDetailsPage(props.match.params.postType, props.setPostResponse.post._id));\n            }\n        } else if (success === false) NotificationManager.error(message, 'Failed');\n    }, [props.setPostResponse]);\n    useEffect(() => {\n        const { success } = props.getAllUsersNameResponse;\n        if (success) {\n            const users = props.getAllUsersNameResponse.users;\n            const usersName_ = users.map((u) => (u.type === 'individual' ? { id: u._id, display: u.concatNameWithSpace } : { id: u._id, display: u.name }));\n\n            setUsersName([...usersName_]);\n        }\n    }, [props.getAllUsersNameResponse]);\n    const handleOnStartDateTimeChange = (time) => {\n        const startDateTime = new Date(time);\n        startDateTime.setHours(startDateTime.getHours() + 1);\n        console.log('🚀 ~ file: create-post.js ~ line 255 ~ handleOnStartDateTimeChange ~ startDateTime', startDateTime);\n        props.change('endDateTime', startDateTime);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <PostForm\n                usersName={usersName}\n                description={description}\n                setDescription={setDescription}\n                postType={props.match.params.postType}\n                handleGoToManagePosts={handleGoToManagePosts}\n                handleImagePosition={handleImagePosition}\n                handleImageDelete={handleImageDelete}\n                handlePictureUpload={handlePictureUpload}\n                handleImageDescriptionEdit={handleImageDescriptionEdit}\n                allImpactAreas={props.getImpactAreaResponse.success ? props.getImpactAreaResponse.impactAreas : []}\n                allSkills={props.getSkillResponse.success ? props.getSkillResponse.skills : []}\n                images={images}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((post) => {\n                    onSubmit(post);\n                })}\n                location={location}\n                setLocation={setLocation}\n                handleAddMineImpactAreas={handleAddMineImpactAreas}\n                handleAddItem={handleAddItem}\n                handleItemEdit={handleItemEdit}\n                handleItemDelete={handleItemDelete}\n                handleItemPosition={handleItemPosition}\n                requiredItems={requiredItems}\n                setIsActive={setIsActive}\n                handleOnStartDateTimeChange={handleOnStartDateTimeChange}\n            />\n        );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getImpactAreasByUser;\n    const getSkillResponse = state.Skill.getSkillsByUser;\n    const getPostResponse = state.Post.getPost;\n    const setPostResponse = state.Post.setPost;\n    const getServiceInfoResponse = state.User.getServiceInfo;\n    let initialValues = {};\n    if (getPostResponse.success) {\n        initialValues = getPostResponse.post;\n        if (initialValues.keywords && initialValues.keywords.length > 0 && typeof initialValues.keywords[0] === 'string') {\n            initialValues.keywords = initialValues.keywords.map((word) => {\n                console.log(word);\n                return { value: word, label: word };\n            });\n        }\n        console.log(initialValues);\n    }\n    const getAllUsersNameResponse = state.User.getAllUsersName;\n    return {\n        getImpactAreaResponse,\n        initialValues,\n        getPostResponse,\n        setPostResponse,\n        getSkillResponse,\n        getServiceInfoResponse,\n        getAllUsersNameResponse,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreatePost',\n        enableReinitialize: true,\n    })(CreatePost),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/display-post.js",["1075","1076","1077","1078"],"import React, { useState, useEffect } from 'react';\nimport PostDetails from '@Components/post/post-details';\nimport { connect } from 'react-redux';\nimport { getAllCommittedPersons } from '../../actions/post-action';\nimport { NotificationManager } from 'react-notifications';\nimport CommittedPersonsModal from '@Components/post/committed-persons-list';\nimport {\n    getPostById,\n    likePost,\n    cancelLikePost,\n    interestedPost,\n    cancelInterestedPost,\n    goingPost,\n    cancelGoingPost,\n    changePostInterest,\n} from '../../actions/post-action';\nimport { postManagePage } from '../../constants/route-paths';\nimport { checkIfPostAddedToScheduler, addPostToScheduler, removePostFromScheduler } from '../../actions/scheduler-action';\nconst DisplayPost = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [committedModal, setCommittedModal] = useState(false);\n    const [committedLoading, setCommittedLoading] = useState(false);\n    const [committedList, setCommittedList] = useState([]);\n    useEffect(() => {\n        const getInitialInfo = (postId) => {\n            const user = props.auth.user;\n            if (user && user._id) {\n                setUserId(user._id);\n                props.dispatch(checkIfPostAddedToScheduler(user._id, postId));\n            }\n            setLoading(true);\n            props.dispatch(getPostById(postId));\n\n            setLoading(false);\n        };\n        const postId = props.match.params.postId;\n        if (postId) getInitialInfo(postId);\n        else {\n        }\n    }, [props.auth]);\n    const handleClickCommittedButtons = (postId, type) => {\n        console.log('🚀 ~ file: home.js ~ line 20 ~ handleClickCommittedButtons ~ postId, type', postId, type);\n        setCommittedLoading(true);\n        getAllCommittedPersons(postId, type).then((response) => {\n            console.log('🚀 ~ file: home.js ~ line 22 ~ getAllCommittedPersons ~ response', response);\n            setCommittedModal(true);\n            setCommittedLoading(false);\n            if (response.success) {\n                setCommittedList(response.users);\n            } else {\n                alert('User List Not Found');\n            }\n        });\n    };\n    const handleGotoManagePosts = () => {\n        props.history.push(postManagePage);\n    };\n    const handleLikePost = (postId) => {\n        props.dispatch(likePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'like'));\n    };\n    const handleCancelLikePost = (postId) => {\n        props.dispatch(cancelLikePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'unlike'));\n    };\n\n    const handleInterestedPost = (postId) => {\n        props.dispatch(interestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'interested'));\n    };\n    const handleCancelInterestedPost = (postId) => {\n        console.log('🚀 ~ file: home.js ~ line 46 ~ handleCancelInterestedPost ~ postId', postId);\n        props.dispatch(cancelInterestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'uninterested'));\n    };\n\n    const handleGoingPost = (postId) => {\n        props.dispatch(goingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'going'));\n    };\n    const handleCancelGoingPost = (postId) => {\n        props.dispatch(cancelGoingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'ungoing'));\n    };\n    const handleAddPostToScheduler = () => {\n        props.dispatch(addPostToScheduler(userId, props.match.params.postId));\n    };\n    const handleRemovePostFromScheduler = () => {\n        props.dispatch(removePostFromScheduler(userId, props.match.params.postId));\n    };\n    useEffect(() => {\n        const { success, message } = props.getAddPostToSchedulerResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(checkIfPostAddedToScheduler(userId, props.match.params.postId));\n        } else if (success === false) {\n            NotificationManager.error(message, 'Failed');\n        }\n    }, [props.getAddPostToSchedulerResponse]);\n    useEffect(() => {\n        const { success, message } = props.getRemovePostFromSchedulerResponse;\n        if (success) {\n            NotificationManager.success(message, 'success');\n            props.dispatch(checkIfPostAddedToScheduler(userId, props.match.params.postId));\n        } else if (success === false) {\n            NotificationManager.error(message, 'Failed');\n        }\n    }, [props.getRemovePostFromSchedulerResponse]);\n    return (\n        <>\n            <CommittedPersonsModal\n                committedModal={committedModal}\n                committedLoading={committedLoading}\n                committedList={committedList}\n                setCommittedModal={setCommittedModal}\n            />\n            <PostDetails\n                post={props.getPostResponse.success ? props.getPostResponse.post : {}}\n                userId={userId}\n                handleGotoManagePosts={handleGotoManagePosts}\n                handleLikePost={handleLikePost}\n                handleCancelLikePost={handleCancelLikePost}\n                handleInterestedPost={handleInterestedPost}\n                handleCancelInterestedPost={handleCancelInterestedPost}\n                handleGoingPost={handleGoingPost}\n                handleCancelGoingPost={handleCancelGoingPost}\n                handleClickCommittedButtons={handleClickCommittedButtons}\n                getCheckIfPostAddedToSchedulerResponse={props.getCheckIfPostAddedToSchedulerResponse}\n                handleAddPostToScheduler={handleAddPostToScheduler}\n                handleRemovePostFromScheduler={handleRemovePostFromScheduler}\n            />\n        </>\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getPostResponse = state.Post.getPost ? state.Post.getPost : {};\n    const getCheckIfPostAddedToSchedulerResponse = state.Scheduler.checkIfPostAddedToScheduler;\n    const getAddPostToSchedulerResponse = state.Scheduler.addPostToScheduler;\n    const getRemovePostFromSchedulerResponse = state.Scheduler.removePostFromScheduler;\n    return { getPostResponse, getCheckIfPostAddedToSchedulerResponse, getAddPostToSchedulerResponse, getRemovePostFromSchedulerResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayPost);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/listing-posts.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/manage-news.js",["1079","1080"],"import React, { useState } from 'react';\nimport { Container, Row, Col, Card, Dropdown, Modal, Button } from 'react-bootstrap';\nimport * as DefaultImages from '../../constants/default-images';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { FaPlus } from 'react-icons/fa';\nimport SampleNews from './sample-news';\nconst ManagePosts = (props) => {\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const ButtonRender = (variant, type, label) => {\n        return (\n            <Button\n                style={{ marginTop: 5, width: '100%' }}\n                variant={variant}\n                size=\"sm\"\n                onClick={() => {\n                    props.history.push(RoutePaths.postCreatePage(type));\n                }}\n            >\n                {label}\n            </Button>\n        );\n    };\n    const DropdownItemRender = (variant, type, label) => {\n        return <Dropdown.Item href={RoutePaths.postCreatePage(type)}>{label}</Dropdown.Item>;\n    };\n    return (\n        <Container>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Select Post Type</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Row>\n                        <Col sm=\"6\">{ButtonRender('info', 'event', 'Event')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'project', 'Project')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'general', 'General Post')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'volunteering', 'Volunteering')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'in-kind', 'In-Kind')}</Col>\n                        <Col sm=\"6\">{ButtonRender('info', 'advocacy', 'Advocacy')}</Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose} size=\"sm\">\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h1>MANAGE POSTS</h1>\n                    <Row>\n                        <Col>\n                            <Dropdown>\n                                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\" size=\"sm\" drop=\"left\">\n                                    <FaPlus /> POST\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu>\n                                    {DropdownItemRender('info', 'event', 'Event')}\n                                    {DropdownItemRender('info', 'project', 'Project')}\n                                    {DropdownItemRender('info', 'general', 'General Post')}\n                                    {DropdownItemRender('info', 'volunteering', 'Volunteering')}\n                                    {DropdownItemRender('info', 'in-kind', 'In-Kind')}\n                                    {DropdownItemRender('info', 'advocacy', 'Advocacy')}\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col>\n                            <Button variant=\"primary\" onClick={handleShow} size=\"sm\">\n                                Create Post\n                            </Button>\n                        </Col>\n                    </Row>\n                    {/* <Row>\n                        <Col className=\"left-align\">\n                            {ButtonRender('info', RoutePaths.eventCreatePage, 'Event')}&nbsp;\n                            {ButtonRender('info', RoutePaths.projectCreatePage, 'Project')}&nbsp;\n                            {ButtonRender('info', RoutePaths.postCreatePage, 'General Post')}&nbsp;\n                            {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Volunteering')}&nbsp;\n                            {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'In-Kind')}&nbsp;\n                            {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Advocacy')}&nbsp;\n                        </Col>\n                    </Row> */}\n                    <hr />\n                    <Row>\n                        <Col sm=\"12\">\n                            <SampleNews />\n                        </Col>\n                    </Row>\n                    {/* <CardDeck>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultEventIcon} />\n                            <Card.Body>\n                                <Card.Title>EVENTS</Card.Title>\n                            </Card.Body>\n\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.eventListByOrganizationPage, 'Manage Events')}\n                                    {ButtonRender('info', RoutePaths.eventCreatePage, 'Create Event')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultProjectIcon} />\n                            <Card.Body>\n                                <Card.Title>PROJECTS</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.projectListByOrganizationPage, 'Manage Projects')}\n                                    {ButtonRender('info', RoutePaths.projectCreatePage, 'Create Project')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultPImage} />\n                            <Card.Body>\n                                <Card.Title>GENERAL POSTS</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.postListByOrganizationPage, 'Manage General Posts')}\n                                    {ButtonRender('info', RoutePaths.postCreatePage, 'Create General Post')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultVImage} />\n                            <Card.Body>\n                                <Card.Title>VOLUNTEERING</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    {ButtonRender('primary', RoutePaths.volunteeringListByOrganizationPage, 'Manage Volunteerings')}\n                                    {ButtonRender('info', RoutePaths.volunteeringCreatePage, 'Create Volunteering')}\n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                        <Card border=\"primary\">\n                            <Card.Img variant=\"top\" src={DefaultImages.defaultIImage} />\n                            <Card.Body>\n                                <Card.Title>In-Kind</Card.Title>\n                            </Card.Body>\n                            <Card.Footer>\n                                <Row>\n                                    \n                                </Row>\n                            </Card.Footer>\n                        </Card>\n                    </CardDeck> */}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default ManagePosts;\n",["1081","1082"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/post-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-suggestions.js",["1083","1084","1085","1086","1087","1088"],"import React from 'react';\nimport moment from 'moment';\nimport { Container, Badge, Row, Col, Image, Button, OverlayTrigger, Popover } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FollowButtonRender } from '../../components/form_template/buttons-render';\nimport { BsFillExclamationDiamondFill } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nconst SamplePosts = (props) => {\n    const posts = [\n        {\n            type: 'Event',\n            id: 0,\n            name: 'Moss Montoya Robertson Fleming Carolina Morgan Whitney Gallegos Avis Ryan English Hall ',\n            org: 'Patrick Espinoza Flores Anderson',\n            description:\n                'Minim aliquip esse in esse culpa ullamco duis aute ex occaecat voluptate consequat. Non est pariatur exercitation incididunt deserunt anim minim duis officia et sunt ea sunt. Exercitation et culpa excepteur aute qui irure. Labore dolore dolor sint esse cillum eiusmod pariatur. Aliqua labore nulla non esse consectetur incididunt elit dolore ea exercitation quis elit elit. Qui id laboris cupidatat amet velit ut dolor.\\r\\n',\n            latitude: 25.652657,\n            longitude: -72.434629,\n            createdAt: '2016-06-20T01:07:40-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Post',\n            id: 1,\n            name: 'Craig Buck Fitzgerald Kirkland Althea Crane Acevedo Burgess Hines Bernard Rocha Powell ',\n            org: 'Hollie Travis Darcy Conner',\n            description:\n                'Mollit ut et quis veniam eiusmod enim fugiat Lorem qui in minim. Elit id nostrud non officia nostrud ad Lorem commodo. Elit ex velit ipsum magna quis. Non adipisicing veniam id pariatur sint cupidatat enim qui veniam est ipsum velit. Mollit duis eiusmod qui incididunt. Sunt nostrud velit reprehenderit ea mollit pariatur aliqua reprehenderit non excepteur cupidatat consectetur ex incididunt. Elit proident nulla nostrud do.\\r\\n',\n            latitude: 64.109759,\n            longitude: -140.925495,\n            createdAt: '2016-10-17T07:04:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Project',\n            id: 2,\n            name: 'Santiago Chaney Tucker Finch Debbie Walker Knowles Padilla Virginia Merrill Celina Pierce ',\n            org: 'Logan Perkins Dunlap Heath',\n            description:\n                'Ex do adipisicing ullamco ad sint. Laborum in irure dolor amet pariatur Lorem est magna officia esse qui et dolore. Qui veniam consectetur commodo laborum pariatur qui consectetur ea veniam nisi pariatur nulla cillum veniam. Labore incididunt aliquip in ut consequat nulla anim nostrud ea labore pariatur.\\r\\n',\n            latitude: 67.37103,\n            longitude: 10.44369,\n            createdAt: '2014-12-04T01:23:05-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Volunteering',\n            id: 3,\n            name: 'Brittney Jefferson Whitley Mcfadden Watts Blackwell Carson Schmidt Lila Barnett Foster Mccarthy ',\n            org: 'Shelly Bryan Kenya Lopez',\n            description:\n                'In non reprehenderit aliquip sit mollit nisi duis. Eu do voluptate ut consequat qui laboris labore sunt exercitation veniam. Sit sunt dolore excepteur veniam irure laborum occaecat aliquip ad occaecat fugiat incididunt adipisicing irure.\\r\\n',\n            latitude: -34.069339,\n            longitude: -112.189468,\n            createdAt: '2018-02-26T07:14:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'In Kind',\n            id: 4,\n            name: 'Andrews Fry Riddle Weeks Lara Nelson Morton Nichols Rush Cherry Carver Reed ',\n            org: 'Waller Williams Ward Bentley',\n            description:\n                'Id sit tempor laboris irure sint in nisi laboris excepteur ad irure adipisicing. Ipsum officia occaecat consectetur sunt. Do deserunt aute esse irure non est eiusmod ad id ullamco. Aliqua id adipisicing pariatur ea incididunt reprehenderit amet commodo sit pariatur culpa. Duis sint aute exercitation elit pariatur dolor.\\r\\n',\n            latitude: 53.897686,\n            longitude: 76.513392,\n            createdAt: '2017-12-23T05:01:13-06:00',\n            ttl: 7,\n        },\n    ];\n    const types = ['Non-profit', 'Political'];\n    const areas = ['Santiago', 'Chaney', 'Tucker', 'Finch', 'Debbie', 'Virginia', 'Merrill Celina', 'Pierce'];\n    const popover = (\n        <Popover id=\"popover-basic\">\n            <Popover.Title as=\"h4\">Suggestions</Popover.Title>\n            <Popover.Content>The suggestions is based on your profile informations such as location, impact areas, etc.</Popover.Content>\n        </Popover>\n    );\n    const mapImage = 'http://cascaid.sky4242.com/default-images/sample-g-map.png';\n    return (\n        <div>\n            <Row>\n                <Col sm=\"10\">\n                    <h6>\n                        Suggestions for you.\n                        {/* </Col>\n                <Col> */}\n                        <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                            <a>\n                                <BsFillExclamationDiamondFill style={{ marginBottom: 5 }} />\n                            </a>\n                            {/* <Button variant=\"light\" size=\"sm\" style={{ padding: 0, margin: 0 }}>\n                        \n                            <BsFillExclamationDiamondFill />\n                        </Button> */}\n                        </OverlayTrigger>\n                    </h6>\n                    {/* <small>Based on your profile</small> */}\n                </Col>\n            </Row>\n            <br />\n            {posts.map((post, i) => {\n                return (\n                    <div key={i} className=\"post-box\">\n                        <Row>\n                            <Col>\n                                <Row>\n                                    <Col sm=\"2\">\n                                        <Avatar src={defaultOrganizationProfilePicture} round={5} size={30} />\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Link to={'/organization/details/'}>\n                                            {' '}\n                                            <h6>{post.org}</h6>\n                                        </Link>\n                                    </Col>\n                                </Row>\n                                {/* <Image src={defaultOrganizationProfilePicture} thumbnail style={{ height: 50, width: 50 }} />\n                            {/* </Col>\n                            <Col md=\"10\"> */}\n                                {/* <small>{moment(post.createdAt).format('LLLL')}</small> */}\n                            </Col>\n                        </Row>\n\n                        <Row>\n                            <Col>\n                                {types.map((type, i) => {\n                                    return (\n                                        <Badge variant=\"info\" className=\"badge-single-small\">\n                                            {type}\n                                        </Badge>\n                                    );\n                                })}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                {areas.map((area, i) => {\n                                    return (\n                                        <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\">\n                                            {area}\n                                        </Badge>\n                                    );\n                                })}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <small>House# 99, Apt# B2, Road# 4/25, Block# A, Dhaka 1213</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>\n                                <FollowButtonRender />\n                                &nbsp;\n                            </Col>\n                        </Row>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nexport default SamplePosts;\n",["1089","1090"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/sample-home-posts.js",["1091","1092"],"import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Container, Row, Col, Image, Button, Modal, Badge } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FaThumbsUp, FaLocationArrow, FaHeart } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nconst SamplePosts = (props) => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const posts = [\n        {\n            type: 'Event',\n            id: 0,\n            name: 'Moss Montoya Robertson Fleming Carolina Morgan Whitney Gallegos Avis Ryan English Hall ',\n            org: 'Patrick Espinoza Flores Anderson',\n            description:\n                'Minim aliquip esse in esse culpa ullamco duis aute ex occaecat voluptate consequat. Non est pariatur exercitation incididunt deserunt anim minim duis officia et sunt ea sunt. Exercitation et culpa excepteur aute qui irure. Labore dolore dolor sint esse cillum eiusmod pariatur. Aliqua labore nulla non esse consectetur incididunt elit dolore ea exercitation quis elit elit. Qui id laboris cupidatat amet velit ut dolor.\\r\\n',\n            latitude: 25.652657,\n            longitude: -72.434629,\n            createdAt: '2016-06-20T01:07:40-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Post',\n            id: 1,\n            name: 'Craig Buck Fitzgerald Kirkland Althea Crane Acevedo Burgess Hines Bernard Rocha Powell ',\n            org: 'Hollie Travis Darcy Conner',\n            description:\n                'Mollit ut et quis veniam eiusmod enim fugiat Lorem qui in minim. Elit id nostrud non officia nostrud ad Lorem commodo. Elit ex velit ipsum magna quis. Non adipisicing veniam id pariatur sint cupidatat enim qui veniam est ipsum velit. Mollit duis eiusmod qui incididunt. Sunt nostrud velit reprehenderit ea mollit pariatur aliqua reprehenderit non excepteur cupidatat consectetur ex incididunt. Elit proident nulla nostrud do.\\r\\n',\n            latitude: 64.109759,\n            longitude: -140.925495,\n            createdAt: '2016-10-17T07:04:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Project',\n            id: 2,\n            name: 'Santiago Chaney Tucker Finch Debbie Walker Knowles Padilla Virginia Merrill Celina Pierce ',\n            org: 'Logan Perkins Dunlap Heath',\n            description:\n                'Ex do adipisicing ullamco ad sint. Laborum in irure dolor amet pariatur Lorem est magna officia esse qui et dolore. Qui veniam consectetur commodo laborum pariatur qui consectetur ea veniam nisi pariatur nulla cillum veniam. Labore incididunt aliquip in ut consequat nulla anim nostrud ea labore pariatur.\\r\\n',\n            latitude: 67.37103,\n            longitude: 10.44369,\n            createdAt: '2014-12-04T01:23:05-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'Volunteering',\n            id: 3,\n            name: 'Brittney Jefferson Whitley Mcfadden Watts Blackwell Carson Schmidt Lila Barnett Foster Mccarthy ',\n            org: 'Shelly Bryan Kenya Lopez',\n            description:\n                'In non reprehenderit aliquip sit mollit nisi duis. Eu do voluptate ut consequat qui laboris labore sunt exercitation veniam. Sit sunt dolore excepteur veniam irure laborum occaecat aliquip ad occaecat fugiat incididunt adipisicing irure.\\r\\n',\n            latitude: -34.069339,\n            longitude: -112.189468,\n            createdAt: '2018-02-26T07:14:01-06:00',\n            ttl: 7,\n        },\n        {\n            type: 'In Kind',\n            id: 4,\n            name: 'Andrews Fry Riddle Weeks Lara Nelson Morton Nichols Rush Cherry Carver Reed ',\n            org: 'Waller Williams Ward Bentley',\n            description:\n                'Id sit tempor laboris irure sint in nisi laboris excepteur ad irure adipisicing. Ipsum officia occaecat consectetur sunt. Do deserunt aute esse irure non est eiusmod ad id ullamco. Aliqua id adipisicing pariatur ea incididunt reprehenderit amet commodo sit pariatur culpa. Duis sint aute exercitation elit pariatur dolor.\\r\\n',\n            latitude: 53.897686,\n            longitude: 76.513392,\n            createdAt: '2017-12-23T05:01:13-06:00',\n            ttl: 7,\n        },\n    ];\n    const people = [\n        {\n            id: 0,\n            name: 'Vera Knowles',\n        },\n        {\n            id: 1,\n            name: 'Jefferson Nielsen',\n        },\n        {\n            id: 2,\n            name: 'Mari Mcintyre',\n        },\n        {\n            id: 3,\n            name: 'Letha Holland',\n        },\n        {\n            id: 4,\n            name: 'Alexandra Lawrence',\n        },\n        {\n            id: 5,\n            name: 'Bryan Singleton',\n        },\n    ];\n    const mapImage = 'http://localhost:3001/default-images/sample-g-map.png';\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>10 People liked this post</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {people.map((ppl, i) => {\n                        return (\n                            <Container className=\"ppl-liked-list\" key={i}>\n                                <Row>\n                                    <Col sm={2}>\n                                        <Image src=\"https://picsum.photos/200/200\" thumbnail style={{ width: '100%', height: '100%' }} />\n                                    </Col>\n                                    <Col sm={6} className=\"v-middle\">\n                                        {ppl.name}\n                                    </Col>\n                                    <Col sm={4} className=\"v-middle\">\n                                        <Button size=\"sm\">Add Friend</Button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        );\n                    })}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {posts.map((post, i) => {\n                return (\n                    <div key={i} className=\"justify-text post-box\">\n                        <h4 style={{ color: 'cadetblue' }}>{post.type}</h4>\n                        <h5>{post.name}</h5>\n                        <Row>\n                            <Col>\n                                <Row>\n                                    <Col sm=\"1\">\n                                        <Avatar src={defaultOrganizationProfilePicture} round={5} size=\"50\" />\n                                    </Col>\n                                    <Col sm=\"8\">\n                                        <Link to={'/organization/details/'}>\n                                            {' '}\n                                            <h6>{post.org}</h6>\n                                        </Link>\n                                        <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                                    </Col>\n                                </Row>\n                                {/* <Image src={defaultOrganizationProfilePicture} thumbnail style={{ height: 50, width: 50 }} />\n                            {/* </Col>\n                            <Col md=\"10\"> */}\n                                {/* <small>{moment(post.createdAt).format('LLLL')}</small> */}\n                            </Col>\n                        </Row>\n                        <Row>\n                            {/* <Col sm=\"2\">Impact Areas</Col> */}\n                            <Col>\n                                {post.name.split(' ').map((nm, i) => {\n                                    return (\n                                        <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\">\n                                            {nm}\n                                        </Badge>\n                                    );\n                                })}\n                            </Col>\n                        </Row>\n                        <Row>\n                            {/* <Col sm=\"2\">Skills</Col> */}\n                            <Col>\n                                {post.org.split(' ').map((nm, i) => {\n                                    return (\n                                        <Badge variant=\"light\" className=\"badge-single-small skill-badge\">\n                                            {nm}\n                                        </Badge>\n                                    );\n                                })}\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col sm=\"4\" className=\"home-post-image\">\n                                <Image src=\"https://picsum.photos/400/300\" thumbnail style={{ width: '100%', height: 'auto' }} />\n                                <div className=\"home-post-image-text\">{post.ttl} More Images</div>\n                            </Col>\n                            <Col sm=\"8\" className=\"justify-text\">\n                                {post.description}\n                                <a href=\"#\">See More</a>\n                            </Col>\n                        </Row>\n                        <hr />\n                        <Row>\n                            <Col>\n                                <Button variant=\"primary\" size=\"sm\">\n                                    <FaThumbsUp /> &nbsp;Like\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"info\" size=\"sm\">\n                                    <FaHeart /> &nbsp;Interested\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"secondary\" size=\"sm\">\n                                    <FaLocationArrow />\n                                    &nbsp; Going\n                                </Button>\n                                &nbsp;\n                            </Col>\n                            <Col className=\"right-align\">\n                                <Button variant=\"outline-primary\" size=\"sm\" onClick={handleShow}>\n                                    10 Liked\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-info\" size=\"sm\" onClick={handleShow}>\n                                    100 Interested\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"outline-secondary\" size=\"sm\" onClick={handleShow}>\n                                    1000 Going\n                                </Button>\n                                &nbsp;\n                            </Col>\n                        </Row>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\nexport default SamplePosts;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/language-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/skill-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/skill-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/language-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/skill-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/language-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/post-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-form.js",["1093","1094","1095","1096"],"import { getPostTypeByValue, postTypeFields } from '@Constants/post-types';\nimport React from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { Field } from 'redux-form';\nimport {\n    CheckBoxRender,\n    CreatableMultiSelectRender,\n    DateTimePickerRender,\n    InputRender,\n    InputRenderWithLargeLabel,\n    TextRender,\n} from '../form_template/input-render';\nimport PostGeoCoding from './post-geo-coding';\nimport PostImageList from './post-image-list';\nimport RequiredItemList from './required-item-list';\n\nlet style = {\n    input: {\n        overflow: 'auto',\n        height: 200,\n        // zIndex: 5100,\n    },\n    highlighter: {\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        height: 200,\n        // zIndex: 5200,\n    },\n};\nconst PostForm = (props) => {\n    console.log(props);\n    const usersName = props.usersName;\n    const description = props.description;\n    const setDescription = props.setDescription;\n    const allImpactAreas = props.allImpactAreas;\n    const allSkills = props.allSkills;\n    const images = props.images;\n    const requiredItems = props.requiredItems;\n    const editMode = props.editMode;\n    const postType = props.postType;\n    const postTypeLabel = getPostTypeByValue(postType)[0].label;\n    const fields = postTypeFields[postType];\n\n    return (\n        <Container>\n            <Row>\n                <Col sm=\"1\"></Col>\n                <Col className=\"parent-page\">\n                    <form onSubmit={props.handleOnSubmit}>\n                        <Row>\n                            <Col>{editMode ? <h4>Edit {postTypeLabel}</h4> : <h4>Create {postTypeLabel}</h4>}</Col>\n\n                            <Col className=\"right-align\">\n                                <Button\n                                    size=\"sm\"\n                                    variant=\"outline-primary\"\n                                    onClick={() => {\n                                        props.handleGoToManagePosts();\n                                    }}\n                                >\n                                    Manage Posts\n                                </Button>\n                            </Col>\n                        </Row>\n                        <br />\n                        {/* <label>{description}</label> */}\n                        {fields.title && <Field name=\"title\" type=\"text\" component={InputRender} label=\"Title\" placeholder=\"Title...\" />}\n                        {fields.startDateTime && (\n                            <Field\n                                name=\"startDateTime\"\n                                component={DateTimePickerRender}\n                                label=\"Start time\"\n                                col1={4}\n                                col2={8}\n                                zIndex={6001}\n                                onChange={props.handleOnStartDateTimeChange}\n                            />\n                        )}\n                        {fields.endDateTime && <Field name=\"endDateTime\" component={DateTimePickerRender} label=\"End time\" col1={4} col2={8} zIndex={6000} />}\n                        {fields.description && (\n                            <Field name=\"description\" type=\"text\" component={TextRender} label=\"Description\" placeholder=\"Description...\" col1={4} col2={8} />\n                            // <Row>\n                            //     <Col sm={4}>Description</Col>\n                            //     <Col sm={8}>\n                            //         <MentionsInput\n                            //             // className=\"form-control\"\n                            //             value={description}\n                            //             onChange={(e) => {\n                            //                 setDescription(e.target.value);\n                            //             }}\n                            //             style={style}\n                            //             a11ySuggestionsListLabel={'Suggested mentions'}\n                            //         >\n                            //             <Mention\n                            //                 markup=\"@[__display__](user:__id__)\"\n                            //                 trigger=\"@\"\n                            //                 data={usersName}\n                            //                 renderSuggestion={(suggestion, search, highlightedDisplay) => <div className=\"user\">{highlightedDisplay}</div>}\n                            //                 style={{\n                            //                     backgroundColor: '#cee4ee',\n                            //                 }}\n                            //             />\n                            //         </MentionsInput>\n                            //     </Col>\n\n                            //     <br />\n                            // </Row>\n                        )}\n                        <br />\n                        {fields.skills && (\n                            <Field\n                                name=\"skills\"\n                                component={CreatableMultiSelectRender}\n                                label=\"Skill\"\n                                col1={4}\n                                col2={8}\n                                options={allSkills}\n                                zIndex={5000}\n                                menuPlacement=\"top\"\n                            />\n                        )}\n                        {fields.keywords && (\n                            <Field\n                                name=\"keywords\"\n                                type=\"text\"\n                                component={CreatableMultiSelectRender}\n                                label=\"Keywords\"\n                                col1={4}\n                                col2={8}\n                                placeholder=\"Add new keywords\"\n                                zIndex={2000}\n                            />\n                        )}\n                        {fields.petitionLink && <Field name=\"petitionLink\" type=\"text\" component={InputRender} label=\"Petition Link\" placeholder=\"\" />}\n                        {fields.impactAreas && (\n                            <>\n                                <Row>\n                                    <Col sm={4}></Col>\n                                    <Col sm={8}>\n                                        <Button\n                                            variant=\"light\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleAddMineImpactAreas();\n                                            }}\n                                        >\n                                            Auto select my impact areas\n                                        </Button>\n                                    </Col>\n                                </Row>\n                                <Field\n                                    name=\"impactAreas\"\n                                    component={CreatableMultiSelectRender}\n                                    label=\"Impact areas\"\n                                    col1={4}\n                                    col2={8}\n                                    options={allImpactAreas}\n                                    zIndex={4000}\n                                    menuPlacement=\"top\"\n                                />\n                            </>\n                        )}\n                        {fields.expectedRequiredHours && (\n                            <Field\n                                name=\"expectedRequiredHours\"\n                                component={InputRenderWithLargeLabel}\n                                type=\"number\"\n                                unit=\"Hours\"\n                                label=\"Expected Required Time\"\n                                min={0}\n                                max={100}\n                                step={0.25}\n                            />\n                        )}\n                        {fields.topNeed && <Field name=\"topNeed\" type=\"checkbox\" component={CheckBoxRender} label=\"Top Need\" col1={4} col2={8} />}\n                        {fields.requiredItems && (\n                            <>\n                                <RequiredItemList\n                                    requiredItems={requiredItems}\n                                    handleItemEdit={props.handleItemEdit}\n                                    handleItemDelete={props.handleItemDelete}\n                                    handleItemPosition={props.handleItemPosition}\n                                />\n                                <Row>\n                                    <Col>\n                                        <Button\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleAddItem();\n                                            }}\n                                        >\n                                            Add New Required Item\n                                        </Button>\n                                    </Col>\n                                    <Col sm=\"8\"></Col>\n                                </Row>\n                            </>\n                        )}\n                        {fields.images && (\n                            <>\n                                <div style={{ height: 50 }} />\n                                <PostImageList\n                                    images={images}\n                                    handleImageDescriptionEdit={props.handleImageDescriptionEdit}\n                                    handleImageDelete={props.handleImageDelete}\n                                    handleImagePosition={props.handleImagePosition}\n                                />\n                                {/* Upload Image */}\n                                <Row>\n                                    <Col>\n                                        <div className=\"custom-file\">\n                                            <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={props.handlePictureUpload} />\n                                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                                Choose profile picture\n                                            </label>\n                                        </div>\n                                    </Col>\n                                    <Col sm=\"8\"></Col>\n                                </Row>\n                            </>\n                        )}\n                        <br />\n                        {fields.address && (\n                            <>\n                                <Field\n                                    name=\"address.fullAddress\"\n                                    type=\"text\"\n                                    component={InputRender}\n                                    label=\"Full Address\"\n                                    placeholder=\"House, Road, Area, Sector, ZIP, City, State, Country...\"\n                                />\n                                <Row>\n                                    <Col sm={4}>Location</Col>\n                                    <Col sm={8}>\n                                        <PostGeoCoding selectedLocation={props.location} handleLocationChange={props.setLocation} />\n                                    </Col>\n                                </Row>\n                            </>\n                        )}\n                        {/* {fields.isActive && <Field name=\"isActive\" type=\"checkbox\" component={CheckBoxRender} label=\"Publish/Active\" col1={4} col2={8} />} */}\n                        <div style={{ height: 50 }} />\n                        {/* Buttons */}\n                        <Row>\n                            <Col>\n                                <Button\n                                    variant=\"warning\"\n                                    size=\"sm\"\n                                    type=\"submit\"\n                                    onClick={() => {\n                                        props.setIsActive(false);\n                                    }}\n                                >\n                                    Save as Draft\n                                </Button>\n                                &nbsp;\n                                <Button variant=\"primary\" size=\"sm\" type=\"submit\">\n                                    {editMode ? 'Update and Publish' : 'Save and Publish'}\n                                </Button>\n                            </Col>\n                        </Row>\n                    </form>\n                </Col>\n                <Col sm=\"1\"></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default PostForm;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-image-list.js",["1097","1098"],"import React from 'react';\nimport { Badge, Col, Image, Row, Table } from 'react-bootstrap';\nimport { DeleteButtonRender, DownArrowButtonRender, UpArrowButtonRender } from '../form_template/buttons-render';\nconst PostImageList = (props) => {\n    const images = props.images;\n    if (images && images.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Images</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"dark\" className=\"badge-single \">\n                            ß Remember: First Image of the list will be your default post image\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Image</th>\n                            <th>Description</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {images.map((image, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td style={{ width: 220 }}>\n                                        <Image src={image.path} thumbnail width=\"200\" />\n                                    </td>\n                                    <td>\n                                        <textarea\n                                            value={image.description}\n                                            placeholder=\"Add description...\"\n                                            rows=\"8\"\n                                            type=\"text\"\n                                            className=\"form-control image-description-input\"\n                                            onChange={(e) => {\n                                                props.handleImageDescriptionEdit(i, e);\n                                            }}\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <DeleteButtonRender\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        />\n                                        {i > 0 && (\n                                            <>\n                                                &nbsp;\n                                                <UpArrowButtonRender\n                                                    onClick={() => {\n                                                        props.handleItemPosition(i, 'up');\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                        &nbsp;\n                                        {i < images.length - 1 && (\n                                            <DownArrowButtonRender\n                                                onClick={() => {\n                                                    props.handleItemPosition(i, 'down');\n                                                }}\n                                            />\n                                        )}\n                                    </td>\n                                    {/* <td className=\"block\">\n                                        <Button\n                                            variant=\"outline-danger\"\n                                            onClick={() => {\n                                                props.handleImageDelete(i);\n                                            }}\n                                        >\n                                            DELETE\n                                        </Button>\n                                        <br />\n                                        <br />\n                                        {i > 0 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'up');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-up-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                        <br />\n                                        <br />\n                                        {i < images.length - 1 && (\n                                            <Button\n                                                variant=\"outline-primary\"\n                                                size=\"sm\"\n                                                onClick={() => {\n                                                    props.handleImagePosition(i, 'down');\n                                                }}\n                                            >\n                                                <Image src=\"/images/arrow-down-icon.png\" thumbnail />\n                                            </Button>\n                                        )}\n                                    </td> */}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Image Added</h5>;\n    }\n};\nexport default PostImageList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-geo-coding.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/post-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-details.js",["1099","1100","1101"],"import React from 'react';\nimport { Container, Row, Col, Image, Button, Badge } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '@Constants/default-images';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'react-avatar';\nimport { interestTypes } from '@Constants/interest-types';\nimport moment from 'moment';\nimport {\n    TagWithLabelRender,\n    SkillsRender,\n    ImpactAreasRender,\n    DescriptionRender,\n    ImageAndDescriptionRender,\n    RequiredItemsRender,\n    InfoRender,\n    LinkRender,\n    BooleanRender,\n    KeywordsRender,\n} from '../form_template/details-render';\nimport {\n    LikeButtonRender,\n    GoingButtonRender,\n    InterestedButtonRender,\n    AddToSchedulerButtonRender,\n    RemoveFromSchedulerButtonRender,\n} from '../form_template/buttons-render';\nimport PostMapView from './post-map-view';\nimport * as RoutePath from '@Constants/route-paths';\nimport { getPostTypeByValue, postTypeFields } from '@Constants/post-types';\nconst DisplayPost = (props) => {\n    const post = props.post;\n    console.log('🚀 ~ file: post-details.js ~ line 24 ~ DisplayPost ~ post', post);\n    const userId = props.userId;\n    const fields = postTypeFields[post.postType];\n    const getCheckIfPostAddedToSchedulerResponse = props.getCheckIfPostAddedToSchedulerResponse;\n    const handleAddPostToScheduler = props.handleAddPostToScheduler;\n    const handleRemovePostFromScheduler = props.handleRemovePostFromScheduler;\n    if (post && post._id) {\n        const name = post.organizationName ? post.organizationName : 'Organization Name Not Found';\n        const profilePicture = post.organizationProfilePicture ? post.organizationProfilePicture : defaultOrganizationProfilePicture;\n        // const interests = post.interests;\n        const committed = post.interests.filter((i) => i.userId === userId)[0];\n        console.log('🚀 ~ file: post-details.js ~ line 32 ~ DisplayPost ~ committed', committed);\n        let liked = post.interests.filter((interest) => interest.liked).length;\n        let interested = post.interests.filter((interest) => interest.interested).length;\n        let going = post.interests.filter((interest) => interest.going).length;\n        let mapView = false;\n        if (fields.address && post.address && post.address.latitude && post.address.longitude) mapView = true;\n        let follows = false;\n        let postIsAddedToScheduler = false;\n        if (getCheckIfPostAddedToSchedulerResponse && getCheckIfPostAddedToSchedulerResponse.success) {\n            follows = getCheckIfPostAddedToSchedulerResponse.follows;\n            postIsAddedToScheduler = getCheckIfPostAddedToSchedulerResponse.isAdded;\n        }\n        console.log('🚀 ~ file: post-details.js ~ line 51 ~ DisplayPost ~ follows', follows, postIsAddedToScheduler);\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        {post.creatorId === userId && (\n                            <Row>\n                                <Col>\n                                    <Button\n                                        size=\"sm\"\n                                        variant=\"outline-info\"\n                                        onClick={() => {\n                                            props.handleGotoManagePosts();\n                                        }}\n                                    >\n                                        Manage Posts\n                                    </Button>\n                                    <hr />\n                                </Col>\n                            </Row>\n                        )}\n                        {post.postType !== 'general' && (\n                            <Row>\n                                <Col>\n                                    <h4>\n                                        <Badge variant=\"dark\">{getPostTypeByValue(post.postType)[0].label}</Badge>\n                                    </h4>\n                                </Col>\n                            </Row>\n                        )}\n                        <Row>\n                            <Col>\n                                <h4>{post.title}</h4>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm=\"1\">\n                                <Avatar src={profilePicture} round size=\"50\" />\n                            </Col>\n                            <Col sm=\"8\">\n                                <Link to={'/organization/details/' + post.creatorId}>\n                                    {' '}\n                                    <h6>{name}</h6>\n                                </Link>\n                                <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                            </Col>\n                        </Row>\n                        <br />\n                        <Row>\n                            <Col>{ImpactAreasRender('', post.impactAreas)}</Col>\n                        </Row>\n\n                        {fields.skills && (\n                            <>\n                                <Row>\n                                    <Col>{SkillsRender('', post.skills)}</Col>\n                                </Row>\n                            </>\n                        )}\n                        {fields.startDateTime && fields.endDateTime && (\n                            <>\n                                <Row>\n                                    {post.startDateTime && <Col>{InfoRender('Start Time', moment(post.startDateTime).format('LLLL'))}</Col>}\n                                    {post.endDateTime && <Col>{InfoRender('End Time', moment(post.endDateTime).format('LLLL'))}</Col>}\n                                </Row>\n                                <Row>\n                                    {post.expectedRequiredHours && <Col>{InfoRender('Expected Required Time', post.expectedRequiredHours + ' Hour')}</Col>}\n                                </Row>\n                                {/* {post.startDateTime || post.endDateTime ? <hr /> : ''} */}\n                            </>\n                        )}\n                        {fields.petitionLink && post.petitionLink && (\n                            <>\n                                <Row>\n                                    <Col>{LinkRender('Petition Link', post.petitionLink)}</Col>\n                                </Row>\n                                <hr />\n                            </>\n                        )}\n                        {fields.topNeed && post.topNeed && (\n                            <>\n                                <Row>\n                                    <Col>{BooleanRender('Top Need', post.topNeed)}</Col>\n                                </Row>\n                                <hr />\n                            </>\n                        )}\n\n                        <Row>\n                            {mapView && <Col md={4}>{<PostMapView allPosts={[post]} zoom={16} />}</Col>}\n                            <Col>\n                                {DescriptionRender('', post.description)}\n                                <hr />\n\n                                {KeywordsRender('Keywords', post.keywords)}\n                            </Col>\n                            <hr />\n                        </Row>\n\n                        {fields.requiredItems && (\n                            <Row>\n                                <Col>{RequiredItemsRender(post.requiredItems)}</Col>\n                            </Row>\n                        )}\n                        <Row>\n                            <Col>{ImageAndDescriptionRender(post.images)}</Col>\n                            <hr />\n                        </Row>\n                        {fields.postURL && post.postURL && (\n                            <Row>\n                                <Col>{InfoRender('URL', post.postURL)}</Col>\n                            </Row>\n                        )}\n                        {fields.contact && post.contact && (\n                            <Row>\n                                <Col>{InfoRender('Contact', post.contact)}</Col>\n                            </Row>\n                        )}\n                        <div style={{ height: 50 }} />\n                        <Row>\n                            <Col>\n                                {interestTypes[post.postType].like ? (\n                                    committed && committed.liked ? (\n                                        <LikeButtonRender\n                                            complete={true}\n                                            onClick={() => {\n                                                props.handleCancelLikePost(post._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <LikeButtonRender\n                                            complete={false}\n                                            onClick={() => {\n                                                props.handleLikePost(post._id);\n                                            }}\n                                        />\n                                    )\n                                ) : (\n                                    <></>\n                                )}\n                                &nbsp;\n                                {interestTypes[post.postType].interested ? (\n                                    committed && committed.interested ? (\n                                        <InterestedButtonRender\n                                            complete={true}\n                                            onClick={() => {\n                                                props.handleCancelInterestedPost(post._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <InterestedButtonRender\n                                            complete={false}\n                                            onClick={() => {\n                                                props.handleInterestedPost(post._id);\n                                            }}\n                                        />\n                                    )\n                                ) : (\n                                    <></>\n                                )}\n                                &nbsp;\n                                {interestTypes[post.postType].going ? (\n                                    committed && committed.going ? (\n                                        <GoingButtonRender\n                                            complete={true}\n                                            onClick={() => {\n                                                props.handleCancelGoingPost(post._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <GoingButtonRender\n                                            complete={false}\n                                            onClick={() => {\n                                                props.handleGoingPost(post._id);\n                                            }}\n                                        />\n                                    )\n                                ) : (\n                                    <></>\n                                )}\n                                &nbsp;\n                                {fields.addable && !follows ? (\n                                    postIsAddedToScheduler ? (\n                                        <RemoveFromSchedulerButtonRender\n                                            hover_title=\"Remove From My Calendar\"\n                                            onClick={() => {\n                                                handleRemovePostFromScheduler();\n                                            }}\n                                        />\n                                    ) : (\n                                        <AddToSchedulerButtonRender\n                                            hover_title=\"Add To My Calendar\"\n                                            onClick={() => {\n                                                handleAddPostToScheduler();\n                                            }}\n                                        />\n                                    )\n                                ) : (\n                                    <></>\n                                )}\n                            </Col>\n                            <Col className=\"right-align\">\n                                {interestTypes[post.postType].like && liked > 0 && (\n                                    <Button\n                                        variant=\"outline-primary\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleClickCommittedButtons(post._id, 'liked');\n                                        }}\n                                    >\n                                        {liked} Liked\n                                    </Button>\n                                )}\n                                &nbsp;\n                                {interestTypes[post.postType].interested && interested > 0 && (\n                                    <Button\n                                        variant=\"outline-secondary\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleClickCommittedButtons(post._id, 'interested');\n                                        }}\n                                    >\n                                        {interested} Interested\n                                    </Button>\n                                )}\n                                &nbsp;\n                                {interestTypes[post.postType].going && going > 0 && (\n                                    <Button\n                                        variant=\"outline-info\"\n                                        size=\"sm\"\n                                        onClick={() => {\n                                            props.handleClickCommittedButtons(post._id, 'going');\n                                        }}\n                                    >\n                                        {going} Going\n                                    </Button>\n                                )}\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    } else\n        return (\n            <Container>\n                <Row>\n                    <Col className=\"parent-page\">\n                        <h4>Post is not available</h4>\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nexport default DisplayPost;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-map-view.js",["1102"],"import React from 'react';\nimport { Badge, Container, Row, Col } from 'react-bootstrap';\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\nimport * as RoutePath from '@Constants/route-paths';\nimport { getPostTypeByValue } from '@Constants/post-types';\nimport { Link } from 'react-router-dom';\nimport { ImpactAreasRender, InfoRender } from '../form_template/details-render';\nimport { interestTypes } from '@Constants/interest-types';\nimport { LikeButtonRender, InterestedButtonRender, GoingButtonRender, FollowButtonRender, UnfollowUserButtonRender } from '../form_template/buttons-render';\nconst libraries = ['places'];\nconst mapContainerStyle = {\n    height: '100vh',\n    width: '100%',\n};\n\nconst options = {\n    // styles: mapStyles,\n    // disableDefaultUI: true,\n    zoomControl: true,\n};\nlet center = {\n    lat: 43.6532,\n    lng: -79.3832,\n};\nconst PostRender = (props) => {\n    const { post, followingObject, userId } = props;\n    let interest = {};\n    let filter = post.interests.filter((interest) => interest.userId === userId);\n    if (filter && filter.length > 0) interest = filter[0];\n    return (\n        <Container className=\"post-map-box\">\n            <h6>\n                <Badge variant=\"primary\">{getPostTypeByValue(post.postType)[0].label}</Badge>\n            </h6>\n            <Link to={RoutePath.postDetailsPage(post.postType, post._id)}>\n                <h5 style={{ color: 'cadetblue' }}>{post.title}</h5>\n            </Link>\n            {post.organizationName && post.organizationName.length > 0 && (\n                <Link to={RoutePath.userDetailsPage('organization', post.creatorId)}>\n                    <h6 style={{ color: 'cadetblue' }}>{post.organizationName}</h6>\n                </Link>\n            )}\n            {ImpactAreasRender('', post.impactAreas)}\n            {InfoRender('', post.address.fullAddress)}\n            <hr />\n            <Row>\n                <Col>\n                    {interestTypes[post.postType].like ? (\n                        interest.liked ? (\n                            <LikeButtonRender\n                                complete={true}\n                                onClick={() => {\n                                    props.handleCancelLikePost(post._id);\n                                }}\n                            />\n                        ) : (\n                            <LikeButtonRender\n                                complete={false}\n                                onClick={() => {\n                                    props.handleLikePost(post._id);\n                                }}\n                            />\n                        )\n                    ) : (\n                        <></>\n                    )}\n                    &nbsp;\n                    {interestTypes[post.postType].interested ? (\n                        interest.interested ? (\n                            <InterestedButtonRender\n                                complete={true}\n                                onClick={() => {\n                                    props.handleCancelInterestedPost(post._id);\n                                }}\n                            />\n                        ) : (\n                            <InterestedButtonRender\n                                complete={false}\n                                onClick={() => {\n                                    props.handleInterestedPost(post._id);\n                                }}\n                            />\n                        )\n                    ) : (\n                        <></>\n                    )}\n                    &nbsp;\n                    {interestTypes[post.postType].going ? (\n                        interest.going ? (\n                            <GoingButtonRender\n                                complete={true}\n                                onClick={() => {\n                                    props.handleCancelGoingPost(post._id);\n                                }}\n                            />\n                        ) : (\n                            <GoingButtonRender\n                                complete={false}\n                                onClick={() => {\n                                    props.handleGoingPost(post._id);\n                                }}\n                            />\n                        )\n                    ) : (\n                        <></>\n                    )}\n                    &nbsp;\n                </Col>\n                <Col>\n                    {followingObject[post.creatorId] ? (\n                        <UnfollowUserButtonRender\n                            onClick={() => {\n                                props.handleUnfollowClick(post.creatorId);\n                            }}\n                        />\n                    ) : (\n                        <FollowButtonRender\n                            onClick={() => {\n                                props.handleFollowClick(post.creatorId);\n                            }}\n                        />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst AllPostOnMap = (props) => {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        libraries,\n    });\n    const markers = props.allPosts;\n    console.log('🚀 ~ file: post-map-view.js ~ line 27 ~ AllPostOnMap ~ markers', markers);\n    if (props.currentLocation) {\n        if (props.currentLocation.latitude && props.currentLocation.longitude) {\n            center = {\n                lat: props.currentLocation.latitude,\n                lng: props.currentLocation.longitude,\n            };\n        }\n    } else if (markers && markers.length > 0) {\n        if (markers[0].address)\n            center = {\n                lat: markers[0].address.latitude,\n                lng: markers[0].address.longitude,\n            };\n    }\n    const [selected, setSelected] = React.useState(null);\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n    const mapRef = React.useRef();\n\n    if (loadError) return 'Error loading maps';\n    if (!isLoaded) return 'Loading maps';\n    return (\n        <div>\n            <GoogleMap id=\"map\" mapContainerStyle={mapContainerStyle} zoom={props.zoom ? props.zoom : 3} center={center} options={options} onLoad={onMapLoad}>\n                {markers.map((marker, i) => {\n                    if (marker.address && marker.address.latitude && marker.address.longitude) {\n                        return (\n                            <Marker\n                                key={`${i}.${marker.lat}-${marker.lng}`}\n                                position={{\n                                    lat: marker.address.latitude,\n                                    lng: marker.address.longitude,\n                                }}\n                                onClick={() => {\n                                    setSelected(marker);\n                                }}\n                            />\n                        );\n                    }\n                })}\n                {selected ? (\n                    <InfoWindow\n                        position={{\n                            lat: selected.address.latitude,\n                            lng: selected.address.longitude,\n                        }}\n                        onCloseClick={() => {\n                            setSelected(null);\n                        }}\n                    >\n                        <PostRender post={selected} {...props} />\n                    </InfoWindow>\n                ) : null}\n            </GoogleMap>\n        </div>\n    );\n};\nexport default AllPostOnMap;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/news/sample-news.js",["1103"],"import React from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport { EditButtonRender, DeleteButtonRender } from '../../components/form_template/buttons-render';\nconst SampleNews = (props) => {\n    const news = [\n        {\n            id: 0,\n            isActive: false,\n            picture: 'http://placehold.it/32x32',\n            title: 'Cupidatat commodo dolore ex laborum consectetur.',\n            description:\n                'Magna magna culpa ut non exercitation. Aliqua dolor fugiat duis voluptate non Lorem. Veniam dolore tempor cillum laborum veniam est. Id et magna id nisi qui sit deserunt sunt.\\r\\n',\n            createdAt: '2015-01-16T01:56:58-06:00',\n            type: 'volunteering',\n        },\n        {\n            id: 1,\n            isActive: false,\n            picture: 'http://placehold.it/32x32',\n            title: 'Ullamco elit sunt pariatur cillum cillum amet cillum non enim laboris consequat qui in.',\n            description:\n                'Reprehenderit in nostrud ea dolor ad veniam consectetur duis veniam minim ipsum aute aliqua. Commodo sint pariatur elit eu tempor consectetur nisi non dolor. Ea ad est ullamco ea cillum nulla enim. Reprehenderit adipisicing mollit exercitation elit anim et consectetur esse voluptate. Eiusmod do voluptate do culpa pariatur pariatur culpa ipsum do aliquip laborum anim ipsum ipsum.\\r\\n',\n            createdAt: '2015-04-24T06:11:52-06:00',\n            type: 'volunteering',\n        },\n        {\n            id: 2,\n            isActive: true,\n            picture: 'http://placehold.it/32x32',\n            title: 'Aute quis excepteur mollit ullamco aliquip Lorem.',\n            description:\n                'Incididunt nisi enim incididunt nostrud officia proident occaecat. Incididunt culpa voluptate laboris irure aliquip fugiat. Ut cillum occaecat ex enim irure sit Lorem nisi aliqua aliqua non non ad. Sint officia exercitation proident nostrud officia. Veniam laborum sunt exercitation adipisicing magna sit. Ullamco veniam cupidatat voluptate veniam reprehenderit dolor anim deserunt sit dolor. Enim commodo nisi qui sunt voluptate nisi magna.\\r\\n',\n            createdAt: '2014-03-26T04:48:25-06:00',\n            type: 'advocacy',\n        },\n        {\n            id: 3,\n            isActive: true,\n            picture: 'http://placehold.it/32x32',\n            title: 'Minim irure ipsum nisi nostrud duis excepteur nisi.',\n            description:\n                'Aute tempor cupidatat laboris amet duis voluptate laborum. Et consectetur nulla elit commodo excepteur magna eiusmod cillum excepteur sint magna ex do nulla. Tempor quis officia occaecat commodo voluptate dolore commodo. Id nulla aliquip quis et laborum nisi laboris sint mollit nulla.\\r\\n',\n            createdAt: '2020-01-22T06:58:06-06:00',\n            type: 'event',\n        },\n        {\n            id: 4,\n            isActive: false,\n            picture: 'http://placehold.it/32x32',\n            title: 'Nisi consequat do labore minim fugiat elit aliqua labore magna ea.',\n            description:\n                'Enim duis deserunt nulla anim sunt. Minim ullamco eiusmod sit officia officia dolore incididunt. Incididunt magna enim ullamco nulla exercitation aliqua tempor. Veniam magna aute nostrud proident dolore consectetur mollit dolore. Voluptate ut reprehenderit labore ex excepteur velit culpa consectetur mollit do anim fugiat magna duis. Ad ipsum voluptate velit nulla cillum dolor eiusmod incididunt Lorem. Excepteur in fugiat esse aliquip dolor reprehenderit.\\r\\n',\n            createdAt: '2015-03-29T07:33:23-06:00',\n            type: 'advocacy',\n        },\n        {\n            id: 5,\n            isActive: true,\n            picture: 'http://placehold.it/32x32',\n            title: 'Commodo commodo incididunt ea culpa esse culpa non aliquip.',\n            description:\n                'Ut qui aute duis ea ad nulla pariatur nostrud labore fugiat. Laboris ea incididunt aliquip nulla enim. Fugiat ex irure laborum deserunt. Ea velit laboris esse veniam occaecat dolore do esse reprehenderit non sunt occaecat ad. Veniam adipisicing anim in non proident sunt magna nisi deserunt consequat laboris.\\r\\n',\n            createdAt: '2017-04-28T06:31:30-06:00',\n            type: 'project',\n        },\n        {\n            id: 6,\n            isActive: true,\n            picture: 'http://placehold.it/32x32',\n            title: 'Sit cupidatat deserunt deserunt id excepteur irure commodo mollit amet.',\n            description:\n                'Nisi est ex occaecat sint aliquip. Laborum ea consectetur est adipisicing id fugiat commodo labore ex tempor minim. Eiusmod laboris consequat culpa ea pariatur dolore ipsum cillum exercitation ut non exercitation aliqua.\\r\\n',\n            createdAt: '2016-01-25T12:25:37-06:00',\n            type: 'project',\n        },\n    ];\n    return (\n        <Table striped bordered hover size=\"sm\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th>\n                        <input type=\"text\" className=\"form-control\" />\n                    </th>\n                    <th>\n                        <input type=\"text\" className=\"form-control\" />\n                    </th>\n                    <th colSpan={2}></th>\n                </tr>\n            </thead>\n            <thead>\n                <tr>\n                    <th>#</th>\n                    <th>Type</th>\n                    <th>Title</th>\n                    <th>Created At</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {news.map((ns, i) => {\n                    return (\n                        <tr key={i}>\n                            <td>{i + 1}</td>\n                            <td>{ns.type}</td>\n                            <td>{ns.title}</td>\n\n                            <td>{moment(ns.createdAt).format('LLL')}</td>\n                            <td>\n                                <EditButtonRender /> &nbsp;\n                                <DeleteButtonRender />\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    );\n};\nexport default SampleNews;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/post/create-post-old.js",["1104","1105","1106","1107","1108"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/post-types.js",["1109"],"export const allPostTypes = [\n    { id: 1, value: 'event', label: 'Event' },\n    { id: 2, value: 'project', label: 'Project' },\n    { id: 3, value: 'general', label: 'General Post' },\n    { id: 4, value: 'volunteering', label: 'Volunteering' },\n    { id: 5, value: 'in-kind', label: 'In-Kind' },\n    { id: 6, value: 'advocacy', label: 'Advocacy' },\n    { id: 7, value: '', label: '' },\n];\nexport const allSearchablePostTypes = [\n    { id: 1, value: 'event', label: 'Event' },\n    { id: 2, value: 'project', label: 'Project' },\n    { id: 3, value: 'general', label: 'General Post' },\n    { id: 4, value: 'volunteering', label: 'Volunteering' },\n    { id: 5, value: 'advocacy', label: 'Advocacy' },\n];\nexport const getPostTypeByValue = (value) => {\n    return allPostTypes.filter((type) => type.value === value);\n};\nconst fields = {\n    title: 'title',\n    description: 'description',\n    images: 'images',\n    impactAreas: 'impactAreas',\n    skills: 'skills',\n    startDateTime: 'startDateTime',\n    endDateTime: 'endDateTime',\n    address: 'address',\n    expectedRequiredHours: 'expectedRequiredHours',\n    topNeed: 'topNeed',\n    petitionLink: 'petitionLink',\n    isActive: 'isActive',\n    requiredItems: 'requiredItems',\n    keywords: 'keywords',\n};\nexport const postTypeFields = {\n    event: {\n        title: 1,\n        description: 1,\n        images: 1,\n        impactAreas: 1,\n        startDateTime: 1,\n        endDateTime: 1,\n        address: 1,\n        isActive: 1,\n        keywords: 1,\n        postURL: 1,\n        contact: 1,\n        addable: 1,\n    },\n    project: {\n        title: 1,\n        description: 1,\n        images: 1,\n        impactAreas: 1,\n        skills: 1,\n        expectedRequiredHours: 1,\n        startDateTime: 1,\n        endDateTime: 1,\n        address: 1,\n        isActive: 1,\n        topNeed: 1,\n        keywords: 1,\n        postURL: 1,\n        contact: 1,\n        addable: 1,\n    },\n    general: { title: 1, description: 1, images: 1, impactAreas: 1, isActive: 1, keywords: 1 },\n    volunteering: {\n        title: 1,\n        description: 1,\n        images: 1,\n        impactAreas: 1,\n        skills: 1,\n        startDateTime: 1,\n        endDateTime: 1,\n        address: 1,\n        isActive: 1,\n        topNeed: 1,\n        keywords: 1,\n        postURL: 1,\n        contact: 1,\n        addable: 1,\n    },\n    'in-kind': { title: 1, description: 1, images: 1, impactAreas: 1, requiredItems: 1, isActive: 1, topNeed: 1, keywords: 1, postURL: 1, contact: 1 },\n    advocacy: {\n        title: 1,\n        description: 1,\n        images: 1,\n        petitionLink: 1,\n        impactAreas: 1,\n        topNeed: 1,\n        startDateTime: 1,\n        endDateTime: 1,\n        address: 1,\n        isActive: 1,\n        keywords: 1,\n        postURL: 1,\n        contact: 1,\n        addable: 1,\n    },\n};\nexport const allPostTypeValues = ['event', 'project', 'general', 'volunteering', 'in-kind', 'advocacy'];\nexport const allPostTypeLabels = ['Event', 'Project', 'General', 'Volunteering', 'In-Kind', 'Advocacy'];\nexport const getColorByPostType = (postType) => {\n    const colors = {\n        event: '#274e13',\n        project: '#20124d',\n        general: '#1c4587',\n        volunteering: '#073763',\n        'in-kind': '#0c343d',\n        advocacy: '#4c1130',\n    };\n    return colors[postType] ? colors[postType] : 'gray';\n};\nexport const getPostTypeName = (value) => {\n    const postTypes = {\n        event: 'Event',\n        project: 'Project',\n        general: 'General Post',\n        volunteering: 'Volunteering',\n        'in-kind': 'In-Kind',\n        advocacy: 'Advocacy',\n    };\n    const name = postTypes[value] ? postTypes[value] : '';\n    return name;\n};\nexport const allCalenderPostTypes = [\n    { value: 'event', label: 'EVENT' },\n    { value: 'project', label: 'PROJECT' },\n    { value: 'volunteering', label: 'VOLUNTEERING' },\n    { value: 'advocacy', label: 'ADVOCACY' },\n];\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/icon-render.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/required-item-list.js",["1110","1111"],"import React from 'react';\nimport { Table, Image, Button, Row, Col, Badge } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport { DeleteButtonRender, UpArrowButtonRender, DownArrowButtonRender } from '../form_template/buttons-render';\nconst RequiredItemList = (props) => {\n    const requiredItems = props.requiredItems;\n    if (requiredItems && requiredItems.length > 0) {\n        return (\n            <>\n                <Row>\n                    <Col>\n                        <h5>All Required Items</h5>\n                    </Col>\n                    <Col className=\"right-align\">\n                        <Badge pill variant=\"light\" className=\"badge-single \">\n                            Remember: Item without name, requirement and needed by valid date shall not be saved.\n                        </Badge>\n                    </Col>\n                </Row>\n\n                <Table striped bordered hover responsive size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Requirement</th>\n                            <th>Needed By</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {requiredItems.map((item, i) => {\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <input\n                                            className=\"form-control image-description-input\"\n                                            type=\"text\"\n                                            onChange={(e) => {\n                                                props.handleItemEdit(i, 'name', e.target.value);\n                                            }}\n                                            value={item.name}\n                                        />\n                                    </td>\n                                    <td>\n                                        <input\n                                            className=\"form-control image-description-input\"\n                                            type=\"text\"\n                                            onChange={(e) => {\n                                                props.handleItemEdit(i, 'requirement', e.target.value);\n                                            }}\n                                            value={item.requirement}\n                                        />\n                                    </td>\n                                    <td>\n                                        <DatePicker\n                                            className=\"form-control custom-date-picker\"\n                                            onChange={(date) => props.handleItemEdit(i, 'neededBy', date)}\n                                            selected={new Date(item.neededBy)}\n                                            dateFormat=\"MM/dd/yyyy\"\n                                        />\n                                    </td>\n                                    <td className=\"block\">\n                                        <DeleteButtonRender\n                                            onClick={() => {\n                                                props.handleItemDelete(i);\n                                            }}\n                                        />\n                                        {i > 0 && (\n                                            <>\n                                                &nbsp;\n                                                <UpArrowButtonRender\n                                                    onClick={() => {\n                                                        props.handleItemPosition(i, 'up');\n                                                    }}\n                                                />\n                                            </>\n                                        )}\n                                        &nbsp;\n                                        {i < requiredItems.length - 1 && (\n                                            <DownArrowButtonRender\n                                                onClick={() => {\n                                                    props.handleItemPosition(i, 'down');\n                                                }}\n                                            />\n                                        )}\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </>\n        );\n    } else {\n        return <h5>No Required Item Added</h5>;\n    }\n};\nexport default RequiredItemList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-post-list.js",["1112","1113","1114"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { likePost, cancelLikePost, interestedPost, cancelInterestedPost, goingPost, cancelGoingPost, changePostInterest } from '../../actions/post-action';\nimport PostListView from '@Components/post/post-card-view';\nimport { getUserPublicInfo } from '../../actions/user-action';\nimport { getAllPostsByFilter } from '../../actions/post-action';\nimport { followUser, unfollowUser, checkIfFollower } from '../../actions/follow-action';\nimport SideSubMenu from '@Components/organization/organization-sub-menu';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport PostTypeMenu from '@Components/organization/organization-post-menu';\nimport PostFilter from '@Components/organization/organization-post-filter';\nimport { postDetailsPage } from '../../constants/route-paths';\n\nconst OrganizationPostList = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [follows, setFollows] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [allPosts, setAllPosts] = useState([]);\n    const [filters, setFilters] = useState({\n        topNeed: false,\n    });\n    const gotoPostDetails = (postType, postId) => {\n        props.history.push(postDetailsPage(postType, postId));\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            console.log('Came here');\n            const organizationId = props.match.params.userId;\n            props.dispatch(getUserPublicInfo(organizationId));\n            const user = props.auth.user;\n            setUserId(user._id);\n            const postType = props.match.params.postType;\n            props.dispatch(checkIfFollower(user._id, props.match.params.userId));\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    useEffect(() => {\n        setLoading(true);\n        const userId = props.match.params.userId;\n        const postType = props.match.params.postType;\n        props.dispatch(getAllPostsByFilter({ creatorId: userId, postTypes: [{ value: postType }] }));\n        setLoading(false);\n    }, [props.match.params.postType]);\n    useEffect(() => {\n        const success = props.getCheckIfFollowerResponse;\n        if (success) {\n            setFollows(props.getCheckIfFollowerResponse.follows);\n        }\n    }, [props.getCheckIfFollowerResponse]);\n    const handleSetFilter = (name, value) => {\n        const filters_ = filters;\n        filters_[name] = value;\n        setFilters({ ...filters_ });\n    };\n    const handleFollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(followUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleUnfollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(unfollowUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getFollowResponse;\n        if (success) {\n            setFollows(true);\n            // NotificationManager.success('You are following', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getFollowResponse]);\n    useEffect(() => {\n        const { success } = props.getUnfollowResponse;\n\n        if (success) {\n            setFollows(false);\n            // NotificationManager.success('You are unfollowing', 'success');\n        } else if (success === false) {\n            // NotificationManager.success('Server connection error', 'failed');\n        }\n    }, [props.getUnfollowResponse]);\n    useEffect(() => {\n        const { success } = props.getAllPostsResponse;\n        if (success) {\n            let allFilteredPosts = props.getAllPostsResponse.allPosts;\n\n            if (filters) {\n                if (filters.topNeed) {\n                    allFilteredPosts = allFilteredPosts.filter((post) => post.topNeed === true);\n                } else {\n                    allFilteredPosts = props.getAllPostsResponse.allPosts;\n                }\n            }\n            console.log('🚀 ~ file: organization-post-list.js ~ line 93 ~ useEffect ~ allFilteredPosts', allFilteredPosts);\n            setAllPosts([...allFilteredPosts]);\n        } else {\n            setAllPosts([]);\n        }\n    }, [props.getAllPostsResponse, filters]);\n    const gotoPage = (url) => {\n        props.history.push(url);\n    };\n    const handleLikePost = (postId) => {\n        props.dispatch(likePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'like'));\n    };\n    const handleCancelLikePost = (postId) => {\n        props.dispatch(cancelLikePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'unlike'));\n    };\n\n    const handleInterestedPost = (postId) => {\n        props.dispatch(interestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'interested'));\n    };\n    const handleCancelInterestedPost = (postId) => {\n        console.log('🚀 ~ file: home.js ~ line 46 ~ handleCancelInterestedPost ~ postId', postId);\n        props.dispatch(cancelInterestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'uninterested'));\n    };\n\n    const handleGoingPost = (postId) => {\n        props.dispatch(goingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'going'));\n    };\n    const handleCancelGoingPost = (postId) => {\n        props.dispatch(cancelGoingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'ungoing'));\n    };\n    if (loading) return <LoadingAnim />;\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <Row>\n                        <Col className=\"right-align\" sm=\"2\">\n                            <SideSubMenu\n                                activePage=\"Impact\"\n                                organization={props.getPublicInfoResponse.success ? props.getPublicInfoResponse.user : {}}\n                                handleFollowClick={handleFollowClick}\n                                handleUnfollowClick={handleUnfollowClick}\n                                follows={follows}\n                                gotoPage={gotoPage}\n                            />\n                        </Col>\n                        <Col sm=\"9\" className=\"left-border\">\n                            <PostTypeMenu selected={props.match.params.postType} userId={props.match.params.userId} />\n                            <hr />\n                            <PostFilter filters={filters} handleSetFilter={handleSetFilter} />\n                            <PostListView\n                                // allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.allPosts : []}\n                                allPosts={allPosts}\n                                gotoPostDetails={gotoPostDetails}\n                                userId={userId}\n                                handleLikePost={handleLikePost}\n                                handleCancelLikePost={handleCancelLikePost}\n                                handleInterestedPost={handleInterestedPost}\n                                handleCancelInterestedPost={handleCancelInterestedPost}\n                                handleGoingPost={handleGoingPost}\n                                handleCancelGoingPost={handleCancelGoingPost}\n                                followOrganizationButton={false}\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    const getAllPostsResponse = state.Post.getAllPosts;\n    console.log('🚀 ~ file: organization-post-list.js ~ line 95 ~ mapStateToProps ~ getAllPostsResponse', state);\n    const getPublicInfoResponse = state.User.getUserPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n        getAllPostsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(OrganizationPostList);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-sub-menu.js",["1115","1116","1117","1118","1119","1120","1121"],"import React from 'react';\nimport { Container, Image, Row, Col, Badge, ListGroup, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { defaultOrganizationProfilePicture } from '@Constants/default-images';\nimport Collapsible from 'react-collapsible';\nimport { RiUserFollowFill, RiUserUnfollowFill } from 'react-icons/ri';\nimport * as RoutePath from '@Constants/route-paths';\nimport { EndorseUserButtonRender, CancelEndorseUserButtonRender } from '../form_template/buttons-render.js';\nconst SideMenu = (props) => {\n    const organization = props.organization;\n    const activePage = props.activePage;\n    console.log(organization);\n    const follows = props.follows;\n    const endorses = props.endorses;\n    const RenderListButtonItem = (label, path) => {\n        return (\n            <Button\n                variant={label === activePage ? 'primary' : 'outline-primary'}\n                size=\"sm\"\n                className=\"list-button\"\n                onClick={() => {\n                    props.gotoPage(path);\n                }}\n            >\n                {label}\n            </Button>\n        );\n    };\n    if (organization._id) {\n        const basicInfo = organization.basicInfo;\n        return (\n            <>\n                <Image\n                    className=\"left-image\"\n                    src={basicInfo.profilePicture ? basicInfo.profilePicture : defaultOrganizationProfilePicture}\n                    width=\"100%\"\n                    thumbnail\n                />\n                <div style={{ height: 10 }} />\n                {follows ? (\n                    <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to unfollow</Tooltip>}>\n                        <Button\n                            size=\"sm\"\n                            variant=\"outline-info\"\n                            className=\"details-following-btn\"\n                            onClick={() => {\n                                props.handleUnfollowClick();\n                            }}\n                        >\n                            <RiUserFollowFill /> Following\n                        </Button>\n                    </OverlayTrigger>\n                ) : (\n                    <OverlayTrigger placement=\"bottom\" overlay={<Tooltip>Click to follow</Tooltip>}>\n                        <Button\n                            size=\"sm\"\n                            variant=\"outline-info\"\n                            className=\"details-follow-btn\"\n                            onClick={() => {\n                                props.handleFollowClick();\n                            }}\n                        >\n                            <RiUserFollowFill /> Follow\n                        </Button>\n                    </OverlayTrigger>\n                )}\n                <div style={{ height: 10 }} />\n                {endorses ? (\n                    <CancelEndorseUserButtonRender\n                        onClick={() => {\n                            props.handleCancelEndorseClick();\n                        }}\n                    />\n                ) : (\n                    <EndorseUserButtonRender\n                        onClick={() => {\n                            props.handleEndorseClick();\n                        }}\n                    />\n                )}\n                <hr />\n                {/* <Collapsible trigger=\"MENU\" className=\"special-btn\"> */}\n                {RenderListButtonItem('About', RoutePath.userDetailsPage('organization', organization._id))}\n                {RenderListButtonItem('Impact', RoutePath.postListPageByOrganizationAndPostType(organization._id, 'event'))}\n                {RenderListButtonItem('Message', '')}\n                {RenderListButtonItem('Followers', RoutePath.postListPageByOrganizationAndPostType(organization._id, 'event'))}\n                {RenderListButtonItem('Feed')}\n                {RenderListButtonItem('Gallery', RoutePath.organizationGalleryPage('organization', organization._id))}\n                {/* </Collapsible> */}\n            </>\n        );\n    } else return <></>;\n};\nexport default SideMenu;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-post-menu.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/home/home-post-feeds.js",["1122","1123"],"import { defaultOrganizationProfilePicture } from '@Constants/default-images';\nimport { interestTypes } from '@Constants/interest-types';\nimport moment from 'moment';\nimport React, { useState } from 'react';\nimport Avatar from 'react-avatar';\nimport { Badge, Button, Col, Image, Row } from 'react-bootstrap';\nimport { GoingButtonRender, InterestedButtonRender, LikeButtonRender } from '../form_template/buttons-render';\n\nconst HomePostFeed = (props) => {\n    const userId = props.userId;\n    // const [show, setShow] = useState(false);\n\n    const posts = props.allPosts;\n    let interest = {};\n\n    if (posts && posts.length > 0) {\n        return (\n            <>\n                {posts.map((post, i) => {\n                    interest = {};\n                    let filter = post.interests.filter((interest) => interest.userId === userId);\n                    if (filter && filter.length > 0) interest = filter[0];\n                    let liked = post.interests.filter((interest) => interest.liked).length;\n                    let interested = post.interests.filter((interest) => interest.interested).length;\n                    let going = post.interests.filter((interest) => interest.going).length;\n\n                    return (\n                        <div key={i} className=\"justify-text post-box\">\n                            <h6 style={{ color: 'cadetblue' }}>{post.postType === 'general' ? '' : post.postType.toUpperCase()}</h6>\n                            <h5\n                                className=\"link-name\"\n                                onClick={() => {\n                                    props.handleGotoPostDetails(post.postType, post._id);\n                                }}\n                            >\n                                {post.title.toUpperCase()}\n                            </h5>\n\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col sm=\"1\">\n                                            <Avatar\n                                                src={post.organizationProfilePicture ? post.organizationProfilePicture[0] : defaultOrganizationProfilePicture}\n                                                round=\"5px\"\n                                                size=\"50\"\n                                            />\n                                        </Col>\n                                        <Col sm=\"8\">\n                                            <h6\n                                                className=\"link-name\"\n                                                onClick={() => {\n                                                    props.handleGotoOrganizationDetails(post.creatorId);\n                                                }}\n                                            >\n                                                {post.organizationName[0]}\n                                            </h6>\n\n                                            <small>Created At {moment(post.createdAt).format('LLLL')}</small>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {post.impactAreas.map((area, i) => {\n                                        return (\n                                            <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\" key={i}>\n                                                {area.label}\n                                            </Badge>\n                                        );\n                                    })}\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col>\n                                    {post.skills &&\n                                        post.skills.map((skill, i) => {\n                                            return (\n                                                <Badge variant=\"light\" className=\"badge-single-small skill-badge\" key={i}>\n                                                    {skill.label}\n                                                </Badge>\n                                            );\n                                        })}\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                {post.startDateTime && (\n                                    <Col sm={6}>\n                                        From <b>{moment(post.startDateTime).format('LLLL')}</b>\n                                    </Col>\n                                )}\n                                {post.endDateTime && (\n                                    <Col sm={6} className=\"right-align\">\n                                        To <b>{moment(post.endDateTime).format('LLLL')}</b>\n                                    </Col>\n                                )}\n                            </Row>\n                            <br />\n                            <Row\n                                onClick={() => {\n                                    props.handleGotoPostDetails(post.postType, post._id);\n                                }}\n                            >\n                                {post.images && post.images.length > 0 && (\n                                    <Col sm=\"4\" className=\"home-post-image\">\n                                        <Image src={post.images[0].path} thumbnail style={{ width: '100%', height: 'auto' }} />\n                                        {post.images.length > 1 && <div className=\"home-post-image-text\">{post.images.length - 1} More Images</div>}\n                                    </Col>\n                                )}\n                                <Col className=\"justify-text\">\n                                    {post.description && post.description.length > 250 ? (\n                                        <>\n                                            {post.description.substr(0, 250) + '...'} <a href=\"#\">See More</a>{' '}\n                                        </>\n                                    ) : (\n                                        post.description\n                                    )}\n                                    {/*  */}\n                                </Col>\n                            </Row>\n                            <hr />\n\n                            <Row>\n                                <Col>\n                                    {interestTypes[post.postType].like ? (\n                                        interest.liked ? (\n                                            <LikeButtonRender\n                                                complete={true}\n                                                onClick={() => {\n                                                    props.handleCancelLikePost(post._id);\n                                                }}\n                                            />\n                                        ) : (\n                                            <LikeButtonRender\n                                                complete={false}\n                                                onClick={() => {\n                                                    props.handleLikePost(post._id);\n                                                }}\n                                            />\n                                        )\n                                    ) : (\n                                        <></>\n                                    )}\n                                    &nbsp;\n                                    {interestTypes[post.postType].interested ? (\n                                        interest.interested ? (\n                                            <InterestedButtonRender\n                                                complete={true}\n                                                onClick={() => {\n                                                    props.handleCancelInterestedPost(post._id);\n                                                }}\n                                            />\n                                        ) : (\n                                            <InterestedButtonRender\n                                                complete={false}\n                                                onClick={() => {\n                                                    props.handleInterestedPost(post._id);\n                                                }}\n                                            />\n                                        )\n                                    ) : (\n                                        <></>\n                                    )}\n                                    &nbsp;\n                                    {interestTypes[post.postType].going ? (\n                                        interest.going ? (\n                                            <GoingButtonRender\n                                                complete={true}\n                                                onClick={() => {\n                                                    props.handleCancelGoingPost(post._id);\n                                                }}\n                                            />\n                                        ) : (\n                                            <GoingButtonRender\n                                                complete={false}\n                                                onClick={() => {\n                                                    props.handleGoingPost(post._id);\n                                                }}\n                                            />\n                                        )\n                                    ) : (\n                                        <></>\n                                    )}\n                                    &nbsp;\n                                </Col>\n                                <Col className=\"right-align\">\n                                    {interestTypes[post.postType].like && liked > 0 && (\n                                        <Button\n                                            variant=\"outline-primary\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleClickCommittedButtons(post._id, 'liked');\n                                            }}\n                                        >\n                                            {liked} Liked\n                                        </Button>\n                                    )}\n                                    &nbsp;\n                                    {interestTypes[post.postType].interested && interested > 0 && (\n                                        <Button\n                                            variant=\"outline-secondary\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleClickCommittedButtons(post._id, 'interested');\n                                            }}\n                                        >\n                                            {interested} Interested\n                                        </Button>\n                                    )}\n                                    &nbsp;\n                                    {interestTypes[post.postType].going && going > 0 && (\n                                        <Button\n                                            variant=\"outline-info\"\n                                            size=\"sm\"\n                                            onClick={() => {\n                                                props.handleClickCommittedButtons(post._id, 'going');\n                                            }}\n                                        >\n                                            {going} Going\n                                        </Button>\n                                    )}\n                                </Col>\n                            </Row>\n                        </div>\n                    );\n                })}\n            </>\n        );\n    } else return <h4>No Posts Found</h4>;\n};\nexport default HomePostFeed;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/home/home-suggestions.js",["1124"],"import { FollowButtonRender } from '@Components/form_template/buttons-render';\nimport { defaultOrganizationProfilePicture } from '@Constants/default-images';\nimport React from 'react';\nimport Avatar from 'react-avatar';\nimport { Badge, Button, Col, OverlayTrigger, Popover, Row } from 'react-bootstrap';\nimport { BsFillExclamationDiamondFill } from 'react-icons/bs';\nimport { RiUserFollowFill } from 'react-icons/ri';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nconst HomeSuggestions = (props) => {\n    const organizations = props.allOrganizations;\n    console.log('🚀 ~ file: home-suggestions.js ~ line 11 ~ HomeSuggestions ~ organizations', organizations);\n    const cards = props.cards;\n    const popover = (\n        <Popover id=\"popover-basic\">\n            <Popover.Title as=\"h4\">Suggestions</Popover.Title>\n            <Popover.Content>The suggestions is based on your profile informations such as location, impact areas, etc.</Popover.Content>\n        </Popover>\n    );\n\n    return (\n        <div>\n            <Row>\n                <Col sm=\"10\">\n                    <h6>\n                        Suggestions for you.\n                        {/* </Col>\n                <Col> */}\n                        <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover}>\n                            <a>\n                                <BsFillExclamationDiamondFill style={{ marginBottom: 5 }} />\n                            </a>\n                            {/* <Button variant=\"light\" size=\"sm\" style={{ padding: 0, margin: 0 }}>\n                        \n                            <BsFillExclamationDiamondFill />\n                        </Button> */}\n                        </OverlayTrigger>\n                    </h6>\n                    {/* <small>Based on your profile</small> */}\n                </Col>\n            </Row>\n            <br />\n            {organizations.map((org, i) => {\n                return (\n                    <CSSTransition\n                        in={cards[org._id]}\n                        timeout={{\n                            enter: 0,\n                            exit: 2000,\n                        }}\n                        unmountOnExit\n                        classNames=\"my-node\"\n                        key={i}\n                    >\n                        <div className=\"post-box\">\n                            <Row>\n                                <Col>\n                                    <Row>\n                                        <Col sm=\"2\">\n                                            <Avatar src={org.profilePicture ? org.profilePicture : defaultOrganizationProfilePicture} round=\"5px\" size={30} />\n                                        </Col>\n                                        <Col sm=\"10\">\n                                            <Link to={`/organization/details/${org._id}`}>\n                                                {' '}\n                                                <h6>{org.name}</h6>\n                                            </Link>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {org.organizationTypes &&\n                                        org.organizationTypes.length > 0 &&\n                                        org.organizationTypes.map((type, i) => {\n                                            return (\n                                                <Badge variant=\"info\" className=\"badge-single-small\" key={i}>\n                                                    {type.label}\n                                                </Badge>\n                                            );\n                                        })}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    {org.impactAreas &&\n                                        org.impactAreas.length > 0 &&\n                                        org.impactAreas.map((area, i) => {\n                                            return (\n                                                <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\" key={i}>\n                                                    {area.label}\n                                                </Badge>\n                                            );\n                                        })}\n                                </Col>\n                            </Row>\n                            {org.address ? (\n                                <Row>\n                                    <Col>\n                                        <small>{org.address.street1 + ', ' + org.address.street2 + ', ' + org.address.city + ', ' + org.address.code}</small>\n                                    </Col>\n                                </Row>\n                            ) : (\n                                <></>\n                            )}\n                            <br />\n                            <Row>\n                                <Col>\n                                    {/* <FollowButtonRender />\n                                    &nbsp; */}\n                                    {cards[org._id] ? (\n                                        <FollowButtonRender\n                                            className=\"details-follow-btn\"\n                                            onClick={() => {\n                                                props.handleFollowOrganization(org._id);\n                                            }}\n                                        />\n                                    ) : (\n                                        <Button\n                                            size=\"sm\"\n                                            variant=\"outline-info\"\n                                            className=\"details-following-btn\"\n                                            onClick={() => {\n                                                props.handleUnfollowClick();\n                                            }}\n                                        >\n                                            <RiUserFollowFill /> Following\n                                        </Button>\n                                    )}\n                                </Col>\n                            </Row>\n                        </div>\n                    </CSSTransition>\n                );\n            })}\n        </div>\n    );\n};\nexport default HomeSuggestions;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/notification-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/notification-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/notification-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/notification/manage-notifications.js",["1125"],"import React, { useEffect, useState } from 'react';\nimport NotificationList from '@Components/notification/notification-list';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport { getAllNotifications, updateNotification, updateNotificationLocal } from '../../actions/notification-action';\nimport * as RoutePaths from '../../constants/route-paths';\n\nconst ManageNotifications = (props) => {\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllNotifications(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id);\n        getInitialInfo(user._id);\n    }, [props.auth]);\n\n    const handleGoToNotificationDetails = (notification) => {\n        const type = notification.type;\n        if (['like', 'interest', 'going'].includes(type)) {\n            props.history.push(RoutePaths.postDetailsPage(notification.postId.postType, notification.postId._id));\n        } else if (type === 'friend-request') {\n            props.history.push(RoutePaths.communityRequestListPage('received'));\n        } else if (type === 'friend-accept') {\n            props.history.push(RoutePaths.communityFriendListPage);\n        } else if (type === 'follow') {\n            props.history.push(RoutePaths.communityFollowerListPage);\n        } else if (type === 'endorsement') {\n            props.history.push(RoutePaths.communityEndorserListPage);\n        } else if (type === 'membership-request') {\n        } else if (type === 'membership-accept') {\n        } else {\n            props.history.push(RoutePaths.userDetailsPage(notification.userType, notification.senderId));\n        }\n        const notificationId = notification._id;\n        props.dispatch(updateNotification(notificationId, { isRead: true }));\n        props.dispatch(updateNotificationLocal(notificationId, true));\n    };\n\n    const handleNotificationRead = (notificationId) => {\n        props.dispatch(updateNotification(notificationId, { isRead: true }));\n        props.dispatch(updateNotificationLocal(notificationId, true));\n    };\n    const handleNotificationUnread = (notificationId) => {\n        props.dispatch(updateNotification(notificationId, { isRead: false }));\n        props.dispatch(updateNotificationLocal(notificationId, false));\n    };\n\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <NotificationList\n                allNotifications={props.getAllNotificationsResponse.success ? props.getAllNotificationsResponse.notifications : []}\n                handleGoToNotificationDetails={handleGoToNotificationDetails}\n                handleNotificationRead={handleNotificationRead}\n                handleNotificationUnread={handleNotificationUnread}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllNotificationsResponse = state.Notification.getAllNotifications;\n\n    return {\n        getAllNotificationsResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(ManageNotifications);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/notification/notification-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/notification-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/sound-player.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/auth-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/password-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/user-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/user/profile-picture-changer.js",["1126","1127","1128"],"import React, { useState, useEffect } from 'react';\nimport AvatarEditor from 'react-avatar-editor';\nimport Dropzone from 'react-dropzone';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\nimport { Button, Modal, Row, Col, Container } from 'react-bootstrap';\nconst ProfilePictureUploader = (props) => {\n    const [image, setImage] = useState(props.profilePicture);\n    const [scaleValue, setScaleValue] = useState(1);\n    const [sliderValue, setSliderValue] = useState(0);\n    const [modal, setModal] = useState(false);\n    const [editor, setEditor] = useState({});\n    const fileChangeHandler = (event) => {\n        const file = event.target.files[0];\n        setImage(file);\n    };\n    const handleDrop = (dropped) => {\n        setImage(dropped[0]);\n    };\n    const handleSliderChange = (value) => {\n        setScaleValue(3 * (value / 300) + 1);\n        setSliderValue(value);\n    };\n    const onClickSave = () => {\n        console.log(image);\n        if (editor) {\n            console.log('🚀 ~ file: profile-picture-changer.js ~ line 27 ~ onClickSave ~ editor', editor);\n            const canvasScaled = editor.getImageScaledToCanvas();\n            const imageFile = canvasScaled.toDataURL();\n            console.log('🚀 ~ file: profile-picture-changer.js ~ line 30 ~ onClickSave ~ imageFile', imageFile);\n            props.setProfilePicture(imageFile);\n        }\n    };\n    const setEditorRef = (editor) => {\n        setEditor(editor);\n    };\n    return (\n        <div className=\"right-align\">\n            <Button\n                type=\"button\"\n                variant=\"outline-primary\"\n                size=\"sm\"\n                onClick={() => {\n                    setModal(true);\n                }}\n            >\n                Upload Profile Picture\n            </Button>\n            <Modal\n                className=\"\"\n                style={{ zIndex: 10000 }}\n                show={modal}\n                onHide={() => {\n                    setModal(false);\n                }}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Select Profile Picture</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <div className=\"custom-file\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"inputGroupFile02\" onChange={fileChangeHandler} />\n                                    <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\">\n                                        Choose profile picture\n                                    </label>\n                                </div>\n                            </Col>\n                        </Row>\n                        <br />\n                        {image && (\n                            <Row>\n                                <Col>\n                                    <AvatarEditor\n                                        crossOrigin=\"anonymous\"\n                                        ref={setEditorRef}\n                                        image={image}\n                                        width={400}\n                                        height={400}\n                                        border={0}\n                                        color={[255, 255, 255, 0.6]} // RGBA\n                                        scale={scaleValue}\n                                        rotate={0}\n                                    />\n                                </Col>\n                            </Row>\n                        )}\n                        {image && (\n                            <Row>\n                                <Col>\n                                    <Slider value={sliderValue} min={0} max={300} orientation=\"horizontal\" onChange={handleSliderChange} />\n                                </Col>\n                            </Row>\n                        )}\n                        <Modal.Footer>\n                            {image && (\n                                <Row>\n                                    <Col>\n                                        <Button\n                                            type=\"button\"\n                                            size=\"sm\"\n                                            variant=\"outline-success\"\n                                            onClick={() => {\n                                                setModal(false);\n                                                onClickSave(props);\n                                            }}\n                                        >\n                                            Save\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            )}\n                        </Modal.Footer>\n                    </Container>\n                </Modal.Body>\n            </Modal>\n        </div>\n    );\n};\nexport default ProfilePictureUploader;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/membership-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/membership-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/membership-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/membership-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-membership.js",["1129","1130","1131","1132","1133"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { NotificationManager } from 'react-notifications';\nimport { individualCompletePrivacyPage, individualCompleteSuggestionsPage } from '@Constants/route-paths';\nimport { getAllMemberships, createMembership, updateMembership, deleteMembership, acceptMembership, rejectMembership } from '@Actions/membership-action';\nimport MembershipForm from '@Components/membership/membership-form';\nimport { searchUsersByName } from '@Actions';\nimport AsyncSelect from 'react-select/async';\nconst Membership = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [userSearchText, setUserSearchText] = useState('');\n    const [membership, setMembership] = useState({\n        organizationId: '',\n        membershipType: '',\n        startTime: {\n            month: 1,\n            year: 2021,\n        },\n        endTime: {\n            month: 1,\n            year: 2021,\n        },\n        isCurrent: false,\n    });\n    const getUsers = async (searchText) => {\n        if (searchText.length > 2) {\n            const users = await searchUsersByName(searchText).then((response) => {\n                if (response.success) {\n                    return response.users;\n                } else return [];\n            });\n            if (users && users.length > 0) {\n                let organizations = [];\n                if (users[0].userType === 'organization') {\n                    organizations = users[0].users.slice(0, 20);\n                } else {\n                    organizations = users[1].users.slice(0, 20);\n                }\n                organizations = organizations.map((org) => {\n                    return {\n                        value: org._id,\n                        label: org.name,\n                    };\n                });\n                console.log('🚀 ~ file: individual-membership.js ~ line 43 ~ newPromise ~ organizations', organizations);\n                return organizations;\n            } else return [{ value: 1, label: 'Not found' }];\n        } else return [];\n    };\n    const handleAcceptMembership = (membershipId) => {\n        props.dispatch(acceptMembership(membershipId));\n    };\n    const handleRejectMembership = (membershipId) => {\n        props.dispatch(rejectMembership(membershipId));\n    };\n    const handleDeleteMembership = (membershipId) => {\n        props.dispatch(deleteMembership(membershipId));\n    };\n    const handleChangeSearchText = async (text) => {\n        console.log(text);\n        setUserSearchText(text);\n    };\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log('Calling list');\n            props.dispatch(getAllMemberships({ individualId: user._id }));\n        }\n    };\n\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth, props.setMembershipResponse, props.acceptMembershipResponse, props.rejectMembershipResponse, props.deleteMembershipResponse]);\n\n    const handleMembershipInfoChange = (name, value) => {\n        console.log('🚀 ~ file: individual-membership.js ~ line 73 ~ handleMembershipInfoChange ~ name, value', name, value);\n        let membership_ = membership;\n        if (name === 'userId') {\n            membership_['organizationId'] = value;\n        } else if (name === 'membershipType') {\n            membership_['membershipType'] = value;\n        } else if (name === 'startTime') {\n            const month = new Date(value).getMonth();\n            const year = new Date(value).getFullYear();\n            membership_['startTime'] = {\n                month,\n                year,\n            };\n        } else if (name === 'endTime') {\n            const month = new Date(value).getMonth();\n            const year = new Date(value).getFullYear();\n            membership_['endTime'] = {\n                month,\n                year,\n            };\n        } else if (name === 'isCurrent') {\n            membership_['isCurrent'] = value;\n        }\n        setMembership({ ...membership_ });\n    };\n\n    const submitMembership = (mode) => {\n        const membership_ = membership;\n        membership_['individualId'] = props.auth.user._id;\n        membership_['requestedBy'] = 'individual';\n        if (mode === 'create') {\n            props.dispatch(createMembership(membership_));\n        } else {\n            props.dispatch(updateMembership(membership._id, membership_));\n        }\n    };\n\n    const handleBackButton = () => {\n        props.history.push(individualCompletePrivacyPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(individualCompleteSuggestionsPage);\n    };\n    const promiseOptions = (inputValue) =>\n        new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(getUsers(inputValue));\n            }, 1000);\n        });\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <MembershipForm\n                editMode={editMode}\n                membership={membership}\n                handleMembershipInfoChange={handleMembershipInfoChange}\n                userSearchText={userSearchText}\n                handleChangeSearchText={handleChangeSearchText}\n                users={users}\n                promiseOptions={promiseOptions}\n                submitMembership={submitMembership}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n                memberships={props.getAllMembershipResponse.success ? props.getAllMembershipResponse.memberships : []}\n                userType=\"individual\"\n                handleAcceptMembership={handleAcceptMembership}\n                handleRejectMembership={handleRejectMembership}\n                handleDeleteMembership={handleDeleteMembership}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    console.log('State', state);\n    const getAllMembershipResponse = state.Membership.getAllMemberships;\n    const setMembershipResponse = state.Membership.setMembership;\n    const acceptMembershipResponse = state.Membership.acceptMembership;\n    const rejectMembershipResponse = state.Membership.rejectMembership;\n    const deleteMembershipResponse = state.Membership.deleteMembership;\n    return { getAllMembershipResponse, setMembershipResponse, acceptMembershipResponse, rejectMembershipResponse, deleteMembershipResponse };\n};\nexport default connect(mapStateToProps, null)(Membership);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-modal.js",["1134","1135"],"import { defaultOrganizationProfilePicture } from '@Constants/default-images';\nimport { allMembershipTypes } from '@Constants/membership-types';\nimport React, { useState } from 'react';\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\nconst MembershipModal = (props) => {\n    const [startTime, setStartTime] = useState(new Date());\n    const [endTime, setEndTime] = useState(new Date());\n    const membership = props.membership;\n    const membershipModal = props.membershipModal;\n    const setMembershipModal = props.setMembershipModal;\n    const mode = props.mode;\n    const options = props.users.map((user) => {\n        return {\n            value: user._id,\n            label: (\n                <Row>\n                    <Col sm={1}>\n                        <img src={user.profilePicture ? user.profilePicture : defaultOrganizationProfilePicture} height=\"30px\" width=\"30px\" />\n                    </Col>\n                    <Col>{user.name}</Col>\n                </Row>\n            ),\n        };\n    });\n\n    return (\n        <Modal\n            style={{ zIndex: 10000 }}\n            show={membershipModal}\n            onHide={() => {\n                setMembershipModal(false);\n            }}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>Add New Membership Information</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Container>\n                    <Row>\n                        <Col>\n                            <label>Organization Name</label>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col style={{ zIndex: 400 }}>\n                            <AsyncSelect\n                                placeholder=\"Type at least 3 letter\"\n                                cacheOptions\n                                loadOptions={props.promiseOptions}\n                                onChange={(value) => {\n                                    props.handleMembershipInfoChange('userId', value.value);\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col>\n                            <label>Membership type</label>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col style={{ zIndex: 300 }}>\n                            <Select\n                                options={allMembershipTypes}\n                                onChange={(value) => {\n                                    props.handleMembershipInfoChange('membershipType', value.value);\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Col>\n                            <label>Start Time</label>\n                            <br />\n                            <br />\n                        </Col>\n\n                        <Col style={{ zIndex: 200 }}>\n                            <DatePicker\n                                className=\"form-control\"\n                                selected={startTime}\n                                onChange={(date) => {\n                                    setStartTime(date);\n                                    props.handleMembershipInfoChange('startTime', date);\n                                }}\n                                dateFormat=\"MM/yyyy\"\n                                showMonthYearPicker\n                                showFullMonthYearPicker\n                            />\n                        </Col>\n                    </Row>\n\n                    <Row class=\"form-group\">\n                        <Col sm={6}>Is Current Member?</Col>\n                        <Col>\n                            <div class=\"custom-control custom-switch\" style={{ zIndex: 100 }}>\n                                <input\n                                    type=\"checkbox\"\n                                    class=\"custom-control-input\"\n                                    id=\"customSwitch1\"\n                                    checked={membership.isCurrent}\n                                    onChange={() => {\n                                        props.handleMembershipInfoChange('isCurrent', !membership.isCurrent);\n                                    }}\n                                />\n                                <label class=\"custom-control-label\" for=\"customSwitch1\"></label>\n                            </div>\n                        </Col>\n                    </Row>\n                    <br />\n                    {!membership.isCurrent && (\n                        <Row>\n                            <Col>\n                                <label>End Time</label>\n                            </Col>\n\n                            <Col>\n                                <DatePicker\n                                    className=\"form-control\"\n                                    selected={endTime}\n                                    onChange={(date) => {\n                                        setEndTime(date);\n                                        props.handleMembershipInfoChange('endTime', date);\n                                    }}\n                                    dateFormat=\"MM/yyyy\"\n                                    showMonthYearPicker\n                                    showFullMonthYearPicker\n                                />\n                            </Col>\n                        </Row>\n                    )}\n                    <br />\n                </Container>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button\n                    variant=\"outline-danger\"\n                    size=\"sm\"\n                    onClick={() => {\n                        setMembershipModal(false);\n                    }}\n                >\n                    Cancel\n                </Button>\n                {mode === 'create' ? (\n                    <Button\n                        variant=\"outline-success\"\n                        size=\"sm\"\n                        onClick={() => {\n                            props.submitMembership('create');\n                            setMembershipModal(false);\n                        }}\n                    >\n                        Create\n                    </Button>\n                ) : (\n                    <Button\n                        variant=\"outline-success\"\n                        size=\"sm\"\n                        onClick={() => {\n                            props.submitMembership('edit');\n                            setMembershipModal(false);\n                        }}\n                    >\n                        Update\n                    </Button>\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n};\nexport default MembershipModal;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-list.js",["1136"],"import React from 'react';\nimport { DeleteButtonRender, EditButtonRender, AcceptButtonRender, RejectButtonRender } from '../form_template/buttons-render';\nimport { getMembershipByValue } from '@Constants/membership-types';\nimport { defaultOrganizationProfilePicture, defaultIndividualProfilePicture } from '@Constants/default-images';\nimport { getMembershipStatusByValue } from '@Constants/membership-types';\nimport { Table, Image, Badge } from 'react-bootstrap';\nconst TimeRender = (time) => {\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    return `${months[time.month]}-${time.year}`;\n};\nconst MembershipList = (props) => {\n    const memberships = props.memberships;\n    const userType = props.userType;\n    console.log('🚀 ~ file: membership-list.js ~ line 12 ~ MembershipList ~ memberships', memberships);\n    return (\n        <Table striped bordered hover responsive size=\"sm\">\n            <thead></thead>\n            <tbody>\n                {memberships.map((member, i) => {\n                    let name = '';\n                    let profilePicture = '';\n                    if (userType === 'individual') {\n                        name = member.organizationName;\n                        profilePicture = member.organizationProfilePicture ? member.organizationProfilePicture : defaultOrganizationProfilePicture;\n                    } else if (userType === 'organization') {\n                        name = member.individualFirstName + ' ' + member.individualLastName;\n                        profilePicture = member.individualProfilePicture ? member.individualProfilePicture : defaultIndividualProfilePicture;\n                    }\n                    return (\n                        <tr key={i}>\n                            <td>\n                                <Image src={profilePicture} style={{ height: 32, width: 32 }} thumbnail />\n                            </td>\n                            <td>{name}</td>\n                            <td>{getMembershipStatusByValue(member.status)}</td>\n                            <td>{getMembershipByValue(member.membershipType)}</td>\n                            <td>{TimeRender(member.startTime)}</td>\n                            <td>{member.isCurrent}</td>\n                            {member.isCurrent ? (\n                                <td>\n                                    <Badge variant=\"primary\">Current Member</Badge>\n                                </td>\n                            ) : (\n                                <td>{TimeRender(member.endTime)}</td>\n                            )}\n                            <td>\n                                {member.status === 'pending' && member.requestedBy !== userType ? (\n                                    <>\n                                        <AcceptButtonRender\n                                            onClick={() => {\n                                                props.handleAcceptMembership(member._id);\n                                            }}\n                                        />\n                                        &nbsp;\n                                        <RejectButtonRender\n                                            onClick={() => {\n                                                props.handleRejectMembership(member._id);\n                                            }}\n                                        />\n                                    </>\n                                ) : (\n                                    <></>\n                                )}\n                            </td>\n                            <td>\n                                {/* <EditButtonRender />\n                                &nbsp; */}\n                                <DeleteButtonRender\n                                    onClick={() => {\n                                        props.handleDeleteMembership(member._id);\n                                    }}\n                                />\n                            </td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </Table>\n    );\n};\nexport default MembershipList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/membership/membership-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/individual/individual-suggestions.js",["1137","1138","1139"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { NotificationManager } from 'react-notifications';\nimport { individualCompleteMembership, homePage, userDetailsPage } from '../../constants/route-paths';\nimport { getAllSuggestedUsers } from '@Actions/user-action';\nimport SuggestionList from '@Components/individual/individual-suggestion-list';\nimport { followUser } from '@Actions/follow-action';\nconst Suggestions = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [cards, setCards] = useState({});\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            const user = props.auth.user;\n            setUserId(user._id);\n            props.dispatch(getAllSuggestedUsers(user._id, 'organization', 20));\n            setLoading(false);\n        };\n\n        getInitialInfo(props.match.params.postId);\n    }, []);\n    useEffect(() => {\n        const { success } = props.OrganizationSuggestionResponse;\n        if (success) {\n            let cards = {};\n            const users = props.OrganizationSuggestionResponse.users;\n            for (let i = 0; i < users.length; i++) {\n                cards[users[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.OrganizationSuggestionResponse]);\n    const gotoOrganizationDetails = (userId) => {\n        props.history.push(userDetailsPage('organization', userId));\n    };\n    const handleFollowOrganization = (organizationId) => {\n        let cards_ = cards;\n        cards_[organizationId] = false;\n        setCards({ ...cards_ });\n        console.log({ followerId: userId, followingId: organizationId });\n        props.dispatch(followUser({ followerId: userId, followingId: organizationId }));\n    };\n    const handleFinishButton = () => {\n        props.history.push(homePage);\n        window.scrollTo(0, 0);\n    };\n\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <SuggestionList\n                gotoOrganizationDetails={gotoOrganizationDetails}\n                handleFinishButton={handleFinishButton}\n                allOrganizations={\n                    props.OrganizationSuggestionResponse && props.OrganizationSuggestionResponse.success ? props.OrganizationSuggestionResponse.users : []\n                }\n                cards={cards}\n                handleFollowOrganization={handleFollowOrganization}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const OrganizationSuggestionResponse = state.User.getAllSuggestedUsers;\n    console.log('🚀 ~ file: individual-suggestions.js ~ line 37 ~ mapStateToProps ~ OrganizationSuggestionResponse', OrganizationSuggestionResponse);\n    return { OrganizationSuggestionResponse };\n};\nexport default connect(mapStateToProps, null)(Suggestions);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-suggestion-list.js",["1140"],"import React from 'react';\nimport { Container, Row, Col, ProgressBar, Button, Card, CardColumns, Badge } from 'react-bootstrap';\nimport { individualHeaders, totalIndividualStep } from '../../constants/step-headers';\nimport { defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { FollowButtonRender } from '@Components/form_template/buttons-render';\nimport { RiUserFollowFill, RiUserUnfollowFill } from 'react-icons/ri';\nimport { CSSTransition } from 'react-transition-group';\nconst DescriptionRender = (description) => {\n    if (description) {\n        if (description.length < 101) return description;\n        else return description.substr(0, 100) + '...';\n    } else return 'No description available';\n};\nconst RenderFinishButton = ({ handleFinishButton }) => {\n    return (\n        <Row>\n            <Col className=\"center-align\">\n                <Button\n                    className=\"btn signUpBtn\"\n                    onClick={() => {\n                        handleFinishButton();\n                    }}\n                >\n                    Finish\n                </Button>\n            </Col>\n        </Row>\n    );\n};\nconst SuggestionList = (props) => {\n    const organizations = props.allOrganizations.slice(0, 20);\n    const cards = props.cards;\n    console.log('🚀 ~ file: individual-suggestion-list.js ~ line 31 ~ SuggestionList ~ cards', cards);\n    return (\n        <Container className=\"saLoginForm\">\n            <Row>\n                <Col></Col>\n                <Col md=\"8\" className=\"sign-ing-form\">\n                    <br />\n                    <p>\n                        Step {individualHeaders[6].stepNo} of {totalIndividualStep}\n                    </p>\n                    <ProgressBar now={individualHeaders[6].percent} />\n                    <br />\n                    <h4>{individualHeaders[6].header}</h4>\n\n                    <br />\n                    <RenderFinishButton handleFinishButton={props.handleFinishButton} />\n                    <br />\n                    <CardColumns>\n                        {organizations &&\n                            organizations.length > 0 &&\n                            organizations.map((org, i) => {\n                                return (\n                                    <CSSTransition\n                                        in={cards[org._id]}\n                                        timeout={{\n                                            enter: 0,\n                                            exit: 2000,\n                                        }}\n                                        unmountOnExit\n                                        classNames=\"my-node\"\n                                        key={i}\n                                    >\n                                        <Card className=\"special-btn special-card\">\n                                            <Card.Img\n                                                variant=\"top\"\n                                                src={org.profilePicture ? org.profilePicture : defaultOrganizationProfilePicture}\n                                                alt=\"No Image Found\"\n                                                className=\"organization-list-image\"\n                                                onClick={() => {\n                                                    props.gotoOrganizationDetails(org._id);\n                                                }}\n                                            />\n                                            <Card.Body\n                                                onClick={() => {\n                                                    props.gotoOrganizationDetails(org._id);\n                                                }}\n                                            >\n                                                <Card.Text className=\"left-text bold-text\">{org.name}</Card.Text>\n\n                                                {org.organizationTypes &&\n                                                    org.organizationTypes.length > 0 &&\n                                                    org.organizationTypes.map((type, i) => {\n                                                        return (\n                                                            <Badge variant=\"info\" className=\"badge-single-small\" key={i}>\n                                                                {type.label}\n                                                            </Badge>\n                                                        );\n                                                    })}\n\n                                                <Card.Text className=\"justify-text\">\n                                                    <small>{DescriptionRender(org.description)}</small>\n                                                </Card.Text>\n\n                                                <Card.Text>\n                                                    {org.impactAreas &&\n                                                        org.impactAreas.length > 0 &&\n                                                        org.impactAreas.map((area, i) => {\n                                                            return (\n                                                                <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\" key={i}>\n                                                                    {area.label}\n                                                                </Badge>\n                                                            );\n                                                        })}\n                                                </Card.Text>\n                                                <Card.Text>\n                                                    {org.address ? (\n                                                        <small>\n                                                            {org.address.street1 + ' ' + org.address.street2 + ' ' + org.address.city + ' ' + org.address.code}\n                                                        </small>\n                                                    ) : (\n                                                        <></>\n                                                    )}\n                                                </Card.Text>\n                                            </Card.Body>\n                                            <Card.Footer>\n                                                {cards[org._id] ? (\n                                                    <FollowButtonRender\n                                                        className=\"details-follow-btn\"\n                                                        onClick={() => {\n                                                            props.handleFollowOrganization(org._id);\n                                                        }}\n                                                    />\n                                                ) : (\n                                                    <Button\n                                                        size=\"sm\"\n                                                        variant=\"outline-info\"\n                                                        className=\"details-following-btn\"\n                                                        onClick={() => {\n                                                            props.handleUnfollowClick();\n                                                        }}\n                                                    >\n                                                        <RiUserFollowFill /> Following\n                                                    </Button>\n                                                )}\n                                            </Card.Footer>\n                                        </Card>\n                                    </CSSTransition>\n                                );\n                            })}\n                    </CardColumns>\n\n                    <div style={{ height: 100 }} />\n                    <RenderFinishButton handleFinishButton={props.handleFinishButton} />\n                    <br />\n                </Col>\n                <Col></Col>\n            </Row>\n        </Container>\n    );\n};\nexport default SuggestionList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/committed-persons-list.js",["1141"],"import React, { useState } from 'react';\nimport { Container, Row, Col, Modal, Image } from 'react-bootstrap';\nimport LoadingAnim from '../form_template/loading-anim';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '@Constants/default-images';\nconst CommittedPersonsList = (props) => {\n    const committedList = props.committedList;\n    const committedLoading = props.committedLoading;\n    return (\n        <Modal\n            style={{ zIndex: 10000 }}\n            show={props.committedModal}\n            onHide={() => {\n                props.setCommittedModal(false);\n            }}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{committedList.length} Persons Liked this post</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {committedLoading && <LoadingAnim />}\n                {committedList &&\n                    committedList.length > 0 &&\n                    committedList.map((person, i) => {\n                        let name = '';\n                        let profilePicture = '';\n                        if (person.userType === 'individual') {\n                            name = person.userFirstName + ' ' + person.userLastName;\n                            profilePicture = person.userProfilePicture ? person.userProfilePicture : defaultIndividualProfilePicture;\n                        } else if (person.userType === 'organization') {\n                            name = person.userName;\n                            profilePicture = person.userProfilePicture ? person.userProfilePicture : defaultOrganizationProfilePicture;\n                        }\n                        return (\n                            <Container className=\"ppl-liked-list\" key={i}>\n                                <Row>\n                                    <Col sm={2}>\n                                        <Image src={profilePicture} thumbnail style={{ width: '100%', height: '100%' }} />\n                                    </Col>\n                                    <Col sm={6} className=\"v-middle\">\n                                        {name}\n                                    </Col>\n                                </Row>\n                            </Container>\n                        );\n                    })}\n            </Modal.Body>\n        </Modal>\n    );\n};\nexport default CommittedPersonsList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-membership.js",["1142","1143","1144","1145"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { NotificationManager } from 'react-notifications';\nimport { organizationCompleteServiceInfoPage, homePage } from '../../constants/route-paths';\nimport { getAllMemberships, createMembership, updateMembership, deleteMembership, acceptMembership, rejectMembership } from '../../actions/membership-action';\nimport MembershipForm from '@Components/membership/membership-form';\nimport { searchUsersByName } from '../../actions';\n\nconst Membership = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [userSearchText, setUserSearchText] = useState('');\n    const [membership, setMembership] = useState({\n        individualId: '',\n        membershipType: '',\n        startTime: {\n            month: 1,\n            year: 2021,\n        },\n        endTime: {\n            month: 1,\n            year: 2021,\n        },\n        isCurrent: false,\n    });\n    const getUsers = async (searchText) => {\n        if (searchText.length > 2) {\n            const users = await searchUsersByName(searchText).then((response) => {\n                if (response.success) {\n                    return response.users;\n                } else return [];\n            });\n            if (users && users.length > 0) {\n                let individuals = [];\n                if (users[0].userType === 'individual') {\n                    individuals = users[0].users.slice(0, 20);\n                } else {\n                    individuals = users[1].users.slice(0, 20);\n                }\n                individuals = individuals.map((ind) => {\n                    return {\n                        value: ind._id,\n                        label: ind.firstName + ' ' + ind.lastName,\n                    };\n                });\n                console.log('🚀 ~ file: individual-membership.js ~ line 43 ~ newPromise ~ organizations', individuals);\n                return individuals;\n            } else return [{ value: 1, label: 'Not found' }];\n        } else return [];\n    };\n    const handleAcceptMembership = (membershipId) => {\n        props.dispatch(acceptMembership(membershipId));\n    };\n    const handleRejectMembership = (membershipId) => {\n        props.dispatch(rejectMembership(membershipId));\n    };\n    const handleDeleteMembership = (membershipId) => {\n        props.dispatch(deleteMembership(membershipId));\n    };\n\n    const handleChangeSearchText = async (text) => {\n        console.log(text);\n        setUserSearchText(text);\n    };\n    const getInitialInfo = () => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log('Calling list');\n            props.dispatch(getAllMemberships({ organizationId: user._id }));\n        }\n    };\n\n    useEffect(() => {\n        const url = window.location.pathname;\n        if (url.split('/')[1] === 'edit') setEditMode(true);\n        getInitialInfo();\n    }, [props.auth, props.setMembershipResponse, props.acceptMembershipResponse, props.rejectMembershipResponse, props.deleteMembershipResponse]);\n\n    const handleMembershipInfoChange = (name, value) => {\n        // console.log('🚀 ~ file: individual-membership.js ~ line 73 ~ handleMembershipInfoChange ~ name, value', name, value);\n        let membership_ = membership;\n        if (name === 'userId') {\n            membership_['individualId'] = value;\n        } else if (name === 'membershipType') {\n            membership_['membershipType'] = value;\n        } else if (name === 'startTime') {\n            const month = new Date(value).getMonth();\n            const year = new Date(value).getFullYear();\n            membership_['startTime'] = {\n                month,\n                year,\n            };\n        } else if (name === 'endTime') {\n            const month = new Date(value).getMonth();\n            const year = new Date(value).getFullYear();\n            membership_['endTime'] = {\n                month,\n                year,\n            };\n        } else if (name === 'isCurrent') {\n            membership_['isCurrent'] = value;\n        }\n        setMembership({ ...membership_ });\n    };\n\n    const submitMembership = (mode) => {\n        const membership_ = membership;\n        membership_['organizationId'] = props.auth.user._id;\n        membership_['requestedBy'] = 'organization';\n        if (mode === 'create') {\n            props.dispatch(createMembership(membership_));\n        } else {\n            props.dispatch(updateMembership(membership._id, membership_));\n        }\n    };\n\n    const handleBackButton = () => {\n        props.history.push(organizationCompleteServiceInfoPage);\n    };\n    const handleSkipButton = () => {\n        props.history.push(homePage);\n    };\n    const promiseOptions = (inputValue) =>\n        new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(getUsers(inputValue));\n            }, 1000);\n        });\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <MembershipForm\n                editMode={editMode}\n                membership={membership}\n                handleMembershipInfoChange={handleMembershipInfoChange}\n                userSearchText={userSearchText}\n                handleChangeSearchText={handleChangeSearchText}\n                users={users}\n                promiseOptions={promiseOptions}\n                submitMembership={submitMembership}\n                handleBackButton={handleBackButton}\n                handleSkipButton={handleSkipButton}\n                memberships={props.getAllMembershipResponse.success ? props.getAllMembershipResponse.memberships : []}\n                userType=\"organization\"\n                handleAcceptMembership={handleAcceptMembership}\n                handleRejectMembership={handleRejectMembership}\n                handleDeleteMembership={handleDeleteMembership}\n            />\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    console.log('State', state);\n    const getAllMembershipResponse = state.Membership.getAllMemberships;\n    const setMembershipResponse = state.Membership.setMembership;\n    const acceptMembershipResponse = state.Membership.acceptMembership;\n    const rejectMembershipResponse = state.Membership.rejectMembership;\n    const deleteMembershipResponse = state.Membership.deleteMembership;\n    return { getAllMembershipResponse, setMembershipResponse, acceptMembershipResponse, rejectMembershipResponse, deleteMembershipResponse };\n};\nexport default connect(mapStateToProps, null)(Membership);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/constants/interest-types.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/friendship-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/friendship-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/friendship-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/friends-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/followings-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/followers-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/requests-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/organization/organization-post-filter.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-community-activity.js",["1146"],"import { followUser, getAllFollowings, unfollowUser } from '@Actions/follow-action';\nimport { getAllGlobalImpactAreas } from '@Actions/impact-area-action';\nimport {\n    cancelGoingPost,\n    cancelInterestedPost,\n    cancelLikePost,\n    changePostInterest,\n    getAllPostsByFilter,\n    goingPost,\n    interestedPost,\n    likePost,\n} from '@Actions/post-action';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport PostsCardView from '@Components/post/post-card-view';\nimport PostsMapView from '@Components/post/post-map-view';\nimport PostFilter from '@Components/search/post-filters';\nimport SearchMenu from '@Components/search/search-menu';\nimport { defaultCurrentLocation } from '@Constants/default-user-information';\nimport { allSearchablePostTypes } from '@Constants/post-types';\nimport { postDetailsPage } from '@Constants/route-paths';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Nav, Row } from 'react-bootstrap';\nimport Pagination from 'react-js-pagination';\nimport { connect } from 'react-redux';\n\nconst SearchCommunityActivity = (props) => {\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [userId, setUserId] = useState('');\n    const [followingObject, setFollowingObject] = useState({});\n    const [filter, setFilter] = useState({\n        title: '',\n        impactAreas: [],\n        postTypes: allSearchablePostTypes,\n        // startDate: new Date(),\n        // endDate: new Date(),\n        startDate: '',\n        endDate: '',\n        fullAddress: '',\n        keyword: '',\n        topNeed: false,\n    });\n    const resetFilter = () => {\n        setFilter({\n            title: '',\n            impactAreas: [],\n            postTypes: allSearchablePostTypes,\n            // startDate: new Date(),\n            // endDate: new Date(),\n            startDate: '',\n            endDate: '',\n            fullAddress: '',\n            keyword: '',\n            topNeed: false,\n        });\n    };\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(function (position) {\n            console.log(position);\n            if (position) {\n                const coords = position.coords;\n                setCurrentLocation({\n                    latitude: coords.latitude,\n                    longitude: coords.longitude,\n                });\n            }\n        });\n    }, []);\n    const changeFilter = (key, value) => {\n        let filter_ = filter;\n        filter[key] = value;\n\n        setFilter({ ...filter_ });\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllPostsByFilter(filter));\n        setLoading(false);\n        setActivePage(1);\n    };\n    const gotoPostDetails = (postType, postId) => {\n        props.history.push(postDetailsPage(postType, postId));\n    };\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            const user = props.auth.user;\n            setUserId(user._id);\n            props.dispatch(getAllGlobalImpactAreas());\n            props.dispatch(getAllFollowings(user._id));\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    useEffect(() => {\n        const { success } = props.getAllFollowingsResponse;\n        if (success) {\n            const cards = {};\n\n            const followings = props.getAllFollowingsResponse.followings;\n            for (let i = 0; i < followings.length; i++) {\n                cards[followings[i].followingId] = true;\n            }\n            setFollowingObject(cards);\n            console.log('🚀 ~ file: search-community-activity.js ~ line 95 ~ useEffect ~ cards', cards);\n        }\n    }, [props.getAllFollowingsResponse]);\n    const handleLikePost = (postId) => {\n        props.dispatch(likePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'like'));\n    };\n    const handleCancelLikePost = (postId) => {\n        props.dispatch(cancelLikePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'unlike'));\n    };\n\n    const handleInterestedPost = (postId) => {\n        props.dispatch(interestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'interested'));\n    };\n    const handleCancelInterestedPost = (postId) => {\n        console.log('🚀 ~ file: home.js ~ line 46 ~ handleCancelInterestedPost ~ postId', postId);\n        props.dispatch(cancelInterestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'uninterested'));\n    };\n\n    const handleGoingPost = (postId) => {\n        props.dispatch(goingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'going'));\n    };\n    const handleCancelGoingPost = (postId) => {\n        props.dispatch(cancelGoingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'ungoing'));\n    };\n    const handleFollowClick = (followingId) => {\n        setLoading(true);\n        props.dispatch(followUser({ followerId: userId, followingId }));\n        const followings_ = followingObject;\n        followings_[followingId] = true;\n        setFollowingObject({ ...followings_ });\n        setLoading(false);\n    };\n    const handleUnfollowClick = (followingId) => {\n        setLoading(true);\n        props.dispatch(unfollowUser({ followerId: userId, followingId }));\n        const followings_ = followingObject;\n        followings_[followingId] = false;\n        setFollowingObject({ ...followings_ });\n        setLoading(false);\n    };\n    if (loading) return <LoadingAnim />;\n    return (\n        <Container>\n            <Row className=\"parent-page\">\n                <Col lg={4}>\n                    <SearchMenu selected=\"community-activity\" />\n                    <hr />\n                    <PostFilter\n                        changeFilter={changeFilter}\n                        resetFilter={resetFilter}\n                        handleOnApplyFilter={handleOnApplyFilter}\n                        filter={filter}\n                        organizationTypes={props.getOrganizationTypeResponse?.success ? props.getOrganizationTypeResponse.organizationTypes : []}\n                        impactAreas={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []}\n                    />\n                </Col>\n                <Col lg={8}>\n                    <Nav\n                        variant=\"pills\"\n                        activeKey={viewType}\n                        onSelect={(eventKey) => {\n                            setViewType(eventKey);\n                        }}\n                        size=\"sm\"\n                    >\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"list\" title=\"list\">\n                                List\n                            </Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item sz=\"sm\">\n                            <Nav.Link eventKey=\"map\" title=\"map\">\n                                Map\n                            </Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                    <hr />\n                    {viewType === 'list' && (\n                        <>\n                            <Pagination\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                                activePage={activePage}\n                                itemsCountPerPage={30}\n                                totalItemsCount={props.getAllPostsResponse.success ? props.getAllPostsResponse.allPosts.length : 0}\n                                pageRangeDisplayed={5}\n                                onChange={(page) => {\n                                    setActivePage(page);\n                                }}\n                            />\n                            <PostsCardView\n                                allPosts={\n                                    props.getAllPostsResponse.success\n                                        ? props.getAllPostsResponse.allPosts.slice((activePage - 1) * 30, activePage * 30 - 1)\n                                        : []\n                                }\n                                gotoPostDetails={gotoPostDetails}\n                                userId={userId}\n                                handleLikePost={handleLikePost}\n                                handleCancelLikePost={handleCancelLikePost}\n                                handleInterestedPost={handleInterestedPost}\n                                handleCancelInterestedPost={handleCancelInterestedPost}\n                                handleGoingPost={handleGoingPost}\n                                handleCancelGoingPost={handleCancelGoingPost}\n                                followingObject={followingObject}\n                                handleFollowClick={handleFollowClick}\n                                handleUnfollowClick={handleUnfollowClick}\n                                followOrganizationButton={true}\n                            />\n                        </>\n                    )}\n                    {viewType === 'map' && (\n                        <PostsMapView\n                            allPosts={props.getAllPostsResponse.success ? props.getAllPostsResponse.allPosts : []}\n                            zoom={6}\n                            currentLocation={currentLocation}\n                            gotoPostDetails={gotoPostDetails}\n                            userId={userId}\n                            handleLikePost={handleLikePost}\n                            handleCancelLikePost={handleCancelLikePost}\n                            handleInterestedPost={handleInterestedPost}\n                            handleCancelInterestedPost={handleCancelInterestedPost}\n                            handleGoingPost={handleGoingPost}\n                            handleCancelGoingPost={handleCancelGoingPost}\n                            followingObject={followingObject}\n                            handleFollowClick={handleFollowClick}\n                            handleUnfollowClick={handleUnfollowClick}\n                        />\n                    )}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getAllPostsResponse = state.Post.getAllPosts;\n    const getAllFollowingsResponse = state.Follow.getAllFollowings;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n    return {\n        getImpactAreaResponse,\n        getAllPostsResponse,\n        getAllFollowingsResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchCommunityActivity);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/notification/user-list-modal.js",["1147"],"import React from 'react';\nimport { Container, Row, Col, Modal, Image, Button } from 'react-bootstrap';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\nconst UserListModal = (props) => {\n    const userListModal = props.userListModal;\n    const users = props.users;\n    console.log('🚀 ~ file: user-list-modal.js ~ line 7 ~ UserListModal ~ users', users);\n\n    return (\n        <Modal\n            style={{ zIndex: 10000 }}\n            show={userListModal}\n            onHide={() => {\n                props.setUserListModal(false);\n            }}\n        >\n            <Modal.Header closeButton></Modal.Header>\n            <Modal.Body>\n                {users &&\n                    users.length > 0 &&\n                    users.map((user_, i) => {\n                        const user = user_.userId;\n                        const basicInfo = user.basicInfo;\n                        let name = '';\n                        let profilePicture = '';\n                        if (user.userType === 'individual') {\n                            name = basicInfo.firstName + ' ' + basicInfo.lastName;\n                            profilePicture = basicInfo.profilePicture ? basicInfo.profilePicture : defaultIndividualProfilePicture;\n                        } else if (user.userType === 'organization') {\n                            name = basicInfo.name;\n                            profilePicture = basicInfo.profilePicture ? basicInfo.profilePicture : defaultOrganizationProfilePicture;\n                        }\n                        return (\n                            <Container className=\"ppl-liked-list\" key={i}>\n                                <Row>\n                                    <Col sm={2}>\n                                        <Image src={profilePicture} thumbnail style={{ width: '100%', height: '100%' }} />\n                                    </Col>\n                                    <Col sm={6} className=\"v-middle\">\n                                        {name}\n                                    </Col>\n                                </Row>\n                            </Container>\n                        );\n                    })}\n            </Modal.Body>\n        </Modal>\n    );\n};\n\nexport default UserListModal;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/endorsement-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/endorsement-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/endorsement-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/conversation-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/conversation-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/conversation-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/message-modal.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/calender/post-calender-view.js",["1148","1149"],"import { getAllGlobalImpactAreas } from '@Actions/impact-area-action';\nimport {\n    cancelGoingPost,\n    cancelInterestedPost,\n    cancelLikePost,\n    changePostInterest,\n    getAllCalendarPosts,\n    goingPost,\n    interestedPost,\n    likePost,\n} from '@Actions/post-action';\nimport { getAllGlobalSkills } from '@Actions/skill-action';\nimport CalenderFilter from '@Components/calendar/calendar-filter';\nimport CalendarInfoModal from '@Components/calendar/calendar-info-modal';\nimport CalendarPostModal from '@Components/calendar/calendar-post-modal';\nimport CalendarView from '@Components/calendar/calendar-view';\nimport { HelpButtonRender } from '@Components/form_template/buttons-render';\nimport { allCalenderPostTypes } from '@Constants/post-types';\nimport { postDetailsPage, userDetailsPage } from '@Constants/route-paths';\nimport React, { useEffect, useState } from 'react';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nconst PostCalenderView = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [infoModal, setInfoModal] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [postModal, setPostModal] = useState(false);\n    const [posts, setPosts] = useState([]);\n    const [post, setPost] = useState({});\n\n    // INITIAL INFO\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            const user = props.auth.user;\n            setUserId(user._id);\n            props.dispatch(getAllCalendarPosts({}, user._id));\n            props.dispatch(getAllGlobalImpactAreas());\n            props.dispatch(getAllGlobalSkills());\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n\n    // GET ALL CALENDAR POSTS RESPONSE\n    useEffect(() => {\n        const { success } = props.getAllCalendarPostsResponse;\n\n        if (success) {\n            const allPosts = props.getAllCalendarPostsResponse.allPosts;\n            if (allPosts && allPosts.length > 0) {\n                const allPosts_ = allPosts\n                    .filter((post) => post.startDateTime && post.endDateTime)\n                    .map((p) => {\n                        return { ...p, id: p._id.toString(), startDateTime: new Date(p.startDateTime), endDateTime: new Date(p.endDateTime) };\n                    });\n                console.log('🚀 ~ file: post-calender-view.js ~ line 144 ~ useEffect ~ props.homeFeedResponse', allPosts_);\n                setPosts(allPosts_);\n            }\n        }\n    }, [props.getAllCalendarPostsResponse]);\n\n    // FILTER START\n    const [filter, setFilter] = useState({\n        title: '',\n        impactAreas: [],\n        skills: [],\n        postTypes: allCalenderPostTypes,\n        keyword: '',\n        topNeed: false,\n    });\n    const resetFilter = () => {\n        setFilter({\n            title: '',\n            impactAreas: [],\n            skills: [],\n            postTypes: allCalenderPostTypes,\n            keyword: '',\n            topNeed: false,\n        });\n    };\n    const changeFilterValue = (key, value) => {\n        let filter_ = filter;\n        filter[key] = value;\n        setFilter({ ...filter_ });\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllCalendarPosts(filter, userId));\n        setLoading(false);\n    };\n\n    // POST MODAL ACTIONS START\n    const handleGotoPostDetails = (postType, postId) => {\n        props.history.push(postDetailsPage(postType, postId));\n    };\n    const handleGotoOrganizationDetails = (userId) => {\n        props.history.push(userDetailsPage('organization', userId));\n    };\n    const handleLikePost = (postId) => {\n        props.dispatch(likePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'like'));\n    };\n    const handleCancelLikePost = (postId) => {\n        props.dispatch(cancelLikePost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'unlike'));\n    };\n    const handleInterestedPost = (postId) => {\n        props.dispatch(interestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'interested'));\n    };\n    const handleCancelInterestedPost = (postId) => {\n        console.log('🚀 ~ file: home.js ~ line 46 ~ handleCancelInterestedPost ~ postId', postId);\n        props.dispatch(cancelInterestedPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'uninterested'));\n    };\n    const handleGoingPost = (postId) => {\n        props.dispatch(goingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'going'));\n    };\n    const handleCancelGoingPost = (postId) => {\n        props.dispatch(cancelGoingPost(postId));\n        props.dispatch(changePostInterest(postId, userId, 'ungoing'));\n    };\n\n    // RENDER\n    return (\n        <Container className=\"parent-page\">\n            <Row>\n                <Col>\n                    <CalendarInfoModal infoModal={infoModal} setInfoModal={setInfoModal} />\n                    <CalendarPostModal\n                        postModal={postModal}\n                        setPostModal={setPostModal}\n                        post={post}\n                        handleGotoPostDetails={handleGotoPostDetails}\n                        handleGotoOrganizationDetails={handleGotoOrganizationDetails}\n                        handleLikePost={handleLikePost}\n                        handleCancelLikePost={handleCancelLikePost}\n                        handleInterestedPost={handleInterestedPost}\n                        handleCancelInterestedPost={handleCancelInterestedPost}\n                        handleGoingPost={handleGoingPost}\n                        handleCancelGoingPost={handleCancelGoingPost}\n                    />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col className=\"right-align\">\n                    <HelpButtonRender\n                        onClick={() => {\n                            setInfoModal(true);\n                        }}\n                    />\n                </Col>\n            </Row>\n            <hr />\n            <Row>\n                <Col md={4}>\n                    <CalenderFilter\n                        filter={filter}\n                        changeFilterValue={changeFilterValue}\n                        handleOnApplyFilter={handleOnApplyFilter}\n                        resetFilter={resetFilter}\n                        impactAreas={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []}\n                        skills={props.getSkillsResponse?.success ? props.getSkillsResponse.skills : []}\n                    />\n                </Col>\n                <Col md={8}>\n                    <CalendarView posts={posts} setPost={setPost} setPostModal={setPostModal} />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log('🚀 ~ file: post-calender-view.js ~ line 197 ~ mapStateToProps ~ state', state);\n\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getSkillsResponse = state.Skill.getGlobalSkills;\n    const getAllCalendarPostsResponse = state.Post.getAllCalendarPosts;\n    return { getImpactAreaResponse, getSkillsResponse, getAllCalendarPostsResponse };\n};\nexport default connect(mapStateToProps, null)(PostCalenderView);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/calender/posts.js",["1150"],"const now = new Date();\n\nexport default [\n    {\n        id: 0,\n        title: 'All Day Event very long title',\n        allDay: true,\n        startDateTime: new Date(2021, 3, 0),\n        endDateTime: new Date(2021, 3, 1),\n    },\n    {\n        id: 1,\n        title: 'Long Event',\n        startDateTime: new Date(2021, 3, 7),\n        endDateTime: new Date(2021, 3, 10),\n    },\n\n    {\n        id: 2,\n        title: 'DTS startDateTimeS',\n        startDateTime: new Date(2021, 2, 13, 0, 0, 0),\n        endDateTime: new Date(2021, 2, 20, 0, 0, 0),\n    },\n\n    {\n        id: 3,\n        title: 'DTS endDateTimeS',\n        startDateTime: new Date(2021, 10, 6, 0, 0, 0),\n        endDateTime: new Date(2021, 10, 13, 0, 0, 0),\n    },\n\n    {\n        id: 4,\n        title: 'Some Event',\n        startDateTime: new Date(2021, 3, 9, 0, 0, 0),\n        endDateTime: new Date(2021, 3, 10, 0, 0, 0),\n    },\n    {\n        id: 5,\n        title: 'Conference',\n        startDateTime: new Date(2021, 3, 11),\n        endDateTime: new Date(2021, 3, 13),\n        desc: 'Big conference for important people',\n    },\n    {\n        id: 6,\n        title: 'Meeting',\n        startDateTime: new Date(2021, 3, 12, 10, 30, 0, 0),\n        endDateTime: new Date(2021, 3, 12, 12, 30, 0, 0),\n        desc: 'Pre-meeting meeting, to prepare for the meeting',\n    },\n    {\n        id: 7,\n        title: 'Lunch',\n        startDateTime: new Date(2021, 3, 12, 12, 0, 0, 0),\n        endDateTime: new Date(2021, 3, 12, 13, 0, 0, 0),\n        desc: 'Power lunch',\n    },\n    {\n        id: 8,\n        title: 'Meeting',\n        startDateTime: new Date(2021, 3, 12, 14, 0, 0, 0),\n        endDateTime: new Date(2021, 3, 12, 15, 0, 0, 0),\n    },\n    {\n        id: 9,\n        title: 'Happy Hour',\n        startDateTime: new Date(2021, 3, 12, 17, 0, 0, 0),\n        endDateTime: new Date(2021, 3, 12, 17, 30, 0, 0),\n        desc: 'Most important meal of the day',\n    },\n    {\n        id: 10,\n        title: 'Dinner',\n        startDateTime: new Date(2021, 3, 12, 20, 0, 0, 0),\n        endDateTime: new Date(2021, 3, 12, 21, 0, 0, 0),\n    },\n    {\n        id: 11,\n        title: 'Birthday Party',\n        startDateTime: new Date(2021, 3, 13, 7, 0, 0),\n        endDateTime: new Date(2021, 3, 13, 10, 30, 0),\n    },\n    {\n        id: 12,\n        title: 'Late Night Event',\n        startDateTime: new Date(2021, 3, 17, 19, 30, 0),\n        endDateTime: new Date(2021, 3, 18, 2, 0, 0),\n    },\n    {\n        id: 12.5,\n        title: 'Late Same Night Event',\n        startDateTime: new Date(2021, 3, 17, 19, 30, 0),\n        endDateTime: new Date(2021, 3, 17, 23, 30, 0),\n    },\n    {\n        id: 13,\n        title: 'Multi-day Event',\n        startDateTime: new Date(2021, 3, 20, 19, 30, 0),\n        endDateTime: new Date(2021, 3, 22, 2, 0, 0),\n    },\n    {\n        id: 14,\n        title: 'Today',\n        startDateTime: new Date(new Date().setHours(new Date().getHours() - 3)),\n        endDateTime: new Date(new Date().setHours(new Date().getHours() + 3)),\n    },\n    {\n        id: 15,\n        title: 'Point in Time Event',\n        startDateTime: now,\n        endDateTime: now,\n    },\n];\n",["1151","1152"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/conversation/manage-conversations.js",["1153","1154","1155"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport ConversationList from '@Components/conversation/conversation-list';\nimport { connect } from 'react-redux';\nimport * as RoutePaths from '@Constants/route-paths';\nimport ConversationDetails from '@Components/conversation/conversation-details';\nimport { FileMaxSizeErrorModal } from '@Components/conversation/conversation-warnings';\nimport {\n    getAllConversationsByUser,\n    getConversation,\n    setMessage,\n    getMessageTextFromLS,\n    setMessageTextOnLS,\n    printMessageTextOnLS,\n    removeAllMessagesOnLS,\n} from '@Actions/conversation-action';\nimport { serverAddress } from '@Constants/api-paths';\nimport MessageForm from '@Components/conversation/message-form';\nimport useSound from 'use-sound';\nimport openSocket from 'socket.io-client';\n\nconst socket = openSocket(serverAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\nconst Conversations = (props) => {\n    const [messageText, setMessageText] = useState('');\n    const [images, setImages] = useState([]);\n    const [attachments, setAttachments] = useState([]);\n    const [userId, setUserId] = useState('');\n    const [fileSizeErrorModal, setFileSizeErrorModal] = useState(false);\n    useEffect(() => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            socket.on('Message_' + user._id.toString(), (success) => {\n                console.log('🚀 ~ file: global-notification.js ~ line 87 ~ socket.on ~ success', success);\n                if (success === 'NewMessage') {\n                    const audioEl = document.getElementsByClassName('audio-element-message')[0];\n                    audioEl.play();\n                    const conversationId = props.match.params.conversationId;\n                    props.dispatch(getConversation(conversationId));\n                    // props.dispatch(getNotificationsCount(true));\n                    // props.dispatch(getTopNotifications());\n                }\n            });\n            props.dispatch(getAllConversationsByUser(user._id));\n        }\n    }, []);\n    useEffect(() => {\n        // removeAllMessagesOnLS();\n        const conversationId = props.match.params.conversationId;\n        if (conversationId !== 'all') {\n            props.dispatch(getConversation(conversationId));\n            setMessageText(getMessageTextFromLS(conversationId));\n        }\n    }, [props.match.params.conversationId]);\n    const onMessageSubmit = (text) => {\n        let imagesSize = 0;\n        let attachmentsSize = 0;\n        for (let i = 0; i < images.length; i++) {\n            imagesSize += images[i].length;\n        }\n        imagesSize = imagesSize * 0.75;\n\n        for (let i = 0; i < attachments.length; i++) {\n            attachmentsSize += attachments[i].length;\n        }\n        attachmentsSize = attachmentsSize * 0.75;\n        const totalSize = imagesSize + attachmentsSize;\n        if (totalSize > 25 * 1024 * 1024) {\n            // setFileSizeErrorModal(true);\n            alert('Maximum 25 MB File can be send at a time.');\n        } else {\n            props.dispatch(\n                setMessage({\n                    senderId: userId,\n                    conversationId: props.match.params.conversationId,\n                    text,\n                    images,\n                    attachments,\n                }),\n            );\n            setMessageText('');\n            setImages([]);\n            setAttachments([]);\n            setMessageTextOnLS(props.match.params.conversationId, '');\n        }\n    };\n    const handleGoToConversationDetails = (conversationId) => {\n        setMessageTextOnLS(props.match.params.conversationId, messageText);\n        setMessageText('');\n        props.history.push(RoutePaths.ConversationPage(conversationId));\n    };\n    return (\n        <Container className=\"parent-page\">\n            <FileMaxSizeErrorModal show={fileSizeErrorModal} setShow={setFileSizeErrorModal} />\n            <Row>\n                <Col>\n                    <label>\n                        This Buttons are for <b>Development Purpose Only</b>\n                    </label>\n                </Col>\n                <Col>\n                    <Button\n                        variant=\"outline-danger\"\n                        size=\"sm\"\n                        onClick={() => {\n                            removeAllMessagesOnLS();\n                        }}\n                    >\n                        Remove All Cache\n                    </Button>\n                    &nbsp;\n                    <Button\n                        variant=\"outline-warning\"\n                        size=\"sm\"\n                        onClick={() => {\n                            printMessageTextOnLS();\n                        }}\n                    >\n                        Print All Cache\n                    </Button>\n                </Col>\n            </Row>\n            <hr />\n            <Row>\n                <Col sm={3}>\n                    <ConversationList\n                        allConversations={props.getAllConversationsResponse.success ? props.getAllConversationsResponse.conversations : []}\n                        userId={userId}\n                        handleGoToConversationDetails={handleGoToConversationDetails}\n                        conversationId={props.match.params.conversationId}\n                    />\n                </Col>\n                {props.match.params.conversationId !== 'all' && (\n                    <Col sm={9}>\n                        <ConversationDetails\n                            conversation={props.getConversationResponse.success ? props.getConversationResponse.conversation : {}}\n                            messageUserEntity={props.getConversationResponse.success ? props.getConversationResponse.messageUserEntity : {}}\n                            userId={userId}\n                        />\n\n                        <MessageForm\n                            onMessageSubmit={onMessageSubmit}\n                            messageText={messageText}\n                            setMessageText={setMessageText}\n                            attachments={attachments}\n                            setAttachments={setAttachments}\n                            images={images}\n                            setImages={setImages}\n                            // messageText={messageText} setMessageText={setMessageText}\n                        />\n                    </Col>\n                )}\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log('🚀 ~ file: messages.js ~ line 67 ~ mapStateToProps ~ state', state.Conversation);\n\n    const getAllConversationsResponse = state.Conversation.getAllConversationsByUser;\n    const getConversationResponse = state.Conversation.getConversation;\n    return { getAllConversationsResponse, getConversationResponse };\n};\nexport default connect(mapStateToProps, null)(Conversations);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/conversation/sample-thread-list.js",["1156"],"import React from 'react';\nimport { Container, ListGroup, Row, Col, Button } from 'react-bootstrap';\nimport Avatar from 'react-avatar';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '../../constants/default-images';\nimport { OptionButtonRender } from '../../components/form_template/buttons-render';\nconst PersonRender = ({ person }) => {\n    let name = '';\n    let profilePicture = '';\n    const basicInfo = person.basicInfo;\n    console.log('🚀 ~ file: sample-thread-list.js ~ line 9 ~ PersonRender ~ basicInfo', person);\n    if (person.userType === 'individual') {\n        name = basicInfo.firstName + ' ' + basicInfo.lastName;\n        profilePicture = basicInfo.profilePicture ? basicInfo.profilePicture : defaultIndividualProfilePicture;\n    } else if (person.userType === 'organization') {\n        name = basicInfo.name;\n        profilePicture = basicInfo.profilePicture ? basicInfo.profilePicture : defaultOrganizationProfilePicture;\n    }\n    return (\n        <>\n            <Avatar round=\"5px\" size=\"32\" src={profilePicture} />\n            <b> {name}</b>\n            <br />\n        </>\n    );\n};\nconst ThreadList = (props) => {\n    const allConversations = props.allConversations;\n    const userId = props.userId;\n    console.log('🚀 ~ file: sample-thread-list.js ~ line 6 ~ ThreadList ~ allConversations', allConversations);\n    return (\n        <div className=\"thread-list\">\n            <ListGroup as=\"ul\">\n                <br />\n                <Container>\n                    <Row>\n                        <Col>\n                            {/* <input type=\"text\" className=\"form-control\" placeholder=\"Search Name\" /> */}\n                            <h4>All Messages</h4>\n                        </Col>\n                    </Row>\n                </Container>\n                {/* <hr /> */}\n                {allConversations.map((conversation, i) => {\n                    const members = conversation.members;\n                    let memberObject = {};\n                    for (let i = 0; i < members.length; i++) {\n                        memberObject[members[i]._id] = members[i];\n                    }\n                    let person = {};\n                    if (members[0]._id === userId) person = members[1];\n                    else if (members[1]._id === userId) person = members[0];\n                    return (\n                        <ListGroup.Item key={i} className=\"special-btn conversation-item\">\n                            <Row>\n                                <Col\n                                    sm=\"9\"\n                                    onClick={() => {\n                                        props.setSelectedConversation(conversation);\n                                    }}\n                                >\n                                    <PersonRender person={person} />\n                                </Col>\n                                <Col sm=\"2\">\n                                    <OptionButtonRender />\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    );\n                })}\n            </ListGroup>\n        </div>\n    );\n};\n\nexport default ThreadList;\n",["1157","1158"],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/conversation-details.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/message-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/conversation-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/layout/global-conversation.js",["1159","1160"],"import { getConversationsCountByUser } from '@Actions/conversation-action';\nimport { serverAddress } from '@Constants/api-paths';\nimport * as RoutePaths from '@Constants/route-paths';\nimport React, { useEffect } from 'react';\nimport { Badge, Button } from 'react-bootstrap';\nimport { BsChatSquareFill } from 'react-icons/bs';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport openSocket from 'socket.io-client';\n\nconst socket = openSocket(serverAddress, { transports: ['websocket', 'polling', 'flashsocket'] });\nconst GlobalConversation = (props) => {\n    const count = 100;\n    useEffect(() => {\n        const user = props.user;\n        props.dispatch(getConversationsCountByUser(user._id));\n\n        socket.on('Message_' + user._id.toString(), (success) => {\n            console.log('🚀 ~ file: global-notification.js ~ line 87 ~ socket.on ~ success', success);\n            if (success === 'NewMessage') {\n                const audioEl = document.getElementsByClassName('audio-element-message')[0];\n                audioEl.play();\n                props.dispatch(getConversationsCountByUser(user._id));\n            }\n            if (success === 'Count') {\n                const audioEl = document.getElementsByClassName('audio-element-message')[0];\n                audioEl.play();\n                props.dispatch(getConversationsCountByUser(user._id));\n            }\n        });\n    }, []);\n    return (\n        <Button\n            size=\"lg\"\n            className=\"notification-bell\"\n            onClick={() => {\n                props.history.push(RoutePaths.ManageConversationPage);\n            }}\n        >\n            <BsChatSquareFill />\n\n            <Badge className=\"notification-count\" variant=\"dark\">\n                {props.getConversationsCountResponse.success ? props.getConversationsCountResponse.totalUniqueEntity : 0}\n            </Badge>\n        </Button>\n    );\n};\nconst mapStateToProps = (state) => {\n    const getConversationsCountResponse = state.Conversation.getConversationsCount;\n    return { getConversationsCountResponse };\n};\n\nexport default connect(mapStateToProps, null)(withRouter(GlobalConversation));\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-user.js",["1161","1162","1163","1164"],"import { getAllUsers } from '@Actions/user-action';\nimport UserList from '@Components/search/user-list';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Pagination from 'react-js-pagination';\nimport { connect } from 'react-redux';\nconst SearchUser = (props) => {\n    const [userId, setUserId] = useState();\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            const user = props.auth.user;\n            if (user && user._id) {\n                setUserId(user._id);\n            }\n\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n    useEffect(() => {\n        props.dispatch(getAllUsers({ name: props.match.params.name }));\n    }, [props.match.params.name]);\n\n    return (\n        <Container className=\"parent-page\">\n            {/* <Row>\n                <Col>Searching User With {props.match.params.name} Name</Col>\n            </Row> */}\n            <Row>\n                <Col>\n                    <Pagination\n                        itemClass=\"page-item\"\n                        linkClass=\"page-link\"\n                        activePage={activePage}\n                        itemsCountPerPage={30}\n                        totalItemsCount={props.getAllUsersResponse.success ? props.getAllUsersResponse.users.length : 0}\n                        pageRangeDisplayed={5}\n                        onChange={(page) => {\n                            setActivePage(page);\n                        }}\n                    />\n                </Col>\n                <hr />\n            </Row>\n            <Row>\n                <Col>\n                    <UserList\n                        users={props.getAllUsersResponse.success ? props.getAllUsersResponse.users.slice((activePage - 1) * 30, activePage * 30 - 1) : []}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    const getAllUsersResponse = state.User.getAllUsers;\n    return { getAllUsersResponse };\n};\nexport default connect(mapStateToProps, null)(SearchUser);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/user-list.js",["1165","1166","1167"],"import React from 'react';\nimport { Container, Row, Col, Card, CardColumns, Badge } from 'react-bootstrap';\nimport { defaultIndividualProfilePicture, defaultOrganizationProfilePicture } from '@Constants/default-images';\nconst getUserTypeName = {\n    individual: 'INDIVIDUAL',\n    organization: 'ORGANIZATION',\n};\nconst UserListRender = ({ users, handleGotoUserDetails }) => {\n    return (\n        <CardColumns className=\"five-columns\">\n            {users.map((user, i) => {\n                const basicInfo = user.basicInfo;\n                let name = '';\n                let profilePicture = '';\n                if (user.userType === 'individual') {\n                    name = basicInfo.firstName + ' ' + basicInfo.lastName;\n                    profilePicture = basicInfo.profilePicture ? basicInfo.profilePicture : defaultIndividualProfilePicture;\n                } else if (user.userType === 'organization') {\n                    name = basicInfo.name;\n                    profilePicture = basicInfo.profilePicture ? basicInfo.profilePicture : defaultOrganizationProfilePicture;\n                }\n                return (\n                    <Card>\n                        <div className=\"home-post-image-dark\">\n                            <Card.Img\n                                className=\"special-btn\"\n                                variant=\"top\"\n                                src={profilePicture}\n                                alt=\"user\"\n                                onClick={() => {\n                                    handleGotoUserDetails(user.followerUserType, user.followerId);\n                                }}\n                            />\n                            <Badge variant=\"primary\" className=\"image-text-top-left-small\">\n                                {getUserTypeName[user.userType]}\n                            </Badge>\n                        </div>\n                        <Card.Body\n                            className=\"special-btn\"\n                            onClick={() => {\n                                handleGotoUserDetails(user.followerUserType, user.followerId);\n                            }}\n                        >\n                            <Card.Title>{name}</Card.Title>\n                        </Card.Body>\n                        <Card.Footer>\n                            <small className=\"text-muted\">YET TO DISCUSS</small>\n                        </Card.Footer>\n                    </Card>\n                );\n            })}\n        </CardColumns>\n    );\n};\nconst UserList = (props) => {\n    const users = props.users;\n    const individuals = users.filter((user) => user.userType === 'individual');\n    const organizations = users.filter((user) => user.userType === 'organization');\n\n    const handleGotoUserDetails = props.handleGotoUserDetails;\n    return (\n        <>\n            {individuals && individuals.length > 0 ? (\n                <>\n                    <h4>INDIVIDUALS</h4>\n                    <hr />\n                    <UserListRender users={individuals} handleGotoUserDetails={handleGotoUserDetails} />\n                </>\n            ) : (\n                <></>\n            )}\n            <hr />\n            {organizations && organizations.length > 0 ? (\n                <>\n                    <h4>ORGANIZATIONS</h4>\n                    <hr />\n                    <UserListRender users={organizations} handleGotoUserDetails={handleGotoUserDetails} />\n                </>\n            ) : (\n                <></>\n            )}\n        </>\n    );\n};\nexport default UserList;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/community/endorsers.js",["1168","1169","1170","1171","1172","1173"],"import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nimport CommunityMenu from '@Components/community/community-menu';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { connect } from 'react-redux';\nimport SampleUsers from './sample-users';\nimport EndorsersList from '@Components/community/endorsers-list';\nimport { getAllEndorsers } from '@Actions/endorsement-action';\nimport * as RoutePaths from '@Constants/route-paths';\nimport { setMessage } from '@Actions/conversation-action';\nimport MessageModal from '@Components/conversation/message-modal';\nimport { NotificationManager } from 'react-notifications';\nconst CommunityEndorsers = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [userType, setUserType] = useState('');\n    const [cards, setCards] = useState({});\n    const [messageModal, setMessageModal] = useState(false);\n    const [messageReceiver, setMessageReceiver] = useState('');\n    useEffect(() => {\n        const { success } = props.setMessageResponse;\n        if (success) {\n            NotificationManager.success('Message sent', 'success');\n        } else if (success === false) NotificationManager.error('Message is not sent', 'Failed');\n    }, [props.setMessageResponse]);\n    const handleOpenMessageModal = (user) => {\n        setMessageModal(true);\n        setMessageReceiver(user);\n    };\n    const handleSendNewMessage = (receiverId, text) => {\n        props.dispatch(\n            setMessage({\n                senderId: userId,\n                receiverId,\n                text,\n            }),\n        );\n        setMessageModal(false);\n    };\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            console.log('Calling API');\n            setLoading(true);\n            props.dispatch(getAllEndorsers(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            setUserType(user.userType);\n            getInitialInfo(user._id);\n        }\n    }, []);\n    useEffect(() => {\n        const { success } = props.getAllEndorsersResponse;\n        if (success) {\n            const endorsers = props.getAllEndorsersResponse.endorsers;\n            for (let i = 0; i < endorsers.length; i++) {\n                cards[endorsers[i]._id] = true;\n            }\n            setCards({ ...cards });\n        }\n    }, [props.getAllEndorsersResponse]);\n    const handleGotoUserDetails = (userType, userId) => {\n        props.history.push(RoutePaths.userDetailsPage(userType, userId));\n    };\n\n    if (loading) return <LoadingAnim />;\n    else {\n        return (\n            <Container>\n                <MessageModal\n                    messageModal={messageModal}\n                    setMessageModal={setMessageModal}\n                    messageReceiver={messageReceiver}\n                    handleSendNewMessage={handleSendNewMessage}\n                />\n                <Row className=\"parent-page\">\n                    <Col>\n                        <CommunityMenu selected=\"endorser\" userType={userType} />\n                        <hr />\n                        <EndorsersList\n                            endorsers={props.getAllEndorsersResponse ? props.getAllEndorsersResponse.endorsers : []}\n                            userId={userId}\n                            handleGotoUserDetails={handleGotoUserDetails}\n                            cards={cards}\n                            handleOpenMessageModal={handleOpenMessageModal}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n};\nconst mapStateToProps = (state) => {\n    const getAllEndorsersResponse = state.Endorsement.getAllEndorsers;\n    const setMessageResponse = state.Conversation.setMessage;\n    return { getAllEndorsersResponse, setMessageResponse };\n};\nexport default connect(mapStateToProps, null)(CommunityEndorsers);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/community/endorsers-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/about-us.js",["1174"],"import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nconst AboutUs = (props) => {\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <h2>About Us</h2>\n                    <small>last updated on June 23, 2021</small>\n                    <hr />\n                    <p style={{ textAlign: 'justify' }}>\n                        Welcome to Cascaid! This is an initial prototype of an offering designed to facilitate the community and social impact efforts of\n                        individuals, non-profit organizations, community groups and leaders, among many other stakeholders. It shouldn’t be hard to connect\n                        people and organizations to make the most of their time, talent, and resources.\n                    </p>\n                    <p style={{ textAlign: 'justify' }}>\n                        <b>If you’re an individual,</b> we want to empower you to know what’s going on in your community (as you define in) and to make it\n                        simple for you to get meaningfully involved with the things that you care about. Part of that journey is making it a lot easier to get\n                        to know the organizations and groups that are doing this work, and giving you a deeper understanding of who they are and what they need.\n                        There is no reason it should be difficult to answer the questions “Who does this type of work in my neighborhood?”, “Where can I apply\n                        my particular skill for the maximum impact?”, or “What community events are going on next week?” – we aim to solve that.\n                    </p>\n                    <p style={{ textAlign: 'justify' }}>\n                        <b>If you’re an organization or group,</b> we want to improve your ability to grab the attention of the public – and find that portion\n                        of the population that is looking for you (even if they don’t know that yet). We want the public to better know who you are, and what\n                        your most important needs are – without it being a burden for you to get that information out there. We know that non-profits, community\n                        organizers, activists, and other social impact minded groups are already expected to do so much with so little resources. Here, we want\n                        to make your lives easier as it relates to public awareness, marketing, managing your interested audience, and expressing your needs to\n                        the public, among other areas that are not currently well-served for the non-profit community.\n                    </p>\n                    <p style={{ textAlign: 'justify' }}>\n                        So please explore the site, and let us know what you think – we’d love to hear about how we can better serve your community and social\n                        impact goals!\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nexport default AboutUs;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/contact-us.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/home/privacy-policy.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/dashboard/dashboard.js",["1175","1176","1177"],"import React, { useRef, useEffect, useState } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Summary from '@Components/dashboard/summary-view';\nimport Statistics from '@Components/dashboard/statistics-view';\nimport TopNotifications from '@Components/dashboard/top-notifications';\nimport UpcomingActivities from '@Components/dashboard/upcoming-activity-list';\nimport SectionMenu from '@Components/dashboard/section-menu';\nimport { getFollowerSummary } from '@Actions/follow-action';\nimport { getEndorserSummary } from '@Actions/endorsement-action';\nimport { getViewerSummary, getPostStatistics } from '@Actions/post-action';\n\nconst Dashboard = (props) => {\n    const [userId, setUserId] = useState('');\n    const [userName, setUserName] = useState('');\n    const summaryRef = useRef(null);\n    const statisticsRef = useRef(null);\n    const notificationRef = useRef(null);\n    const upcomingRef = useRef(null);\n\n    // GET INITIAL ORGANIZATIOn INFORMATION\n    useEffect(() => {\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            const basicInfo = props.auth.basicInfo;\n            props.dispatch(getFollowerSummary(user._id));\n            props.dispatch(getEndorserSummary(user._id));\n            props.dispatch(getViewerSummary(user._id));\n            props.dispatch(getPostStatistics(user._id));\n            setUserName(basicInfo.name ? basicInfo.name : '');\n        }\n    }, [props.auth]);\n\n    const executeScroll = (event) => {\n        if (event.current) {\n            event.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'nearest',\n            });\n        }\n    };\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <SectionMenu\n                        userName={userName}\n                        executeScroll={executeScroll}\n                        summaryRef={summaryRef}\n                        statisticsRef={statisticsRef}\n                        notificationRef={notificationRef}\n                        upcomingRef={upcomingRef}\n                    />\n                    <hr />\n                    <div ref={summaryRef}>\n                        <Summary\n                            getFollowerSummaryResponse={props.getFollowerSummaryResponse}\n                            getEndorserSummaryResponse={props.getEndorserSummaryResponse}\n                            getViewerSummaryResponse={props.getViewerSummaryResponse}\n                        />\n                        <hr />\n                    </div>\n                    <div ref={statisticsRef}>\n                        <Statistics getPostStatisticsResponse={props.getPostStatisticsResponse} />\n                        <hr />\n                    </div>\n                    <div ref={notificationRef}>\n                        <TopNotifications />\n                        <hr />\n                    </div>\n                    <div ref={upcomingRef}>\n                        <UpcomingActivities />\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log('🚀 ~ file: dashboard.js ~ line 80 ~ mapStateToProps ~ state', state);\n    const getFollowerSummaryResponse = state.Follow.getFollowerSummary;\n    const getEndorserSummaryResponse = state.Endorsement.getEndorserSummary;\n    const getViewerSummaryResponse = state.Post.getViewerSummary;\n    const getPostStatisticsResponse = state.Post.getPostStatistics;\n    return { getFollowerSummaryResponse, getEndorserSummaryResponse, getViewerSummaryResponse, getPostStatisticsResponse };\n};\nexport default connect(mapStateToProps, null)(Dashboard);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/search/search-individual.js",["1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188"],"import { addUsersToCultivation, clearAddUsersToCultivation, createCultivation, getAllCultivationsByUser } from '@Actions/cultivation-action';\nimport { getAllEndorsees } from '@Actions/endorsement-action';\nimport { getAllFollowings } from '@Actions/follow-action';\nimport { getAllGlobalImpactAreas } from '@Actions/impact-area-action';\nimport { getAllGlobalSkills } from '@Actions/skill-action';\nimport { getAllIndividuals } from '@Actions/user-action';\nimport CultivationListModal from '@Components/cultivation/cultivation-list-modal';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport IndividualListView from '@Components/individual/individual-list-view';\nimport IndividualFilter from '@Components/search/individual-filters';\nimport { defaultCurrentLocation } from '@Constants/default-user-information';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Pagination from 'react-js-pagination';\nimport { NotificationManager } from 'react-notifications';\nimport { connect } from 'react-redux';\nconst SearchIndividual = (props) => {\n    const [userId, setUserId] = useState();\n    const [currentLocation, setCurrentLocation] = useState(defaultCurrentLocation);\n    const [activePage, setActivePage] = useState(1);\n    const [loading, setLoading] = useState(false);\n    const [viewType, setViewType] = useState('list');\n    const [followObject, setFollowObject] = useState({});\n    const [endorseObject, setEndorseObject] = useState({});\n    const [cultivationModal, setCultivationModal] = useState(false);\n    const [createNewCultivation, setCreateNewCultivation] = useState(false);\n    const [newCultivation, setNewCultivation] = useState({ title: '', description: '' });\n    const [selectedUserId, setSelectedUserId] = useState([]);\n    const [selectedMultipleUserId, setSelectedMultipleUserId] = useState([]);\n    const [filter, setFilter] = useState({\n        name: '',\n        impactAreas: [],\n        skills: [],\n        onlyFollowers: false,\n        onlyInteractedWithPosts: false,\n        onlyLookingForVolunteering: false,\n        onlyLookingForProject: false,\n        onlyLookingForMembership: false,\n    });\n\n    const resetFilter = () => {\n        setFilter({\n            name: '',\n            impactAreas: [],\n            skills: [],\n            onlyFollowers: false,\n            onlyInteractedWithPosts: false,\n            onlyLookingForVolunteering: false,\n            onlyLookingForProject: false,\n            onlyLookingForMembership: false,\n        });\n    };\n    const changeFilter = (key, value) => {\n        let filter_ = filter;\n        filter[key] = value;\n        console.log(filter_);\n        setFilter({ ...filter_ });\n    };\n    const handleOnApplyFilter = () => {\n        setLoading(true);\n        props.dispatch(getAllIndividuals({ ...filter, userType: 'individual' }));\n        if (userId) {\n        }\n        setLoading(false);\n        setActivePage(1);\n        console.log('FFF', filter);\n    };\n    const gotoIndividualDetails = (userId) => {\n        props.history.push(`/individual/details/${userId}`);\n    };\n\n    useEffect(() => {\n        const getInitialInfo = () => {\n            setLoading(true);\n            const user = props.auth.user;\n            if (user && user._id) {\n                setUserId(user._id);\n                props.dispatch(getAllCultivationsByUser(user._id));\n                props.dispatch(getAllFollowings(user._id));\n                props.dispatch(getAllEndorsees(user._id));\n            }\n            props.dispatch(getAllGlobalImpactAreas());\n            props.dispatch(getAllGlobalSkills());\n\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n\n    const handleAddUserToCultivationList = (cultivationId) => {\n        props.dispatch(addUsersToCultivation(cultivationId, selectedUserId));\n    };\n    const showCultivationListModal = (userIds) => {\n        setCultivationModal(true);\n        setSelectedUserId(userIds);\n    };\n    const handleSetNewCultivation = (key, value) => {\n        console.log('🚀 ~ file: search-individual.js ~ line 99 ~ handleSetNewCultivation ~ key, value', key, value);\n        const newCultivation_ = newCultivation;\n        newCultivation_[key] = value;\n        setNewCultivation({ ...newCultivation_ });\n    };\n    const handleCreateNewCultivation = () => {\n        props.dispatch(createCultivation({ ...newCultivation, creatorId: userId }));\n        setNewCultivation({ title: '', description: '' });\n        setCreateNewCultivation(false);\n    };\n    useEffect(() => {\n        const { success } = props.setCultivationResponse;\n        if (success) {\n            NotificationManager.success('Cultivation created successfully.', 'success');\n            props.dispatch(getAllCultivationsByUser(userId));\n        } else if (success === false) {\n            NotificationManager.error('Cultivation not created', 'Failed');\n        }\n    }, [props.setCultivationResponse]);\n    useEffect(() => {\n        const { success } = props.addUserToCultivationResponse;\n        if (success) {\n            NotificationManager.success('Users are added successfully.', 'success');\n            // setCultivationModal(false);\n            props.dispatch(clearAddUsersToCultivation());\n        } else if (success === false) {\n            NotificationManager.error('Users are not added', 'Failed');\n            props.dispatch(clearAddUsersToCultivation());\n        }\n    }, [props.addUserToCultivationResponse]);\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <Container>\n                <CultivationListModal\n                    cultivationModal={cultivationModal}\n                    setCultivationModal={setCultivationModal}\n                    allCultivations={props.getAllCultivationsResponse.success ? props.getAllCultivationsResponse.allCultivations : []}\n                    handleAddUserToCultivationList={handleAddUserToCultivationList}\n                    createNewCultivation={createNewCultivation}\n                    setCreateNewCultivation={setCreateNewCultivation}\n                    newCultivation={newCultivation}\n                    handleSetNewCultivation={handleSetNewCultivation}\n                    handleCreateNewCultivation={handleCreateNewCultivation}\n                />\n                <Row className=\"parent-page\">\n                    <Col lg={4}>\n                        <IndividualFilter\n                            changeFilter={changeFilter}\n                            resetFilter={resetFilter}\n                            handleOnApplyFilter={handleOnApplyFilter}\n                            filter={filter}\n                            skills={props.getSkillsResponse?.success ? props.getSkillsResponse.skills : []}\n                            impactAreas={props.getImpactAreaResponse?.success ? props.getImpactAreaResponse.impactAreas : []}\n                            submitting={props.submitting}\n                        />\n                    </Col>\n                    <Col lg={8}>\n                        <Pagination\n                            itemClass=\"page-item\"\n                            linkClass=\"page-link\"\n                            activePage={activePage}\n                            itemsCountPerPage={30}\n                            totalItemsCount={props.getAllIndividualsResponse.success ? props.getAllIndividualsResponse.users.length : 0}\n                            pageRangeDisplayed={5}\n                            onChange={(page) => {\n                                setActivePage(page);\n                            }}\n                        />\n                        <IndividualListView\n                            allIndividuals={\n                                props.getAllIndividualsResponse.success\n                                    ? props.getAllIndividualsResponse.users.slice((activePage - 1) * 30, activePage * 30 - 1)\n                                    : []\n                            }\n                            gotoIndividualDetails={gotoIndividualDetails}\n                            showCultivationListModal={showCultivationListModal}\n                            selectedMultipleUserId={selectedMultipleUserId}\n                            setSelectedMultipleUserId={setSelectedMultipleUserId}\n                        />\n                    </Col>\n                </Row>\n            </Container>\n        );\n};\nconst mapStateToProps = (state) => {\n    console.log(state);\n    const getImpactAreaResponse = state.ImpactArea.getGlobalImpactAreas;\n    const getSkillsResponse = state.Skill.getGlobalSkills;\n    const getAllIndividualsResponse = state.User.getAllIndividuals;\n    const getAllFollowingsResponse = state.Follow.getAllFollowings;\n    const getAllEndorseesResponse = state.Endorsement.getAllEndorsees;\n    const getAllCultivationsResponse = state.Cultivation.getAllCultivations;\n    const setCultivationResponse = state.Cultivation.setCultivation;\n    const addUserToCultivationResponse = state.Cultivation.addUserToCultivation;\n    return {\n        getImpactAreaResponse,\n        getAllIndividualsResponse,\n        getSkillsResponse,\n        getAllFollowingsResponse,\n        getAllEndorseesResponse,\n        getAllCultivationsResponse,\n        setCultivationResponse,\n        addUserToCultivationResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(SearchIndividual);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/individual/individual-list-view.js",["1189"],"import { defaultIndividualProfilePicture } from '@Constants/default-images';\nimport React from 'react';\nimport { Badge, Col, Form, Image, Row, Table } from 'react-bootstrap';\nimport { AddUserToCultivation } from '../form_template/buttons-render';\nconst IndividualListView = (props) => {\n    const allIndividuals = props.allIndividuals;\n    const showCultivationListModal = props.showCultivationListModal;\n    const selectedMultipleUserId = props.selectedMultipleUserId;\n    const setSelectedMultipleUserId = props.setSelectedMultipleUserId;\n    const descriptionRender = (description) => {\n        if (description) {\n            if (description.length < 101) return description;\n            else return description.substr(0, 100) + '...';\n        } else return 'No description available';\n    };\n    const handleAddRemoveUserId = (userId) => {\n        const multipleUserId = selectedMultipleUserId;\n        if (multipleUserId.indexOf(userId) === -1) {\n            multipleUserId.push(userId);\n        } else {\n            var index = multipleUserId.indexOf(userId);\n            if (index > -1) {\n                multipleUserId.splice(index, 1);\n            }\n        }\n        setSelectedMultipleUserId([...multipleUserId]);\n    };\n    // const handleSelectAllUsersId = () => {};\n\n    if (allIndividuals && allIndividuals.length > 0) {\n        return (\n            <Table striped bordered hover responsive size=\"sm\">\n                <tbody>\n                    {selectedMultipleUserId && selectedMultipleUserId.length > 0 ? (\n                        <tr>\n                            <td colSpan=\"4\">\n                                <AddUserToCultivation\n                                    button_title=\"Add All Selected Users To Cultivation List\"\n                                    onClick={() => {\n                                        showCultivationListModal(selectedMultipleUserId);\n                                    }}\n                                />\n                                &nbsp;\n                            </td>\n                        </tr>\n                    ) : (\n                        <></>\n                    )}\n                    {allIndividuals.map((ind, i) => {\n                        if (ind && ind.basicInfo && ind.basicInfo.firstName) {\n                            return (\n                                <tr key={i}>\n                                    <td>\n                                        <Form.Group controlId={'formBasicCheckbox_userId_' + ind._id}>\n                                            <Form.Check\n                                                type=\"checkbox\"\n                                                checked={selectedMultipleUserId.includes(ind._id)}\n                                                onChange={() => {\n                                                    handleAddRemoveUserId(ind._id);\n                                                }}\n                                            />\n                                        </Form.Group>\n                                    </td>\n                                    <td\n                                        className=\"special-btn\"\n                                        onClick={() => {\n                                            props.gotoIndividualDetails(ind._id);\n                                        }}\n                                    >\n                                        <Image\n                                            thumbnail\n                                            width=\"200\"\n                                            src={ind.basicInfo.profilePicture ? ind.basicInfo.profilePicture : defaultIndividualProfilePicture}\n                                            alt=\"No Image Found\"\n                                            className=\"individual-list-image\"\n                                        />\n                                    </td>\n                                    <td\n                                        className=\"special-btn\"\n                                        onClick={() => {\n                                            props.gotoIndividualDetails(ind._id);\n                                        }}\n                                    >\n                                        <Row>\n                                            <Col>\n                                                <p className=\"left-text bold-text\">{ind.basicInfo.firstName + ' ' + ind.basicInfo.lastName}</p>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                {ind.impactAreas &&\n                                                    ind.impactAreas.length > 0 &&\n                                                    ind.impactAreas.map((area, i) => {\n                                                        return (\n                                                            <Badge variant=\"light\" className=\"badge-single-small impact-area-badge\" key={i}>\n                                                                {area.label}\n                                                            </Badge>\n                                                        );\n                                                    })}\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                {ind.skills &&\n                                                    ind.skills.length > 0 &&\n                                                    ind.skills.map((skill, i) => {\n                                                        return (\n                                                            <Badge variant=\"light\" className=\"badge-single-small skill-badge\" key={i}>\n                                                                {skill.label}\n                                                            </Badge>\n                                                        );\n                                                    })}\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col>\n                                                {ind.basicInfo.address ? (\n                                                    <Row>\n                                                        <Col>\n                                                            <small className=\"gray-text\">\n                                                                {ind.basicInfo.address.street1 +\n                                                                    ', ' +\n                                                                    ind.basicInfo.address.street2 +\n                                                                    ', ' +\n                                                                    ind.basicInfo.address.city +\n                                                                    ', ' +\n                                                                    ind.basicInfo.address.code}\n                                                            </small>\n                                                        </Col>\n                                                    </Row>\n                                                ) : (\n                                                    <></>\n                                                )}\n                                            </Col>\n                                        </Row>\n                                    </td>\n                                    <td>\n                                        <AddUserToCultivation\n                                            hover_title=\"Add To Cultivation List\"\n                                            onClick={() => {\n                                                showCultivationListModal([ind._id]);\n                                            }}\n                                        />\n                                    </td>\n                                </tr>\n                            );\n                        } else return <tr key={i}></tr>;\n                    })}\n                    {selectedMultipleUserId && selectedMultipleUserId.length > 0 ? (\n                        <tr>\n                            <td colSpan=\"4\">\n                                <AddUserToCultivation\n                                    button_title=\"Add All Selected Users To Cultivation List\"\n                                    onClick={() => {\n                                        showCultivationListModal(selectedMultipleUserId);\n                                    }}\n                                />\n                                &nbsp;\n                            </td>\n                        </tr>\n                    ) : (\n                        <></>\n                    )}\n                </tbody>\n            </Table>\n        );\n    } else return <h4>No Individuals Found</h4>;\n};\nexport default IndividualListView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-gallery.js",["1190","1191"],"import { getGallery } from '@Actions/post-action';\nimport { PostImageModalRender } from '@Components/form_template/image-modal-render';\nimport GalleryView from '@Components/post/gallery-view';\nimport * as RoutePaths from '@Constants/route-paths';\nimport React, { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport OrganizationSideMenu from './organization-side-menu';\nconst OrganizationGallery = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [imageDetailsModal, setImageDetailsModal] = useState(false);\n    const [image, setImage] = useState('');\n\n    useEffect(() => {\n        alert('Came here');\n        const getInitialInfo = () => {\n            setLoading(true);\n            const organizationId = props.match.params.userId;\n            console.log('🚀 ~ file: organization-gallery.js ~ line 19 ~ getInitialInfo ~ organizationId', organizationId);\n            props.dispatch(getGallery(organizationId));\n            setLoading(false);\n        };\n        getInitialInfo();\n    }, []);\n\n    const gotoPostDetails = (postType, postId) => {\n        props.history.push(RoutePaths.postDetailsPage(postType, postId));\n    };\n    return (\n        <Container>\n            <Row>\n                <Col className=\"parent-page\">\n                    <Row>\n                        <Col className=\"right-align\" sm=\"2\">\n                            <OrganizationSideMenu activePage=\"Gallery\" {...props} />\n                        </Col>\n                        <Col sm=\"9\" className=\"left-border\">\n                            <PostImageModalRender\n                                imageDetailsModal={imageDetailsModal}\n                                setImageDetailsModal={setImageDetailsModal}\n                                image={image}\n                                gotoPostDetails={gotoPostDetails}\n                            />\n                            <h4>GALLERY</h4>\n                            <hr />\n                            <GalleryView\n                                setImage={setImage}\n                                setImageDetailsModal={setImageDetailsModal}\n                                images={props.getGalleryResponse && props.getGalleryResponse.success ? props.getGalleryResponse.images : []}\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\nconst mapStateToProps = (state) => {\n    const getGalleryResponse = state.Post.getGallery;\n    return { getGalleryResponse };\n};\nexport default connect(mapStateToProps, null)(OrganizationGallery);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/form_template/image-modal-render.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/organization/organization-side-menu.js",["1192"],"import { cancelEndorseUser, checkIfEndorses, endorseUser } from '@Actions/endorsement-action';\nimport { checkIfFollower, followUser, unfollowUser } from '@Actions/follow-action';\nimport { getUserPublicInfo } from '@Actions/user-action';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport SideSubMenu from '@Components/organization/organization-sub-menu';\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nconst OrganizationDetails = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [follows, setFollows] = useState(false);\n    const [endorses, setEndorses] = useState(false);\n    const getInitialInfo = () => {\n        const userId = props.match.params.userId;\n        props.dispatch(getUserPublicInfo(userId));\n        const user = props.auth.user;\n        props.dispatch(checkIfFollower(user._id, userId));\n        props.dispatch(checkIfEndorses(user._id, userId));\n    };\n    useEffect(() => {\n        alert('DETAILS');\n        getInitialInfo();\n    }, [props.auth, props.match.params.userId]);\n    useEffect(() => {\n        const { success } = props.getCheckIfFollowerResponse;\n        if (success) {\n            setFollows(props.getCheckIfFollowerResponse.follows);\n        }\n    }, [props.getCheckIfFollowerResponse]);\n    useEffect(() => {\n        const { success } = props.getCheckIfEndorsesResponse;\n        if (success) {\n            setEndorses(props.getCheckIfEndorsesResponse.endorses);\n        }\n    }, [props.getCheckIfEndorsesResponse]);\n\n    const handleFollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(followUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleUnfollowClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(unfollowUser({ followerId: user._id, followingId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getFollowResponse;\n        if (success) {\n            setFollows(true);\n        } else if (success === false) {\n        }\n    }, [props.getFollowResponse]);\n    useEffect(() => {\n        const { success } = props.getUnfollowResponse;\n        if (success) {\n            setFollows(false);\n        } else if (success === false) {\n        }\n    }, [props.getUnfollowResponse]);\n\n    const handleEndorseClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(endorseUser({ endorserId: user._id, endorseeId: props.match.params.userId }));\n        setLoading(false);\n    };\n    const handleCancelEndorseClick = () => {\n        setLoading(true);\n        const user = props.auth.user;\n        props.dispatch(cancelEndorseUser({ endorserId: user._id, endorseeId: props.match.params.userId }));\n        setLoading(false);\n    };\n    useEffect(() => {\n        const { success } = props.getEndorseResponse;\n        if (success) {\n            setEndorses(true);\n        } else if (success === false) {\n        }\n    }, [props.getEndorseResponse]);\n    useEffect(() => {\n        const { success } = props.getCancelEndorseResponse;\n        if (success) {\n            setEndorses(false);\n        } else if (success === false) {\n        }\n    }, [props.getCancelEndorseResponse]);\n    const gotoPage = (url) => {\n        props.history.push(url);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <SideSubMenu\n                activePage={props.activePage ? props.activePage : ''}\n                organization={props.getPublicInfoResponse && props.getPublicInfoResponse.success ? props.getPublicInfoResponse.user : {}}\n                handleFollowClick={handleFollowClick}\n                handleUnfollowClick={handleUnfollowClick}\n                follows={follows}\n                handleEndorseClick={handleEndorseClick}\n                handleCancelEndorseClick={handleCancelEndorseClick}\n                endorses={endorses}\n                gotoPage={gotoPage}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    const getPublicInfoResponse = state.User.getUserPublicInfo;\n    const getCheckIfFollowerResponse = state.Follow.checkIfFollower;\n    const getFollowResponse = state.Follow.followUser;\n    const getUnfollowResponse = state.Follow.unfollowUser;\n\n    const getCheckIfEndorsesResponse = state.Endorsement.checkIfEndorses;\n    const getEndorseResponse = state.Endorsement.endorseUser;\n    const getCancelEndorseResponse = state.Endorsement.cancelEndorseUser;\n    return {\n        getPublicInfoResponse,\n        getCheckIfFollowerResponse,\n        getFollowResponse,\n        getUnfollowResponse,\n        getCheckIfEndorsesResponse,\n        getEndorseResponse,\n        getCancelEndorseResponse,\n    };\n};\nexport default connect(mapStateToProps, null)(OrganizationDetails);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/gallery-view.js",["1193","1194","1195"],"import React from 'react';\nimport { Container, Row, Col, Card, CardColumns } from 'react-bootstrap';\n\nconst GalleryView = (props) => {\n    const setImage = props.setImage;\n    const setImageDetailsModal = props.setImageDetailsModal;\n    const images = props.images;\n    return (\n        <CardColumns className=\"five-columns\">\n            {images.map((image, i) => {\n                if (image.images && image.images.path) {\n                    return (\n                        <Card\n                            className=\"special-btn\"\n                            key={i}\n                            onClick={() => {\n                                setImage(image);\n                                setImageDetailsModal(true);\n                            }}\n                        >\n                            <Card.Img src={image.images.path} />\n                        </Card>\n                    );\n                }\n                return <></>;\n            })}\n        </CardColumns>\n    );\n};\nexport default GalleryView;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/conversation/conversation-warnings.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/post/post-card-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/individual-filters.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/organization-filters.js",["1196","1197","1198","1199","1200"],"import React from 'react';\nimport Select from 'react-select';\nimport { Container, Row, Col, Image, Nav, Button } from 'react-bootstrap';\nconst SearchMenu = (props) => {\n    const submitting = props.submitting;\n    console.log('🚀 ~ file: filter-organization.js ~ line 6 ~ SearchMenu ~ submitting', submitting);\n    console.log(props);\n    return (\n        <form\n            onSubmit={(e) => {\n                e.preventDefault();\n                props.handleOnApplyFilter();\n            }}\n        >\n            <label>Organization Name</label>\n            <input className=\"form-control\" type=\"text\" value={props.filter.name} onChange={(e) => props.changeFilter('name', e.target.value)} />\n            <br />\n            <label>Impact Area</label>\n            <Select\n                onChange={(value) => props.changeFilter('impactAreas', value)}\n                isMulti={true}\n                options={props.impactAreas}\n                value={props.filter.impactAreas}\n            />\n            <br />\n            <label>Organization Type</label>\n            <Select\n                onChange={(value) => props.changeFilter('organizationTypes', value)}\n                isMulti={true}\n                options={props.organizationTypes}\n                value={props.filter.organizationTypes}\n            />\n            <br />\n            <label>Service Area</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.serviceArea}\n                onChange={(e) => {\n                    props.changeFilter('serviceArea', e.target.value);\n                }}\n            />\n            <br />\n            <label>Organization Address</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.address}\n                onChange={(e) => {\n                    props.changeFilter('address', e.target.value);\n                }}\n                placeholder=\"zip code/city/state/country\"\n            />\n            <br />\n            <label>Keyword</label>\n            <input\n                className=\"form-control\"\n                type=\"text\"\n                value={props.filter.keyword}\n                onChange={(e) => {\n                    props.changeFilter('keyword', e.target.value);\n                }}\n            />\n            <br />\n            <br />\n            <Button\n                type=\"button\"\n                variant=\"outline-danger\"\n                size=\"sm\"\n                onClick={() => {\n                    props.resetFilter();\n                }}\n            >\n                Reset\n            </Button>\n            &nbsp;\n            <Button\n                type=\"submit\"\n                size=\"sm\"\n                // onClick={() => {\n                //     props.handleOnApplyFilter();\n                // }}\n                disabled={submitting}\n            >\n                Search\n            </Button>\n            <div style={{ height: 25 }} />\n        </form>\n    );\n};\nexport default SearchMenu;\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/search/post-filters.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/cultivation-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/cultivation/manage-cultivation.js",["1201","1202","1203"],"import React, { useEffect, useState } from 'react';\nimport CultivationList from '@Components/cultivation/cultivation-list';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { connect } from 'react-redux';\nimport { getAllCultivationsByUser, deleteCultivation, clearCultivation } from '../../actions/cultivation-action';\nimport { NotificationManager } from 'react-notifications';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nconst ManageCultivation = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        const getInitialInfo = (userId) => {\n            setLoading(true);\n            props.dispatch(getAllCultivationsByUser(userId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            setUserId(user._id);\n            getInitialInfo(user._id);\n        }\n    }, [props.auth]);\n\n    const handleGoToCreateCultivationPage = () => {\n        props.history.push(RoutePaths.cultivationCreatePage);\n    };\n    const handleGoToEditCultivationPage = (cultivationId) => {\n        props.history.push(RoutePaths.cultivationEditPage(cultivationId));\n    };\n    const handleGoToDisplayCultivationPage = (cultivationId) => {\n        props.history.push(RoutePaths.cultivationDetailsPage(cultivationId));\n    };\n    const handleDeleteCultivation = (cultivationId) => {\n        confirmAlert({\n            title: 'Warning',\n            message: 'Are you sure to delete this cultivation? This is a permanent action.',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        props.dispatch(deleteCultivation(cultivationId));\n                    },\n                },\n                {\n                    label: 'No',\n                },\n            ],\n        });\n    };\n    useEffect(() => {\n        const { success } = props.deleteCultivationResponse;\n        if (success) {\n            NotificationManager.success('Cultivation deleted.', 'success');\n            props.dispatch(clearCultivation());\n            props.dispatch(getAllCultivationsByUser(userId));\n        } else if (success === false) {\n            NotificationManager.error('Cultivation not deleted', 'Failed');\n            props.dispatch(clearCultivation());\n        }\n    }, [props.deleteCultivationResponse]);\n    return (\n        <CultivationList\n            handleGoToCreateCultivationPage={handleGoToCreateCultivationPage}\n            handleGoToEditCultivationPage={handleGoToEditCultivationPage}\n            handleGoToDisplayCultivationPage={handleGoToDisplayCultivationPage}\n            allCultivations={props.getAllCultivationsResponse.success ? props.getAllCultivationsResponse.allCultivations : []}\n            handleDeleteCultivation={handleDeleteCultivation}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    console.log('🚀 ~ file: manage-cultivation.js ~ line 35 ~ mapStateToProps ~ state', state);\n\n    const getAllCultivationsResponse = state.Cultivation.getAllCultivations;\n    const deleteCultivationResponse = state.Cultivation.deleteCultivation;\n    return { getAllCultivationsResponse, deleteCultivationResponse };\n};\nexport default connect(mapStateToProps, null)(ManageCultivation);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/cultivation/create-cultivation.js",["1204","1205","1206","1207","1208","1209"],"import React, { useEffect, useState } from 'react';\nimport CultivationForm from '@Components/cultivation/cultivation-form';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { reduxForm, formValueSelector, change } from 'redux-form';\nimport { connect } from 'react-redux';\nimport LoadingAnim from '@Components/form_template/loading-anim';\nimport { NotificationManager } from 'react-notifications';\nimport {\n    createCultivation,\n    getCultivationById,\n    removeUsersFromCultivation,\n    clearRemoveUsersToCultivation,\n    updateCultivation,\n    clearCultivation,\n} from '../../actions/cultivation-action';\n\nconst CreateCultivation = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    const [editMode, setEditMode] = useState(false);\n    useEffect(() => {\n        const getInitialInfo = (cultivationId) => {\n            setLoading(true);\n            props.dispatch(getCultivationById(cultivationId));\n            setLoading(false);\n        };\n        const user = props.auth.user;\n        if (user && user._id) {\n            console.log(user);\n            setUserId(user._id);\n            const url = window.location.pathname;\n            console.log('🚀 ~ file: create-cultivation.js ~ line 23 ~ useEffect ~ url', url);\n            if (url.split('/')[3] === 'edit') {\n                setEditMode(true);\n                const cultivationId = props.match.params.cultivationId;\n                console.log('🚀 ~ file: create-cultivation.js ~ line 14 ~ getInitialInfo ~ cultivationId', cultivationId);\n                getInitialInfo(cultivationId);\n            }\n        }\n    }, [props.auth]);\n    useEffect(() => {\n        return () => {\n            props.dispatch(clearCultivation());\n        };\n    }, []);\n    const handleRemoveUsersFromCultivation = (userId) => {\n        props.dispatch(removeUsersFromCultivation(props.match.params.cultivationId, [userId]));\n        props.dispatch(getCultivationById(props.match.params.cultivationId));\n    };\n    const handleGoToUserDetailsPage = (userType, userId) => {\n        props.history.push(RoutePaths.userDetailsPage(userType, userId));\n    };\n    useEffect(() => {\n        const { success } = props.getUserRemoveResponse;\n        if (success) {\n            NotificationManager.success('1 User removed successfully.', 'success');\n            props.dispatch(clearRemoveUsersToCultivation());\n        } else if (success === false) {\n            NotificationManager.error('User not removed', 'Failed');\n            props.dispatch(clearRemoveUsersToCultivation());\n        }\n    }, [props.getUserRemoveResponse]);\n    useEffect(() => {\n        const { success } = props.setCultivationResponse;\n        if (success) {\n            const { cultivation } = props.setCultivationResponse;\n            NotificationManager.success('Cultivation saved.', 'success');\n            props.dispatch(clearCultivation());\n            props.history.push(RoutePaths.cultivationDetailsPage(cultivation._id));\n        } else if (success === false) {\n            NotificationManager.error('Cultivation not saved', 'Failed');\n            props.dispatch(clearCultivation());\n        }\n    }, [props.setCultivationResponse]);\n    const onSubmit = (values) => {\n        if (editMode) {\n            const cultivation = {\n                ...values,\n                creatorId: userId,\n            };\n            props.dispatch(updateCultivation(props.match.params.cultivationId, cultivation));\n        } else {\n            const cultivation = {\n                ...values,\n                creatorId: userId,\n            };\n            props.dispatch(createCultivation(cultivation));\n        }\n    };\n    const handleGoToManageCultivations = () => {\n        props.history.push(RoutePaths.cultivationManagePage);\n    };\n    if (loading) return <LoadingAnim />;\n    else\n        return (\n            <CultivationForm\n                cultivation={props.getCultivationResponse.success ? props.getCultivationResponse.cultivation : {}}\n                editMode={editMode}\n                handleOnSubmit={props.handleSubmit((post) => {\n                    onSubmit(post);\n                })}\n                handleGoToUserDetailsPage={handleGoToUserDetailsPage}\n                handleRemoveUsersFromCultivation={handleRemoveUsersFromCultivation}\n                handleGoToManageCultivations={handleGoToManageCultivations}\n            />\n        );\n};\nconst mapStateToProps = (state) => {\n    let initialValues = {};\n    const getCultivationResponse = state.Cultivation.getCultivation;\n    const setCultivationResponse = state.Cultivation.setCultivation;\n    const getUserRemoveResponse = state.Cultivation.removeUserFromCultivation;\n\n    if (getCultivationResponse && getCultivationResponse.success) {\n        initialValues = getCultivationResponse.cultivation;\n    }\n    console.log('🚀 ~ file: create-cultivation.js ~ line 54 ~ mapStateToProps ~ initialValues', initialValues);\n    return { initialValues, getCultivationResponse, getUserRemoveResponse, setCultivationResponse };\n};\n// export default connect(mapStateToProps, null)(CreateCultivation);\nexport default connect(\n    mapStateToProps,\n    null,\n)(\n    reduxForm({\n        form: 'CreateCultivation',\n        enableReinitialize: true,\n    })(CreateCultivation),\n);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/cultivation/display-cultivation.js",["1210","1211","1212","1213","1214"],"import React, { useState, useEffect } from 'react';\n\nimport CultivationDetails from '@Components/cultivation/cultivation-details';\nimport { connect } from 'react-redux';\nimport { getCultivationById, removeUsersFromCultivation, clearRemoveUsersToCultivation, clearCultivation } from '../../actions/cultivation-action';\nimport * as RoutePaths from '../../constants/route-paths';\nimport { NotificationManager } from 'react-notifications';\nconst DisplayCultivation = (props) => {\n    const [loading, setLoading] = useState(false);\n    const [userId, setUserId] = useState('');\n    useEffect(() => {\n        const getInitialInfo = (cultivationId) => {\n            const user = props.auth.user;\n            if (user && user._id) {\n                setUserId(user._id);\n            }\n            setLoading(true);\n            props.dispatch(getCultivationById(cultivationId));\n            setLoading(false);\n        };\n        const cultivationId = props.match.params.cultivationId;\n        if (cultivationId) getInitialInfo(cultivationId);\n    }, [props.auth]);\n    const handleRemoveUsersFromCultivation = (userId) => {\n        props.dispatch(removeUsersFromCultivation(props.match.params.cultivationId, [userId]));\n        props.dispatch(getCultivationById(props.match.params.cultivationId));\n    };\n    const handleGoToUserDetailsPage = (userType, userId) => {\n        props.history.push(RoutePaths.userDetailsPage(userType, userId));\n    };\n    useEffect(() => {\n        const { success } = props.getUserRemoveResponse;\n        if (success) {\n            NotificationManager.success('1 User removed successfully.', 'success');\n            props.dispatch(clearRemoveUsersToCultivation());\n        } else if (success === false) {\n            NotificationManager.error('User not removed', 'Failed');\n            props.dispatch(clearRemoveUsersToCultivation());\n        }\n    }, [props.getUserRemoveResponse]);\n    useEffect(() => {\n        return () => {\n            props.dispatch(clearCultivation());\n        };\n    }, []);\n    return (\n        <CultivationDetails\n            cultivation={props.getCultivationResponse.success ? props.getCultivationResponse.cultivation : {}}\n            handleGoToUserDetailsPage={handleGoToUserDetailsPage}\n            handleRemoveUsersFromCultivation={handleRemoveUsersFromCultivation}\n        />\n    );\n};\nconst mapStateToProps = (state) => {\n    const getCultivationResponse = state.Cultivation.getCultivation;\n    const getUserRemoveResponse = state.Cultivation.removeUserFromCultivation;\n    return { getCultivationResponse, getUserRemoveResponse };\n};\nexport default connect(mapStateToProps, null)(DisplayCultivation);\n","/Users/superstorm/Desktop/Projects/CascAid/client/src/components/cultivation/cultivation-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/cultivation/cultivation-form.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/cultivation-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/cultivation-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/cultivation/cultivation-list-modal.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/cultivation/cultivation-details.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/calendar/calendar-filter.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/calendar/calendar-info-modal.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/calendar/calendar-post-modal.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/calendar/calendar-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/reducers/scheduler-reducer.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/actions/scheduler-action.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/data_accesses/scheduler-da.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/section-menu.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/summary-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/top-notifications.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/statistics-view.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/upcoming-activity-list.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/line-chart.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/components/dashboard/interaction-chart.js",[],"/Users/superstorm/Desktop/Projects/CascAid/client/src/containers/rough/facebook-login.js",[],{"ruleId":"1215","replacedBy":"1216"},{"ruleId":"1217","replacedBy":"1218"},{"ruleId":"1219","severity":1,"message":"1220","line":11,"column":10,"nodeType":"1221","messageId":"1222","endLine":11,"endColumn":13},{"ruleId":"1223","severity":1,"message":"1224","line":34,"column":8,"nodeType":"1225","endLine":34,"endColumn":20,"suggestions":"1226"},{"ruleId":"1223","severity":1,"message":"1227","line":37,"column":8,"nodeType":"1225","endLine":37,"endColumn":31,"suggestions":"1228"},{"ruleId":"1223","severity":1,"message":"1229","line":58,"column":8,"nodeType":"1225","endLine":58,"endColumn":20,"suggestions":"1230"},{"ruleId":"1215","replacedBy":"1231"},{"ruleId":"1217","replacedBy":"1232"},{"ruleId":"1223","severity":1,"message":"1233","line":61,"column":8,"nodeType":"1225","endLine":61,"endColumn":10,"suggestions":"1234"},{"ruleId":"1215","replacedBy":"1235"},{"ruleId":"1217","replacedBy":"1236"},{"ruleId":"1215","replacedBy":"1237"},{"ruleId":"1217","replacedBy":"1238"},{"ruleId":"1223","severity":1,"message":"1233","line":140,"column":8,"nodeType":"1225","endLine":140,"endColumn":10,"suggestions":"1239"},{"ruleId":"1215","replacedBy":"1240"},{"ruleId":"1217","replacedBy":"1241"},{"ruleId":"1219","severity":1,"message":"1242","line":3,"column":16,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":27},{"ruleId":"1215","replacedBy":"1243"},{"ruleId":"1217","replacedBy":"1244"},{"ruleId":"1219","severity":1,"message":"1245","line":35,"column":26,"nodeType":"1221","messageId":"1222","endLine":35,"endColumn":37},{"ruleId":"1223","severity":1,"message":"1246","line":46,"column":8,"nodeType":"1225","endLine":46,"endColumn":20,"suggestions":"1247"},{"ruleId":"1223","severity":1,"message":"1248","line":50,"column":8,"nodeType":"1225","endLine":50,"endColumn":38,"suggestions":"1249"},{"ruleId":"1223","severity":1,"message":"1227","line":53,"column":8,"nodeType":"1225","endLine":53,"endColumn":38,"suggestions":"1250"},{"ruleId":"1223","severity":1,"message":"1246","line":58,"column":8,"nodeType":"1225","endLine":58,"endColumn":20,"suggestions":"1251"},{"ruleId":"1223","severity":1,"message":"1248","line":61,"column":8,"nodeType":"1225","endLine":61,"endColumn":36,"suggestions":"1252"},{"ruleId":"1223","severity":1,"message":"1227","line":64,"column":8,"nodeType":"1225","endLine":64,"endColumn":36,"suggestions":"1253"},{"ruleId":"1219","severity":1,"message":"1254","line":32,"column":26,"nodeType":"1221","messageId":"1222","endLine":32,"endColumn":33},{"ruleId":"1223","severity":1,"message":"1246","line":43,"column":8,"nodeType":"1225","endLine":43,"endColumn":20,"suggestions":"1255"},{"ruleId":"1223","severity":1,"message":"1248","line":46,"column":8,"nodeType":"1225","endLine":46,"endColumn":34,"suggestions":"1256"},{"ruleId":"1223","severity":1,"message":"1227","line":49,"column":8,"nodeType":"1225","endLine":49,"endColumn":34,"suggestions":"1257"},{"ruleId":"1219","severity":1,"message":"1258","line":11,"column":21,"nodeType":"1221","messageId":"1222","endLine":11,"endColumn":31},{"ruleId":"1223","severity":1,"message":"1224","line":57,"column":8,"nodeType":"1225","endLine":57,"endColumn":47,"suggestions":"1259"},{"ruleId":"1223","severity":1,"message":"1233","line":68,"column":8,"nodeType":"1225","endLine":68,"endColumn":133,"suggestions":"1260"},{"ruleId":"1223","severity":1,"message":"1233","line":79,"column":8,"nodeType":"1225","endLine":79,"endColumn":60,"suggestions":"1261"},{"ruleId":"1223","severity":1,"message":"1246","line":64,"column":8,"nodeType":"1225","endLine":64,"endColumn":20,"suggestions":"1262"},{"ruleId":"1223","severity":1,"message":"1248","line":67,"column":8,"nodeType":"1225","endLine":67,"endColumn":36,"suggestions":"1263"},{"ruleId":"1223","severity":1,"message":"1227","line":70,"column":8,"nodeType":"1225","endLine":70,"endColumn":36,"suggestions":"1264"},{"ruleId":"1219","severity":1,"message":"1265","line":10,"column":10,"nodeType":"1221","messageId":"1222","endLine":10,"endColumn":18},{"ruleId":"1219","severity":1,"message":"1266","line":34,"column":26,"nodeType":"1221","messageId":"1222","endLine":34,"endColumn":37},{"ruleId":"1223","severity":1,"message":"1224","line":42,"column":8,"nodeType":"1225","endLine":42,"endColumn":20,"suggestions":"1267"},{"ruleId":"1223","severity":1,"message":"1248","line":45,"column":8,"nodeType":"1225","endLine":45,"endColumn":38,"suggestions":"1268"},{"ruleId":"1223","severity":1,"message":"1227","line":48,"column":8,"nodeType":"1225","endLine":48,"endColumn":38,"suggestions":"1269"},{"ruleId":"1219","severity":1,"message":"1270","line":29,"column":26,"nodeType":"1221","messageId":"1222","endLine":29,"endColumn":38},{"ruleId":"1223","severity":1,"message":"1224","line":35,"column":8,"nodeType":"1225","endLine":35,"endColumn":20,"suggestions":"1271"},{"ruleId":"1223","severity":1,"message":"1248","line":38,"column":8,"nodeType":"1225","endLine":38,"endColumn":39,"suggestions":"1272"},{"ruleId":"1223","severity":1,"message":"1227","line":41,"column":8,"nodeType":"1225","endLine":41,"endColumn":39,"suggestions":"1273"},{"ruleId":"1223","severity":1,"message":"1224","line":24,"column":8,"nodeType":"1225","endLine":24,"endColumn":47,"suggestions":"1274"},{"ruleId":"1215","replacedBy":"1275"},{"ruleId":"1217","replacedBy":"1276"},{"ruleId":"1215","replacedBy":"1277"},{"ruleId":"1217","replacedBy":"1278"},{"ruleId":"1219","severity":1,"message":"1279","line":4,"column":10,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":14},{"ruleId":"1219","severity":1,"message":"1280","line":3,"column":37,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":53},{"ruleId":"1219","severity":1,"message":"1281","line":15,"column":12,"nodeType":"1221","messageId":"1222","endLine":15,"endColumn":25},{"ruleId":"1219","severity":1,"message":"1282","line":15,"column":27,"nodeType":"1221","messageId":"1222","endLine":15,"endColumn":43},{"ruleId":"1219","severity":1,"message":"1283","line":3,"column":10,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":22},{"ruleId":"1219","severity":1,"message":"1284","line":3,"column":24,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1285","line":16,"column":11,"nodeType":"1221","messageId":"1222","endLine":16,"endColumn":27},{"ruleId":"1219","severity":1,"message":"1286","line":16,"column":11,"nodeType":"1221","messageId":"1222","endLine":16,"endColumn":18},{"ruleId":"1287","severity":1,"message":"1288","line":62,"column":44,"nodeType":"1289","messageId":"1290","endLine":62,"endColumn":46},{"ruleId":"1219","severity":1,"message":"1291","line":11,"column":11,"nodeType":"1221","messageId":"1222","endLine":11,"endColumn":21},{"ruleId":"1287","severity":1,"message":"1288","line":22,"column":48,"nodeType":"1289","messageId":"1290","endLine":22,"endColumn":50},{"ruleId":"1215","replacedBy":"1292"},{"ruleId":"1217","replacedBy":"1293"},{"ruleId":"1219","severity":1,"message":"1294","line":10,"column":20,"nodeType":"1221","messageId":"1222","endLine":10,"endColumn":29},{"ruleId":"1223","severity":1,"message":"1233","line":28,"column":8,"nodeType":"1225","endLine":28,"endColumn":20,"suggestions":"1295"},{"ruleId":"1296","severity":1,"message":"1297","line":151,"column":21,"nodeType":"1298","endLine":151,"endColumn":95},{"ruleId":"1296","severity":1,"message":"1297","line":161,"column":21,"nodeType":"1298","endLine":161,"endColumn":52},{"ruleId":"1219","severity":1,"message":"1299","line":30,"column":7,"nodeType":"1221","messageId":"1222","endLine":30,"endColumn":22},{"ruleId":"1219","severity":1,"message":"1300","line":104,"column":12,"nodeType":"1221","messageId":"1222","endLine":104,"endColumn":16},{"ruleId":"1223","severity":1,"message":"1233","line":119,"column":8,"nodeType":"1225","endLine":119,"endColumn":10,"suggestions":"1301"},{"ruleId":"1219","severity":1,"message":"1302","line":2,"column":31,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1303","line":2,"column":38,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":41},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":43,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":49},{"ruleId":"1219","severity":1,"message":"1305","line":6,"column":8,"nodeType":"1221","messageId":"1222","endLine":6,"endColumn":19},{"ruleId":"1223","severity":1,"message":"1233","line":32,"column":8,"nodeType":"1225","endLine":32,"endColumn":10,"suggestions":"1306"},{"ruleId":"1219","severity":1,"message":"1302","line":2,"column":31,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1303","line":2,"column":38,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":41},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":43,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":49},{"ruleId":"1219","severity":1,"message":"1305","line":6,"column":8,"nodeType":"1221","messageId":"1222","endLine":6,"endColumn":19},{"ruleId":"1223","severity":1,"message":"1233","line":53,"column":8,"nodeType":"1225","endLine":53,"endColumn":10,"suggestions":"1307"},{"ruleId":"1223","severity":1,"message":"1308","line":63,"column":8,"nodeType":"1225","endLine":63,"endColumn":39,"suggestions":"1309"},{"ruleId":"1310","severity":1,"message":"1311","line":71,"column":59,"nodeType":"1312","messageId":"1313","endLine":71,"endColumn":69},{"ruleId":"1219","severity":1,"message":"1302","line":2,"column":31,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1303","line":2,"column":38,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":41},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":43,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":49},{"ruleId":"1219","severity":1,"message":"1305","line":6,"column":8,"nodeType":"1221","messageId":"1222","endLine":6,"endColumn":19},{"ruleId":"1223","severity":1,"message":"1233","line":53,"column":8,"nodeType":"1225","endLine":53,"endColumn":10,"suggestions":"1314"},{"ruleId":"1223","severity":1,"message":"1308","line":63,"column":8,"nodeType":"1225","endLine":63,"endColumn":40,"suggestions":"1315"},{"ruleId":"1219","severity":1,"message":"1302","line":2,"column":31,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":43,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":49},{"ruleId":"1223","severity":1,"message":"1233","line":34,"column":8,"nodeType":"1225","endLine":34,"endColumn":10,"suggestions":"1316"},{"ruleId":"1223","severity":1,"message":"1308","line":64,"column":8,"nodeType":"1225","endLine":64,"endColumn":40,"suggestions":"1317"},{"ruleId":"1219","severity":1,"message":"1318","line":3,"column":13,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":22},{"ruleId":"1219","severity":1,"message":"1319","line":4,"column":10,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":26},{"ruleId":"1219","severity":1,"message":"1320","line":6,"column":10,"nodeType":"1221","messageId":"1222","endLine":6,"endColumn":14},{"ruleId":"1219","severity":1,"message":"1321","line":52,"column":11,"nodeType":"1221","messageId":"1222","endLine":52,"endColumn":23},{"ruleId":"1219","severity":1,"message":"1322","line":63,"column":11,"nodeType":"1221","messageId":"1222","endLine":63,"endColumn":22},{"ruleId":"1287","severity":1,"message":"1288","line":78,"column":42,"nodeType":"1289","messageId":"1290","endLine":78,"endColumn":44},{"ruleId":"1219","severity":1,"message":"1323","line":4,"column":21,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":38},{"ruleId":"1219","severity":1,"message":"1324","line":4,"column":40,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":46},{"ruleId":"1219","severity":1,"message":"1325","line":27,"column":12,"nodeType":"1221","messageId":"1222","endLine":27,"endColumn":18},{"ruleId":"1219","severity":1,"message":"1326","line":27,"column":20,"nodeType":"1221","messageId":"1222","endLine":27,"endColumn":29},{"ruleId":"1223","severity":1,"message":"1233","line":203,"column":8,"nodeType":"1225","endLine":203,"endColumn":20,"suggestions":"1327"},{"ruleId":"1223","severity":1,"message":"1233","line":209,"column":8,"nodeType":"1225","endLine":209,"endColumn":10,"suggestions":"1328"},{"ruleId":"1223","severity":1,"message":"1329","line":222,"column":8,"nodeType":"1225","endLine":222,"endColumn":31,"suggestions":"1330"},{"ruleId":"1219","severity":1,"message":"1331","line":20,"column":12,"nodeType":"1221","messageId":"1222","endLine":20,"endColumn":19},{"ruleId":"1223","severity":1,"message":"1233","line":41,"column":8,"nodeType":"1225","endLine":41,"endColumn":20,"suggestions":"1332"},{"ruleId":"1223","severity":1,"message":"1333","line":100,"column":8,"nodeType":"1225","endLine":100,"endColumn":45,"suggestions":"1334"},{"ruleId":"1223","severity":1,"message":"1333","line":109,"column":8,"nodeType":"1225","endLine":109,"endColumn":50,"suggestions":"1335"},{"ruleId":"1219","severity":1,"message":"1336","line":2,"column":31,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":35},{"ruleId":"1219","severity":1,"message":"1337","line":3,"column":13,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":26},{"ruleId":"1215","replacedBy":"1338"},{"ruleId":"1217","replacedBy":"1339"},{"ruleId":"1219","severity":1,"message":"1340","line":2,"column":8,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":14},{"ruleId":"1219","severity":1,"message":"1341","line":3,"column":10,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":19},{"ruleId":"1219","severity":1,"message":"1302","line":3,"column":38,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":43},{"ruleId":"1219","severity":1,"message":"1304","line":3,"column":45,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":51},{"ruleId":"1219","severity":1,"message":"1342","line":80,"column":11,"nodeType":"1221","messageId":"1222","endLine":80,"endColumn":19},{"ruleId":"1343","severity":1,"message":"1344","line":90,"column":29,"nodeType":"1298","endLine":90,"endColumn":32},{"ruleId":"1215","replacedBy":"1345"},{"ruleId":"1217","replacedBy":"1346"},{"ruleId":"1219","severity":1,"message":"1342","line":102,"column":11,"nodeType":"1221","messageId":"1222","endLine":102,"endColumn":19},{"ruleId":"1343","severity":1,"message":"1347","line":191,"column":33,"nodeType":"1298","endLine":191,"endColumn":45},{"ruleId":"1219","severity":1,"message":"1348","line":17,"column":5,"nodeType":"1221","messageId":"1222","endLine":17,"endColumn":10},{"ruleId":"1219","severity":1,"message":"1349","line":32,"column":11,"nodeType":"1221","messageId":"1222","endLine":32,"endColumn":20},{"ruleId":"1219","severity":1,"message":"1350","line":33,"column":11,"nodeType":"1221","messageId":"1222","endLine":33,"endColumn":22},{"ruleId":"1219","severity":1,"message":"1351","line":34,"column":11,"nodeType":"1221","messageId":"1222","endLine":34,"endColumn":25},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":24,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":30},{"ruleId":"1219","severity":1,"message":"1340","line":4,"column":8,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":14},{"ruleId":"1219","severity":1,"message":"1302","line":2,"column":31,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1352","line":9,"column":5,"nodeType":"1221","messageId":"1222","endLine":9,"endColumn":23},{"ruleId":"1219","severity":1,"message":"1318","line":28,"column":13,"nodeType":"1221","messageId":"1222","endLine":28,"endColumn":22},{"ruleId":"1287","severity":1,"message":"1288","line":160,"column":42,"nodeType":"1289","messageId":"1290","endLine":160,"endColumn":44},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":17,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":23},{"ruleId":"1219","severity":1,"message":"1325","line":20,"column":12,"nodeType":"1221","messageId":"1222","endLine":20,"endColumn":18},{"ruleId":"1219","severity":1,"message":"1326","line":20,"column":20,"nodeType":"1221","messageId":"1222","endLine":20,"endColumn":29},{"ruleId":"1223","severity":1,"message":"1233","line":124,"column":8,"nodeType":"1225","endLine":124,"endColumn":20,"suggestions":"1353"},{"ruleId":"1223","severity":1,"message":"1233","line":130,"column":8,"nodeType":"1225","endLine":130,"endColumn":10,"suggestions":"1354"},{"ruleId":"1223","severity":1,"message":"1329","line":143,"column":8,"nodeType":"1225","endLine":143,"endColumn":31,"suggestions":"1355"},{"ruleId":"1219","severity":1,"message":"1356","line":20,"column":7,"nodeType":"1221","messageId":"1222","endLine":20,"endColumn":13},{"ruleId":"1219","severity":1,"message":"1302","line":2,"column":17,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":22},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":24,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":30},{"ruleId":"1219","severity":1,"message":"1357","line":34,"column":19,"nodeType":"1221","messageId":"1222","endLine":34,"endColumn":27},{"ruleId":"1223","severity":1,"message":"1233","line":39,"column":8,"nodeType":"1225","endLine":39,"endColumn":10,"suggestions":"1358"},{"ruleId":"1223","severity":1,"message":"1233","line":46,"column":8,"nodeType":"1225","endLine":46,"endColumn":37,"suggestions":"1359"},{"ruleId":"1219","severity":1,"message":"1341","line":2,"column":10,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":19},{"ruleId":"1219","severity":1,"message":"1360","line":2,"column":28,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":31},{"ruleId":"1219","severity":1,"message":"1361","line":2,"column":33,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1362","line":2,"column":38,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":43},{"ruleId":"1219","severity":1,"message":"1363","line":2,"column":45,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":54},{"ruleId":"1219","severity":1,"message":"1364","line":4,"column":8,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":19},{"ruleId":"1219","severity":1,"message":"1365","line":5,"column":28,"nodeType":"1221","messageId":"1222","endLine":5,"endColumn":46},{"ruleId":"1219","severity":1,"message":"1366","line":4,"column":17,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":25},{"ruleId":"1343","severity":1,"message":"1347","line":116,"column":87,"nodeType":"1298","endLine":116,"endColumn":99},{"ruleId":"1343","severity":1,"message":"1344","line":30,"column":29,"nodeType":"1298","endLine":30,"endColumn":32},{"ruleId":"1223","severity":1,"message":"1233","line":20,"column":8,"nodeType":"1225","endLine":20,"endColumn":20,"suggestions":"1367"},{"ruleId":"1219","severity":1,"message":"1368","line":1,"column":27,"nodeType":"1221","messageId":"1222","endLine":1,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1369","line":3,"column":8,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":16},{"ruleId":"1219","severity":1,"message":"1370","line":17,"column":11,"nodeType":"1221","messageId":"1222","endLine":17,"endColumn":21},{"ruleId":"1219","severity":1,"message":"1371","line":4,"column":10,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":29},{"ruleId":"1219","severity":1,"message":"1372","line":9,"column":8,"nodeType":"1221","messageId":"1222","endLine":9,"endColumn":19},{"ruleId":"1219","severity":1,"message":"1373","line":12,"column":19,"nodeType":"1221","messageId":"1222","endLine":12,"endColumn":27},{"ruleId":"1219","severity":1,"message":"1258","line":13,"column":21,"nodeType":"1221","messageId":"1222","endLine":13,"endColumn":31},{"ruleId":"1223","severity":1,"message":"1224","line":78,"column":8,"nodeType":"1225","endLine":78,"endColumn":145,"suggestions":"1374"},{"ruleId":"1219","severity":1,"message":"1375","line":15,"column":11,"nodeType":"1221","messageId":"1222","endLine":15,"endColumn":18},{"ruleId":"1376","severity":1,"message":"1377","line":21,"column":25,"nodeType":"1298","endLine":21,"endColumn":143},{"ruleId":"1219","severity":1,"message":"1378","line":2,"column":30,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":46},{"ruleId":"1219","severity":1,"message":"1371","line":4,"column":10,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":29},{"ruleId":"1219","severity":1,"message":"1379","line":5,"column":10,"nodeType":"1221","messageId":"1222","endLine":5,"endColumn":38},{"ruleId":"1223","severity":1,"message":"1233","line":23,"column":8,"nodeType":"1225","endLine":23,"endColumn":10,"suggestions":"1380"},{"ruleId":"1219","severity":1,"message":"1365","line":6,"column":28,"nodeType":"1221","messageId":"1222","endLine":6,"endColumn":46},{"ruleId":"1219","severity":1,"message":"1366","line":1,"column":17,"nodeType":"1221","messageId":"1222","endLine":1,"endColumn":25},{"ruleId":"1219","severity":1,"message":"1371","line":4,"column":10,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":29},{"ruleId":"1219","severity":1,"message":"1373","line":12,"column":19,"nodeType":"1221","messageId":"1222","endLine":12,"endColumn":27},{"ruleId":"1219","severity":1,"message":"1258","line":13,"column":21,"nodeType":"1221","messageId":"1222","endLine":13,"endColumn":31},{"ruleId":"1223","severity":1,"message":"1224","line":79,"column":8,"nodeType":"1225","endLine":79,"endColumn":145,"suggestions":"1381"},{"ruleId":"1223","severity":1,"message":"1233","line":96,"column":8,"nodeType":"1225","endLine":96,"endColumn":10,"suggestions":"1382"},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":45,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":51},{"ruleId":"1219","severity":1,"message":"1331","line":26,"column":12,"nodeType":"1221","messageId":"1222","endLine":26,"endColumn":19},{"ruleId":"1223","severity":1,"message":"1233","line":45,"column":8,"nodeType":"1225","endLine":45,"endColumn":10,"suggestions":"1383"},{"ruleId":"1384","severity":1,"message":"1385","line":3,"column":1,"nodeType":"1386","endLine":114,"endColumn":3},{"ruleId":"1215","replacedBy":"1387"},{"ruleId":"1217","replacedBy":"1388"},{"ruleId":"1219","severity":1,"message":"1389","line":19,"column":8,"nodeType":"1221","messageId":"1222","endLine":19,"endColumn":16},{"ruleId":"1223","severity":1,"message":"1233","line":46,"column":8,"nodeType":"1225","endLine":46,"endColumn":10,"suggestions":"1390"},{"ruleId":"1223","severity":1,"message":"1233","line":54,"column":8,"nodeType":"1225","endLine":54,"endColumn":43,"suggestions":"1391"},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":42,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":48},{"ruleId":"1215","replacedBy":"1392"},{"ruleId":"1217","replacedBy":"1393"},{"ruleId":"1219","severity":1,"message":"1394","line":13,"column":11,"nodeType":"1221","messageId":"1222","endLine":13,"endColumn":16},{"ruleId":"1223","severity":1,"message":"1233","line":31,"column":8,"nodeType":"1225","endLine":31,"endColumn":10,"suggestions":"1395"},{"ruleId":"1219","severity":1,"message":"1325","line":8,"column":12,"nodeType":"1221","messageId":"1222","endLine":8,"endColumn":18},{"ruleId":"1219","severity":1,"message":"1331","line":10,"column":12,"nodeType":"1221","messageId":"1222","endLine":10,"endColumn":19},{"ruleId":"1223","severity":1,"message":"1396","line":22,"column":8,"nodeType":"1225","endLine":22,"endColumn":10,"suggestions":"1397"},{"ruleId":"1223","severity":1,"message":"1233","line":25,"column":8,"nodeType":"1225","endLine":25,"endColumn":33,"suggestions":"1398"},{"ruleId":"1219","severity":1,"message":"1341","line":2,"column":10,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":19},{"ruleId":"1219","severity":1,"message":"1360","line":2,"column":21,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":24},{"ruleId":"1219","severity":1,"message":"1361","line":2,"column":26,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":29},{"ruleId":"1219","severity":1,"message":"1302","line":2,"column":31,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1303","line":2,"column":38,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":41},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":43,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":49},{"ruleId":"1219","severity":1,"message":"1305","line":6,"column":8,"nodeType":"1221","messageId":"1222","endLine":6,"endColumn":19},{"ruleId":"1223","severity":1,"message":"1233","line":53,"column":8,"nodeType":"1225","endLine":53,"endColumn":10,"suggestions":"1399"},{"ruleId":"1223","severity":1,"message":"1308","line":63,"column":8,"nodeType":"1225","endLine":63,"endColumn":39,"suggestions":"1400"},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":31,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":37},{"ruleId":"1219","severity":1,"message":"1304","line":2,"column":31,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":37},{"ruleId":"1219","severity":1,"message":"1325","line":14,"column":12,"nodeType":"1221","messageId":"1222","endLine":14,"endColumn":18},{"ruleId":"1223","severity":1,"message":"1233","line":33,"column":8,"nodeType":"1225","endLine":33,"endColumn":20,"suggestions":"1401"},{"ruleId":"1219","severity":1,"message":"1402","line":19,"column":12,"nodeType":"1221","messageId":"1222","endLine":19,"endColumn":27},{"ruleId":"1219","severity":1,"message":"1403","line":19,"column":29,"nodeType":"1221","messageId":"1222","endLine":19,"endColumn":47},{"ruleId":"1219","severity":1,"message":"1404","line":22,"column":12,"nodeType":"1221","messageId":"1222","endLine":22,"endColumn":20},{"ruleId":"1219","severity":1,"message":"1405","line":22,"column":22,"nodeType":"1221","messageId":"1222","endLine":22,"endColumn":33},{"ruleId":"1219","severity":1,"message":"1406","line":23,"column":12,"nodeType":"1221","messageId":"1222","endLine":23,"endColumn":24},{"ruleId":"1219","severity":1,"message":"1407","line":23,"column":26,"nodeType":"1221","messageId":"1222","endLine":23,"endColumn":41},{"ruleId":"1219","severity":1,"message":"1408","line":24,"column":12,"nodeType":"1221","messageId":"1222","endLine":24,"endColumn":25},{"ruleId":"1219","severity":1,"message":"1409","line":24,"column":27,"nodeType":"1221","messageId":"1222","endLine":24,"endColumn":43},{"ruleId":"1223","severity":1,"message":"1233","line":88,"column":8,"nodeType":"1225","endLine":88,"endColumn":10,"suggestions":"1410"},{"ruleId":"1223","severity":1,"message":"1333","line":116,"column":8,"nodeType":"1225","endLine":116,"endColumn":38,"suggestions":"1411"},{"ruleId":"1223","severity":1,"message":"1233","line":127,"column":8,"nodeType":"1225","endLine":127,"endColumn":44,"suggestions":"1412"},{"ruleId":"1219","severity":1,"message":"1413","line":10,"column":11,"nodeType":"1221","messageId":"1222","endLine":10,"endColumn":28},{"ruleId":"1219","severity":1,"message":"1331","line":10,"column":12,"nodeType":"1221","messageId":"1222","endLine":10,"endColumn":19},{"ruleId":"1223","severity":1,"message":"1233","line":24,"column":8,"nodeType":"1225","endLine":24,"endColumn":10,"suggestions":"1414"},{"ruleId":"1223","severity":1,"message":"1224","line":23,"column":8,"nodeType":"1225","endLine":23,"endColumn":47,"suggestions":"1415"},{"ruleId":"1219","severity":1,"message":"1341","line":2,"column":10,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":19},{"ruleId":"1219","severity":1,"message":"1360","line":2,"column":21,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":24},{"ruleId":"1219","severity":1,"message":"1361","line":2,"column":26,"nodeType":"1221","messageId":"1222","endLine":2,"endColumn":29},{"ruleId":"1219","severity":1,"message":"1341","line":3,"column":10,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":19},{"ruleId":"1219","severity":1,"message":"1360","line":3,"column":21,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":24},{"ruleId":"1219","severity":1,"message":"1361","line":3,"column":26,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":29},{"ruleId":"1219","severity":1,"message":"1302","line":3,"column":31,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":36},{"ruleId":"1219","severity":1,"message":"1303","line":3,"column":38,"nodeType":"1221","messageId":"1222","endLine":3,"endColumn":41},{"ruleId":"1219","severity":1,"message":"1331","line":10,"column":12,"nodeType":"1221","messageId":"1222","endLine":10,"endColumn":19},{"ruleId":"1223","severity":1,"message":"1233","line":23,"column":8,"nodeType":"1225","endLine":23,"endColumn":20,"suggestions":"1416"},{"ruleId":"1223","severity":1,"message":"1333","line":61,"column":8,"nodeType":"1225","endLine":61,"endColumn":41,"suggestions":"1417"},{"ruleId":"1219","severity":1,"message":"1323","line":4,"column":21,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":38},{"ruleId":"1219","severity":1,"message":"1324","line":4,"column":40,"nodeType":"1221","messageId":"1222","endLine":4,"endColumn":46},{"ruleId":"1223","severity":1,"message":"1233","line":40,"column":8,"nodeType":"1225","endLine":40,"endColumn":20,"suggestions":"1418"},{"ruleId":"1223","severity":1,"message":"1233","line":45,"column":8,"nodeType":"1225","endLine":45,"endColumn":10,"suggestions":"1419"},{"ruleId":"1223","severity":1,"message":"1233","line":62,"column":8,"nodeType":"1225","endLine":62,"endColumn":37,"suggestions":"1420"},{"ruleId":"1223","severity":1,"message":"1233","line":74,"column":8,"nodeType":"1225","endLine":74,"endColumn":38,"suggestions":"1421"},{"ruleId":"1219","severity":1,"message":"1331","line":9,"column":12,"nodeType":"1221","messageId":"1222","endLine":9,"endColumn":19},{"ruleId":"1219","severity":1,"message":"1325","line":10,"column":12,"nodeType":"1221","messageId":"1222","endLine":10,"endColumn":18},{"ruleId":"1223","severity":1,"message":"1233","line":23,"column":8,"nodeType":"1225","endLine":23,"endColumn":20,"suggestions":"1422"},{"ruleId":"1223","severity":1,"message":"1233","line":40,"column":8,"nodeType":"1225","endLine":40,"endColumn":37,"suggestions":"1423"},{"ruleId":"1223","severity":1,"message":"1233","line":45,"column":8,"nodeType":"1225","endLine":45,"endColumn":10,"suggestions":"1424"},"no-native-reassign",["1425"],"no-negated-in-lhs",["1426"],"no-unused-vars","'get' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getInitialInfo'. Either include it or remove the dependency array.","ArrayExpression",["1427"],"React Hook useEffect has a missing dependency: 'handleSetResponse'. Either include it or remove the dependency array.",["1428"],"React Hook useEffect has a missing dependency: 'changeStep'. Either include it or remove the dependency array.",["1429"],["1425"],["1426"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1430"],["1425"],["1426"],["1425"],["1426"],["1431"],["1425"],["1426"],"'FormControl' is defined but never used.",["1425"],["1426"],"'involvement' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getInitialInfo' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1432"],"React Hook useEffect has a missing dependency: 'handleGetResponse'. Either include it or remove the dependency array.",["1433"],["1434"],["1435"],["1436"],["1437"],"'privacy' is assigned a value but never used.",["1438"],["1439"],["1440"],"'setLoading' is assigned a value but never used.",["1441"],["1442"],["1443"],["1444"],["1445"],["1446"],"'homePage' is defined but never used.","'serviceInfo' is assigned a value but never used.",["1447"],["1448"],["1449"],"'internalLink' is assigned a value but never used.",["1450"],["1451"],["1452"],["1453"],["1425"],["1426"],["1425"],["1426"],"'Form' is defined but never used.","'DatePickerRender' is defined but never used.","'selectedState' is assigned a value but never used.","'setSelectedState' is assigned a value but never used.","'SwitchRender' is defined but never used.","'SelectRender' is defined but never used.","'individualUserId' is assigned a value but never used.","'follows' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'submitting' is assigned a value but never used.",["1425"],["1426"],"'setFilter' is assigned a value but never used.",["1454"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'PostTitleRender' is assigned a value but never used.","'play' is assigned a value but never used.",["1455"],"'Image' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'SampleUsers' is defined but never used.",["1456"],["1457"],"React Hook useEffect has a missing dependency: 'cards'. Either include it or remove the dependency array. You can also do a functional update 'setCards(c => ...)' if you only need 'cards' in the 'setCards' call.",["1458"],"no-dupe-keys","Duplicate key 'followerId'.","ObjectExpression","unexpected",["1459"],["1460"],["1461"],["1462"],"'RoutePath' is defined but never used.","'getCountryByCode' is defined but never used.","'Link' is defined but never used.","'addressMaker' is assigned a value but never used.","'pairsRender' is assigned a value but never used.","'formValueSelector' is defined but never used.","'change' is defined but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.",["1463"],["1464"],"React Hook useEffect has missing dependencies: 'editMode' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1465"],"'loading' is assigned a value but never used.",["1466"],"React Hook useEffect has missing dependencies: 'props' and 'userId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1467"],["1468"],"'Card' is defined but never used.","'DefaultImages' is defined but never used.",["1425"],["1426"],"'moment' is defined but never used.","'Container' is defined but never used.","'mapImage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["1425"],["1426"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'style' is assigned a value but never used.","'usersName' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'TagWithLabelRender' is defined but never used.",["1469"],["1470"],["1471"],"'fields' is assigned a value but never used.","'postType' is assigned a value but never used.",["1472"],["1473"],"'Row' is defined but never used.","'Col' is defined but never used.","'Badge' is defined but never used.","'ListGroup' is defined but never used.","'Collapsible' is defined but never used.","'RiUserUnfollowFill' is defined but never used.","'useState' is defined but never used.",["1474"],"'useEffect' is defined but never used.","'Dropzone' is defined but never used.","'handleDrop' is assigned a value but never used.","'NotificationManager' is defined but never used.","'AsyncSelect' is defined but never used.","'setUsers' is assigned a value but never used.",["1475"],"'options' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'EditButtonRender' is defined but never used.","'individualCompleteMembership' is defined but never used.",["1476"],["1477"],["1478"],["1479"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["1425"],["1426"],"'useSound' is defined but never used.",["1480"],["1481"],["1425"],["1426"],"'count' is assigned a value but never used.",["1482"],"React Hook useEffect has a missing dependency: 'props.auth.user'. Either include it or remove the dependency array.",["1483"],["1484"],["1485"],["1486"],["1487"],"'currentLocation' is assigned a value but never used.","'setCurrentLocation' is assigned a value but never used.","'viewType' is assigned a value but never used.","'setViewType' is assigned a value but never used.","'followObject' is assigned a value but never used.","'setFollowObject' is assigned a value but never used.","'endorseObject' is assigned a value but never used.","'setEndorseObject' is assigned a value but never used.",["1488"],["1489"],["1490"],"'descriptionRender' is assigned a value but never used.",["1491"],["1492"],["1493"],["1494"],["1495"],["1496"],["1497"],["1498"],["1499"],["1500"],["1501"],"no-global-assign","no-unsafe-negation",{"desc":"1502","fix":"1503"},{"desc":"1504","fix":"1505"},{"desc":"1506","fix":"1507"},{"desc":"1508","fix":"1509"},{"desc":"1508","fix":"1510"},{"desc":"1511","fix":"1512"},{"desc":"1513","fix":"1514"},{"desc":"1515","fix":"1516"},{"desc":"1511","fix":"1517"},{"desc":"1518","fix":"1519"},{"desc":"1520","fix":"1521"},{"desc":"1511","fix":"1522"},{"desc":"1523","fix":"1524"},{"desc":"1525","fix":"1526"},{"desc":"1527","fix":"1528"},{"desc":"1529","fix":"1530"},{"desc":"1531","fix":"1532"},{"desc":"1511","fix":"1533"},{"desc":"1518","fix":"1534"},{"desc":"1520","fix":"1535"},{"desc":"1502","fix":"1536"},{"desc":"1537","fix":"1538"},{"desc":"1539","fix":"1540"},{"desc":"1502","fix":"1541"},{"desc":"1542","fix":"1543"},{"desc":"1544","fix":"1545"},{"desc":"1527","fix":"1546"},{"desc":"1547","fix":"1548"},{"desc":"1508","fix":"1549"},{"desc":"1508","fix":"1550"},{"desc":"1508","fix":"1551"},{"desc":"1552","fix":"1553"},{"desc":"1508","fix":"1554"},{"desc":"1555","fix":"1556"},{"desc":"1508","fix":"1557"},{"desc":"1558","fix":"1559"},{"desc":"1547","fix":"1560"},{"desc":"1508","fix":"1561"},{"desc":"1562","fix":"1563"},{"desc":"1547","fix":"1564"},{"desc":"1565","fix":"1566"},{"desc":"1567","fix":"1568"},{"desc":"1547","fix":"1569"},{"desc":"1508","fix":"1570"},{"desc":"1562","fix":"1571"},{"desc":"1508","fix":"1572"},{"desc":"1573","fix":"1574"},{"desc":"1547","fix":"1575"},{"desc":"1576","fix":"1577"},{"desc":"1508","fix":"1578"},{"desc":"1576","fix":"1579"},{"desc":"1508","fix":"1580"},{"desc":"1508","fix":"1581"},{"desc":"1508","fix":"1582"},{"desc":"1583","fix":"1584"},{"desc":"1508","fix":"1585"},{"desc":"1586","fix":"1587"},{"desc":"1588","fix":"1589"},{"desc":"1508","fix":"1590"},{"desc":"1591","fix":"1592"},{"desc":"1547","fix":"1593"},{"desc":"1508","fix":"1594"},{"desc":"1595","fix":"1596"},{"desc":"1597","fix":"1598"},{"desc":"1508","fix":"1599"},{"desc":"1527","fix":"1600"},{"desc":"1547","fix":"1601"},{"desc":"1602","fix":"1603"},{"desc":"1547","fix":"1604"},{"desc":"1508","fix":"1605"},{"desc":"1606","fix":"1607"},{"desc":"1608","fix":"1609"},{"desc":"1547","fix":"1610"},{"desc":"1606","fix":"1611"},{"desc":"1508","fix":"1612"},"Update the dependencies array to be: [getInitialInfo, props.auth]",{"range":"1613","text":"1614"},"Update the dependencies array to be: [handleSetResponse, props.setUserResponse]",{"range":"1615","text":"1616"},"Update the dependencies array to be: [changeStep, props.user]",{"range":"1617","text":"1618"},"Update the dependencies array to be: [props]",{"range":"1619","text":"1620"},{"range":"1621","text":"1620"},"Update the dependencies array to be: [getInitialInfo, props, props.auth]",{"range":"1622","text":"1623"},"Update the dependencies array to be: [handleGetResponse, props.getInvolvementResponse]",{"range":"1624","text":"1625"},"Update the dependencies array to be: [handleSetResponse, props.setInvolvementResponse]",{"range":"1626","text":"1627"},{"range":"1628","text":"1623"},"Update the dependencies array to be: [handleGetResponse, props.getBasicInfoResponse]",{"range":"1629","text":"1630"},"Update the dependencies array to be: [handleSetResponse, props.setBasicInfoResponse]",{"range":"1631","text":"1632"},{"range":"1633","text":"1623"},"Update the dependencies array to be: [handleGetResponse, props.getPrivacyResponse]",{"range":"1634","text":"1635"},"Update the dependencies array to be: [handleSetResponse, props.setPrivacyResponse]",{"range":"1636","text":"1637"},"Update the dependencies array to be: [getInitialInfo, props.auth, props.match.params.userId]",{"range":"1638","text":"1639"},"Update the dependencies array to be: [props.setFriendshipResponse, props.acceptFriendshipResponse, props.rejectFriendshipResponse, props.deleteFriendshipResponse, props]",{"range":"1640","text":"1641"},"Update the dependencies array to be: [props, props.getFollowResponse, props.getUnfollowResponse]",{"range":"1642","text":"1643"},{"range":"1644","text":"1623"},{"range":"1645","text":"1630"},{"range":"1646","text":"1632"},{"range":"1647","text":"1614"},"Update the dependencies array to be: [handleGetResponse, props.getServiceInfoResponse]",{"range":"1648","text":"1649"},"Update the dependencies array to be: [handleSetResponse, props.setServiceInfoResponse]",{"range":"1650","text":"1651"},{"range":"1652","text":"1614"},"Update the dependencies array to be: [handleGetResponse, props.getInternalLinkResponse]",{"range":"1653","text":"1654"},"Update the dependencies array to be: [handleSetResponse, props.setInternalLinkResponse]",{"range":"1655","text":"1656"},{"range":"1657","text":"1639"},"Update the dependencies array to be: [props, props.auth]",{"range":"1658","text":"1659"},{"range":"1660","text":"1620"},{"range":"1661","text":"1620"},{"range":"1662","text":"1620"},"Update the dependencies array to be: [cards, props.getAllFollowersResponse]",{"range":"1663","text":"1664"},{"range":"1665","text":"1620"},"Update the dependencies array to be: [cards, props.getAllFollowingsResponse]",{"range":"1666","text":"1667"},{"range":"1668","text":"1620"},"Update the dependencies array to be: [cards, props.getAllFriendshipResponse]",{"range":"1669","text":"1670"},{"range":"1671","text":"1659"},{"range":"1672","text":"1620"},"Update the dependencies array to be: [editMode, props, props.setPostResponse]",{"range":"1673","text":"1674"},{"range":"1675","text":"1659"},"Update the dependencies array to be: [props, props.getAddPostToSchedulerResponse, userId]",{"range":"1676","text":"1677"},"Update the dependencies array to be: [props, props.getRemovePostFromSchedulerResponse, userId]",{"range":"1678","text":"1679"},{"range":"1680","text":"1659"},{"range":"1681","text":"1620"},{"range":"1682","text":"1674"},{"range":"1683","text":"1620"},"Update the dependencies array to be: [props, props.match.params.postType]",{"range":"1684","text":"1685"},{"range":"1686","text":"1659"},"Update the dependencies array to be: [props.auth, props.setMembershipResponse, props.acceptMembershipResponse, props.rejectMembershipResponse, props.deleteMembershipResponse, getInitialInfo]",{"range":"1687","text":"1688"},{"range":"1689","text":"1620"},{"range":"1690","text":"1688"},{"range":"1691","text":"1620"},{"range":"1692","text":"1620"},{"range":"1693","text":"1620"},"Update the dependencies array to be: [props, props.match.params.conversationId]",{"range":"1694","text":"1695"},{"range":"1696","text":"1620"},"Update the dependencies array to be: [props.auth.user]",{"range":"1697","text":"1698"},"Update the dependencies array to be: [props, props.match.params.name]",{"range":"1699","text":"1700"},{"range":"1701","text":"1620"},"Update the dependencies array to be: [cards, props.getAllEndorsersResponse]",{"range":"1702","text":"1703"},{"range":"1704","text":"1659"},{"range":"1705","text":"1620"},"Update the dependencies array to be: [props, props.setCultivationResponse, userId]",{"range":"1706","text":"1707"},"Update the dependencies array to be: [props, props.addUserToCultivationResponse]",{"range":"1708","text":"1709"},{"range":"1710","text":"1620"},{"range":"1711","text":"1639"},{"range":"1712","text":"1659"},"Update the dependencies array to be: [props, props.deleteCultivationResponse, userId]",{"range":"1713","text":"1714"},{"range":"1715","text":"1659"},{"range":"1716","text":"1620"},"Update the dependencies array to be: [props, props.getUserRemoveResponse]",{"range":"1717","text":"1718"},"Update the dependencies array to be: [props, props.setCultivationResponse]",{"range":"1719","text":"1720"},{"range":"1721","text":"1659"},{"range":"1722","text":"1718"},{"range":"1723","text":"1620"},[1558,1570],"[getInitialInfo, props.auth]",[1631,1654],"[handleSetResponse, props.setUserResponse]",[2355,2367],"[changeStep, props.user]",[2577,2579],"[props]",[5683,5685],[1853,1865],"[getInitialInfo, props, props.auth]",[1927,1957],"[handleGetResponse, props.getInvolvementResponse]",[2018,2048],"[handleSetResponse, props.setInvolvementResponse]",[2461,2473],[2534,2562],"[handleGetResponse, props.getBasicInfoResponse]",[2623,2651],"[handleSetResponse, props.setBasicInfoResponse]",[1800,1812],[1873,1899],"[handleGetResponse, props.getPrivacyResponse]",[1960,1986],"[handleSetResponse, props.setPrivacyResponse]",[2661,2700],"[getInitialInfo, props.auth, props.match.params.userId]",[3104,3229],"[props.setFriendshipResponse, props.acceptFriendshipResponse, props.rejectFriendshipResponse, props.deleteFriendshipResponse, props]",[3634,3686],"[props, props.getFollowResponse, props.getUnfollowResponse]",[2727,2739],[2800,2828],[2889,2917],[1934,1946],[2007,2037],"[handleGetResponse, props.getServiceInfoResponse]",[2098,2128],"[handleSetResponse, props.setServiceInfoResponse]",[1545,1557],[1618,1649],"[handleGetResponse, props.getInternalLinkResponse]",[1710,1741],"[handleSetResponse, props.setInternalLinkResponse]",[1182,1221],[1021,1033],"[props, props.auth]",[5465,5467],[1459,1461],[2214,2216],[2566,2597],"[cards, props.getAllFollowersResponse]",[2219,2221],[2577,2609],"[cards, props.getAllFollowingsResponse]",[1673,1675],[2711,2743],"[cards, props.getAllFriendshipResponse]",[7892,7904],[8038,8040],[8683,8706],"[editMode, props, props.setPostResponse]",[1596,1608],[4135,4172],"[props, props.getAddPostToSchedulerResponse, userId]",[4567,4609],"[props, props.getRemovePostFromSchedulerResponse, userId]",[4544,4556],[4690,4692],[5279,5302],[1943,1945],[2236,2265],"[props, props.match.params.postType]",[819,831],[3140,3277],"[props.auth, props.setMembershipResponse, props.acceptMembershipResponse, props.rejectMembershipResponse, props.deleteMembershipResponse, getInitialInfo]",[1044,1046],[3107,3244],[3346,3348],[1796,1798],[2156,2158],[2469,2504],"[props, props.match.params.conversationId]",[1429,1431],[773,775],"[props.auth.user]",[879,904],"[props, props.match.params.name]",[2175,2177],[2527,2558],"[cards, props.getAllEndorsersResponse]",[1516,1528],[3717,3719],[4942,4972],"[props, props.setCultivationResponse, userId]",[5457,5493],"[props, props.addUserToCultivationResponse]",[1097,1099],[1045,1084],[1029,1041],[2470,2503],"[props, props.deleteCultivationResponse, userId]",[1668,1680],[1794,1796],[2616,2645],"[props, props.getUserRemoveResponse]",[3202,3232],"[props, props.setCultivationResponse]",[1045,1057],[1877,1906],[2020,2022]]